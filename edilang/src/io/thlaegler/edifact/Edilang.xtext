grammar io.thlaegler.edifact.Edilang with org.eclipse.xtext.common.Terminals

import "http://www.eclipse.org/emf/2002/Ecore" as ecore

generate edilang "http://www.thlaegler.io/edifact/Edilang"

EdiModel:
	segments+=AbstractEdiSegment*;

AbstractEdiSegment:
	// Header segments
	UNASegment | // Service String advice header
	UNBSegment | // Interchange Header with Interchange Trailer UNZ
	UNHSegment | // Header with trailer UNT
	UNGSegment | // Functional Group Header
	
	// Segments
	ADRSegment | // Address
	AGRSegment | // Agreement identification
	AJTSegment | // Adjustment details
	ALCSegment | // Allowance or charge
	ALISegment | // Additional information
	APPSegment | // Applicability
	APRSegment | // Additional price information
	ARDSegment | // Monetary amount function
	ARRSegment | // Array information
	ASISegment | // Array structure identification
	ATTSegment | // Attribute
	AUTSegment | // Authentication result
	BASSegment | // Basis
	BGMSegment | // Beginning of message
	BIISegment | // Structure identification
	BUSSegment | // Business function
	CAVSegment | // Characteristic value
	CCDSegment | // Credit cover details
	CCISegment | // Characteristic/class id
	CDISegment | // Physical or logical state
	CDSSegment | // Code set identification
	CDVSegment | // Code value definition
	CEDSegment | // Computer environment details
	CINSegment | // Clinical information
	CLASegment | // Clause identification
	CLISegment | // Clinical intervention
	CMPSegment | // Composite data element identification
	CNISegment | // Consignment information
	CNTSegment | // Control total
	CODSegment | // Component details
	COMSegment | // Communication contact
	COTSegment | // Contribution details
	CPISegment | // Charge payment instructions
	CPSSegment | // Consignment packing sequence
	CPTSegment | // Account identification
	CSTSegment | // Customs status of goods
	CTASegment | // Contact information
	CUXSegment | // Currencies
	DAMSegment | // Damage
	DFNSegment | // Definition function
	DGSSegment | // Dangerous goods
	DIISegment | // Directory identification
	DIMSegment | // Dimensions
	DLISegment | // Document line identification
	DLMSegment | // Delivery limitations
	DMSSegment | // Document/message summary
	DOCSegment | // Document/message details
	DRDSegment | // Data representation details
	DSGSegment | // Dosage administration
	DSISegment | // Data set identification
	DTMSegment | // Date/time/period
	EDTSegment | // Editing details
	EFISegment | // External file link identification
	ELMSegment | // Simple data element details
	ELUSegment | // Data element usage details
	ELVSegment | // Element value definition
	EMPSegment | // Employment details
	EQASegment | // Attached equipment
	EQDSegment | // Equipment details
	EQNSegment | // Number of units
	ERPSegment | // Error point details
	ERCSegment | // Application error information
	EVESegment | // Event
	EVTSegment | // Event
	FCASegment | // Financial charges allocation
	FIISegment | // Financial institution information
	FNSSegment | // Footnote set
	FNTSegment | // Footnote
	FORSegment | // Formula
	FSQSegment | // Formula sequence
	FTXSegment | // Free text
	GDSSegment | // Nature of cargo
	GEISegment | // Processing information
	GIDSegment | // Goods item details
	GINSegment | // Goods identity number
	GIRSegment | // Related identification numbers
	GISSegment | // General indicator
	GORSegment | // Governmental requirements
	GRUSegment | // Segment group usage details
	HANSegment | // Handling instructions
	HYNSegment | // Hierarchy information
	ICDSegment | // Insurance cover description
	IDESegment | // Identity
	IFDSegment | // Information detail
	IHCSegment | // Person characteristic
	IMDSegment | // Item description
	INDSegment | // Index details
	INPSegment | // Parties and instruction
	INVSegment | // Inventory management related details
	IRQSegment | // Information required
	LANSegment | // Language
	LINSegment | // Line item
	LOCSegment | // Place/location identification
	MEASegment | // Measurements
	MEMSegment | // Membership details
	MKSSegment | // Market/sales channel information
	MOASegment | // Monetary amount
	MSGSegment | // Message type identification
	NADSegment | // Name and address
	NATSegment | // Nationality
	ODISegment | // Origin/destination
	ORGSegment | // Organisation
	PACSegment | // Package
	PAISegment | // Payment instructions
	PASSegment | // Attendance
	PATSegment | // Payment terms basis
	PCCSegment | // Premium calculation component details
	PCDSegment | // Percentage details
	PCISegment | // Package identification
	PDISegment | // Person demographic information
	PERSegment | // Period related details
	PGISegment | // Product group information
	PIASegment | // Additional product id
	PNASegment | // Party identification
	POCSegment | // Purpose of conveyance call
	PRCSegment | // Process identification
	PRISegment | // Price details
	PRVSegment | // Proviso details
	PSDSegment | // Physical sample description
	PTYSegment | // Priority
	PYTSegment | // Payment terms
	QRSSegment | // Query and response
	QTYSegment | // Quantity
	QUASegment | // Qualification
	QVRSegment | // Quantity variances
	RCSSegment | // Requirements and conditions
	RELSegment | // Relationship
	RFFSegment | // Reference
	RJLSegment | // Accounting journal identification
	RNGSegment | // Range details
	RODSegment | // Risk object type
	RPISegment | // ?
	RSLSegment | // Result
	RTESegment | // Rate details
	SALSegment | // Remuneration type identification
	SCCSegment | // Scheduling conditions
	SCDSegment | // Structure component definition
	SEGSegment | // Segment identification
	SELSegment | // Seal number
	SEQSegment | // Sequence details
	SFISegment | // Safety information
	SGPSegment | // Split goods placement
	SGUSegment | // Segment usage details
	SPRSegment | // Organisation classification details
	SPSSegment | // Sampling parameters for summary statistics
	STASegment | // Statistics
	STCSegment | // Statistical concept
	STGSegment | // Stages
	STSSegment | // Status
	STXSegment | // Start of Interchange
	TAXSegment | // Duty/tax/fee details
	TCCSegment | // Transport charge/rate calculations
	TDTSegment | // Details of transport
	TEMSegment | // Test method
	TMDSegment | // Transport movement details
	TMPSegment | // Temperature
	TODSegment | // Terms of delivery or transport
	TPLSegment | // Transport placement
	TRUSegment | // Technical rules
	TSRSegment | // Transport service requirements
	TVLSegment | // Travel itinerary
	UCISegment | // ?
	VLISegment | // Value list identification

	// Trailer segments
	UNSSegment | // Section Control Trailer UNS
	UNZSegment | // Interchange Trailer for header UNB
	UNTSegment | // Message Trailer
	UNESegment // Functional Group Trailer
;


UNASegment:
	segment="UNA"
	COLON
	PLUS
	".?"
	lineEnd=QUOTE_AND_NL
;
//UNB+IATB:1+1APPC+NZ0AV+200120:2136+039I42XXTK0001+++O'
UNBSegment:
	segment="UNB"
	PLUS
	( header=UNBHeader )?
	PLUS
	( interchangeSender=InterchangerFunction )?
	PLUS
	( interchangeRecipient=InterchangerFunction )?
	PLUS
	( dateAndTime+=DateAndTimeFunction )?
	PLUS
	( interchangeControlSenderRef=ID )?
	(
		PLUS
		( interchangeControlRecipientRef=ID )?
		(
			PLUS
			( fse=ID )?
			(
				PLUS
				( assiciationCode=ID )?
			)?
		)?
	)?
	lineEnd=QUOTE_AND_NL
;
//UNH+1+PAOREQ:96:2:IA+00012432090782'
UNHSegment:
	segment="UNH"
	PLUS
	messageReferenceNumber=ID
	PLUS
	message=MessageBodyFunction
	(
		PLUS
		commonAccessReference=ID
	)?
	lineEnd=QUOTE_AND_NL
;

UNGSegment:
	segment="UNG"
	PLUS
	( addressUsage=AddressUsage )?
	PLUS
	( addressDetails=AddressDetail )?
	(
		PLUS
		cityName=ID
		(
			PLUS
			postalIdentificationCode=ID
			(
				PLUS
				countryNameCode=ID
				(
					PLUS
					countrySubEntityDetails=CountrySubEntityDetail
					(
						PLUS
						locationIdentification=LocationIdentification
					)?
				)?
			)?
		)?
	)?
	lineEnd=QUOTE_AND_NL
;


ADRSegment:
	segment="ADR"
	PLUS
	( addressUsage=AddressUsage )? // C817
	PLUS
	( addressDetails=AddressDetail )? // C090
	(
		PLUS
		cityName=ID // 3164
		(
			PLUS
			postalIdentificationCode=ID // 3251
			(
				PLUS
				countryNameCode=ID // 3207
				(
					PLUS
					countrySubEntityDetails=CountrySubEntityDetail // C819
					(
						PLUS
						locationIdentification=LocationIdentification // C517
					)?
				)?
			)?
		)?
	)?
	lineEnd=QUOTE_AND_NL
;
AGRSegment:
	segment="AGR"
	PLUS
	agreementTypeIdentification=AgreementTypeIdentification // C543
	(
		PLUS
		serviceLayerCode=ID // 9419
	)?
	lineEnd=QUOTE_AND_NL
;
AJTSegment:
	segment="AJT"
	PLUS
	adjustmentReasonDescriptionCode=ID // 4465
	(
		PLUS
		lineItemIdentifier=ID // 1082
	)?
	lineEnd=QUOTE_AND_NL
;
ALCSegment:
	segment="ALC"
	PLUS
	allowanceChargeCodeQualifier=ID // 5463
	(
		PLUS
		allowanceChargeInformation=AllowanceChargeInformation // C552
		(
			PLUS
			settlementMeansCode=ID // 4471
			(
				PLUS
				calculationSequenceCode=ID // 1227
				(
					PLUS
					specialServicesIdentification=SpecialServicesIdentification // C214
				)?
			)?
		)?
	)?
	lineEnd=QUOTE_AND_NL
;
ALISegment:
	segment="ALI"
	PLUS
	( countryOfOriginNameCode=ID )? // 3239
	PLUS
	( dutyRegimeTypeCode=AddressDetail )? // 9213
	(
		PLUS
		specialConditionCodes+=ID // 4183
	)*
	lineEnd=QUOTE_AND_NL
;
APPSegment:
	segment="APP"
	PLUS
	applicabilityCodeQualifier=ID // 9051
	(
		PLUS
		applicabilityType=ApplicabilityType // C973
	)
	lineEnd=QUOTE_AND_NL
;
APRSegment:
	segment="APR"
	PLUS
	tradeClassCode=ID // 4043
	(
		PLUS
		priceMuliplierInformation=PriceMultiplierInformation // C138
		(
			PLUS
			reasonForChange=ReasonForChange // C960
		)?
	)?
	lineEnd=QUOTE_AND_NL
;
ARDSegment:
	segment="ARD"
	PLUS
	monetaryAmountFunction=MonetaryAmountFunction // C549
	(
		PLUS
		monetaryAmountFunctionDetails+=MonetaryAmountFunctionDetail // C008
	)*
	lineEnd=QUOTE_AND_NL
;
ARRSegment:
	segment="ARR"
	PLUS
	positionIdentification=PositionIdentification // C778
	(
		PLUS
		arrayCellDetails+=ArrayCellDetail // C770
	)*
	lineEnd=QUOTE_AND_NL
;
ASISegment:
	segment="ASI"
	PLUS
	arrayStructureIdentification=ArrayStructureIdentification // C779
	(
		PLUS
		partyIdentificationDetails=PartyIdentificationDetail // C082
		(
			PLUS
			statusDescriptionCode=ID // 4405
			(
				PLUS
				maintenanceOperationCode=ID // 4513
			)
		)
	)
	lineEnd=QUOTE_AND_NL
;
ATTSegment:
	segment="ATT"
	PLUS
	attributeFunctionCodeQualifier=ID // 9017
	(
		PLUS
		attributeType=AttributeType // C955
		(
			PLUS
			attributeDetail=AttributeDetail // C956
		)?
	)?
	lineEnd=QUOTE_AND_NL
;
AUTSegment:
	segment="AUT"
	PLUS
	validationResultValue=ID // 9280
	(
		PLUS
		validationKeyIdentifier=ID // 9282
	)?
	lineEnd=QUOTE_AND_NL
;
BASSegment:
	segment="BAS"
	PLUS
	basisCodeQualifier=ID // 9045
	(
		PLUS
		basisType=BasisType // C974
	)?
	lineEnd=QUOTE_AND_NL
;
BIISegment:
	segment="BII"
	PLUS
	indexingStructureCodeQualifier=ID // 7429
	(
		PLUS
		billLevelIdentification=BillLevelIdentification // C045
		(
			PLUS
			itemIdentifier=ID // 7140
		)?
	)?
	lineEnd=QUOTE_AND_NL
;
BUSSegment:
	segment="BUS"
	PLUS
	businessFunction=BusinessFunction // C521
	(
		PLUS
		geographicAreaCode=ID // 3279
		(
			PLUS
			financialTransactionTypeCode=ID // 4487
			(
				PLUS
				bankOperation=BankOperation // C551
				(
					PLUS
					intraCompanyPaymentIndicatorCode=ID // 4463
				)?
			)?
		)?
	)?
	lineEnd=QUOTE_AND_NL
;
CAVSegment:
	segment="CAV"
	PLUS
	characteristicValue=CharacteristicValue // C889
	lineEnd=QUOTE_AND_NL
;
CCDSegment:
	segment="CCD"
	PLUS
	creditCoverRequestTypeCode=ID // 4505
	(
		PLUS
		creditCoverResponseTypeCode=ID // 4507
		(
			PLUS
			creditCoverRequestReasonCode=ID // 4509
		)?
	)?
	lineEnd=QUOTE_AND_NL
;
CCISegment:
	segment="CCI"
	PLUS
	classTypeCode=ID // 7059
	(
		PLUS
		measurementDetails=MeasurementDetail // C502
		(
			PLUS
			productCharacteristic=ProductCharacteristic // C240
			(
				PLUS
				characteristicRelevanceCode=ID // 4051
			)?
		)?
	)?
	lineEnd=QUOTE_AND_NL
;
CDISegment:
	segment="CDI"
	PLUS
	physicalLogicalStateTypeCodeQualifier=ID // 7001
	PLUS
	physicalLogicalStateInformation=PhysicalLogicalStateInformation // C564
	lineEnd=QUOTE_AND_NL
;
CDSSegment:
	segment="CDS"
	PLUS
	codeSetIdentification=CodeSetIdentification // C702
	(
		PLUS
		designatedClassCode=ID // 1507
		(
			PLUS
			maintenanceOperationCode=ID // 4513
		)
	)?
	lineEnd=QUOTE_AND_NL
;
CDVSegment:
	segment="CDV"
	PLUS
	codeValue=ID // 9426
	(
		PLUS
		codeName=ID // 9434
		(
			PLUS
			maintenanceOperationCode=ID // 4513
			(
				PLUS
				codeValueSourceCode=ID // 9453
				(
					PLUS
					requirementsDesignatorCode=ID // 7299
				)?
			)?
		)?
	)?
	lineEnd=QUOTE_AND_NL
;
CEDSegment:
	segment="CED"
	PLUS
	computerEnvironmentDetailsCodeQualifier=ID // 1501
	PLUS
	computerEnvironmentIdentification=ComputerEnvironmentIdentification // C079
	(
		PLUS
		fileGenerationCommandName=ID // 9448
	)?
	lineEnd=QUOTE_AND_NL
;
CINSegment:
	segment="CIN"
	PLUS
	clinicalInformationTypeCodeQualifier=ID // 6415
	(
		PLUS
		clinicalInformationDetails=ClinicalInformationDetail // C836
		(
			PLUS
			certaintyDetails=CertaintyDetail // C837
		)?
	)?
	lineEnd=QUOTE_AND_NL
;
CLASegment:
	segment="CLA"
	PLUS
	clauseCodeQualifier=ID // 4059
	(
		PLUS
		clauseName=ClauseName // C970
	)?
	lineEnd=QUOTE_AND_NL
;
CLISegment:
	segment="CLI"
	PLUS
	clinicalInterventionTypeCodeQualifier=ID // 9441
	(
		PLUS
		clinicalInterventionDetails=ClinicalInterventionDetail // C828
	)
	lineEnd=QUOTE_AND_NL
;
//TODO
CMPSegment:
	segment="CMP"
	PLUS
	todo=ID
	lineEnd=QUOTE_AND_NL
;
//TODO
CNISegment:
	segment="CNI"
	PLUS
	todo=ID
	lineEnd=QUOTE_AND_NL
;
//TODO
CODSegment:
	segment="COD"
	PLUS
	todo=ID
	lineEnd=QUOTE_AND_NL
;
COMSegment:
	segment="COM"
	(
		PLUS
		communicationContacts+=CommunicationContact // C076
	)*
	lineEnd=QUOTE_AND_NL
;
//TODO
COTSegment:
	segment="COT"
	PLUS
	todo=ID
	lineEnd=QUOTE_AND_NL
;
//TODO
CPISegment:
	segment="CPI"
	PLUS
	todo=ID
	lineEnd=QUOTE_AND_NL
;
//TODO
CPSSegment:
	segment="CPS"
	PLUS
	todo=ID
	lineEnd=QUOTE_AND_NL
;
//TODO
CPTSegment:
	segment="CPT"
	PLUS
	todo=ID
	lineEnd=QUOTE_AND_NL
;
//TODO
CSTSegment:
	segment="CST"
	PLUS
	todo=ID
	lineEnd=QUOTE_AND_NL
;
//TODO
DAMSegment:
	segment="DAM"
	PLUS
	todo=ID
	lineEnd=QUOTE_AND_NL
;
//TODO
DFNSegment:
	segment="DFN"
	PLUS
	todo=ID
	lineEnd=QUOTE_AND_NL
;
//TODO
DGSSegment:
	segment="DGS"
	PLUS
	todo=ID
	lineEnd=QUOTE_AND_NL
;
//TODO
DIISegment:
	segment="DII"
	PLUS
	todo=ID
	lineEnd=QUOTE_AND_NL
;
//TODO
DIMSegment:
	segment="DIM"
	PLUS
	todo=ID
	lineEnd=QUOTE_AND_NL
;
//TODO
DLISegment:
	segment="DLI"
	PLUS
	todo=ID
	lineEnd=QUOTE_AND_NL
;
//TODO
DLMSegment:
	segment="DLM"
	PLUS
	todo=ID
	lineEnd=QUOTE_AND_NL
;
//TODO
DMSSegment:
	segment="DMS"
	PLUS
	todo=ID
	lineEnd=QUOTE_AND_NL
;
//TODO
DOCSegment:
	segment="DOC"
	PLUS
	todo=ID
	lineEnd=QUOTE_AND_NL
;
//TODO
DRDSegment:
	segment="DRD"
	PLUS
	todo=ID
	lineEnd=QUOTE_AND_NL
;
//TODO
DSGSegment:
	segment="DSG"
	PLUS
	todo=ID
	lineEnd=QUOTE_AND_NL
;
//TODO
DSISegment:
	segment="DSI"
	PLUS
	todo=ID
	lineEnd=QUOTE_AND_NL
;
//TODO
EDTSegment:
	segment="EDT"
	PLUS
	todo=ID
	lineEnd=QUOTE_AND_NL
;
//TODO
EFISegment:
	segment="EFI"
	PLUS
	todo=ID
	lineEnd=QUOTE_AND_NL
;
//TODO
ELMSegment:
	segment="ELM"
	PLUS
	todo=ID
	lineEnd=QUOTE_AND_NL
;
//TODO
ELUSegment:
	segment="ELU"
	PLUS
	todo=ID
	lineEnd=QUOTE_AND_NL
;
//TODO
ELVSegment:
	segment="ELV"
	PLUS
	todo=ID
	lineEnd=QUOTE_AND_NL
;
//TODO
EMPSegment:
	segment="EMP"
	PLUS
	todo=ID
	lineEnd=QUOTE_AND_NL
;
//TODO
EQASegment:
	segment="EQA"
	PLUS
	todo=ID
	lineEnd=QUOTE_AND_NL
;
//TODO
EQDSegment:
	segment="EQD"
	PLUS
	todo=ID
	lineEnd=QUOTE_AND_NL
;

EQNSegment:
	segment="EQN"
	PLUS
	todo=ID
	lineEnd=QUOTE_AND_NL
;
//TODO
ERPSegment:
	segment="ERP"
	PLUS
	todo=ID
	lineEnd=QUOTE_AND_NL
;
//TODO
EVESegment:
	segment="EVE"
	PLUS
	todo=ID
	lineEnd=QUOTE_AND_NL
;
//TODO
EVTSegment:
	segment="EVT"
	PLUS
	todo=ID
	lineEnd=QUOTE_AND_NL
;
//TODO
FCASegment:
	segment="FCA"
	PLUS
	todo=ID
	lineEnd=QUOTE_AND_NL
;
//TODO
FIISegment:
	segment="FII"
	PLUS
	todo=ID
	lineEnd=QUOTE_AND_NL
;
//TODO
FNSSegment:
	segment="FNS"
	PLUS
	todo=ID
	lineEnd=QUOTE_AND_NL
;
//TODO
FNTSegment:
	segment="FNT"
	PLUS
	todo=ID
	lineEnd=QUOTE_AND_NL
;
//TODO
FORSegment:
	segment="FOR"
	PLUS
	todo=ID
	lineEnd=QUOTE_AND_NL
;
//TODO
FSQSegment:
	segment="FSQ"
	PLUS
	todo=ID
	lineEnd=QUOTE_AND_NL
;
//TODO
GDSSegment:
	segment="GDS"
	PLUS
	todo=ID
	lineEnd=QUOTE_AND_NL
;
//TODO
GEISegment:
	segment="GEI"
	PLUS
	todo=ID
	lineEnd=QUOTE_AND_NL
;
//TODO
GIDSegment:
	segment="GID"
	PLUS
	todo=ID
	lineEnd=QUOTE_AND_NL
;
//TODO
GINSegment:
	segment="GIN"
	PLUS
	todo=ID
	lineEnd=QUOTE_AND_NL
;
//TODO
GIRSegment:
	segment="GIR"
	PLUS
	todo=ID
	lineEnd=QUOTE_AND_NL
;
GISSegment:
	segment="GIS"
	PLUS
	processingIndicator=ProcessingIndicator // C529
	lineEnd=QUOTE_AND_NL
;
GORSegment:
	segment="GOR"
	PLUS
	transportMovementCode=ID // 8323
	(
		PLUS
		governmentAction+=GovernmentAction // C232
	)*
	lineEnd=QUOTE_AND_NL
;
//TODO
GRUSegment:
	segment="GRU"
	PLUS
	todo=ID
	lineEnd=QUOTE_AND_NL
;
//TODO
HANSegment:
	segment="HAN"
	PLUS
	todo=ID
	lineEnd=QUOTE_AND_NL
;
//TODO
HYNSegment:
	segment="HYN"
	PLUS
	todo=ID
	lineEnd=QUOTE_AND_NL
;
//TODO
ICDSegment:
	segment="ICD"
	PLUS
	todo=ID
	lineEnd=QUOTE_AND_NL
;
IDESegment:
	segment="IDE"
	PLUS
	objectTypeCodeQualifier=ID
	(
		PLUS
		identificationNumber=IdentificationNumber // C206
		(
			PLUS
			partyIdentificationDetails=PartyIdentificationDetail // C082
			(
				PLUS
				statusDescriptionCode=ID // 4405
				(
					PLUS
					configurationLevelNumber=ID // 1222
					(
						PLUS
						positionIdentification=PositionIdentification // C778
						(
							PLUS
							productCharacteristic=ProductCharacteristic // C240
						)?
					)?
				)?
			)?
		)?
	)?
	lineEnd=QUOTE_AND_NL
;
//TODO
IFDSegment:
	segment="IFD"
	PLUS
	todo=ID
	lineEnd=QUOTE_AND_NL
;
//TODO
IHCSegment:
	segment="IHC"
	PLUS
	todo=ID
	lineEnd=QUOTE_AND_NL
;
//TODO
IMDSegment:
	segment="IMD"
	PLUS
	todo=ID
	lineEnd=QUOTE_AND_NL
;
INDSegment:
	segment="IND"
	PLUS
	indexIdentification=IndexIdentification // C545
	(
		PLUS
		indexValue=IndexValue // C546
	)?
	lineEnd=QUOTE_AND_NL
;
//TODO
INPSegment:
	segment="INP"
	PLUS
	todo=ID
	lineEnd=QUOTE_AND_NL
;
//TODO
INVSegment:
	segment="INV"
	PLUS
	todo=ID
	lineEnd=QUOTE_AND_NL
;
IRQSegment:
	segment="IRQ"
	PLUS
	informationRequest=InformationRequest // C333
	lineEnd=QUOTE_AND_NL
;
LANSegment:
	segment="LAN"
	PLUS
	languageCodeQualifier=ID // 3455
	(
		PLUS
		languageDetails=LanguageDetail // C508
	)?
	lineEnd=QUOTE_AND_NL
;
//TODO
LOCSegment:
	segment="LOC"
	PLUS
	todo=ID
	lineEnd=QUOTE_AND_NL
;
//TODO
MEASegment:
	segment="MEA"
	PLUS
	todo=ID
	lineEnd=QUOTE_AND_NL
;
//TODO
MEMSegment:
	segment="MEM"
	PLUS
	todo=ID
	lineEnd=QUOTE_AND_NL
;
//TODO
MKSSegment:
	segment="MKS"
	PLUS
	todo=ID
	lineEnd=QUOTE_AND_NL
;
NATSegment:
	segment="NAT"
	PLUS
	nationalityCodeQualifier=ID // 3493
	(
		PLUS
		nationalityDetails=NationalityDetail // C042
	)?
	lineEnd=QUOTE_AND_NL
;
// TODO
PACSegment:
	segment="PAC"
	PLUS
	todo=ID
	lineEnd=QUOTE_AND_NL
;
//TODO
PAISegment:
	segment="PAI"
	PLUS
	todo=ID
	lineEnd=QUOTE_AND_NL
;
//TODO
PASSegment:
	segment="PAS"
	PLUS
	todo=ID
	lineEnd=QUOTE_AND_NL
;
//TODO
PCCSegment:
	segment="PCC"
	PLUS
	todo=ID
	lineEnd=QUOTE_AND_NL
;
PCDSegment:
	segment="PCD"
	PLUS
	percentageDetails=PercentageDetail // C501
	(
		PLUS
		statusDescriptionCode=ID
	)?
	lineEnd=QUOTE_AND_NL
;
//TODO
PERSegment:
	segment="PER"
	PLUS
	todo=ID
	lineEnd=QUOTE_AND_NL
;
//TODO
PGISegment:
	segment="PGI"
	PLUS
	todo=ID
	lineEnd=QUOTE_AND_NL
;
//TODO
PIASegment:
	segment="PIA"
	PLUS
	todo=ID
	lineEnd=QUOTE_AND_NL
;
//TODO
PNASegment:
	segment="PNA"
	PLUS
	todo=ID
	lineEnd=QUOTE_AND_NL
;
//TODO
PRCSegment:
	segment="PRC"
	PLUS
	todo=ID
	lineEnd=QUOTE_AND_NL
;
//TODO
PRVSegment:
	segment="PRV"
	PLUS
	todo=ID
	lineEnd=QUOTE_AND_NL
;
//TODO
PSDSegment:
	segment="PSD"
	PLUS
	todo=ID
	lineEnd=QUOTE_AND_NL
;
//TODO
PTYSegment:
	segment="PTY"
	PLUS
	todo=ID
	lineEnd=QUOTE_AND_NL
;
//TODO
PYTSegment:
	segment="PYT"
	PLUS
	todo=ID
	lineEnd=QUOTE_AND_NL
;
//TODO
QRSSegment:
	segment="QRS"
	PLUS
	todo=ID
	lineEnd=QUOTE_AND_NL
;
//TODO
QUASegment:
	segment="QUA"
	PLUS
	todo=ID
	lineEnd=QUOTE_AND_NL
;
QVRSegment:
	segment="QVR"
	PLUS
	quantityDifferenceInformation=QuantityDifferenceInformation // C279
	(
		PLUS
		discrepancyNatureIdentificationCode=ID // 4221
		(
			PLUS
			reasonForChange=ReasonForChange // C960
		)
	)
	lineEnd=QUOTE_AND_NL
;
//TODO
RCSSegment:
	segment="RCS"
	PLUS
	todo=ID
	lineEnd=QUOTE_AND_NL
;
//TODO
RELSegment:
	segment="REL"
	PLUS
	todo=ID
	lineEnd=QUOTE_AND_NL
;
//TODO
RJLSegment:
	segment="RJL"
	PLUS
	todo=ID
	lineEnd=QUOTE_AND_NL
;
//TODO
RNGSegment:
	segment="RNG"
	PLUS
	todo=ID
	lineEnd=QUOTE_AND_NL
;
//TODO
RODSegment:
	segment="ROD"
	PLUS
	todo=ID
	lineEnd=QUOTE_AND_NL
;
//TODO
RSLSegment:
	segment="RSL"
	PLUS
	todo=ID
	lineEnd=QUOTE_AND_NL
;
RTESegment:
	segment="RTE"
	PLUS
	rateDetails=RateDetail // C128
	(
		PLUS
		statusDescriptionCode=ID // 4405
	)?
	lineEnd=QUOTE_AND_NL
;
//TODO
SALSegment:
	segment="SAL"
	PLUS
	todo=ID
	lineEnd=QUOTE_AND_NL
;
//TODO
SCCSegment:
	segment="SCC"
	PLUS
	todo=ID
	lineEnd=QUOTE_AND_NL
;
//TODO
SCDSegment:
	segment="SCD"
	PLUS
	todo=ID
	lineEnd=QUOTE_AND_NL
;
SEGSegment:
	segment="SEG"
	PLUS
	segmentTagIdentifer=ID // 9166
	(
		PLUS
		designatedClassCode=ID // 1507
		(
			PLUS
			maintenanceOperationCode=ID // 4513
		)?
	)?
	lineEnd=QUOTE_AND_NL
;
//TODO
SELSegment:
	segment="SEL"
	PLUS
	todo=ID
	lineEnd=QUOTE_AND_NL
;
//TODO
SEQSegment:
	segment="SEQ"
	PLUS
	todo=ID
	lineEnd=QUOTE_AND_NL
;
//TODO
SFISegment:
	segment="SFI"
	PLUS
	todo=ID
	lineEnd=QUOTE_AND_NL
;
//TODO
SGPSegment:
	segment="SGP"
	PLUS
	todo=ID
	lineEnd=QUOTE_AND_NL
;
//TODO
SGUSegment:
	segment="SGU"
	PLUS
	todo=ID
	lineEnd=QUOTE_AND_NL
;
//TODO
SPRSegment:
	segment="SPR"
	PLUS
	todo=ID
	lineEnd=QUOTE_AND_NL
;
//TODO
SPSSegment:
	segment="SPS"
	PLUS
	todo=ID
	lineEnd=QUOTE_AND_NL
;
//TODO
STASegment:
	segment="STA"
	PLUS
	todo=ID
	lineEnd=QUOTE_AND_NL
;
//TODO
STCSegment:
	segment="STC"
	PLUS
	todo=ID
	lineEnd=QUOTE_AND_NL
;
//TODO
STGSegment:
	segment="STG"
	PLUS
	todo=ID
	lineEnd=QUOTE_AND_NL
;
STSSegment:
	segment="STS"
	PLUS
	statusCategory=StatusCategory // C601
	(
		PLUS
		status=Status // C555
		(
			PLUS
			statusReasons+=StatusReason // C556
		)*
	)?
	lineEnd=QUOTE_AND_NL
;
//TODO non-EDIFACT - TRANSCOMM
STXSegment:
	segment="STX"
	PLUS
	todo=ID
	lineEnd=QUOTE_AND_NL
;
//TODO
TCCSegment:
	segment="TCC"
	PLUS
	todo=ID
	lineEnd=QUOTE_AND_NL
;
//TODO
TDTSegment:
	segment="TDT"
	PLUS
	todo=ID
	lineEnd=QUOTE_AND_NL
;
//TODO
TEMSegment:
	segment="TEM"
	PLUS
	todo=ID
	lineEnd=QUOTE_AND_NL
;
//TODO
TMDSegment:
	segment="TMD"
	PLUS
	todo=ID
	lineEnd=QUOTE_AND_NL
;
//TODO
TMPSegment:
	segment="TMP"
	PLUS
	todo=ID
	lineEnd=QUOTE_AND_NL
;
TODSegment:
	segment="TOD"
	PLUS
	deliveryTransportTermsFunctionCode=ID // 4055
	(
		PLUS
		transportChargesPaumentMethodCode=ID // 4215
		(
			PLUS
			termsOfDeliveryTransport=TermsOfDeliveryTransport // C100
		)?
	)?
	lineEnd=QUOTE_AND_NL
;
//TODO
TPLSegment:
	segment="TPL"
	PLUS
	todo=ID
	lineEnd=QUOTE_AND_NL
;
//TODO
TRUSegment:
	segment="TRU"
	PLUS
	todo=ID
	lineEnd=QUOTE_AND_NL
;
//TODO
TSRSegment:
	segment="TSR"
	PLUS
	todo=ID
	lineEnd=QUOTE_AND_NL
;
VLISegment:
	segment="VLI"
	PLUS
	valueListIdentification=ValueListIdentification // C780
	(
		PLUS
		partyIdentificationDetails=PartyIdentificationDetail // C082
		(
			PLUS
			statusDescriptionCode=ID // 4405
			(
				PLUS
				valueListName=ID // 1514
				(
					PLUS
					designatedClassCode=ID // 1507
					(
						PLUS
						valueListTypeCode=ID // 1505
						(
							PLUS
							productCharacteristic=ProductCharacteristic // C240
						)?
					)?
				)?
			)?
		)?
	)?
	lineEnd=QUOTE_AND_NL
;
//MSG+1:46'
MSGSegment:
	segment="MSG"
	PLUS
	( messageIdentifier=MessageIndentifier )? // C709
	(
		PLUS
		designatedClassCode=ID // 1507
		(
			PLUS
			maintenanceOperationCode=ID // 4513
				(
				PLUS
				relationship=Relationship // C941
			)?
		)?
	)?
	lineEnd=QUOTE_AND_NL
;
//ORG+1A:MUC+27213082:ATHGR28CS+ATH++T+GR:EUR:EN+A9996WSSU+04261178+1A'
//ORG+NZ:AKL:00++AKL+NZ+A+NZ:NZD+PR'
ORGSegment:
	segment="ORG"
	PLUS
	( systemDetail1=SystemDetailFunction )?
	PLUS
	( originatorIdentification=OriginatorIdentificationFunction )?
	PLUS
	( location=LocationFunction )?
	PLUS
	( systemDetail2=SystemDetailFunction )?
	PLUS
	( originatorTypeCode=ID )?
	PLUS
	( originator=OriginatorFunction )?
	PLUS
	( originatorsAuthorityRequestCode=ID )?
	(
		PLUS
		communicationNumber=ID
		(
			PLUS
			partyIdIdentification=ID
		)?
	)?
	lineEnd=QUOTE_AND_NL
;
//POC+BNE+220120'
POCSegment:
	segment="POC"
	PLUS
	(location=ID)?
	PLUS
	(departureDate=ID)?
	(
		PLUS
		departureTime=ID
	)?
	lineEnd=QUOTE_AND_NL
;
//ODI+BNE+ZQN'
ODISegment:
	segment="ODI"
	(
		PLUS
		(origin=ID)?
		PLUS
		(destination=ID)?
	)?
	lineEnd=QUOTE_AND_NL
;
//
UCISegment:
	segment="UCI"
	PLUS
	( interchangeControlReference=ID )?
	PLUS
	( interchangeSender=ID )?
	PLUS
	( interchangeRecipient=ID )?
	PLUS
	( action=ID )?
	PLUS
	( syntaxErrorCode=ID )?
	PLUS
	( segmentTagCode=ID )?
	lineEnd=QUOTE_AND_NL
;
//
PDISegment:
	segment="PDI"
	PLUS
	( productDetailsQualifier=ID )?
	(
		PLUS
		products+=ProductFunction
	)*
	lineEnd=QUOTE_AND_NL
;
//TVL+230120+CHC+ZQN+NZ+5641+3+2+P"
TVLSegment:
	segment="TVL"
	PLUS
	(
		(
			dateAndTime+=DateOnlyFunction
//			(
//				COLON 
//				dateAndTime+=DateOnly
//			)*
		)
		|
		(
			dateAndTime+=DateAndTimeFunction
			(
				COLON 
				dateAndTime+=DateAndTimeFunction
			)*
		)
	)
	PLUS
	(originCode=ID)?
	PLUS
	(destinationCode=ID)?
	PLUS
	(carrierId=ID)?
	PLUS
	(
		productId=ID
		(
			COLON
			characteristicId=ID
			(
				COLON
				productIdCharacteristic=ID
				(
					COLON
					descriptionIds+=ID	
				)*
			)?
		)?
	)?
	(
		PLUS
		productType=ID
		( 
			PLUS
			lineItemNumber=ID
			(
				PLUS
				processingIndicatorCode=ID
			)?
		)?
	)?
	lineEnd=QUOTE_AND_NL
;
//RPI+1+SS'
RPISegment:
	segment="RPI"
	PLUS
	(numberOfPax=ID)?
	PLUS
	(status=ID)?
	lineEnd=QUOTE_AND_NL
;
//MOA+203:1960.29'
MOASegment:
	segment="MOA"
	PLUS
	monetaryAmountTypeCodeQualifier=ID // 5025
	(
		COLON
		monetaryAmount=ID // 5004
		(
			COLON
			currencyIdentificationCode=ID // 6345
			(
				COLON
				currencyTypeCodeQualifier=ID // 6343
				(
					COLON
					statusDescriptionCode=ID // 4405
				)?
			)?
		)?
	)?
	lineEnd=QUOTE_AND_NL
;
//LIN+++090346642:IN'
LINSegment:
	segment="LIN"
	PLUS
	( lineItemIdentifier=ID )? // 1082
	PLUS
	( actionRequest=ID )? // 1229
	PLUS
	(
		itemNumberIdentification=ItemNumberIdentification // C212
		(
			PLUS
			sublineInformation=SublineInformation // C829
			(
				PLUS
				configurationLevelNumber=ID // 1222
				(
					PLUS
					configurationOperationCode=ID // 7083
				)?
			)?
		)?
	)?
	lineEnd=QUOTE_AND_NL
;
//PRI+AAA:3630.1724::NTP:100:C62'
PRISegment:
	segment="PRI"
	PLUS
	priceInformation=PriceInformation // C509
	(
		PLUS
		subLineItemPriceChangeOperationCode=ID // 5213
	)?
	lineEnd=QUOTE_AND_NL
;
//QTY+12:54:PCE'
QTYSegment:
	segment="QTY"
	(
		PLUS
		quantityDetails+=QuantityDetail // C186
	)*
	lineEnd=QUOTE_AND_NL
;
//CUX+2:EUR'
CUXSegment:
	segment="CUX"
	PLUS
	currencyDetails1=CurrencyDetail
	(
		PLUS
		currencyDetails2=CurrencyDetail
		(
			PLUS
			currencyExchangeRate=ID
			(
				PLUS
				exchangeRateCurrencyMarketIdentifier=ID
			)?
		)?
	)?
	lineEnd=QUOTE_AND_NL
;
//TAX+7+VAT'
TAXSegment:
	segment="TAX"
	PLUS
	taxFunctionCodeQualifier=ID // 5283
	PLUS
	taxType=TaxType // C241
	(
		PLUS
		( taxAccountDetail=TaxAccountDetail )? // C533
		(
			PLUS
			( taxAssessmentBasicValue=ID )? // 5286
			(
				PLUS
				( taxDetail=TaxDetail )? // C243
				(
					PLUS
					( taxCategoryCode=ID )? // 5305
					(
						PLUS
						( partyTaxIdentifier=ID )? // 3446
						(
							PLUS
							( calculationSequenceCode=ID )? // 1227
						)?
					)?
				)?
			)?
		)?
	)?
	lineEnd=QUOTE_AND_NL
;
//RFF+VA:382324067'
RFFSegment:
	segment="RFF"
	PLUS
	rff1=ID
	(
		COLON
		rff2=ID
	)?
	lineEnd=QUOTE_AND_NL
;
//NAD+BT+VAUXHALL MOTORS LTD::91'
NADSegment:
	segment="NAD"
	PLUS
	partyFunctionCodeQualifier=ID
	(
		PLUS
		partyIdentificationDetails=PartyIdentificationDetail // C082
		(
			PLUS
			nameAndAddress=NameAndAddress // C058
			(
				PLUS
				partyName=PartyName // C080
				(
					PLUS
					street=Street // C059
					(
						PLUS
						cityName=ID // 3164
						(
							PLUS
							countrySubEntityDetails=CountrySubEntityDetail // C819
							(
								PLUS
								postalIdentificationCode=ID // 3251
								(
									PLUS
									countryNameCode=ID // 3207
								)?
							)?
						)?
					)?
				)?
			)?
		)?
	)?
	lineEnd=QUOTE_AND_NL
;
//DTM+137:199910060000:102'
DTMSegment:
	segment="DTM"
	(
		PLUS
		dateTimePeriods+=DateTimePeriod
	)*
	lineEnd=QUOTE_AND_NL
;
//BGM+381+1060113800026+9'
BGMSegment:
	segment="BGM"
	PLUS
	( documentMessageName=DocumentMessage )?
	PLUS
	( documentMessageIdentification=DocumentMessageIdentification )?
	PLUS
	( messageFunctionCode=ID )?
	(
		PLUS
		responseTypeCode=ID
	)?
	lineEnd=QUOTE_AND_NL
;
//PAT+1'
PATSegment:
	segment="PAT"
	PLUS
	segmentCount=ID
	lineEnd=QUOTE_AND_NL
;
//FTX+AFM+1++XPath 2.0 Programmer?'s Reference'
FTXSegment:
	segment="FTX"
	PLUS
	( todo1=ID )?
	PLUS
	( todo2=ID )?
	PLUS
	( todo3=ID )?
	PLUS
	( todo4=ID )?
	lineEnd=QUOTE_AND_NL
;
ERCSegment:
	segment="ERC"
	(
		PLUS
		applicationErrorDetails+=ApplicationErrorDetail
	)*
	lineEnd=QUOTE_AND_NL
;
//CNT+2:4'
CNTSegment:
	segment="CNT"
	PLUS
	control=Control // C270
	lineEnd=QUOTE_AND_NL
;
CTASegment:
	segment="CTA"
	PLUS
	( contactFunctionCode=ID )?
	(
		PLUS
		departmentEmployeeDetails=DepartmentEmployeeDetail
	)?
	lineEnd=QUOTE_AND_NL
;
PCISegment:
	segment="PCI"
	PLUS
	( marketingInstructionsCode=ID )? // 4233
	(
		PLUS
		marksLabels=MarksLabels // C210
		(
			PLUS
			containerPackageContentsIndicatorCode=ID // 8275
			(
				PLUS
				typeOfMarking=TypeOfMarking // C827
			)
		)
	)?
	lineEnd=QUOTE_AND_NL
;
//UNS+S'
UNSSegment:
	segment="UNS"
	PLUS
	segmentCount=ID
	lineEnd=QUOTE_AND_NL
;
//UNT+9+1'
UNTSegment:
	segment="UNT"
	PLUS
	( segmentCount=ID )?
	PLUS
	( messageReferenceNumber=ID )?
	lineEnd=QUOTE_AND_NL
;
//UNZ+1+039I42XXTK0001'
UNZSegment:
	segment="UNZ"
	PLUS
	( interchangeControlCount=ID )?
	PLUS
	( interchangeControlRef=ID )?
	lineEnd=QUOTE_AND_NL
;
UNESegment:
	segment="UNE"
	PLUS
	( todo=ID )?
	lineEnd=QUOTE_AND_NL
;

// EDIFACT Functions
AbstractEdiFunction:
	UNBHeader |
	PriceInformation |
	MessageBodyFunction |
	MessageIndentifier |
	Relationship |
	ProductFunction |
	ItemNumberIdentification |
	SublineInformation |
	QuantityDetail |
	Street |
	CountrySubEntityDetail |
	PartyName |
	NameAndAddress |
	ApplicationErrorDetail |
	SystemDetailFunction |
	TaxDetail |
	TaxAccountDetail |
	TaxType |
	CurrencyDetail |
	DocumentMessageIdentification |
	DocumentMessage |
	OriginatorFunction |
	OriginatorIdentificationFunction |
	LocationFunction |
	InterchangerFunction |
	DateOnlyFunction |
	DateAndTimeFunction |
	DateTimePeriod
;
UNBHeader:
	{UNBHeader}
	( syntax=ID )?
	COLON
	( num1=ID )?
;
// C509
PriceInformation: // C509
	priceCodeQualifier=ID // 5125
	COLON
	( priceAmount=ID )? // 5118
	COLON
	( priceTypeCode=ID )? // 5375
	COLON
	( priceSpecificationCode=ID )? // 5287
	COLON
	( unitPriceBasisValue=ID )? // 5284
	COLON
	( measurementUnitCode=ID )? // 6411
;
MessageBodyFunction:
	type=ID
	COLON
	( version=ID )?
	COLON
	( release=ID )?
	COLON
	( controllingAgency=ID )?
	(
		COLON
		more=ID
	)?
;
MessageIndentifier: // C709
	( messageTypeCode=ID )? // 1475
	COLON
	versionIdentifier=ID // 1056
	(
		COLON
		releaseIdentifier=ID // 1058
		(
			COLON
			controllingAgencyIdentifier=ID // 1476
			(
				COLON
				messageImplementationIdentificationCode=ID // 1523
				(
					COLON
					revisionIdentifier=ID // 1060
					(
						COLON
						documentStatusCode=ID // 1373
					)?
				)?
			)?
		)?
	)?
;
Relationship: // C941
	( relationshipDescriptionCode=ID )? // 9143
	COLON
	codeListIdentificationCode=ID // 1131
	(
		COLON
		codeListResponsibleAgency=ID // 3055
		(
			COLON
			relationshipDescription=ID // 9142
		)?
	)?
;
ProductFunction:
	bookingClass=ID
	(
		COLON
		avail=ID
	)?
;
ItemNumberIdentification:
	itemIdentifier=ID // 7140
	COLON
	itemTypeIdentificationCode=ID // 7143
	(
		COLON
		codeListIdentificationCode=ID // 1131
		(
			COLON
			codeListResponsibleAgencyCode=ID // 3055
		)?
	)?
;
SublineInformation:
	sublineIndicatorCode=ID // 5495
	(
		COLON
		lineItemIdentifier=ID // 1082
	)?
;
QuantityDetail: // C186
	quantityTypeCodeQualifier=ID // 6063
	(
		COLON
		quantity=ID // 6060
		(
			COLON
			measurementUnitCode=ID // 6411
		)?
	)?
;
Street: // C059
	streetAndNumber+=ID // 3042
	(
		COLON
		streetAndNumber+=ID // 3042
		(
			COLON
			streetAndNumber+=ID // 3042
			(
				COLON
				streetAndNumber+=ID // 3042
				(
					COLON
					streetAndNumber+=ID // 3042
				)?
			)?
		)?
	)?
;
CountrySubEntityDetail: // C819
	countrySubEntityNameCode+=ID // 3229
	(
		COLON
		codeListIdentificationCode+=ID // 1131
		(
			COLON
			codeListResponsibleAgencyCode+=ID // 3055
			(
				COLON
				countrySubEntityName+=ID // 3228
			)?
		)?
	)?
;
PartyName: // C080
	partyName+=ID // 3036
	(
		COLON
		partyName+=ID // 3036
		(
			COLON
			partyName+=ID // 3036
			(
				COLON
				partyName+=ID // 3036
				(
					COLON
					partyName+=ID // 3036
				)?
			)?
		)?
	)?
;
NameAndAddress: // C058
	nameAndAddress+=ID // 3124
	(
		COLON
		nameAndAddress+=ID // 3124
		(
			COLON
			nameAndAddress+=ID // 3124
			(
				COLON
				nameAndAddress+=ID // 3124
				(
					COLON
					nameAndAddress+=ID // 3124
				)?
			)?
		)?
	)?
;
PartyIdentificationDetail:
	partyIdentifier=ID // 3039
	(
		COLON
		( codeListIdentificationCode=ID )? // 1331
		(
			COLON
			codeListResponsibleAgencyCode=ID // 3055
		)?
	)?
;
ApplicationErrorDetail: // C901
	applictionErrorCode=ID // 9321
	(
		COLON
		codeListIdentificationCode=ID // 1331
		(
			COLON
			codeListResponsibleAgencyCode=ID // 3055
		)?
	)?
;
SystemDetailFunction:
	companyIdentification=ID
	(
		COLON
		locationCode=ID
		(
			COLON
			locationName=ID
		)?
	)?
;
TaxDetail: // C243
	( taxRateDescriptionCode=ID )? // 5279
	COLON
	( codeListIdentificationCode1=ID )? // 1131
	COLON
	( codeListResponsibleAgencyCode1=ID )? // 3055
	(
		COLON
		taxRateDescription=ID // 5278
		(
			COLON
			taxRateBasisCode=ID // 5273
			(
				COLON
				codeListIdentificationCode2=ID // 1131
				(
					COLON
					codeListResponsibleAgencyCode2=ID // 3055
				)?
			)?
		)?
	)?
;
TaxAccountDetail: // C533
	taxAccountCode=ID // 5289
	(
		COLON
		codeListIdentificationCode=ID // 1131
		(
			COLON
			codeListResponsibleAgencyCode=ID // 3055
		)?
	)?
;
TaxType: // C241
	taxTypeNameCode=ID // 5153
	(
		COLON
		codeListIdentificationCode=ID // 1131
		(
			COLON
			codeListResponsibleAgencyCode=ID // 3055
			(
				COLON
				taxTypeName=ID // 5152
			)?
		)?
	)?
;
CurrencyDetail: // C504
	currencyUsageCodeQualifier=ID // 6347
	(
		COLON
		currencyIdentificationCode=ID // 6345
		(
			COLON
			currencyTypeCodeQualifier=ID // 6343
			(
				COLON
				currencyRateValue=ID // 6348
			)?
		)?
	)?
;
DocumentMessageIdentification: // C106
	documentIdentifier=ID // 1004
	(
		COLON
		versionIdentifier=ID // 1056
		(
			COLON
			revisionIdentifier=ID // 1060
		)?
	)?
;
DocumentMessage: // C002
	documentNameCode=ID // 1001
	(
		COLON
		codeListIdentificationCode=ID // 1131
		(
			COLON
			codeListResponsibleAgencyCode=ID // 3055
			(
				COLON
				documentName=ID // 1000
			)?
		)?
	)?
;
OriginatorFunction:
	countryCode=ID
	(
		COLON
		currencyCode=ID
		(
			COLON
			languageCode=ID
		)?
	)?
;
OriginatorIdentificationFunction:
	travelAgentId=ID
	(
		COLON
		inHouseId1=ID?
		(
			COLON
			inHouseId2=ID	
		)?
	)?
;
LocationFunction:
	locationId=ID
	(
		COLON
		locationName=ID
	)?
;
InterchangerFunction:
	interchange=ID
	(
		COLON
		interchange2=ID
	)?
;
// C517
LocationIdentification:
	locationNameCode=ID // 3225
	(
		COLON
		codeListIdentificationCode=ID // 1131
		(
			COLON
			codeListResponsibleAgencyCode=ID // 3055
			(
				COLON
				locationName=ID // 3224
			)?
		)?
	)?
;
// C090
AddressDetail:
	addressFormatCode=ID
	(
		COLON
		addressComponentDescriptions+=ID
	)*
;
// C817
AddressUsage:
	addressPurposeCode=ID
	(
		COLON
		addressTypeCode=ID
		(
			COLON
			addressStatusCode=ID
		)?
	)?
;
// C956
AttributeDetail:
	attributeDescriptionCode=ID // 9019
	(
		COLON
		codeListIdentificationCode=ID // 1131
		(
			COLON
			codeListResponsibleAgencyCode=ID // 3055
			(
				COLON
				attributeDescription=ID // 9018
			)?
		)?
	)?
;
// C955
AttributeType:
	attributeTypeDescriptionCode=ID // 9021
	(
		COLON
		codeListIdentificationCode=ID // 1131
		(
			COLON
			codeListResponsibleAgencyCode=ID // 3055
			(
				COLON
				attributeTypeDescription=ID // 9020
			)?
		)?
	)?
;
// C551
BankOperation:
	bankOperationCode=ID // 4383
	(
		COLON
		codeListIdentificationCode=ID // 1131
		(
			COLON
			codeListResponsibleAgencyCode=ID // 3055
		)?
	)?
;
// C521
BusinessFunction:
	businessFunctionTypeCodeQualifier=ID // 4027
	(
		COLON
		businessFunctionCode=ID // 4025
		(
			COLON
			codeListIdentificationCode=ID // 1131
			(
				COLON
				codeListResponsibleAgencyCode=ID // 3055
				(
					COLON
					businessDescription=ID // 4022
				)?
			)?
		)?
	)?
;
// C056
DepartmentEmployeeDetail:
	departmentEmployeeNameCode=ID // 3413
	(
		COLON
		departmentEmployeeName=ID // 3412
	)?
;
// C206
IdentificationNumber:
	objectIdentifier=ID // 7402
	(
		COLON
		objectIdentificationCodeQualifier=ID // 7405
		(
			COLON
			statusDescriptionCode=ID // 4405
		)?
	)?
;
// C778
PositionIdentification:
	hierarchyStructureLevelIdentifier=ID // 7164
	(
		COLON
		sequencePositionIdentifier=ID // 1050
	)?
;
// C240
ProductCharacteristic:
	characteristicDescriptionCode=ID // 7037
	(
		COLON
		codeListIdentificationCode=ID // 1131
		(
			COLON
			codeListResponsibleAgencyCode=ID // 3055
			(
				COLON
				characteristicDescription1=ID // 7036
				(
					COLON
					characteristicDescription2=ID // 7036
				)?
			)?
		)?
	)?
;
// C042
NationalityDetail:
	nationalityNameCode=ID // 3293
	(
		COLON
		codeListIdentificationCode=ID // 1131
		(
			COLON
			codeListResponsibleAgencyCode=ID // 3055
			(
				COLON
				nationalityName=ID // 3292
			)?
		)?
	)?
;
// C501
PercentageDetail:
	percentageTypeCodeQualifier=ID // 5245
	(
		COLON
		percentage=ID // 5482
		(
			COLON
			percentageBasisIdentificationCode=ID // 5249
			(
				COLON
				codeListIdentificationCode=ID // 1131
				(
					COLON
					codeListResponsibleAgencyCode=ID // 3055
				)?
			)?
		)?
	)?
;
// C128
RateDetail:
	rateTypeCodeQualifier=ID // 5419
	(
		COLON
		unitPriceBasisRate=ID // 5420
		(
			COLON
			unitPriceBasisValue=ID // 5284
			(
				COLON
				measurementUnitCode=ID // 6411
			)?
		)?
	)?
;
// C601
StatusCategory:
	statusCategoryCode=ID // 9015
	(
		COLON
		codeListIdentificationCode=ID // 1131
		(
			COLON
			codeListResponsibleAgencyCode=ID // 3055
		)?
	)?
;
// C555
Status:
	statusDescriptionCode=ID // 4405
	(
		COLON
		codeListIdentificationCode=ID // 1131
		(
			COLON
			codeListResponsibleAgencyCode=ID // 3055
			(
				COLON
				statusDescription=ID // 4404
			)?
		)?
	)?
;
// C556
StatusReason:
	statusReasonDescriptionCode=ID // 9013
	(
		COLON
		codeListIdentificationCode=ID // 1131
		(
			COLON
			codeListResponsibleAgencyCode=ID // 3055
			(
				COLON
				statusReasonDescription=ID // 9012
			)?
		)?
	)?
;
// C780
ValueListIdentification:
	valueListIdentifier=ID // 1518
	(
		COLON
		objectIdentificationCodeQualifier=ID // 7405
	)?
;
// C100
TermsOfDeliveryTransport:
	deliveryTransportTermsDescriptionCode=ID // 4053
	(
		COLON
		codeListIdentificationCode=ID // 1131
		(
			COLON
			codeListResponsibleAgencyCode=ID // 3055
			(
				COLON
				deliveryTransportTermsDescriptions+=ID // 4052
			)*
		)?
	)?
;
// C279
QuantityDifferenceInformation:
	quantityVarianceValue=ID // 6064
	(
		COLON
		quantityTypeCodeQualifier=ID // 6063
	)?
;
// C960
ReasonForChange:
	changeReasonDescriptionCode=ID // 4295
	(
		COLON
		codeListIdentificationCode=ID // 1131
		(
			COLON
			codeListResponsibleAgencyCode=ID // 3055
			(
				COLON
				changeReasonDescriptions=ID // 4294
			)?
		)?
	)?
;
// C508
LanguageDetail:
	languageNameCode=ID // 3453
	(
		COLON
		languageName=ID // 3452
	)?
;
// C333
InformationRequest:
	requestedInformationDescriptionCode=ID // 4511
	(
		COLON
		codeListIdentificationCode=ID // 1131
		(
			COLON
			codeListResponsibleAgencyCode=ID // 3055
			(
				COLON
				requestedInformationDescription=ID // 4510
			)?
		)?
	)?
;
// C545
IndexIdentification:
	indexCodeQualifier=ID // 5013
	(
		COLON
		indexTypeIdentifier=ID // 5027
		(
			COLON
			codeListIdentificationCode=ID // 1131
			(
				COLON
				codeListResponsibleAgencyCode=ID // 3055
			)?
		)?
	)?
;
// C546
IndexValue:
	indexValue=ID // 5030
	(
		COLON
		indexValueRepresentationCode=ID // 5039
	)?
;
// C270
Control:
	controlTotalTypeCodeQualifier=ID // 6069
	(
		COLON
		controlTotalValue=ID // 6066
		(
			COLON
			measurementUnitCode=ID // 6411
		)?
	)?
;
// C974
BasisType:
	basisTypeDescriptionCode=ID // 9047
	(
		COLON
		codeListIdentificationCode=ID // 1131
		(
			COLON
			codeListResponsibleAgencyCode=ID // 3055
			(
				COLON
				basisTypeDescription=ID // 9046
			)?
		)?
	)?
;
// C076
CommunicationContact:
	communicationNumber=ID // 3148
	(
		COLON
		communicationNumberCodeQualifier=ID // 3155
	)?
;
// C543
AgreementTypeIdentification:
	agreementTypeCodeQualifier=ID // 7431
	(
		COLON
		agreementTypeDescriptionCode=ID // 7433
		(
			COLON
			codeListIdentificationCode=ID // 1131
			(
				COLON
				codeListResponsibleAgencyCode=ID // 3055
				(
					COLON
					agreementTypeDescription=ID // 7434
				)?
			)?
		)?
	)?
;
// C552
AllowanceChargeInformation:
	allowanceChargeIdentifier=ID // 1230
	(
		COLON
		allowanceChargeIdentificationCode=ID // 5189
	)?
;
// C214
SpecialServicesIdentification:
	specialServiceDescriptionCode=ID // 7161
	(
		COLON
		codeListIdentificationCode=ID // 1131
		(
			COLON
			codeListResponsibleAgencyCode=ID // 3055
			(
				COLON
				specialServiceDescriptions+=ID // 7160
			)*
		)?
	)?
;
// C973
ApplicabilityType:
	applicabilityTypeDescriptionCode=ID // 9049
	(
		COLON
		codeListIdentificationCode=ID // 1131
		(
			COLON
			codeListResponsibleAgencyCode=ID // 3055
			(
				COLON
				applicabilityTypeDescriptions=ID // 9048
			)?
		)?
	)?
;
// C138
PriceMultiplierInformation:
	priceMultiplierRate=ID // 5394
	(
		COLON
		priceMultiplierTypeCodeQualifier=ID // 5393
	)?
;
// C549
MonetaryAmountFunction:
	monetaryAmountFunctionDescriptionCode=ID // 5007
	(
		COLON
		codeListIdentificationCode=ID // 1131
		(
			COLON
			codeListResponsibleAgencyCode=ID // 3055
			(
				COLON
				monetaryAmountFunctionDescription=ID // 5006
			)?
		)?
	)?
;
// C008
MonetaryAmountFunctionDetail:
	monetaryAmountFunctionDetailDescriptionCode=ID // 5105
	(
		COLON
		codeListIdentificationCode=ID // 1131
		(
			COLON
			codeListResponsibleAgencyCode=ID // 3055
			(
				COLON
				monetaryAmountFunctionDetailDescription=ID // 5104
			)?
		)?
	)?
;
// C770
ArrayCellDetail:
	arrayCellDataDescription+=ID // 9424
	(
		COLON
		arrayCellDataDescription+=ID // 9424
	)*
;
// C779
ArrayStructureIdentification:
	arrayCellStructureIdentifier=ID // 9428
	(
		COLON
		objectIdentificationCodeQualifier=ID // 7405
	)?
;
// C045
BillLevelIdentification:
	levelOneIdentifier=ID // 7436
	(
		COLON
		levelTwoIdentifier=ID // 7438
		(
			COLON
			levelThreeIdentifier=ID // 7440
			(
				COLON
				levelFourIdentifier=ID // 7442
				(
					COLON
					levelFiveIdentifier=ID // 7444
					(
						COLON
						levelSixIdentifier=ID // 7446
					)?
				)?
			)?
		)?
	)?
;
// C889
CharacteristicValue:
	characteristicValueDescriptionCode=ID // 7111
	(
		COLON
		codeListIdentificationCode=ID // 1131
		(
			COLON
			codeListResponsibleAgencyCode=ID // 3055
			(
				COLON
				characteristicValueDescription+=ID // 7110
			)*
		)?
	)?
;
// C502
MeasurementDetail:
	measuredAttributeCode=ID // 6313
	(
		COLON
		measurementSignificanceCode=ID // 6321
		(
			COLON
			nonDiscreteMeasurementNameCode=ID // 6155
			(
				COLON
				nonDiscreteMeasurementName=ID // 7154
			)?
		)?
	)?
;
// C564
PhysicalLogicalStateInformation:
	physicalLogicalStateDescriptionCode=ID // 7007
	(
		COLON
		codeListIdentificationCode=ID // 1131
		(
			COLON
			codeListResponsibleAgencyCode=ID // 3055
			(
				COLON
				physicalLogicalStateDescription=ID // 7006
			)?
		)?
	)?
;
// C702
CodeSetIdentification:
	simpleDataElementTagIdentifier=ID // 9150
	(
		COLON
		codeListIdentificationCode=ID // 1131
		(
			COLON
			codeListResponsibleAgencyCode=ID // 3055
		)?
	)?
;
// C079
ComputerEnvironmentIdentification:
	computerEnvironmentNameCode=ID // 1511
	(
		COLON
		codeListIdentificationCode=ID // 1131
		(
			COLON
			codeListResponsibleAgencyCode=ID // 3055
			(
				COLON
				computerEnvironmentName=ID // 1510
				(
					COLON
					versionIdentifier=ID // 1056
					(
						COLON
						releaseIdentifier=ID // 1058
						(
							COLON
							objectIdentifier=ID // 7402
						)?
					)?
				)?
			)?
		)?
	)?
;
// C836
ClinicalInformationDetail:
	clinicalInformationDescriptionIdentifier=ID // 6413
	(
		COLON
		codeListIdentificationCode=ID // 1131
		(
			COLON
			codeListResponsibleAgencyCode=ID // 3055
			(
				COLON
				clinicalInformationDescription=ID // 6412
			)?
		)?
	)?
;
// C837
CertaintyDetail:
	certaintyDescriptionCode=ID // 4049
	(
		COLON
		codeListIdentificationCode=ID // 1131
		(
			COLON
			codeListResponsibleAgencyCode=ID // 3055
			(
				COLON
				certaintyDescription=ID // 4048
			)?
		)?
	)?
;
// C970
ClauseName:
	clauseNameCode=ID // 4069
	(
		COLON
		codeListIdentificationCode=ID // 1131
		(
			COLON
			codeListResponsibleAgencyCode=ID // 3055
			(
				COLON
				clauseName=ID // 4068
			)?
		)?
	)?
;
// C828
ClinicalInterventionDetail:
	clinicalInterventionDescriptionCode=ID // 9437
	(
		COLON
		codeListIdentificationCode=ID // 1131
		(
			COLON
			codeListResponsibleAgencyCode=ID // 3055
			(
				COLON
				clinicalInterventionDescription=ID // 9436
			)?
		)?
	)?
;
// C529
ProcessingIndicator:
	processingIndicatorDescriptionCode=ID // 7365
	(
		COLON
		codeListIdentificationCode=ID // 1131
		(
			COLON
			codeListResponsibleAgencyCode=ID // 3055
			(
				COLON
				processTypeDescriptionCode=ID // 7187
			)?
		)?
	)?
;
// C210
MarksLabels:
	shippingMarksDescriptions+=ID // 7102
	(
		COLON
		shippingMarksDescriptions+=ID // 7102
	)*
;
// C827
TypeOfMarking:
	markingTypeCode=ID // 7511
	(
		COLON
		codeListIdentificationCode=ID // 1131
		(
			COLON
			codeListResponsibleAgencyCode=ID // 3055
		)?
	)?
;
// C232
GovernmentAction:
	governmentAgencyIdentificationCode=ID // 9415
	(
		COLON
		governmentInvolvementCode=ID // 9411
		(
			COLON
			governmentActionCode=ID // 9417
			(
				COLON
				governmentProcedureCode=ID // 9353
			)?
		)?
	)?
;
DateOnlyFunction:
	date=ID
;
DateAndTimeFunction:
	date=ID
	COLON
	time=ID
;
DateTimePeriod:
	dateTimePeriodFunctionCodeQualifier=ID
	(
		COLON
		dateTimePeriodValue=ID
		(
			COLON
			dateTimePeriodFormatCode=ID
		)?
	)?
;

terminal QUOTE_AND_NL: ( "'" | "~" ) ( "\n" )?;
terminal PLUS: ( "+" | "*" );
terminal COLON: ":";
//terminal INT_DATE returns ecore::EString: ( "0".."9" )( "0".."9" )( "0".."9" )( "0".."9" )( "0".."9" )( "0".."9" );
//terminal INT_TIME returns ecore::EString: ( "0".."9" )( "0".."9" )( "0".."9" )( "0".."9" );
@Override
terminal INT returns ecore::EInt: ( "0".."9" )( "0".."9" )( "0".."9" )( "0".."9" )( "0".."9" )( "0".."9" )( "0".."9" )( "0".."9" )( "0".."9" )( "0".."9" )( "0".."9" )( "0".."9" )( "0".."9" )( "0".."9" )( "0".."9" )( "0".."9" );
@Override
terminal ID returns ecore::EString: ( "a".."z" | "A".."Z" | "0".."9" ) ( ( "a".."z" | "A".."Z" | "0".."9" | "-" | "_" | "." | " " | "?" )* ( "a".."z" | "A".."Z" | "0".."9" ) )?;
@Override
terminal STRING returns ecore::EString: '"' ( '\\' . /* 'b'|'t'|'n'|'f'|'r'|'u'|'"'|"'"|'\\' */ | !('\\'|'"') )* '"';
@Override
terminal WS: ( "\t" | "\r" | "\n" )+;
