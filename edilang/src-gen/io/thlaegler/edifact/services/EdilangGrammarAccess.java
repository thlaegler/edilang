/*
 * generated by Xtext 2.26.0
 */
package io.thlaegler.edifact.services;

import com.google.inject.Inject;
import com.google.inject.Singleton;
import java.util.List;
import org.eclipse.xtext.Alternatives;
import org.eclipse.xtext.Assignment;
import org.eclipse.xtext.Grammar;
import org.eclipse.xtext.GrammarUtil;
import org.eclipse.xtext.Group;
import org.eclipse.xtext.Keyword;
import org.eclipse.xtext.ParserRule;
import org.eclipse.xtext.RuleCall;
import org.eclipse.xtext.TerminalRule;
import org.eclipse.xtext.common.services.TerminalsGrammarAccess;
import org.eclipse.xtext.service.AbstractElementFinder;
import org.eclipse.xtext.service.GrammarProvider;

@Singleton
public class EdilangGrammarAccess extends AbstractElementFinder.AbstractGrammarElementFinder {
	
	public class EdiModelElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "io.thlaegler.edifact.Edilang.EdiModel");
		private final Assignment cSegmentsAssignment = (Assignment)rule.eContents().get(1);
		private final RuleCall cSegmentsAbstractEdiSegmentParserRuleCall_0 = (RuleCall)cSegmentsAssignment.eContents().get(0);
		
		//EdiModel:
		//    segments+=AbstractEdiSegment*;
		@Override public ParserRule getRule() { return rule; }
		
		//segments+=AbstractEdiSegment*
		public Assignment getSegmentsAssignment() { return cSegmentsAssignment; }
		
		//AbstractEdiSegment
		public RuleCall getSegmentsAbstractEdiSegmentParserRuleCall_0() { return cSegmentsAbstractEdiSegmentParserRuleCall_0; }
	}
	public class AbstractEdiSegmentElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "io.thlaegler.edifact.Edilang.AbstractEdiSegment");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cUNASegmentParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cUNBSegmentParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		private final RuleCall cUNHSegmentParserRuleCall_2 = (RuleCall)cAlternatives.eContents().get(2);
		private final RuleCall cMSGSegmentParserRuleCall_3 = (RuleCall)cAlternatives.eContents().get(3);
		private final RuleCall cORGSegmentParserRuleCall_4 = (RuleCall)cAlternatives.eContents().get(4);
		private final RuleCall cPOCSegmentParserRuleCall_5 = (RuleCall)cAlternatives.eContents().get(5);
		private final RuleCall cODISegmentParserRuleCall_6 = (RuleCall)cAlternatives.eContents().get(6);
		private final RuleCall cUCISegmentParserRuleCall_7 = (RuleCall)cAlternatives.eContents().get(7);
		private final RuleCall cPDISegmentParserRuleCall_8 = (RuleCall)cAlternatives.eContents().get(8);
		private final RuleCall cRPISegmentParserRuleCall_9 = (RuleCall)cAlternatives.eContents().get(9);
		private final RuleCall cTVLSegmentParserRuleCall_10 = (RuleCall)cAlternatives.eContents().get(10);
		private final RuleCall cBGMSegmentParserRuleCall_11 = (RuleCall)cAlternatives.eContents().get(11);
		private final RuleCall cDTMSegmentParserRuleCall_12 = (RuleCall)cAlternatives.eContents().get(12);
		private final RuleCall cNADSegmentParserRuleCall_13 = (RuleCall)cAlternatives.eContents().get(13);
		private final RuleCall cRFFSegmentParserRuleCall_14 = (RuleCall)cAlternatives.eContents().get(14);
		private final RuleCall cCUXSegmentParserRuleCall_15 = (RuleCall)cAlternatives.eContents().get(15);
		private final RuleCall cTAXSegmentParserRuleCall_16 = (RuleCall)cAlternatives.eContents().get(16);
		private final RuleCall cLINSegmentParserRuleCall_17 = (RuleCall)cAlternatives.eContents().get(17);
		private final RuleCall cQTYSegmentParserRuleCall_18 = (RuleCall)cAlternatives.eContents().get(18);
		private final RuleCall cMOASegmentParserRuleCall_19 = (RuleCall)cAlternatives.eContents().get(19);
		private final RuleCall cPRISegmentParserRuleCall_20 = (RuleCall)cAlternatives.eContents().get(20);
		private final RuleCall cPATSegmentParserRuleCall_21 = (RuleCall)cAlternatives.eContents().get(21);
		private final RuleCall cPCISegmentParserRuleCall_22 = (RuleCall)cAlternatives.eContents().get(22);
		private final RuleCall cCTASegmentParserRuleCall_23 = (RuleCall)cAlternatives.eContents().get(23);
		private final RuleCall cCNTSegmentParserRuleCall_24 = (RuleCall)cAlternatives.eContents().get(24);
		private final RuleCall cFTXSegmentParserRuleCall_25 = (RuleCall)cAlternatives.eContents().get(25);
		private final RuleCall cERCSegmentParserRuleCall_26 = (RuleCall)cAlternatives.eContents().get(26);
		private final RuleCall cUNSSegmentParserRuleCall_27 = (RuleCall)cAlternatives.eContents().get(27);
		private final RuleCall cUNZSegmentParserRuleCall_28 = (RuleCall)cAlternatives.eContents().get(28);
		private final RuleCall cUNTSegmentParserRuleCall_29 = (RuleCall)cAlternatives.eContents().get(29);
		
		//AbstractEdiSegment:
		//    UNASegment |
		//    UNBSegment | // header for trailer UNZ
		//    UNHSegment | // header for trailer UNT
		//    MSGSegment | // Message type identification
		//    ORGSegment | // Organisation
		//    POCSegment | // Purpose of conveyance call
		//    ODISegment | // Origin/destination
		//    UCISegment | // ?
		//    PDISegment | // Person demographic information
		//    RPISegment | // ?
		//    TVLSegment | // Travel itinerary
		//    BGMSegment | // Beginning of message
		//    DTMSegment | // Date/time/period
		//    NADSegment | // Name and address
		//    RFFSegment | // Reference
		//    CUXSegment | // Currencies
		//    TAXSegment | // Duty/tax/fee details
		//    LINSegment | // Line item
		//    QTYSegment | // Quantity
		//    MOASegment | // Monetary amount
		//    PRISegment | // Price details
		//    PATSegment | // Payment terms basis
		//    PCISegment | // Package identification
		//    CTASegment | // Contact information
		//    CNTSegment | // Control total
		//    FTXSegment | // Free text
		//    ERCSegment | // Application error information
		////    ADR  Address
		////    AGR  Agreement identification
		////    AJT  Adjustment details
		////    ALC  Allowance or charge
		////    ALI  Additional information
		////+   APP  Applicability
		////    APR  Additional price information
		////    ARD  Monetary amount function
		////    ARR  Array information
		////    ASI  Array structure identification
		////    ATT  Attribute
		////    AUT  Authentication result
		////+   BAS  Basis
		////    BII  Structure identification
		////    BUS  Business function
		////    CAV  Characteristic value
		////    CCD  Credit cover details
		////    CCI  Characteristic/class id
		////    CDI  Physical or logical state
		////    CDS  Code set identification
		////    CDV  Code value definition
		////    CED  Computer environment details
		////    CIN  Clinical information
		////+   CLA  Clause identification
		////    CLI  Clinical intervention
		////    CMP  Composite data element identification
		////    CNI  Consignment information
		////    COD  Component details
		////    COM  Communication contact
		////    COT  Contribution details
		////    CPI  Charge payment instructions
		////    CPS  Consignment packing sequence
		////    CPT  Account identification
		////    CST  Customs status of goods
		////    DAM  Damage
		////    DFN  Definition function
		////    DGS  Dangerous goods
		////    DII  Directory identification
		////    DIM  Dimensions
		////    DLI  Document line identification
		////    DLM  Delivery limitations
		////    DMS  Document/message summary
		////    DOC  Document/message details
		////    DRD  Data representation details
		////    DSG  Dosage administration
		////    DSI  Data set identification
		////    EDT  Editing details
		////    EFI  External file link identification
		////    ELM  Simple data element details
		////    ELU  Data element usage details
		////    ELV  Element value definition
		////    EMP  Employment details
		////    EQA  Attached equipment
		////    EQD  Equipment details
		////    EQN  Number of units
		////    ERP  Error point details
		////*   EVE  Event
		////X   EVT  Event
		////    FCA  Financial charges allocation
		////    FII  Financial institution information
		////    FNS  Footnote set
		////    FNT  Footnote
		////    FOR  Formula
		////    FSQ  Formula sequence
		////    GDS  Nature of cargo
		////    GEI  Processing information
		////    GID  Goods item details
		////    GIN  Goods identity number
		////    GIR  Related identification numbers
		////X   GIS  General indicator
		////    GOR  Governmental requirements
		////    GRU  Segment group usage details
		////    HAN  Handling instructions
		////    HYN  Hierarchy information
		////    ICD  Insurance cover description
		////    IDE  Identity
		////*   IFD  Information detail
		////    IHC  Person characteristic
		////    IMD  Item description
		////    IND  Index details
		////    INP  Parties and instruction
		////    INV  Inventory management related details
		////    IRQ  Information required
		////    LAN  Language
		////    LOC  Place/location identification
		////    MEA  Measurements
		////    MEM  Membership details
		////    MKS  Market/sales channel information
		////    NAT  Nationality
		////    PAC  Package
		////    PAI  Payment instructions
		////    PAS  Attendance
		////    PCC  Premium calculation component details
		////*   PCD  Percentage details
		////+   PER  Period related details
		////    PGI  Product group information
		////    PIA  Additional product id
		////    PNA  Party identification
		////    PRC  Process identification
		////+   PRV  Proviso details
		////    PSD  Physical sample description
		////    PTY  Priority
		////    PYT  Payment terms
		////    QRS  Query and response
		////    QUA  Qualification
		////    QVR  Quantity variances
		////    RCS  Requirements and conditions
		////    REL  Relationship
		////    RJL  Accounting journal identification
		////    RNG  Range details
		////    ROD  Risk object type
		////    RSL  Result
		////*   RTE  Rate details
		////    SAL  Remuneration type identification
		////    SCC  Scheduling conditions
		////    SCD  Structure component definition
		////    SEG  Segment identification
		////    SEL  Seal number
		////    SEQ  Sequence details
		////    SFI  Safety information
		////    SGP  Split goods placement
		////    SGU  Segment usage details
		////    SPR  Organisation classification details
		////    SPS  Sampling parameters for summary statistics
		////    STA  Statistics
		////    STC  Statistical concept
		////    STG  Stages
		////    STS  Status
		////    TCC  Transport charge/rate calculations
		////    TDT  Details of transport
		////    TEM  Test method
		////    TMD  Transport movement details
		////    TMP  Temperature
		////    TOD  Terms of delivery or transport
		////    TPL  Transport placement
		////    TRU  Technical rules
		////    TSR  Transport service requirements
		////    VLI  Value list identification
		//    UNSSegment |
		//    UNZSegment | // trailer for header UNB
		//    UNTSegment // trailer for header UNH
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//    UNASegment |
		//    UNBSegment | // header for trailer UNZ
		//    UNHSegment | // header for trailer UNT
		//    MSGSegment | // Message type identification
		//    ORGSegment | // Organisation
		//    POCSegment | // Purpose of conveyance call
		//    ODISegment | // Origin/destination
		//    UCISegment | // ?
		//    PDISegment | // Person demographic information
		//    RPISegment | // ?
		//    TVLSegment | // Travel itinerary
		//    BGMSegment | // Beginning of message
		//    DTMSegment | // Date/time/period
		//    NADSegment | // Name and address
		//    RFFSegment | // Reference
		//    CUXSegment | // Currencies
		//    TAXSegment | // Duty/tax/fee details
		//    LINSegment | // Line item
		//    QTYSegment | // Quantity
		//    MOASegment | // Monetary amount
		//    PRISegment | // Price details
		//    PATSegment | // Payment terms basis
		//    PCISegment | // Package identification
		//    CTASegment | // Contact information
		//    CNTSegment | // Control total
		//    FTXSegment | // Free text
		//    ERCSegment | // Application error information
		////    ADR  Address
		////    AGR  Agreement identification
		////    AJT  Adjustment details
		////    ALC  Allowance or charge
		////    ALI  Additional information
		////+   APP  Applicability
		////    APR  Additional price information
		////    ARD  Monetary amount function
		////    ARR  Array information
		////    ASI  Array structure identification
		////    ATT  Attribute
		////    AUT  Authentication result
		////+   BAS  Basis
		////    BII  Structure identification
		////    BUS  Business function
		////    CAV  Characteristic value
		////    CCD  Credit cover details
		////    CCI  Characteristic/class id
		////    CDI  Physical or logical state
		////    CDS  Code set identification
		////    CDV  Code value definition
		////    CED  Computer environment details
		////    CIN  Clinical information
		////+   CLA  Clause identification
		////    CLI  Clinical intervention
		////    CMP  Composite data element identification
		////    CNI  Consignment information
		////    COD  Component details
		////    COM  Communication contact
		////    COT  Contribution details
		////    CPI  Charge payment instructions
		////    CPS  Consignment packing sequence
		////    CPT  Account identification
		////    CST  Customs status of goods
		////    DAM  Damage
		////    DFN  Definition function
		////    DGS  Dangerous goods
		////    DII  Directory identification
		////    DIM  Dimensions
		////    DLI  Document line identification
		////    DLM  Delivery limitations
		////    DMS  Document/message summary
		////    DOC  Document/message details
		////    DRD  Data representation details
		////    DSG  Dosage administration
		////    DSI  Data set identification
		////    EDT  Editing details
		////    EFI  External file link identification
		////    ELM  Simple data element details
		////    ELU  Data element usage details
		////    ELV  Element value definition
		////    EMP  Employment details
		////    EQA  Attached equipment
		////    EQD  Equipment details
		////    EQN  Number of units
		////    ERP  Error point details
		////*   EVE  Event
		////X   EVT  Event
		////    FCA  Financial charges allocation
		////    FII  Financial institution information
		////    FNS  Footnote set
		////    FNT  Footnote
		////    FOR  Formula
		////    FSQ  Formula sequence
		////    GDS  Nature of cargo
		////    GEI  Processing information
		////    GID  Goods item details
		////    GIN  Goods identity number
		////    GIR  Related identification numbers
		////X   GIS  General indicator
		////    GOR  Governmental requirements
		////    GRU  Segment group usage details
		////    HAN  Handling instructions
		////    HYN  Hierarchy information
		////    ICD  Insurance cover description
		////    IDE  Identity
		////*   IFD  Information detail
		////    IHC  Person characteristic
		////    IMD  Item description
		////    IND  Index details
		////    INP  Parties and instruction
		////    INV  Inventory management related details
		////    IRQ  Information required
		////    LAN  Language
		////    LOC  Place/location identification
		////    MEA  Measurements
		////    MEM  Membership details
		////    MKS  Market/sales channel information
		////    NAT  Nationality
		////    PAC  Package
		////    PAI  Payment instructions
		////    PAS  Attendance
		////    PCC  Premium calculation component details
		////*   PCD  Percentage details
		////+   PER  Period related details
		////    PGI  Product group information
		////    PIA  Additional product id
		////    PNA  Party identification
		////    PRC  Process identification
		////+   PRV  Proviso details
		////    PSD  Physical sample description
		////    PTY  Priority
		////    PYT  Payment terms
		////    QRS  Query and response
		////    QUA  Qualification
		////    QVR  Quantity variances
		////    RCS  Requirements and conditions
		////    REL  Relationship
		////    RJL  Accounting journal identification
		////    RNG  Range details
		////    ROD  Risk object type
		////    RSL  Result
		////*   RTE  Rate details
		////    SAL  Remuneration type identification
		////    SCC  Scheduling conditions
		////    SCD  Structure component definition
		////    SEG  Segment identification
		////    SEL  Seal number
		////    SEQ  Sequence details
		////    SFI  Safety information
		////    SGP  Split goods placement
		////    SGU  Segment usage details
		////    SPR  Organisation classification details
		////    SPS  Sampling parameters for summary statistics
		////    STA  Statistics
		////    STC  Statistical concept
		////    STG  Stages
		////    STS  Status
		////    TCC  Transport charge/rate calculations
		////    TDT  Details of transport
		////    TEM  Test method
		////    TMD  Transport movement details
		////    TMP  Temperature
		////    TOD  Terms of delivery or transport
		////    TPL  Transport placement
		////    TRU  Technical rules
		////    TSR  Transport service requirements
		////    VLI  Value list identification
		//    UNSSegment |
		//    UNZSegment | // trailer for header UNB
		//    UNTSegment
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//UNASegment
		public RuleCall getUNASegmentParserRuleCall_0() { return cUNASegmentParserRuleCall_0; }
		
		//UNBSegment
		public RuleCall getUNBSegmentParserRuleCall_1() { return cUNBSegmentParserRuleCall_1; }
		
		//// header for trailer UNZ
		//   UNHSegment
		public RuleCall getUNHSegmentParserRuleCall_2() { return cUNHSegmentParserRuleCall_2; }
		
		//// header for trailer UNT
		//   MSGSegment
		public RuleCall getMSGSegmentParserRuleCall_3() { return cMSGSegmentParserRuleCall_3; }
		
		//// Message type identification
		//   ORGSegment
		public RuleCall getORGSegmentParserRuleCall_4() { return cORGSegmentParserRuleCall_4; }
		
		//// Organisation
		//   POCSegment
		public RuleCall getPOCSegmentParserRuleCall_5() { return cPOCSegmentParserRuleCall_5; }
		
		//// Purpose of conveyance call
		//   ODISegment
		public RuleCall getODISegmentParserRuleCall_6() { return cODISegmentParserRuleCall_6; }
		
		//// Origin/destination
		//   UCISegment
		public RuleCall getUCISegmentParserRuleCall_7() { return cUCISegmentParserRuleCall_7; }
		
		//// ?
		//   PDISegment
		public RuleCall getPDISegmentParserRuleCall_8() { return cPDISegmentParserRuleCall_8; }
		
		//// Person demographic information
		//   RPISegment
		public RuleCall getRPISegmentParserRuleCall_9() { return cRPISegmentParserRuleCall_9; }
		
		//// ?
		//   TVLSegment
		public RuleCall getTVLSegmentParserRuleCall_10() { return cTVLSegmentParserRuleCall_10; }
		
		//// Travel itinerary
		//   BGMSegment
		public RuleCall getBGMSegmentParserRuleCall_11() { return cBGMSegmentParserRuleCall_11; }
		
		//// Beginning of message
		//   DTMSegment
		public RuleCall getDTMSegmentParserRuleCall_12() { return cDTMSegmentParserRuleCall_12; }
		
		//// Date/time/period
		//   NADSegment
		public RuleCall getNADSegmentParserRuleCall_13() { return cNADSegmentParserRuleCall_13; }
		
		//// Name and address
		//   RFFSegment
		public RuleCall getRFFSegmentParserRuleCall_14() { return cRFFSegmentParserRuleCall_14; }
		
		//// Reference
		//   CUXSegment
		public RuleCall getCUXSegmentParserRuleCall_15() { return cCUXSegmentParserRuleCall_15; }
		
		//// Currencies
		//   TAXSegment
		public RuleCall getTAXSegmentParserRuleCall_16() { return cTAXSegmentParserRuleCall_16; }
		
		//// Duty/tax/fee details
		//   LINSegment
		public RuleCall getLINSegmentParserRuleCall_17() { return cLINSegmentParserRuleCall_17; }
		
		//// Line item
		//   QTYSegment
		public RuleCall getQTYSegmentParserRuleCall_18() { return cQTYSegmentParserRuleCall_18; }
		
		//// Quantity
		//   MOASegment
		public RuleCall getMOASegmentParserRuleCall_19() { return cMOASegmentParserRuleCall_19; }
		
		//// Monetary amount
		//   PRISegment
		public RuleCall getPRISegmentParserRuleCall_20() { return cPRISegmentParserRuleCall_20; }
		
		//// Price details
		//   PATSegment
		public RuleCall getPATSegmentParserRuleCall_21() { return cPATSegmentParserRuleCall_21; }
		
		//// Payment terms basis
		//   PCISegment
		public RuleCall getPCISegmentParserRuleCall_22() { return cPCISegmentParserRuleCall_22; }
		
		//// Package identification
		//   CTASegment
		public RuleCall getCTASegmentParserRuleCall_23() { return cCTASegmentParserRuleCall_23; }
		
		//// Contact information
		//   CNTSegment
		public RuleCall getCNTSegmentParserRuleCall_24() { return cCNTSegmentParserRuleCall_24; }
		
		//// Control total
		//   FTXSegment
		public RuleCall getFTXSegmentParserRuleCall_25() { return cFTXSegmentParserRuleCall_25; }
		
		//// Free text
		//   ERCSegment
		public RuleCall getERCSegmentParserRuleCall_26() { return cERCSegmentParserRuleCall_26; }
		
		// // Application error information
		////    ADR  Address
		////    AGR  Agreement identification
		////    AJT  Adjustment details
		////    ALC  Allowance or charge
		////    ALI  Additional information
		////+   APP  Applicability
		////    APR  Additional price information
		////    ARD  Monetary amount function
		////    ARR  Array information
		////    ASI  Array structure identification
		////    ATT  Attribute
		////    AUT  Authentication result
		////+   BAS  Basis
		////    BII  Structure identification
		////    BUS  Business function
		////    CAV  Characteristic value
		////    CCD  Credit cover details
		////    CCI  Characteristic/class id
		////    CDI  Physical or logical state
		////    CDS  Code set identification
		////    CDV  Code value definition
		////    CED  Computer environment details
		////    CIN  Clinical information
		////+   CLA  Clause identification
		////    CLI  Clinical intervention
		////    CMP  Composite data element identification
		////    CNI  Consignment information
		////    COD  Component details
		////    COM  Communication contact
		////    COT  Contribution details
		////    CPI  Charge payment instructions
		////    CPS  Consignment packing sequence
		////    CPT  Account identification
		////    CST  Customs status of goods
		////    DAM  Damage
		////    DFN  Definition function
		////    DGS  Dangerous goods
		////    DII  Directory identification
		////    DIM  Dimensions
		////    DLI  Document line identification
		////    DLM  Delivery limitations
		////    DMS  Document/message summary
		////    DOC  Document/message details
		////    DRD  Data representation details
		////    DSG  Dosage administration
		////    DSI  Data set identification
		////    EDT  Editing details
		////    EFI  External file link identification
		////    ELM  Simple data element details
		////    ELU  Data element usage details
		////    ELV  Element value definition
		////    EMP  Employment details
		////    EQA  Attached equipment
		////    EQD  Equipment details
		////    EQN  Number of units
		////    ERP  Error point details
		////*   EVE  Event
		////X   EVT  Event
		////    FCA  Financial charges allocation
		////    FII  Financial institution information
		////    FNS  Footnote set
		////    FNT  Footnote
		////    FOR  Formula
		////    FSQ  Formula sequence
		////    GDS  Nature of cargo
		////    GEI  Processing information
		////    GID  Goods item details
		////    GIN  Goods identity number
		////    GIR  Related identification numbers
		////X   GIS  General indicator
		////    GOR  Governmental requirements
		////    GRU  Segment group usage details
		////    HAN  Handling instructions
		////    HYN  Hierarchy information
		////    ICD  Insurance cover description
		////    IDE  Identity
		////*   IFD  Information detail
		////    IHC  Person characteristic
		////    IMD  Item description
		////    IND  Index details
		////    INP  Parties and instruction
		////    INV  Inventory management related details
		////    IRQ  Information required
		////    LAN  Language
		////    LOC  Place/location identification
		////    MEA  Measurements
		////    MEM  Membership details
		////    MKS  Market/sales channel information
		////    NAT  Nationality
		////    PAC  Package
		////    PAI  Payment instructions
		////    PAS  Attendance
		////    PCC  Premium calculation component details
		////*   PCD  Percentage details
		////+   PER  Period related details
		////    PGI  Product group information
		////    PIA  Additional product id
		////    PNA  Party identification
		////    PRC  Process identification
		////+   PRV  Proviso details
		////    PSD  Physical sample description
		////    PTY  Priority
		////    PYT  Payment terms
		////    QRS  Query and response
		////    QUA  Qualification
		////    QVR  Quantity variances
		////    RCS  Requirements and conditions
		////    REL  Relationship
		////    RJL  Accounting journal identification
		////    RNG  Range details
		////    ROD  Risk object type
		////    RSL  Result
		////*   RTE  Rate details
		////    SAL  Remuneration type identification
		////    SCC  Scheduling conditions
		////    SCD  Structure component definition
		////    SEG  Segment identification
		////    SEL  Seal number
		////    SEQ  Sequence details
		////    SFI  Safety information
		////    SGP  Split goods placement
		////    SGU  Segment usage details
		////    SPR  Organisation classification details
		////    SPS  Sampling parameters for summary statistics
		////    STA  Statistics
		////    STC  Statistical concept
		////    STG  Stages
		////    STS  Status
		////    TCC  Transport charge/rate calculations
		////    TDT  Details of transport
		////    TEM  Test method
		////    TMD  Transport movement details
		////    TMP  Temperature
		////    TOD  Terms of delivery or transport
		////    TPL  Transport placement
		////    TRU  Technical rules
		////    TSR  Transport service requirements
		////    VLI  Value list identification
		//    UNSSegment
		public RuleCall getUNSSegmentParserRuleCall_27() { return cUNSSegmentParserRuleCall_27; }
		
		//UNZSegment
		public RuleCall getUNZSegmentParserRuleCall_28() { return cUNZSegmentParserRuleCall_28; }
		
		//// trailer for header UNB
		//   UNTSegment
		public RuleCall getUNTSegmentParserRuleCall_29() { return cUNTSegmentParserRuleCall_29; }
	}
	public class UNASegmentElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "io.thlaegler.edifact.Edilang.UNASegment");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cSegmentAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final Keyword cSegmentUNAKeyword_0_0 = (Keyword)cSegmentAssignment_0.eContents().get(0);
		private final RuleCall cCOLONTerminalRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		private final RuleCall cPLUSTerminalRuleCall_2 = (RuleCall)cGroup.eContents().get(2);
		private final Keyword cFullStopQuestionMarkKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Assignment cLineEndAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cLineEndQUOTE_AND_NLTerminalRuleCall_4_0 = (RuleCall)cLineEndAssignment_4.eContents().get(0);
		
		//UNASegment:
		//    segment="UNA"
		//    COLON
		//    PLUS
		//    ".?"
		//    lineEnd=QUOTE_AND_NL
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//segment="UNA"
		//COLON
		//PLUS
		//".?"
		//lineEnd=QUOTE_AND_NL
		public Group getGroup() { return cGroup; }
		
		//segment="UNA"
		public Assignment getSegmentAssignment_0() { return cSegmentAssignment_0; }
		
		//"UNA"
		public Keyword getSegmentUNAKeyword_0_0() { return cSegmentUNAKeyword_0_0; }
		
		//COLON
		public RuleCall getCOLONTerminalRuleCall_1() { return cCOLONTerminalRuleCall_1; }
		
		//PLUS
		public RuleCall getPLUSTerminalRuleCall_2() { return cPLUSTerminalRuleCall_2; }
		
		//".?"
		public Keyword getFullStopQuestionMarkKeyword_3() { return cFullStopQuestionMarkKeyword_3; }
		
		//lineEnd=QUOTE_AND_NL
		public Assignment getLineEndAssignment_4() { return cLineEndAssignment_4; }
		
		//QUOTE_AND_NL
		public RuleCall getLineEndQUOTE_AND_NLTerminalRuleCall_4_0() { return cLineEndQUOTE_AND_NLTerminalRuleCall_4_0; }
	}
	public class UNBSegmentElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "io.thlaegler.edifact.Edilang.UNBSegment");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cSegmentAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final Keyword cSegmentUNBKeyword_0_0 = (Keyword)cSegmentAssignment_0.eContents().get(0);
		private final RuleCall cPLUSTerminalRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		private final Group cGroup_2 = (Group)cGroup.eContents().get(2);
		private final Assignment cSyntaxAssignment_2_0 = (Assignment)cGroup_2.eContents().get(0);
		private final RuleCall cSyntaxIDTerminalRuleCall_2_0_0 = (RuleCall)cSyntaxAssignment_2_0.eContents().get(0);
		private final RuleCall cCOLONTerminalRuleCall_2_1 = (RuleCall)cGroup_2.eContents().get(1);
		private final Assignment cNum1Assignment_2_2 = (Assignment)cGroup_2.eContents().get(2);
		private final RuleCall cNum1IDTerminalRuleCall_2_2_0 = (RuleCall)cNum1Assignment_2_2.eContents().get(0);
		private final RuleCall cPLUSTerminalRuleCall_3 = (RuleCall)cGroup.eContents().get(3);
		private final Assignment cInterchangeSenderAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cInterchangeSenderInterchangerFunctionParserRuleCall_4_0 = (RuleCall)cInterchangeSenderAssignment_4.eContents().get(0);
		private final RuleCall cPLUSTerminalRuleCall_5 = (RuleCall)cGroup.eContents().get(5);
		private final Assignment cInterchangeRecipientAssignment_6 = (Assignment)cGroup.eContents().get(6);
		private final RuleCall cInterchangeRecipientInterchangerFunctionParserRuleCall_6_0 = (RuleCall)cInterchangeRecipientAssignment_6.eContents().get(0);
		private final RuleCall cPLUSTerminalRuleCall_7 = (RuleCall)cGroup.eContents().get(7);
		private final Assignment cDateAndTimeAssignment_8 = (Assignment)cGroup.eContents().get(8);
		private final RuleCall cDateAndTimeDateAndTimeFunctionParserRuleCall_8_0 = (RuleCall)cDateAndTimeAssignment_8.eContents().get(0);
		private final RuleCall cPLUSTerminalRuleCall_9 = (RuleCall)cGroup.eContents().get(9);
		private final Assignment cInterchangeControlSenderRefAssignment_10 = (Assignment)cGroup.eContents().get(10);
		private final RuleCall cInterchangeControlSenderRefIDTerminalRuleCall_10_0 = (RuleCall)cInterchangeControlSenderRefAssignment_10.eContents().get(0);
		private final Group cGroup_11 = (Group)cGroup.eContents().get(11);
		private final RuleCall cPLUSTerminalRuleCall_11_0 = (RuleCall)cGroup_11.eContents().get(0);
		private final Assignment cInterchangeControlRecipientRefAssignment_11_1 = (Assignment)cGroup_11.eContents().get(1);
		private final RuleCall cInterchangeControlRecipientRefIDTerminalRuleCall_11_1_0 = (RuleCall)cInterchangeControlRecipientRefAssignment_11_1.eContents().get(0);
		private final Group cGroup_11_2 = (Group)cGroup_11.eContents().get(2);
		private final RuleCall cPLUSTerminalRuleCall_11_2_0 = (RuleCall)cGroup_11_2.eContents().get(0);
		private final Assignment cFseAssignment_11_2_1 = (Assignment)cGroup_11_2.eContents().get(1);
		private final RuleCall cFseIDTerminalRuleCall_11_2_1_0 = (RuleCall)cFseAssignment_11_2_1.eContents().get(0);
		private final Group cGroup_11_2_2 = (Group)cGroup_11_2.eContents().get(2);
		private final RuleCall cPLUSTerminalRuleCall_11_2_2_0 = (RuleCall)cGroup_11_2_2.eContents().get(0);
		private final Assignment cAssiciationCodeAssignment_11_2_2_1 = (Assignment)cGroup_11_2_2.eContents().get(1);
		private final RuleCall cAssiciationCodeIDTerminalRuleCall_11_2_2_1_0 = (RuleCall)cAssiciationCodeAssignment_11_2_2_1.eContents().get(0);
		private final Assignment cLineEndAssignment_12 = (Assignment)cGroup.eContents().get(12);
		private final RuleCall cLineEndQUOTE_AND_NLTerminalRuleCall_12_0 = (RuleCall)cLineEndAssignment_12.eContents().get(0);
		
		////UNB+IATB:1+1APPC+NZ0AV+200120:2136+039I42XXTK0001+++O'
		//UNBSegment:
		//    segment="UNB"
		//    PLUS
		//    (
		//        (syntax=ID)?
		//        COLON
		//        (num1=ID)?
		//    )?
		//    PLUS
		//    ( interchangeSender=InterchangerFunction )?
		//    PLUS
		//    ( interchangeRecipient=InterchangerFunction )?
		//    PLUS
		//    ( dateAndTime+=DateAndTimeFunction )?
		//    PLUS
		//    ( interchangeControlSenderRef=ID )?
		//    (
		//        PLUS
		//        ( interchangeControlRecipientRef=ID )?
		//        (
		//            PLUS
		//            ( fse=ID )?
		//            (
		//                PLUS
		//                ( assiciationCode=ID )?
		//            )?
		//        )?
		//    )?
		//    lineEnd=QUOTE_AND_NL
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//segment="UNB"
		//PLUS
		//(
		//    (syntax=ID)?
		//    COLON
		//    (num1=ID)?
		//)?
		//PLUS
		//( interchangeSender=InterchangerFunction )?
		//PLUS
		//( interchangeRecipient=InterchangerFunction )?
		//PLUS
		//( dateAndTime+=DateAndTimeFunction )?
		//PLUS
		//( interchangeControlSenderRef=ID )?
		//(
		//    PLUS
		//    ( interchangeControlRecipientRef=ID )?
		//    (
		//        PLUS
		//        ( fse=ID )?
		//        (
		//            PLUS
		//            ( assiciationCode=ID )?
		//        )?
		//    )?
		//)?
		//lineEnd=QUOTE_AND_NL
		public Group getGroup() { return cGroup; }
		
		//segment="UNB"
		public Assignment getSegmentAssignment_0() { return cSegmentAssignment_0; }
		
		//"UNB"
		public Keyword getSegmentUNBKeyword_0_0() { return cSegmentUNBKeyword_0_0; }
		
		//PLUS
		public RuleCall getPLUSTerminalRuleCall_1() { return cPLUSTerminalRuleCall_1; }
		
		//(
		//    (syntax=ID)?
		//    COLON
		//    (num1=ID)?
		//)?
		public Group getGroup_2() { return cGroup_2; }
		
		//(syntax=ID)?
		public Assignment getSyntaxAssignment_2_0() { return cSyntaxAssignment_2_0; }
		
		//ID
		public RuleCall getSyntaxIDTerminalRuleCall_2_0_0() { return cSyntaxIDTerminalRuleCall_2_0_0; }
		
		//COLON
		public RuleCall getCOLONTerminalRuleCall_2_1() { return cCOLONTerminalRuleCall_2_1; }
		
		//(num1=ID)?
		public Assignment getNum1Assignment_2_2() { return cNum1Assignment_2_2; }
		
		//ID
		public RuleCall getNum1IDTerminalRuleCall_2_2_0() { return cNum1IDTerminalRuleCall_2_2_0; }
		
		//PLUS
		public RuleCall getPLUSTerminalRuleCall_3() { return cPLUSTerminalRuleCall_3; }
		
		//( interchangeSender=InterchangerFunction )?
		public Assignment getInterchangeSenderAssignment_4() { return cInterchangeSenderAssignment_4; }
		
		//InterchangerFunction
		public RuleCall getInterchangeSenderInterchangerFunctionParserRuleCall_4_0() { return cInterchangeSenderInterchangerFunctionParserRuleCall_4_0; }
		
		//PLUS
		public RuleCall getPLUSTerminalRuleCall_5() { return cPLUSTerminalRuleCall_5; }
		
		//( interchangeRecipient=InterchangerFunction )?
		public Assignment getInterchangeRecipientAssignment_6() { return cInterchangeRecipientAssignment_6; }
		
		//InterchangerFunction
		public RuleCall getInterchangeRecipientInterchangerFunctionParserRuleCall_6_0() { return cInterchangeRecipientInterchangerFunctionParserRuleCall_6_0; }
		
		//PLUS
		public RuleCall getPLUSTerminalRuleCall_7() { return cPLUSTerminalRuleCall_7; }
		
		//( dateAndTime+=DateAndTimeFunction )?
		public Assignment getDateAndTimeAssignment_8() { return cDateAndTimeAssignment_8; }
		
		//DateAndTimeFunction
		public RuleCall getDateAndTimeDateAndTimeFunctionParserRuleCall_8_0() { return cDateAndTimeDateAndTimeFunctionParserRuleCall_8_0; }
		
		//PLUS
		public RuleCall getPLUSTerminalRuleCall_9() { return cPLUSTerminalRuleCall_9; }
		
		//( interchangeControlSenderRef=ID )?
		public Assignment getInterchangeControlSenderRefAssignment_10() { return cInterchangeControlSenderRefAssignment_10; }
		
		//ID
		public RuleCall getInterchangeControlSenderRefIDTerminalRuleCall_10_0() { return cInterchangeControlSenderRefIDTerminalRuleCall_10_0; }
		
		//(
		//    PLUS
		//    ( interchangeControlRecipientRef=ID )?
		//    (
		//        PLUS
		//        ( fse=ID )?
		//        (
		//            PLUS
		//            ( assiciationCode=ID )?
		//        )?
		//    )?
		//)?
		public Group getGroup_11() { return cGroup_11; }
		
		//PLUS
		public RuleCall getPLUSTerminalRuleCall_11_0() { return cPLUSTerminalRuleCall_11_0; }
		
		//( interchangeControlRecipientRef=ID )?
		public Assignment getInterchangeControlRecipientRefAssignment_11_1() { return cInterchangeControlRecipientRefAssignment_11_1; }
		
		//ID
		public RuleCall getInterchangeControlRecipientRefIDTerminalRuleCall_11_1_0() { return cInterchangeControlRecipientRefIDTerminalRuleCall_11_1_0; }
		
		//(
		//    PLUS
		//    ( fse=ID )?
		//    (
		//        PLUS
		//        ( assiciationCode=ID )?
		//    )?
		//)?
		public Group getGroup_11_2() { return cGroup_11_2; }
		
		//PLUS
		public RuleCall getPLUSTerminalRuleCall_11_2_0() { return cPLUSTerminalRuleCall_11_2_0; }
		
		//( fse=ID )?
		public Assignment getFseAssignment_11_2_1() { return cFseAssignment_11_2_1; }
		
		//ID
		public RuleCall getFseIDTerminalRuleCall_11_2_1_0() { return cFseIDTerminalRuleCall_11_2_1_0; }
		
		//(
		//    PLUS
		//    ( assiciationCode=ID )?
		//)?
		public Group getGroup_11_2_2() { return cGroup_11_2_2; }
		
		//PLUS
		public RuleCall getPLUSTerminalRuleCall_11_2_2_0() { return cPLUSTerminalRuleCall_11_2_2_0; }
		
		//( assiciationCode=ID )?
		public Assignment getAssiciationCodeAssignment_11_2_2_1() { return cAssiciationCodeAssignment_11_2_2_1; }
		
		//ID
		public RuleCall getAssiciationCodeIDTerminalRuleCall_11_2_2_1_0() { return cAssiciationCodeIDTerminalRuleCall_11_2_2_1_0; }
		
		//lineEnd=QUOTE_AND_NL
		public Assignment getLineEndAssignment_12() { return cLineEndAssignment_12; }
		
		//QUOTE_AND_NL
		public RuleCall getLineEndQUOTE_AND_NLTerminalRuleCall_12_0() { return cLineEndQUOTE_AND_NLTerminalRuleCall_12_0; }
	}
	public class UNHSegmentElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "io.thlaegler.edifact.Edilang.UNHSegment");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cSegmentAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final Keyword cSegmentUNHKeyword_0_0 = (Keyword)cSegmentAssignment_0.eContents().get(0);
		private final RuleCall cPLUSTerminalRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		private final Assignment cMessageReferenceNumberAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cMessageReferenceNumberIDTerminalRuleCall_2_0 = (RuleCall)cMessageReferenceNumberAssignment_2.eContents().get(0);
		private final RuleCall cPLUSTerminalRuleCall_3 = (RuleCall)cGroup.eContents().get(3);
		private final Assignment cMessageAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cMessageMessageBodyFunctionParserRuleCall_4_0 = (RuleCall)cMessageAssignment_4.eContents().get(0);
		private final Group cGroup_5 = (Group)cGroup.eContents().get(5);
		private final RuleCall cPLUSTerminalRuleCall_5_0 = (RuleCall)cGroup_5.eContents().get(0);
		private final Assignment cCommonAccessReferenceAssignment_5_1 = (Assignment)cGroup_5.eContents().get(1);
		private final RuleCall cCommonAccessReferenceIDTerminalRuleCall_5_1_0 = (RuleCall)cCommonAccessReferenceAssignment_5_1.eContents().get(0);
		private final Assignment cLineEndAssignment_6 = (Assignment)cGroup.eContents().get(6);
		private final RuleCall cLineEndQUOTE_AND_NLTerminalRuleCall_6_0 = (RuleCall)cLineEndAssignment_6.eContents().get(0);
		
		////UNH+1+PAOREQ:96:2:IA+00012432090782'
		//UNHSegment:
		//    segment="UNH"
		//    PLUS
		//    messageReferenceNumber=ID
		//    PLUS
		//    message=MessageBodyFunction
		//    (
		//        PLUS
		//        commonAccessReference=ID
		//    )?
		//    lineEnd=QUOTE_AND_NL
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//segment="UNH"
		//PLUS
		//messageReferenceNumber=ID
		//PLUS
		//message=MessageBodyFunction
		//(
		//    PLUS
		//    commonAccessReference=ID
		//)?
		//lineEnd=QUOTE_AND_NL
		public Group getGroup() { return cGroup; }
		
		//segment="UNH"
		public Assignment getSegmentAssignment_0() { return cSegmentAssignment_0; }
		
		//"UNH"
		public Keyword getSegmentUNHKeyword_0_0() { return cSegmentUNHKeyword_0_0; }
		
		//PLUS
		public RuleCall getPLUSTerminalRuleCall_1() { return cPLUSTerminalRuleCall_1; }
		
		//messageReferenceNumber=ID
		public Assignment getMessageReferenceNumberAssignment_2() { return cMessageReferenceNumberAssignment_2; }
		
		//ID
		public RuleCall getMessageReferenceNumberIDTerminalRuleCall_2_0() { return cMessageReferenceNumberIDTerminalRuleCall_2_0; }
		
		//PLUS
		public RuleCall getPLUSTerminalRuleCall_3() { return cPLUSTerminalRuleCall_3; }
		
		//message=MessageBodyFunction
		public Assignment getMessageAssignment_4() { return cMessageAssignment_4; }
		
		//MessageBodyFunction
		public RuleCall getMessageMessageBodyFunctionParserRuleCall_4_0() { return cMessageMessageBodyFunctionParserRuleCall_4_0; }
		
		//(
		//    PLUS
		//    commonAccessReference=ID
		//)?
		public Group getGroup_5() { return cGroup_5; }
		
		//PLUS
		public RuleCall getPLUSTerminalRuleCall_5_0() { return cPLUSTerminalRuleCall_5_0; }
		
		//commonAccessReference=ID
		public Assignment getCommonAccessReferenceAssignment_5_1() { return cCommonAccessReferenceAssignment_5_1; }
		
		//ID
		public RuleCall getCommonAccessReferenceIDTerminalRuleCall_5_1_0() { return cCommonAccessReferenceIDTerminalRuleCall_5_1_0; }
		
		//lineEnd=QUOTE_AND_NL
		public Assignment getLineEndAssignment_6() { return cLineEndAssignment_6; }
		
		//QUOTE_AND_NL
		public RuleCall getLineEndQUOTE_AND_NLTerminalRuleCall_6_0() { return cLineEndQUOTE_AND_NLTerminalRuleCall_6_0; }
	}
	public class MSGSegmentElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "io.thlaegler.edifact.Edilang.MSGSegment");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cSegmentAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final Keyword cSegmentMSGKeyword_0_0 = (Keyword)cSegmentAssignment_0.eContents().get(0);
		private final RuleCall cPLUSTerminalRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		private final Assignment cMessageFunctionAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cMessageFunctionMSGFunctionParserRuleCall_2_0 = (RuleCall)cMessageFunctionAssignment_2.eContents().get(0);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final RuleCall cPLUSTerminalRuleCall_3_0 = (RuleCall)cGroup_3.eContents().get(0);
		private final Assignment cResponseTypeAssignment_3_1 = (Assignment)cGroup_3.eContents().get(1);
		private final RuleCall cResponseTypeIDTerminalRuleCall_3_1_0 = (RuleCall)cResponseTypeAssignment_3_1.eContents().get(0);
		private final Assignment cLineEndAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cLineEndQUOTE_AND_NLTerminalRuleCall_4_0 = (RuleCall)cLineEndAssignment_4.eContents().get(0);
		
		////MSG+1:46'
		//MSGSegment:
		//    segment="MSG"
		//    PLUS
		//    ( messageFunction=MSGFunction )?
		//    (
		//        PLUS
		//        responseType=ID
		//    )?
		//    lineEnd=QUOTE_AND_NL
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//segment="MSG"
		//PLUS
		//( messageFunction=MSGFunction )?
		//(
		//    PLUS
		//    responseType=ID
		//)?
		//lineEnd=QUOTE_AND_NL
		public Group getGroup() { return cGroup; }
		
		//segment="MSG"
		public Assignment getSegmentAssignment_0() { return cSegmentAssignment_0; }
		
		//"MSG"
		public Keyword getSegmentMSGKeyword_0_0() { return cSegmentMSGKeyword_0_0; }
		
		//PLUS
		public RuleCall getPLUSTerminalRuleCall_1() { return cPLUSTerminalRuleCall_1; }
		
		//( messageFunction=MSGFunction )?
		public Assignment getMessageFunctionAssignment_2() { return cMessageFunctionAssignment_2; }
		
		//MSGFunction
		public RuleCall getMessageFunctionMSGFunctionParserRuleCall_2_0() { return cMessageFunctionMSGFunctionParserRuleCall_2_0; }
		
		//(
		//    PLUS
		//    responseType=ID
		//)?
		public Group getGroup_3() { return cGroup_3; }
		
		//PLUS
		public RuleCall getPLUSTerminalRuleCall_3_0() { return cPLUSTerminalRuleCall_3_0; }
		
		//responseType=ID
		public Assignment getResponseTypeAssignment_3_1() { return cResponseTypeAssignment_3_1; }
		
		//ID
		public RuleCall getResponseTypeIDTerminalRuleCall_3_1_0() { return cResponseTypeIDTerminalRuleCall_3_1_0; }
		
		//lineEnd=QUOTE_AND_NL
		public Assignment getLineEndAssignment_4() { return cLineEndAssignment_4; }
		
		//QUOTE_AND_NL
		public RuleCall getLineEndQUOTE_AND_NLTerminalRuleCall_4_0() { return cLineEndQUOTE_AND_NLTerminalRuleCall_4_0; }
	}
	public class ORGSegmentElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "io.thlaegler.edifact.Edilang.ORGSegment");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cSegmentAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final Keyword cSegmentORGKeyword_0_0 = (Keyword)cSegmentAssignment_0.eContents().get(0);
		private final RuleCall cPLUSTerminalRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		private final Assignment cSystemDetail1Assignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cSystemDetail1SystemDetailFunctionParserRuleCall_2_0 = (RuleCall)cSystemDetail1Assignment_2.eContents().get(0);
		private final RuleCall cPLUSTerminalRuleCall_3 = (RuleCall)cGroup.eContents().get(3);
		private final Assignment cOriginatorIdentificationAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cOriginatorIdentificationOriginatorIdentificationFunctionParserRuleCall_4_0 = (RuleCall)cOriginatorIdentificationAssignment_4.eContents().get(0);
		private final RuleCall cPLUSTerminalRuleCall_5 = (RuleCall)cGroup.eContents().get(5);
		private final Assignment cLocationAssignment_6 = (Assignment)cGroup.eContents().get(6);
		private final RuleCall cLocationLocationFunctionParserRuleCall_6_0 = (RuleCall)cLocationAssignment_6.eContents().get(0);
		private final RuleCall cPLUSTerminalRuleCall_7 = (RuleCall)cGroup.eContents().get(7);
		private final Assignment cSystemDetail2Assignment_8 = (Assignment)cGroup.eContents().get(8);
		private final RuleCall cSystemDetail2SystemDetailFunctionParserRuleCall_8_0 = (RuleCall)cSystemDetail2Assignment_8.eContents().get(0);
		private final RuleCall cPLUSTerminalRuleCall_9 = (RuleCall)cGroup.eContents().get(9);
		private final Assignment cOriginatorTypeCodeAssignment_10 = (Assignment)cGroup.eContents().get(10);
		private final RuleCall cOriginatorTypeCodeIDTerminalRuleCall_10_0 = (RuleCall)cOriginatorTypeCodeAssignment_10.eContents().get(0);
		private final RuleCall cPLUSTerminalRuleCall_11 = (RuleCall)cGroup.eContents().get(11);
		private final Assignment cOriginatorAssignment_12 = (Assignment)cGroup.eContents().get(12);
		private final RuleCall cOriginatorOriginatorFunctionParserRuleCall_12_0 = (RuleCall)cOriginatorAssignment_12.eContents().get(0);
		private final RuleCall cPLUSTerminalRuleCall_13 = (RuleCall)cGroup.eContents().get(13);
		private final Assignment cOriginatorsAuthorityRequestCodeAssignment_14 = (Assignment)cGroup.eContents().get(14);
		private final RuleCall cOriginatorsAuthorityRequestCodeIDTerminalRuleCall_14_0 = (RuleCall)cOriginatorsAuthorityRequestCodeAssignment_14.eContents().get(0);
		private final Group cGroup_15 = (Group)cGroup.eContents().get(15);
		private final RuleCall cPLUSTerminalRuleCall_15_0 = (RuleCall)cGroup_15.eContents().get(0);
		private final Assignment cCommunicationNumberAssignment_15_1 = (Assignment)cGroup_15.eContents().get(1);
		private final RuleCall cCommunicationNumberIDTerminalRuleCall_15_1_0 = (RuleCall)cCommunicationNumberAssignment_15_1.eContents().get(0);
		private final Group cGroup_15_2 = (Group)cGroup_15.eContents().get(2);
		private final RuleCall cPLUSTerminalRuleCall_15_2_0 = (RuleCall)cGroup_15_2.eContents().get(0);
		private final Assignment cPartyIdIdentificationAssignment_15_2_1 = (Assignment)cGroup_15_2.eContents().get(1);
		private final RuleCall cPartyIdIdentificationIDTerminalRuleCall_15_2_1_0 = (RuleCall)cPartyIdIdentificationAssignment_15_2_1.eContents().get(0);
		private final Assignment cLineEndAssignment_16 = (Assignment)cGroup.eContents().get(16);
		private final RuleCall cLineEndQUOTE_AND_NLTerminalRuleCall_16_0 = (RuleCall)cLineEndAssignment_16.eContents().get(0);
		
		////ORG+1A:MUC+27213082:ATHGR28CS+ATH++T+GR:EUR:EN+A9996WSSU+04261178+1A'
		////ORG+NZ:AKL:00++AKL+NZ+A+NZ:NZD+PR'
		//ORGSegment:
		//    segment="ORG"
		//    PLUS
		//    ( systemDetail1=SystemDetailFunction )?
		//    PLUS
		//    ( originatorIdentification=OriginatorIdentificationFunction )?
		//    PLUS
		//    ( location=LocationFunction )?
		//    PLUS
		//    ( systemDetail2=SystemDetailFunction )?
		//    PLUS
		//    ( originatorTypeCode=ID )?
		//    PLUS
		//    ( originator=OriginatorFunction )?
		//    PLUS
		//    ( originatorsAuthorityRequestCode=ID )?
		//    (
		//        PLUS
		//        communicationNumber=ID
		//        (
		//            PLUS
		//            partyIdIdentification=ID
		//        )?
		//    )?
		//    lineEnd=QUOTE_AND_NL
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//segment="ORG"
		//PLUS
		//( systemDetail1=SystemDetailFunction )?
		//PLUS
		//( originatorIdentification=OriginatorIdentificationFunction )?
		//PLUS
		//( location=LocationFunction )?
		//PLUS
		//( systemDetail2=SystemDetailFunction )?
		//PLUS
		//( originatorTypeCode=ID )?
		//PLUS
		//( originator=OriginatorFunction )?
		//PLUS
		//( originatorsAuthorityRequestCode=ID )?
		//(
		//    PLUS
		//    communicationNumber=ID
		//    (
		//        PLUS
		//        partyIdIdentification=ID
		//    )?
		//)?
		//lineEnd=QUOTE_AND_NL
		public Group getGroup() { return cGroup; }
		
		//segment="ORG"
		public Assignment getSegmentAssignment_0() { return cSegmentAssignment_0; }
		
		//"ORG"
		public Keyword getSegmentORGKeyword_0_0() { return cSegmentORGKeyword_0_0; }
		
		//PLUS
		public RuleCall getPLUSTerminalRuleCall_1() { return cPLUSTerminalRuleCall_1; }
		
		//( systemDetail1=SystemDetailFunction )?
		public Assignment getSystemDetail1Assignment_2() { return cSystemDetail1Assignment_2; }
		
		//SystemDetailFunction
		public RuleCall getSystemDetail1SystemDetailFunctionParserRuleCall_2_0() { return cSystemDetail1SystemDetailFunctionParserRuleCall_2_0; }
		
		//PLUS
		public RuleCall getPLUSTerminalRuleCall_3() { return cPLUSTerminalRuleCall_3; }
		
		//( originatorIdentification=OriginatorIdentificationFunction )?
		public Assignment getOriginatorIdentificationAssignment_4() { return cOriginatorIdentificationAssignment_4; }
		
		//OriginatorIdentificationFunction
		public RuleCall getOriginatorIdentificationOriginatorIdentificationFunctionParserRuleCall_4_0() { return cOriginatorIdentificationOriginatorIdentificationFunctionParserRuleCall_4_0; }
		
		//PLUS
		public RuleCall getPLUSTerminalRuleCall_5() { return cPLUSTerminalRuleCall_5; }
		
		//( location=LocationFunction )?
		public Assignment getLocationAssignment_6() { return cLocationAssignment_6; }
		
		//LocationFunction
		public RuleCall getLocationLocationFunctionParserRuleCall_6_0() { return cLocationLocationFunctionParserRuleCall_6_0; }
		
		//PLUS
		public RuleCall getPLUSTerminalRuleCall_7() { return cPLUSTerminalRuleCall_7; }
		
		//( systemDetail2=SystemDetailFunction )?
		public Assignment getSystemDetail2Assignment_8() { return cSystemDetail2Assignment_8; }
		
		//SystemDetailFunction
		public RuleCall getSystemDetail2SystemDetailFunctionParserRuleCall_8_0() { return cSystemDetail2SystemDetailFunctionParserRuleCall_8_0; }
		
		//PLUS
		public RuleCall getPLUSTerminalRuleCall_9() { return cPLUSTerminalRuleCall_9; }
		
		//( originatorTypeCode=ID )?
		public Assignment getOriginatorTypeCodeAssignment_10() { return cOriginatorTypeCodeAssignment_10; }
		
		//ID
		public RuleCall getOriginatorTypeCodeIDTerminalRuleCall_10_0() { return cOriginatorTypeCodeIDTerminalRuleCall_10_0; }
		
		//PLUS
		public RuleCall getPLUSTerminalRuleCall_11() { return cPLUSTerminalRuleCall_11; }
		
		//( originator=OriginatorFunction )?
		public Assignment getOriginatorAssignment_12() { return cOriginatorAssignment_12; }
		
		//OriginatorFunction
		public RuleCall getOriginatorOriginatorFunctionParserRuleCall_12_0() { return cOriginatorOriginatorFunctionParserRuleCall_12_0; }
		
		//PLUS
		public RuleCall getPLUSTerminalRuleCall_13() { return cPLUSTerminalRuleCall_13; }
		
		//( originatorsAuthorityRequestCode=ID )?
		public Assignment getOriginatorsAuthorityRequestCodeAssignment_14() { return cOriginatorsAuthorityRequestCodeAssignment_14; }
		
		//ID
		public RuleCall getOriginatorsAuthorityRequestCodeIDTerminalRuleCall_14_0() { return cOriginatorsAuthorityRequestCodeIDTerminalRuleCall_14_0; }
		
		//(
		//    PLUS
		//    communicationNumber=ID
		//    (
		//        PLUS
		//        partyIdIdentification=ID
		//    )?
		//)?
		public Group getGroup_15() { return cGroup_15; }
		
		//PLUS
		public RuleCall getPLUSTerminalRuleCall_15_0() { return cPLUSTerminalRuleCall_15_0; }
		
		//communicationNumber=ID
		public Assignment getCommunicationNumberAssignment_15_1() { return cCommunicationNumberAssignment_15_1; }
		
		//ID
		public RuleCall getCommunicationNumberIDTerminalRuleCall_15_1_0() { return cCommunicationNumberIDTerminalRuleCall_15_1_0; }
		
		//(
		//    PLUS
		//    partyIdIdentification=ID
		//)?
		public Group getGroup_15_2() { return cGroup_15_2; }
		
		//PLUS
		public RuleCall getPLUSTerminalRuleCall_15_2_0() { return cPLUSTerminalRuleCall_15_2_0; }
		
		//partyIdIdentification=ID
		public Assignment getPartyIdIdentificationAssignment_15_2_1() { return cPartyIdIdentificationAssignment_15_2_1; }
		
		//ID
		public RuleCall getPartyIdIdentificationIDTerminalRuleCall_15_2_1_0() { return cPartyIdIdentificationIDTerminalRuleCall_15_2_1_0; }
		
		//lineEnd=QUOTE_AND_NL
		public Assignment getLineEndAssignment_16() { return cLineEndAssignment_16; }
		
		//QUOTE_AND_NL
		public RuleCall getLineEndQUOTE_AND_NLTerminalRuleCall_16_0() { return cLineEndQUOTE_AND_NLTerminalRuleCall_16_0; }
	}
	public class POCSegmentElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "io.thlaegler.edifact.Edilang.POCSegment");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cSegmentAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final Keyword cSegmentPOCKeyword_0_0 = (Keyword)cSegmentAssignment_0.eContents().get(0);
		private final RuleCall cPLUSTerminalRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		private final Assignment cLocationAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cLocationIDTerminalRuleCall_2_0 = (RuleCall)cLocationAssignment_2.eContents().get(0);
		private final RuleCall cPLUSTerminalRuleCall_3 = (RuleCall)cGroup.eContents().get(3);
		private final Assignment cDepartureDateAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cDepartureDateIDTerminalRuleCall_4_0 = (RuleCall)cDepartureDateAssignment_4.eContents().get(0);
		private final Group cGroup_5 = (Group)cGroup.eContents().get(5);
		private final RuleCall cPLUSTerminalRuleCall_5_0 = (RuleCall)cGroup_5.eContents().get(0);
		private final Assignment cDepartureTimeAssignment_5_1 = (Assignment)cGroup_5.eContents().get(1);
		private final RuleCall cDepartureTimeIDTerminalRuleCall_5_1_0 = (RuleCall)cDepartureTimeAssignment_5_1.eContents().get(0);
		private final Assignment cLineEndAssignment_6 = (Assignment)cGroup.eContents().get(6);
		private final RuleCall cLineEndQUOTE_AND_NLTerminalRuleCall_6_0 = (RuleCall)cLineEndAssignment_6.eContents().get(0);
		
		////POC+BNE+220120'
		//POCSegment:
		//    segment="POC"
		//    PLUS
		//    (location=ID)?
		//    PLUS
		//    (departureDate=ID)?
		//    (
		//        PLUS
		//        departureTime=ID
		//    )?
		//    lineEnd=QUOTE_AND_NL
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//segment="POC"
		//PLUS
		//(location=ID)?
		//PLUS
		//(departureDate=ID)?
		//(
		//    PLUS
		//    departureTime=ID
		//)?
		//lineEnd=QUOTE_AND_NL
		public Group getGroup() { return cGroup; }
		
		//segment="POC"
		public Assignment getSegmentAssignment_0() { return cSegmentAssignment_0; }
		
		//"POC"
		public Keyword getSegmentPOCKeyword_0_0() { return cSegmentPOCKeyword_0_0; }
		
		//PLUS
		public RuleCall getPLUSTerminalRuleCall_1() { return cPLUSTerminalRuleCall_1; }
		
		//(location=ID)?
		public Assignment getLocationAssignment_2() { return cLocationAssignment_2; }
		
		//ID
		public RuleCall getLocationIDTerminalRuleCall_2_0() { return cLocationIDTerminalRuleCall_2_0; }
		
		//PLUS
		public RuleCall getPLUSTerminalRuleCall_3() { return cPLUSTerminalRuleCall_3; }
		
		//(departureDate=ID)?
		public Assignment getDepartureDateAssignment_4() { return cDepartureDateAssignment_4; }
		
		//ID
		public RuleCall getDepartureDateIDTerminalRuleCall_4_0() { return cDepartureDateIDTerminalRuleCall_4_0; }
		
		//(
		//    PLUS
		//    departureTime=ID
		//)?
		public Group getGroup_5() { return cGroup_5; }
		
		//PLUS
		public RuleCall getPLUSTerminalRuleCall_5_0() { return cPLUSTerminalRuleCall_5_0; }
		
		//departureTime=ID
		public Assignment getDepartureTimeAssignment_5_1() { return cDepartureTimeAssignment_5_1; }
		
		//ID
		public RuleCall getDepartureTimeIDTerminalRuleCall_5_1_0() { return cDepartureTimeIDTerminalRuleCall_5_1_0; }
		
		//lineEnd=QUOTE_AND_NL
		public Assignment getLineEndAssignment_6() { return cLineEndAssignment_6; }
		
		//QUOTE_AND_NL
		public RuleCall getLineEndQUOTE_AND_NLTerminalRuleCall_6_0() { return cLineEndQUOTE_AND_NLTerminalRuleCall_6_0; }
	}
	public class ODISegmentElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "io.thlaegler.edifact.Edilang.ODISegment");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cSegmentAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final Keyword cSegmentODIKeyword_0_0 = (Keyword)cSegmentAssignment_0.eContents().get(0);
		private final Group cGroup_1 = (Group)cGroup.eContents().get(1);
		private final RuleCall cPLUSTerminalRuleCall_1_0 = (RuleCall)cGroup_1.eContents().get(0);
		private final Assignment cOriginAssignment_1_1 = (Assignment)cGroup_1.eContents().get(1);
		private final RuleCall cOriginIDTerminalRuleCall_1_1_0 = (RuleCall)cOriginAssignment_1_1.eContents().get(0);
		private final RuleCall cPLUSTerminalRuleCall_1_2 = (RuleCall)cGroup_1.eContents().get(2);
		private final Assignment cDestinationAssignment_1_3 = (Assignment)cGroup_1.eContents().get(3);
		private final RuleCall cDestinationIDTerminalRuleCall_1_3_0 = (RuleCall)cDestinationAssignment_1_3.eContents().get(0);
		private final Assignment cLineEndAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cLineEndQUOTE_AND_NLTerminalRuleCall_2_0 = (RuleCall)cLineEndAssignment_2.eContents().get(0);
		
		////ODI+BNE+ZQN'
		//ODISegment:
		//    segment="ODI"
		//    (
		//        PLUS
		//        (origin=ID)?
		//        PLUS
		//        (destination=ID)?
		//    )?
		//    lineEnd=QUOTE_AND_NL
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//segment="ODI"
		//(
		//    PLUS
		//    (origin=ID)?
		//    PLUS
		//    (destination=ID)?
		//)?
		//lineEnd=QUOTE_AND_NL
		public Group getGroup() { return cGroup; }
		
		//segment="ODI"
		public Assignment getSegmentAssignment_0() { return cSegmentAssignment_0; }
		
		//"ODI"
		public Keyword getSegmentODIKeyword_0_0() { return cSegmentODIKeyword_0_0; }
		
		//(
		//    PLUS
		//    (origin=ID)?
		//    PLUS
		//    (destination=ID)?
		//)?
		public Group getGroup_1() { return cGroup_1; }
		
		//PLUS
		public RuleCall getPLUSTerminalRuleCall_1_0() { return cPLUSTerminalRuleCall_1_0; }
		
		//(origin=ID)?
		public Assignment getOriginAssignment_1_1() { return cOriginAssignment_1_1; }
		
		//ID
		public RuleCall getOriginIDTerminalRuleCall_1_1_0() { return cOriginIDTerminalRuleCall_1_1_0; }
		
		//PLUS
		public RuleCall getPLUSTerminalRuleCall_1_2() { return cPLUSTerminalRuleCall_1_2; }
		
		//(destination=ID)?
		public Assignment getDestinationAssignment_1_3() { return cDestinationAssignment_1_3; }
		
		//ID
		public RuleCall getDestinationIDTerminalRuleCall_1_3_0() { return cDestinationIDTerminalRuleCall_1_3_0; }
		
		//lineEnd=QUOTE_AND_NL
		public Assignment getLineEndAssignment_2() { return cLineEndAssignment_2; }
		
		//QUOTE_AND_NL
		public RuleCall getLineEndQUOTE_AND_NLTerminalRuleCall_2_0() { return cLineEndQUOTE_AND_NLTerminalRuleCall_2_0; }
	}
	public class UCISegmentElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "io.thlaegler.edifact.Edilang.UCISegment");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cSegmentAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final Keyword cSegmentUCIKeyword_0_0 = (Keyword)cSegmentAssignment_0.eContents().get(0);
		private final RuleCall cPLUSTerminalRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		private final Assignment cInterchangeControlReferenceAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cInterchangeControlReferenceIDTerminalRuleCall_2_0 = (RuleCall)cInterchangeControlReferenceAssignment_2.eContents().get(0);
		private final RuleCall cPLUSTerminalRuleCall_3 = (RuleCall)cGroup.eContents().get(3);
		private final Assignment cInterchangeSenderAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cInterchangeSenderIDTerminalRuleCall_4_0 = (RuleCall)cInterchangeSenderAssignment_4.eContents().get(0);
		private final RuleCall cPLUSTerminalRuleCall_5 = (RuleCall)cGroup.eContents().get(5);
		private final Assignment cInterchangeRecipientAssignment_6 = (Assignment)cGroup.eContents().get(6);
		private final RuleCall cInterchangeRecipientIDTerminalRuleCall_6_0 = (RuleCall)cInterchangeRecipientAssignment_6.eContents().get(0);
		private final RuleCall cPLUSTerminalRuleCall_7 = (RuleCall)cGroup.eContents().get(7);
		private final Assignment cActionAssignment_8 = (Assignment)cGroup.eContents().get(8);
		private final RuleCall cActionIDTerminalRuleCall_8_0 = (RuleCall)cActionAssignment_8.eContents().get(0);
		private final RuleCall cPLUSTerminalRuleCall_9 = (RuleCall)cGroup.eContents().get(9);
		private final Assignment cSyntaxErrorCodeAssignment_10 = (Assignment)cGroup.eContents().get(10);
		private final RuleCall cSyntaxErrorCodeIDTerminalRuleCall_10_0 = (RuleCall)cSyntaxErrorCodeAssignment_10.eContents().get(0);
		private final RuleCall cPLUSTerminalRuleCall_11 = (RuleCall)cGroup.eContents().get(11);
		private final Assignment cSegmentTagCodeAssignment_12 = (Assignment)cGroup.eContents().get(12);
		private final RuleCall cSegmentTagCodeIDTerminalRuleCall_12_0 = (RuleCall)cSegmentTagCodeAssignment_12.eContents().get(0);
		private final Assignment cLineEndAssignment_13 = (Assignment)cGroup.eContents().get(13);
		private final RuleCall cLineEndQUOTE_AND_NLTerminalRuleCall_13_0 = (RuleCall)cLineEndAssignment_13.eContents().get(0);
		
		////
		//UCISegment:
		//    segment="UCI"
		//    PLUS
		//    ( interchangeControlReference=ID )?
		//    PLUS
		//    ( interchangeSender=ID )?
		//    PLUS
		//    ( interchangeRecipient=ID )?
		//    PLUS
		//    ( action=ID )?
		//    PLUS
		//    ( syntaxErrorCode=ID )?
		//    PLUS
		//    ( segmentTagCode=ID )?
		//    lineEnd=QUOTE_AND_NL
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//segment="UCI"
		//PLUS
		//( interchangeControlReference=ID )?
		//PLUS
		//( interchangeSender=ID )?
		//PLUS
		//( interchangeRecipient=ID )?
		//PLUS
		//( action=ID )?
		//PLUS
		//( syntaxErrorCode=ID )?
		//PLUS
		//( segmentTagCode=ID )?
		//lineEnd=QUOTE_AND_NL
		public Group getGroup() { return cGroup; }
		
		//segment="UCI"
		public Assignment getSegmentAssignment_0() { return cSegmentAssignment_0; }
		
		//"UCI"
		public Keyword getSegmentUCIKeyword_0_0() { return cSegmentUCIKeyword_0_0; }
		
		//PLUS
		public RuleCall getPLUSTerminalRuleCall_1() { return cPLUSTerminalRuleCall_1; }
		
		//( interchangeControlReference=ID )?
		public Assignment getInterchangeControlReferenceAssignment_2() { return cInterchangeControlReferenceAssignment_2; }
		
		//ID
		public RuleCall getInterchangeControlReferenceIDTerminalRuleCall_2_0() { return cInterchangeControlReferenceIDTerminalRuleCall_2_0; }
		
		//PLUS
		public RuleCall getPLUSTerminalRuleCall_3() { return cPLUSTerminalRuleCall_3; }
		
		//( interchangeSender=ID )?
		public Assignment getInterchangeSenderAssignment_4() { return cInterchangeSenderAssignment_4; }
		
		//ID
		public RuleCall getInterchangeSenderIDTerminalRuleCall_4_0() { return cInterchangeSenderIDTerminalRuleCall_4_0; }
		
		//PLUS
		public RuleCall getPLUSTerminalRuleCall_5() { return cPLUSTerminalRuleCall_5; }
		
		//( interchangeRecipient=ID )?
		public Assignment getInterchangeRecipientAssignment_6() { return cInterchangeRecipientAssignment_6; }
		
		//ID
		public RuleCall getInterchangeRecipientIDTerminalRuleCall_6_0() { return cInterchangeRecipientIDTerminalRuleCall_6_0; }
		
		//PLUS
		public RuleCall getPLUSTerminalRuleCall_7() { return cPLUSTerminalRuleCall_7; }
		
		//( action=ID )?
		public Assignment getActionAssignment_8() { return cActionAssignment_8; }
		
		//ID
		public RuleCall getActionIDTerminalRuleCall_8_0() { return cActionIDTerminalRuleCall_8_0; }
		
		//PLUS
		public RuleCall getPLUSTerminalRuleCall_9() { return cPLUSTerminalRuleCall_9; }
		
		//( syntaxErrorCode=ID )?
		public Assignment getSyntaxErrorCodeAssignment_10() { return cSyntaxErrorCodeAssignment_10; }
		
		//ID
		public RuleCall getSyntaxErrorCodeIDTerminalRuleCall_10_0() { return cSyntaxErrorCodeIDTerminalRuleCall_10_0; }
		
		//PLUS
		public RuleCall getPLUSTerminalRuleCall_11() { return cPLUSTerminalRuleCall_11; }
		
		//( segmentTagCode=ID )?
		public Assignment getSegmentTagCodeAssignment_12() { return cSegmentTagCodeAssignment_12; }
		
		//ID
		public RuleCall getSegmentTagCodeIDTerminalRuleCall_12_0() { return cSegmentTagCodeIDTerminalRuleCall_12_0; }
		
		//lineEnd=QUOTE_AND_NL
		public Assignment getLineEndAssignment_13() { return cLineEndAssignment_13; }
		
		//QUOTE_AND_NL
		public RuleCall getLineEndQUOTE_AND_NLTerminalRuleCall_13_0() { return cLineEndQUOTE_AND_NLTerminalRuleCall_13_0; }
	}
	public class PDISegmentElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "io.thlaegler.edifact.Edilang.PDISegment");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cSegmentAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final Keyword cSegmentPDIKeyword_0_0 = (Keyword)cSegmentAssignment_0.eContents().get(0);
		private final RuleCall cPLUSTerminalRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		private final Assignment cProductDetailsQualifierAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cProductDetailsQualifierIDTerminalRuleCall_2_0 = (RuleCall)cProductDetailsQualifierAssignment_2.eContents().get(0);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final RuleCall cPLUSTerminalRuleCall_3_0 = (RuleCall)cGroup_3.eContents().get(0);
		private final Assignment cProductsAssignment_3_1 = (Assignment)cGroup_3.eContents().get(1);
		private final RuleCall cProductsProductFunctionParserRuleCall_3_1_0 = (RuleCall)cProductsAssignment_3_1.eContents().get(0);
		private final Assignment cLineEndAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cLineEndQUOTE_AND_NLTerminalRuleCall_4_0 = (RuleCall)cLineEndAssignment_4.eContents().get(0);
		
		////
		//PDISegment:
		//    segment="PDI"
		//    PLUS
		//    ( productDetailsQualifier=ID )?
		//    (
		//        PLUS
		//        products+=ProductFunction
		//    )*
		//    lineEnd=QUOTE_AND_NL
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//segment="PDI"
		//PLUS
		//( productDetailsQualifier=ID )?
		//(
		//    PLUS
		//    products+=ProductFunction
		//)*
		//lineEnd=QUOTE_AND_NL
		public Group getGroup() { return cGroup; }
		
		//segment="PDI"
		public Assignment getSegmentAssignment_0() { return cSegmentAssignment_0; }
		
		//"PDI"
		public Keyword getSegmentPDIKeyword_0_0() { return cSegmentPDIKeyword_0_0; }
		
		//PLUS
		public RuleCall getPLUSTerminalRuleCall_1() { return cPLUSTerminalRuleCall_1; }
		
		//( productDetailsQualifier=ID )?
		public Assignment getProductDetailsQualifierAssignment_2() { return cProductDetailsQualifierAssignment_2; }
		
		//ID
		public RuleCall getProductDetailsQualifierIDTerminalRuleCall_2_0() { return cProductDetailsQualifierIDTerminalRuleCall_2_0; }
		
		//(
		//    PLUS
		//    products+=ProductFunction
		//)*
		public Group getGroup_3() { return cGroup_3; }
		
		//PLUS
		public RuleCall getPLUSTerminalRuleCall_3_0() { return cPLUSTerminalRuleCall_3_0; }
		
		//products+=ProductFunction
		public Assignment getProductsAssignment_3_1() { return cProductsAssignment_3_1; }
		
		//ProductFunction
		public RuleCall getProductsProductFunctionParserRuleCall_3_1_0() { return cProductsProductFunctionParserRuleCall_3_1_0; }
		
		//lineEnd=QUOTE_AND_NL
		public Assignment getLineEndAssignment_4() { return cLineEndAssignment_4; }
		
		//QUOTE_AND_NL
		public RuleCall getLineEndQUOTE_AND_NLTerminalRuleCall_4_0() { return cLineEndQUOTE_AND_NLTerminalRuleCall_4_0; }
	}
	public class TVLSegmentElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "io.thlaegler.edifact.Edilang.TVLSegment");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cSegmentAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final Keyword cSegmentTVLKeyword_0_0 = (Keyword)cSegmentAssignment_0.eContents().get(0);
		private final RuleCall cPLUSTerminalRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		private final Alternatives cAlternatives_2 = (Alternatives)cGroup.eContents().get(2);
		private final Assignment cDateAndTimeAssignment_2_0 = (Assignment)cAlternatives_2.eContents().get(0);
		private final RuleCall cDateAndTimeDateOnlyFunctionParserRuleCall_2_0_0 = (RuleCall)cDateAndTimeAssignment_2_0.eContents().get(0);
		private final Group cGroup_2_1 = (Group)cAlternatives_2.eContents().get(1);
		private final Assignment cDateAndTimeAssignment_2_1_0 = (Assignment)cGroup_2_1.eContents().get(0);
		private final RuleCall cDateAndTimeDateAndTimeFunctionParserRuleCall_2_1_0_0 = (RuleCall)cDateAndTimeAssignment_2_1_0.eContents().get(0);
		private final Group cGroup_2_1_1 = (Group)cGroup_2_1.eContents().get(1);
		private final RuleCall cCOLONTerminalRuleCall_2_1_1_0 = (RuleCall)cGroup_2_1_1.eContents().get(0);
		private final Assignment cDateAndTimeAssignment_2_1_1_1 = (Assignment)cGroup_2_1_1.eContents().get(1);
		private final RuleCall cDateAndTimeDateAndTimeFunctionParserRuleCall_2_1_1_1_0 = (RuleCall)cDateAndTimeAssignment_2_1_1_1.eContents().get(0);
		private final RuleCall cPLUSTerminalRuleCall_3 = (RuleCall)cGroup.eContents().get(3);
		private final Assignment cOriginCodeAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cOriginCodeIDTerminalRuleCall_4_0 = (RuleCall)cOriginCodeAssignment_4.eContents().get(0);
		private final RuleCall cPLUSTerminalRuleCall_5 = (RuleCall)cGroup.eContents().get(5);
		private final Assignment cDestinationCodeAssignment_6 = (Assignment)cGroup.eContents().get(6);
		private final RuleCall cDestinationCodeIDTerminalRuleCall_6_0 = (RuleCall)cDestinationCodeAssignment_6.eContents().get(0);
		private final RuleCall cPLUSTerminalRuleCall_7 = (RuleCall)cGroup.eContents().get(7);
		private final Assignment cCarrierIdAssignment_8 = (Assignment)cGroup.eContents().get(8);
		private final RuleCall cCarrierIdIDTerminalRuleCall_8_0 = (RuleCall)cCarrierIdAssignment_8.eContents().get(0);
		private final RuleCall cPLUSTerminalRuleCall_9 = (RuleCall)cGroup.eContents().get(9);
		private final Group cGroup_10 = (Group)cGroup.eContents().get(10);
		private final Assignment cProductIdAssignment_10_0 = (Assignment)cGroup_10.eContents().get(0);
		private final RuleCall cProductIdIDTerminalRuleCall_10_0_0 = (RuleCall)cProductIdAssignment_10_0.eContents().get(0);
		private final Group cGroup_10_1 = (Group)cGroup_10.eContents().get(1);
		private final RuleCall cCOLONTerminalRuleCall_10_1_0 = (RuleCall)cGroup_10_1.eContents().get(0);
		private final Assignment cCharacteristicIdAssignment_10_1_1 = (Assignment)cGroup_10_1.eContents().get(1);
		private final RuleCall cCharacteristicIdIDTerminalRuleCall_10_1_1_0 = (RuleCall)cCharacteristicIdAssignment_10_1_1.eContents().get(0);
		private final Group cGroup_10_1_2 = (Group)cGroup_10_1.eContents().get(2);
		private final RuleCall cCOLONTerminalRuleCall_10_1_2_0 = (RuleCall)cGroup_10_1_2.eContents().get(0);
		private final Assignment cProductIdCharacteristicAssignment_10_1_2_1 = (Assignment)cGroup_10_1_2.eContents().get(1);
		private final RuleCall cProductIdCharacteristicIDTerminalRuleCall_10_1_2_1_0 = (RuleCall)cProductIdCharacteristicAssignment_10_1_2_1.eContents().get(0);
		private final Group cGroup_10_1_2_2 = (Group)cGroup_10_1_2.eContents().get(2);
		private final RuleCall cCOLONTerminalRuleCall_10_1_2_2_0 = (RuleCall)cGroup_10_1_2_2.eContents().get(0);
		private final Assignment cDescriptionIdsAssignment_10_1_2_2_1 = (Assignment)cGroup_10_1_2_2.eContents().get(1);
		private final RuleCall cDescriptionIdsIDTerminalRuleCall_10_1_2_2_1_0 = (RuleCall)cDescriptionIdsAssignment_10_1_2_2_1.eContents().get(0);
		private final Group cGroup_11 = (Group)cGroup.eContents().get(11);
		private final RuleCall cPLUSTerminalRuleCall_11_0 = (RuleCall)cGroup_11.eContents().get(0);
		private final Assignment cProductTypeAssignment_11_1 = (Assignment)cGroup_11.eContents().get(1);
		private final RuleCall cProductTypeIDTerminalRuleCall_11_1_0 = (RuleCall)cProductTypeAssignment_11_1.eContents().get(0);
		private final Group cGroup_11_2 = (Group)cGroup_11.eContents().get(2);
		private final RuleCall cPLUSTerminalRuleCall_11_2_0 = (RuleCall)cGroup_11_2.eContents().get(0);
		private final Assignment cLineItemNumberAssignment_11_2_1 = (Assignment)cGroup_11_2.eContents().get(1);
		private final RuleCall cLineItemNumberIDTerminalRuleCall_11_2_1_0 = (RuleCall)cLineItemNumberAssignment_11_2_1.eContents().get(0);
		private final Group cGroup_11_2_2 = (Group)cGroup_11_2.eContents().get(2);
		private final RuleCall cPLUSTerminalRuleCall_11_2_2_0 = (RuleCall)cGroup_11_2_2.eContents().get(0);
		private final Assignment cProcessingIndicatorCodeAssignment_11_2_2_1 = (Assignment)cGroup_11_2_2.eContents().get(1);
		private final RuleCall cProcessingIndicatorCodeIDTerminalRuleCall_11_2_2_1_0 = (RuleCall)cProcessingIndicatorCodeAssignment_11_2_2_1.eContents().get(0);
		private final Assignment cLineEndAssignment_12 = (Assignment)cGroup.eContents().get(12);
		private final RuleCall cLineEndQUOTE_AND_NLTerminalRuleCall_12_0 = (RuleCall)cLineEndAssignment_12.eContents().get(0);
		
		////TVL+230120+CHC+ZQN+NZ+5641+3+2+P"
		//TVLSegment:
		//    segment="TVL"
		//    PLUS
		//    (
		//        (
		//            dateAndTime+=DateOnlyFunction
		////            (
		////                COLON
		////                dateAndTime+=DateOnly
		////            )*
		//        )
		//        |
		//        (
		//            dateAndTime+=DateAndTimeFunction
		//            (
		//                COLON
		//                dateAndTime+=DateAndTimeFunction
		//            )*
		//        )
		//    )
		//    PLUS
		//    (originCode=ID)?
		//    PLUS
		//    (destinationCode=ID)?
		//    PLUS
		//    (carrierId=ID)?
		//    PLUS
		//    (
		//        productId=ID
		//        (
		//            COLON
		//            characteristicId=ID
		//            (
		//                COLON
		//                productIdCharacteristic=ID
		//                (
		//                    COLON
		//                    descriptionIds+=ID
		//                )*
		//            )?
		//        )?
		//    )?
		//    (
		//        PLUS
		//        productType=ID
		//        (
		//            PLUS
		//            lineItemNumber=ID
		//            (
		//                PLUS
		//                processingIndicatorCode=ID
		//            )?
		//        )?
		//    )?
		//    lineEnd=QUOTE_AND_NL
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//    segment="TVL"
		//    PLUS
		//    (
		//        (
		//            dateAndTime+=DateOnlyFunction
		////            (
		////                COLON
		////                dateAndTime+=DateOnly
		////            )*
		//        )
		//        |
		//        (
		//            dateAndTime+=DateAndTimeFunction
		//            (
		//                COLON
		//                dateAndTime+=DateAndTimeFunction
		//            )*
		//        )
		//    )
		//    PLUS
		//    (originCode=ID)?
		//    PLUS
		//    (destinationCode=ID)?
		//    PLUS
		//    (carrierId=ID)?
		//    PLUS
		//    (
		//        productId=ID
		//        (
		//            COLON
		//            characteristicId=ID
		//            (
		//                COLON
		//                productIdCharacteristic=ID
		//                (
		//                    COLON
		//                    descriptionIds+=ID
		//                )*
		//            )?
		//        )?
		//    )?
		//    (
		//        PLUS
		//        productType=ID
		//        (
		//            PLUS
		//            lineItemNumber=ID
		//            (
		//                PLUS
		//                processingIndicatorCode=ID
		//            )?
		//        )?
		//    )?
		//    lineEnd=QUOTE_AND_NL
		public Group getGroup() { return cGroup; }
		
		//segment="TVL"
		public Assignment getSegmentAssignment_0() { return cSegmentAssignment_0; }
		
		//"TVL"
		public Keyword getSegmentTVLKeyword_0_0() { return cSegmentTVLKeyword_0_0; }
		
		//PLUS
		public RuleCall getPLUSTerminalRuleCall_1() { return cPLUSTerminalRuleCall_1; }
		
		//    (
		//        (
		//            dateAndTime+=DateOnlyFunction
		////            (
		////                COLON
		////                dateAndTime+=DateOnly
		////            )*
		//        )
		//        |
		//        (
		//            dateAndTime+=DateAndTimeFunction
		//            (
		//                COLON
		//                dateAndTime+=DateAndTimeFunction
		//            )*
		//        )
		//    )
		public Alternatives getAlternatives_2() { return cAlternatives_2; }
		
		//        (
		//            dateAndTime+=DateOnlyFunction
		////            (
		////                COLON
		////                dateAndTime+=DateOnly
		////            )*
		//        )
		public Assignment getDateAndTimeAssignment_2_0() { return cDateAndTimeAssignment_2_0; }
		
		//DateOnlyFunction
		public RuleCall getDateAndTimeDateOnlyFunctionParserRuleCall_2_0_0() { return cDateAndTimeDateOnlyFunctionParserRuleCall_2_0_0; }
		
		//(
		//    dateAndTime+=DateAndTimeFunction
		//    (
		//        COLON
		//        dateAndTime+=DateAndTimeFunction
		//    )*
		//)
		public Group getGroup_2_1() { return cGroup_2_1; }
		
		//dateAndTime+=DateAndTimeFunction
		public Assignment getDateAndTimeAssignment_2_1_0() { return cDateAndTimeAssignment_2_1_0; }
		
		//DateAndTimeFunction
		public RuleCall getDateAndTimeDateAndTimeFunctionParserRuleCall_2_1_0_0() { return cDateAndTimeDateAndTimeFunctionParserRuleCall_2_1_0_0; }
		
		//(
		//    COLON
		//    dateAndTime+=DateAndTimeFunction
		//)*
		public Group getGroup_2_1_1() { return cGroup_2_1_1; }
		
		//COLON
		public RuleCall getCOLONTerminalRuleCall_2_1_1_0() { return cCOLONTerminalRuleCall_2_1_1_0; }
		
		//dateAndTime+=DateAndTimeFunction
		public Assignment getDateAndTimeAssignment_2_1_1_1() { return cDateAndTimeAssignment_2_1_1_1; }
		
		//DateAndTimeFunction
		public RuleCall getDateAndTimeDateAndTimeFunctionParserRuleCall_2_1_1_1_0() { return cDateAndTimeDateAndTimeFunctionParserRuleCall_2_1_1_1_0; }
		
		//PLUS
		public RuleCall getPLUSTerminalRuleCall_3() { return cPLUSTerminalRuleCall_3; }
		
		//(originCode=ID)?
		public Assignment getOriginCodeAssignment_4() { return cOriginCodeAssignment_4; }
		
		//ID
		public RuleCall getOriginCodeIDTerminalRuleCall_4_0() { return cOriginCodeIDTerminalRuleCall_4_0; }
		
		//PLUS
		public RuleCall getPLUSTerminalRuleCall_5() { return cPLUSTerminalRuleCall_5; }
		
		//(destinationCode=ID)?
		public Assignment getDestinationCodeAssignment_6() { return cDestinationCodeAssignment_6; }
		
		//ID
		public RuleCall getDestinationCodeIDTerminalRuleCall_6_0() { return cDestinationCodeIDTerminalRuleCall_6_0; }
		
		//PLUS
		public RuleCall getPLUSTerminalRuleCall_7() { return cPLUSTerminalRuleCall_7; }
		
		//(carrierId=ID)?
		public Assignment getCarrierIdAssignment_8() { return cCarrierIdAssignment_8; }
		
		//ID
		public RuleCall getCarrierIdIDTerminalRuleCall_8_0() { return cCarrierIdIDTerminalRuleCall_8_0; }
		
		//PLUS
		public RuleCall getPLUSTerminalRuleCall_9() { return cPLUSTerminalRuleCall_9; }
		
		//(
		//    productId=ID
		//    (
		//        COLON
		//        characteristicId=ID
		//        (
		//            COLON
		//            productIdCharacteristic=ID
		//            (
		//                COLON
		//                descriptionIds+=ID
		//            )*
		//        )?
		//    )?
		//)?
		public Group getGroup_10() { return cGroup_10; }
		
		//productId=ID
		public Assignment getProductIdAssignment_10_0() { return cProductIdAssignment_10_0; }
		
		//ID
		public RuleCall getProductIdIDTerminalRuleCall_10_0_0() { return cProductIdIDTerminalRuleCall_10_0_0; }
		
		//(
		//    COLON
		//    characteristicId=ID
		//    (
		//        COLON
		//        productIdCharacteristic=ID
		//        (
		//            COLON
		//            descriptionIds+=ID
		//        )*
		//    )?
		//)?
		public Group getGroup_10_1() { return cGroup_10_1; }
		
		//COLON
		public RuleCall getCOLONTerminalRuleCall_10_1_0() { return cCOLONTerminalRuleCall_10_1_0; }
		
		//characteristicId=ID
		public Assignment getCharacteristicIdAssignment_10_1_1() { return cCharacteristicIdAssignment_10_1_1; }
		
		//ID
		public RuleCall getCharacteristicIdIDTerminalRuleCall_10_1_1_0() { return cCharacteristicIdIDTerminalRuleCall_10_1_1_0; }
		
		//(
		//    COLON
		//    productIdCharacteristic=ID
		//    (
		//        COLON
		//        descriptionIds+=ID
		//    )*
		//)?
		public Group getGroup_10_1_2() { return cGroup_10_1_2; }
		
		//COLON
		public RuleCall getCOLONTerminalRuleCall_10_1_2_0() { return cCOLONTerminalRuleCall_10_1_2_0; }
		
		//productIdCharacteristic=ID
		public Assignment getProductIdCharacteristicAssignment_10_1_2_1() { return cProductIdCharacteristicAssignment_10_1_2_1; }
		
		//ID
		public RuleCall getProductIdCharacteristicIDTerminalRuleCall_10_1_2_1_0() { return cProductIdCharacteristicIDTerminalRuleCall_10_1_2_1_0; }
		
		//(
		//    COLON
		//    descriptionIds+=ID
		//)*
		public Group getGroup_10_1_2_2() { return cGroup_10_1_2_2; }
		
		//COLON
		public RuleCall getCOLONTerminalRuleCall_10_1_2_2_0() { return cCOLONTerminalRuleCall_10_1_2_2_0; }
		
		//descriptionIds+=ID
		public Assignment getDescriptionIdsAssignment_10_1_2_2_1() { return cDescriptionIdsAssignment_10_1_2_2_1; }
		
		//ID
		public RuleCall getDescriptionIdsIDTerminalRuleCall_10_1_2_2_1_0() { return cDescriptionIdsIDTerminalRuleCall_10_1_2_2_1_0; }
		
		//(
		//    PLUS
		//    productType=ID
		//    (
		//        PLUS
		//        lineItemNumber=ID
		//        (
		//            PLUS
		//            processingIndicatorCode=ID
		//        )?
		//    )?
		//)?
		public Group getGroup_11() { return cGroup_11; }
		
		//PLUS
		public RuleCall getPLUSTerminalRuleCall_11_0() { return cPLUSTerminalRuleCall_11_0; }
		
		//productType=ID
		public Assignment getProductTypeAssignment_11_1() { return cProductTypeAssignment_11_1; }
		
		//ID
		public RuleCall getProductTypeIDTerminalRuleCall_11_1_0() { return cProductTypeIDTerminalRuleCall_11_1_0; }
		
		//(
		//    PLUS
		//    lineItemNumber=ID
		//    (
		//        PLUS
		//        processingIndicatorCode=ID
		//    )?
		//)?
		public Group getGroup_11_2() { return cGroup_11_2; }
		
		//PLUS
		public RuleCall getPLUSTerminalRuleCall_11_2_0() { return cPLUSTerminalRuleCall_11_2_0; }
		
		//lineItemNumber=ID
		public Assignment getLineItemNumberAssignment_11_2_1() { return cLineItemNumberAssignment_11_2_1; }
		
		//ID
		public RuleCall getLineItemNumberIDTerminalRuleCall_11_2_1_0() { return cLineItemNumberIDTerminalRuleCall_11_2_1_0; }
		
		//(
		//    PLUS
		//    processingIndicatorCode=ID
		//)?
		public Group getGroup_11_2_2() { return cGroup_11_2_2; }
		
		//PLUS
		public RuleCall getPLUSTerminalRuleCall_11_2_2_0() { return cPLUSTerminalRuleCall_11_2_2_0; }
		
		//processingIndicatorCode=ID
		public Assignment getProcessingIndicatorCodeAssignment_11_2_2_1() { return cProcessingIndicatorCodeAssignment_11_2_2_1; }
		
		//ID
		public RuleCall getProcessingIndicatorCodeIDTerminalRuleCall_11_2_2_1_0() { return cProcessingIndicatorCodeIDTerminalRuleCall_11_2_2_1_0; }
		
		//lineEnd=QUOTE_AND_NL
		public Assignment getLineEndAssignment_12() { return cLineEndAssignment_12; }
		
		//QUOTE_AND_NL
		public RuleCall getLineEndQUOTE_AND_NLTerminalRuleCall_12_0() { return cLineEndQUOTE_AND_NLTerminalRuleCall_12_0; }
	}
	public class RPISegmentElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "io.thlaegler.edifact.Edilang.RPISegment");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cSegmentAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final Keyword cSegmentRPIKeyword_0_0 = (Keyword)cSegmentAssignment_0.eContents().get(0);
		private final RuleCall cPLUSTerminalRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		private final Assignment cNumberOfPaxAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cNumberOfPaxIDTerminalRuleCall_2_0 = (RuleCall)cNumberOfPaxAssignment_2.eContents().get(0);
		private final RuleCall cPLUSTerminalRuleCall_3 = (RuleCall)cGroup.eContents().get(3);
		private final Assignment cStatusAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cStatusIDTerminalRuleCall_4_0 = (RuleCall)cStatusAssignment_4.eContents().get(0);
		private final Assignment cLineEndAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final RuleCall cLineEndQUOTE_AND_NLTerminalRuleCall_5_0 = (RuleCall)cLineEndAssignment_5.eContents().get(0);
		
		////RPI+1+SS'
		//RPISegment:
		//    segment="RPI"
		//    PLUS
		//    (numberOfPax=ID)?
		//    PLUS
		//    (status=ID)?
		//    lineEnd=QUOTE_AND_NL
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//segment="RPI"
		//PLUS
		//(numberOfPax=ID)?
		//PLUS
		//(status=ID)?
		//lineEnd=QUOTE_AND_NL
		public Group getGroup() { return cGroup; }
		
		//segment="RPI"
		public Assignment getSegmentAssignment_0() { return cSegmentAssignment_0; }
		
		//"RPI"
		public Keyword getSegmentRPIKeyword_0_0() { return cSegmentRPIKeyword_0_0; }
		
		//PLUS
		public RuleCall getPLUSTerminalRuleCall_1() { return cPLUSTerminalRuleCall_1; }
		
		//(numberOfPax=ID)?
		public Assignment getNumberOfPaxAssignment_2() { return cNumberOfPaxAssignment_2; }
		
		//ID
		public RuleCall getNumberOfPaxIDTerminalRuleCall_2_0() { return cNumberOfPaxIDTerminalRuleCall_2_0; }
		
		//PLUS
		public RuleCall getPLUSTerminalRuleCall_3() { return cPLUSTerminalRuleCall_3; }
		
		//(status=ID)?
		public Assignment getStatusAssignment_4() { return cStatusAssignment_4; }
		
		//ID
		public RuleCall getStatusIDTerminalRuleCall_4_0() { return cStatusIDTerminalRuleCall_4_0; }
		
		//lineEnd=QUOTE_AND_NL
		public Assignment getLineEndAssignment_5() { return cLineEndAssignment_5; }
		
		//QUOTE_AND_NL
		public RuleCall getLineEndQUOTE_AND_NLTerminalRuleCall_5_0() { return cLineEndQUOTE_AND_NLTerminalRuleCall_5_0; }
	}
	public class MOASegmentElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "io.thlaegler.edifact.Edilang.MOASegment");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cSegmentAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final Keyword cSegmentMOAKeyword_0_0 = (Keyword)cSegmentAssignment_0.eContents().get(0);
		private final RuleCall cPLUSTerminalRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		private final Assignment cCode1Assignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cCode1IDTerminalRuleCall_2_0 = (RuleCall)cCode1Assignment_2.eContents().get(0);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final RuleCall cCOLONTerminalRuleCall_3_0 = (RuleCall)cGroup_3.eContents().get(0);
		private final Assignment cCode2Assignment_3_1 = (Assignment)cGroup_3.eContents().get(1);
		private final RuleCall cCode2IDTerminalRuleCall_3_1_0 = (RuleCall)cCode2Assignment_3_1.eContents().get(0);
		private final Assignment cLineEndAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cLineEndQUOTE_AND_NLTerminalRuleCall_4_0 = (RuleCall)cLineEndAssignment_4.eContents().get(0);
		
		////MOA+203:1960.29'
		//MOASegment:
		//    segment="MOA"
		//    PLUS
		//    code1=ID
		//    (
		//        COLON
		//        code2=ID
		//    )?
		//    lineEnd=QUOTE_AND_NL
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//segment="MOA"
		//PLUS
		//code1=ID
		//(
		//    COLON
		//    code2=ID
		//)?
		//lineEnd=QUOTE_AND_NL
		public Group getGroup() { return cGroup; }
		
		//segment="MOA"
		public Assignment getSegmentAssignment_0() { return cSegmentAssignment_0; }
		
		//"MOA"
		public Keyword getSegmentMOAKeyword_0_0() { return cSegmentMOAKeyword_0_0; }
		
		//PLUS
		public RuleCall getPLUSTerminalRuleCall_1() { return cPLUSTerminalRuleCall_1; }
		
		//code1=ID
		public Assignment getCode1Assignment_2() { return cCode1Assignment_2; }
		
		//ID
		public RuleCall getCode1IDTerminalRuleCall_2_0() { return cCode1IDTerminalRuleCall_2_0; }
		
		//(
		//    COLON
		//    code2=ID
		//)?
		public Group getGroup_3() { return cGroup_3; }
		
		//COLON
		public RuleCall getCOLONTerminalRuleCall_3_0() { return cCOLONTerminalRuleCall_3_0; }
		
		//code2=ID
		public Assignment getCode2Assignment_3_1() { return cCode2Assignment_3_1; }
		
		//ID
		public RuleCall getCode2IDTerminalRuleCall_3_1_0() { return cCode2IDTerminalRuleCall_3_1_0; }
		
		//lineEnd=QUOTE_AND_NL
		public Assignment getLineEndAssignment_4() { return cLineEndAssignment_4; }
		
		//QUOTE_AND_NL
		public RuleCall getLineEndQUOTE_AND_NLTerminalRuleCall_4_0() { return cLineEndQUOTE_AND_NLTerminalRuleCall_4_0; }
	}
	public class LINSegmentElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "io.thlaegler.edifact.Edilang.LINSegment");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cSegmentAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final Keyword cSegmentLINKeyword_0_0 = (Keyword)cSegmentAssignment_0.eContents().get(0);
		private final RuleCall cPLUSTerminalRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		private final Assignment cCode1Assignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cCode1IDTerminalRuleCall_2_0 = (RuleCall)cCode1Assignment_2.eContents().get(0);
		private final RuleCall cPLUSTerminalRuleCall_3 = (RuleCall)cGroup.eContents().get(3);
		private final Assignment cCode2Assignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cCode2IDTerminalRuleCall_4_0 = (RuleCall)cCode2Assignment_4.eContents().get(0);
		private final RuleCall cPLUSTerminalRuleCall_5 = (RuleCall)cGroup.eContents().get(5);
		private final Group cGroup_6 = (Group)cGroup.eContents().get(6);
		private final Assignment cCode3Assignment_6_0 = (Assignment)cGroup_6.eContents().get(0);
		private final RuleCall cCode3IDTerminalRuleCall_6_0_0 = (RuleCall)cCode3Assignment_6_0.eContents().get(0);
		private final RuleCall cCOLONTerminalRuleCall_6_1 = (RuleCall)cGroup_6.eContents().get(1);
		private final Assignment cCode4Assignment_6_2 = (Assignment)cGroup_6.eContents().get(2);
		private final RuleCall cCode4IDTerminalRuleCall_6_2_0 = (RuleCall)cCode4Assignment_6_2.eContents().get(0);
		private final Assignment cLineEndAssignment_7 = (Assignment)cGroup.eContents().get(7);
		private final RuleCall cLineEndQUOTE_AND_NLTerminalRuleCall_7_0 = (RuleCall)cLineEndAssignment_7.eContents().get(0);
		
		////LIN+++090346642:IN'
		//LINSegment:
		//    segment="LIN"
		//    PLUS
		//    ( code1=ID )?
		//    PLUS
		//    ( code2=ID )?
		//    PLUS
		//    (
		//        code3=ID
		//        COLON
		//        code4=ID
		//    )?
		//    lineEnd=QUOTE_AND_NL
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//segment="LIN"
		//PLUS
		//( code1=ID )?
		//PLUS
		//( code2=ID )?
		//PLUS
		//(
		//    code3=ID
		//    COLON
		//    code4=ID
		//)?
		//lineEnd=QUOTE_AND_NL
		public Group getGroup() { return cGroup; }
		
		//segment="LIN"
		public Assignment getSegmentAssignment_0() { return cSegmentAssignment_0; }
		
		//"LIN"
		public Keyword getSegmentLINKeyword_0_0() { return cSegmentLINKeyword_0_0; }
		
		//PLUS
		public RuleCall getPLUSTerminalRuleCall_1() { return cPLUSTerminalRuleCall_1; }
		
		//( code1=ID )?
		public Assignment getCode1Assignment_2() { return cCode1Assignment_2; }
		
		//ID
		public RuleCall getCode1IDTerminalRuleCall_2_0() { return cCode1IDTerminalRuleCall_2_0; }
		
		//PLUS
		public RuleCall getPLUSTerminalRuleCall_3() { return cPLUSTerminalRuleCall_3; }
		
		//( code2=ID )?
		public Assignment getCode2Assignment_4() { return cCode2Assignment_4; }
		
		//ID
		public RuleCall getCode2IDTerminalRuleCall_4_0() { return cCode2IDTerminalRuleCall_4_0; }
		
		//PLUS
		public RuleCall getPLUSTerminalRuleCall_5() { return cPLUSTerminalRuleCall_5; }
		
		//(
		//    code3=ID
		//    COLON
		//    code4=ID
		//)?
		public Group getGroup_6() { return cGroup_6; }
		
		//code3=ID
		public Assignment getCode3Assignment_6_0() { return cCode3Assignment_6_0; }
		
		//ID
		public RuleCall getCode3IDTerminalRuleCall_6_0_0() { return cCode3IDTerminalRuleCall_6_0_0; }
		
		//COLON
		public RuleCall getCOLONTerminalRuleCall_6_1() { return cCOLONTerminalRuleCall_6_1; }
		
		//code4=ID
		public Assignment getCode4Assignment_6_2() { return cCode4Assignment_6_2; }
		
		//ID
		public RuleCall getCode4IDTerminalRuleCall_6_2_0() { return cCode4IDTerminalRuleCall_6_2_0; }
		
		//lineEnd=QUOTE_AND_NL
		public Assignment getLineEndAssignment_7() { return cLineEndAssignment_7; }
		
		//QUOTE_AND_NL
		public RuleCall getLineEndQUOTE_AND_NLTerminalRuleCall_7_0() { return cLineEndQUOTE_AND_NLTerminalRuleCall_7_0; }
	}
	public class PRISegmentElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "io.thlaegler.edifact.Edilang.PRISegment");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cSegmentAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final Keyword cSegmentPRIKeyword_0_0 = (Keyword)cSegmentAssignment_0.eContents().get(0);
		private final RuleCall cPLUSTerminalRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		private final Assignment cSubAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cSubPRIFunctionParserRuleCall_2_0 = (RuleCall)cSubAssignment_2.eContents().get(0);
		private final Assignment cLineEndAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cLineEndQUOTE_AND_NLTerminalRuleCall_3_0 = (RuleCall)cLineEndAssignment_3.eContents().get(0);
		
		////PRI+AAA:3630.1724::NTP:100:C62'
		//PRISegment:
		//    segment="PRI"
		//    PLUS
		//    sub=PRIFunction
		//    lineEnd=QUOTE_AND_NL
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//segment="PRI"
		//PLUS
		//sub=PRIFunction
		//lineEnd=QUOTE_AND_NL
		public Group getGroup() { return cGroup; }
		
		//segment="PRI"
		public Assignment getSegmentAssignment_0() { return cSegmentAssignment_0; }
		
		//"PRI"
		public Keyword getSegmentPRIKeyword_0_0() { return cSegmentPRIKeyword_0_0; }
		
		//PLUS
		public RuleCall getPLUSTerminalRuleCall_1() { return cPLUSTerminalRuleCall_1; }
		
		//sub=PRIFunction
		public Assignment getSubAssignment_2() { return cSubAssignment_2; }
		
		//PRIFunction
		public RuleCall getSubPRIFunctionParserRuleCall_2_0() { return cSubPRIFunctionParserRuleCall_2_0; }
		
		//lineEnd=QUOTE_AND_NL
		public Assignment getLineEndAssignment_3() { return cLineEndAssignment_3; }
		
		//QUOTE_AND_NL
		public RuleCall getLineEndQUOTE_AND_NLTerminalRuleCall_3_0() { return cLineEndQUOTE_AND_NLTerminalRuleCall_3_0; }
	}
	public class QTYSegmentElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "io.thlaegler.edifact.Edilang.QTYSegment");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cSegmentAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final Keyword cSegmentQTYKeyword_0_0 = (Keyword)cSegmentAssignment_0.eContents().get(0);
		private final RuleCall cPLUSTerminalRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		private final Assignment cCode1Assignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cCode1IDTerminalRuleCall_2_0 = (RuleCall)cCode1Assignment_2.eContents().get(0);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final RuleCall cCOLONTerminalRuleCall_3_0 = (RuleCall)cGroup_3.eContents().get(0);
		private final Assignment cCode2Assignment_3_1 = (Assignment)cGroup_3.eContents().get(1);
		private final RuleCall cCode2IDTerminalRuleCall_3_1_0 = (RuleCall)cCode2Assignment_3_1.eContents().get(0);
		private final Group cGroup_3_2 = (Group)cGroup_3.eContents().get(2);
		private final RuleCall cCOLONTerminalRuleCall_3_2_0 = (RuleCall)cGroup_3_2.eContents().get(0);
		private final Assignment cCode3Assignment_3_2_1 = (Assignment)cGroup_3_2.eContents().get(1);
		private final RuleCall cCode3IDTerminalRuleCall_3_2_1_0 = (RuleCall)cCode3Assignment_3_2_1.eContents().get(0);
		private final Assignment cLineEndAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cLineEndQUOTE_AND_NLTerminalRuleCall_4_0 = (RuleCall)cLineEndAssignment_4.eContents().get(0);
		
		////QTY+12:54:PCE'
		//QTYSegment:
		//    segment="QTY"
		//    PLUS
		//    code1=ID
		//    (
		//        COLON
		//        code2=ID
		//        (
		//            COLON
		//            code3=ID
		//        )?
		//    )?
		//    lineEnd=QUOTE_AND_NL
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//segment="QTY"
		//PLUS
		//code1=ID
		//(
		//    COLON
		//    code2=ID
		//    (
		//        COLON
		//        code3=ID
		//    )?
		//)?
		//lineEnd=QUOTE_AND_NL
		public Group getGroup() { return cGroup; }
		
		//segment="QTY"
		public Assignment getSegmentAssignment_0() { return cSegmentAssignment_0; }
		
		//"QTY"
		public Keyword getSegmentQTYKeyword_0_0() { return cSegmentQTYKeyword_0_0; }
		
		//PLUS
		public RuleCall getPLUSTerminalRuleCall_1() { return cPLUSTerminalRuleCall_1; }
		
		//code1=ID
		public Assignment getCode1Assignment_2() { return cCode1Assignment_2; }
		
		//ID
		public RuleCall getCode1IDTerminalRuleCall_2_0() { return cCode1IDTerminalRuleCall_2_0; }
		
		//(
		//    COLON
		//    code2=ID
		//    (
		//        COLON
		//        code3=ID
		//    )?
		//)?
		public Group getGroup_3() { return cGroup_3; }
		
		//COLON
		public RuleCall getCOLONTerminalRuleCall_3_0() { return cCOLONTerminalRuleCall_3_0; }
		
		//code2=ID
		public Assignment getCode2Assignment_3_1() { return cCode2Assignment_3_1; }
		
		//ID
		public RuleCall getCode2IDTerminalRuleCall_3_1_0() { return cCode2IDTerminalRuleCall_3_1_0; }
		
		//(
		//    COLON
		//    code3=ID
		//)?
		public Group getGroup_3_2() { return cGroup_3_2; }
		
		//COLON
		public RuleCall getCOLONTerminalRuleCall_3_2_0() { return cCOLONTerminalRuleCall_3_2_0; }
		
		//code3=ID
		public Assignment getCode3Assignment_3_2_1() { return cCode3Assignment_3_2_1; }
		
		//ID
		public RuleCall getCode3IDTerminalRuleCall_3_2_1_0() { return cCode3IDTerminalRuleCall_3_2_1_0; }
		
		//lineEnd=QUOTE_AND_NL
		public Assignment getLineEndAssignment_4() { return cLineEndAssignment_4; }
		
		//QUOTE_AND_NL
		public RuleCall getLineEndQUOTE_AND_NLTerminalRuleCall_4_0() { return cLineEndQUOTE_AND_NLTerminalRuleCall_4_0; }
	}
	public class CUXSegmentElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "io.thlaegler.edifact.Edilang.CUXSegment");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cSegmentAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final Keyword cSegmentCUXKeyword_0_0 = (Keyword)cSegmentAssignment_0.eContents().get(0);
		private final RuleCall cPLUSTerminalRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		private final Assignment cNumAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cNumIDTerminalRuleCall_2_0 = (RuleCall)cNumAssignment_2.eContents().get(0);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final RuleCall cCOLONTerminalRuleCall_3_0 = (RuleCall)cGroup_3.eContents().get(0);
		private final Assignment cCurrencyAssignment_3_1 = (Assignment)cGroup_3.eContents().get(1);
		private final RuleCall cCurrencyIDTerminalRuleCall_3_1_0 = (RuleCall)cCurrencyAssignment_3_1.eContents().get(0);
		private final Assignment cLineEndAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cLineEndQUOTE_AND_NLTerminalRuleCall_4_0 = (RuleCall)cLineEndAssignment_4.eContents().get(0);
		
		////CUX+2:EUR'
		//CUXSegment:
		//    segment="CUX"
		//    PLUS
		//    num=ID
		//    (
		//        COLON
		//        currency=ID
		//    )?
		//    lineEnd=QUOTE_AND_NL
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//segment="CUX"
		//PLUS
		//num=ID
		//(
		//    COLON
		//    currency=ID
		//)?
		//lineEnd=QUOTE_AND_NL
		public Group getGroup() { return cGroup; }
		
		//segment="CUX"
		public Assignment getSegmentAssignment_0() { return cSegmentAssignment_0; }
		
		//"CUX"
		public Keyword getSegmentCUXKeyword_0_0() { return cSegmentCUXKeyword_0_0; }
		
		//PLUS
		public RuleCall getPLUSTerminalRuleCall_1() { return cPLUSTerminalRuleCall_1; }
		
		//num=ID
		public Assignment getNumAssignment_2() { return cNumAssignment_2; }
		
		//ID
		public RuleCall getNumIDTerminalRuleCall_2_0() { return cNumIDTerminalRuleCall_2_0; }
		
		//(
		//    COLON
		//    currency=ID
		//)?
		public Group getGroup_3() { return cGroup_3; }
		
		//COLON
		public RuleCall getCOLONTerminalRuleCall_3_0() { return cCOLONTerminalRuleCall_3_0; }
		
		//currency=ID
		public Assignment getCurrencyAssignment_3_1() { return cCurrencyAssignment_3_1; }
		
		//ID
		public RuleCall getCurrencyIDTerminalRuleCall_3_1_0() { return cCurrencyIDTerminalRuleCall_3_1_0; }
		
		//lineEnd=QUOTE_AND_NL
		public Assignment getLineEndAssignment_4() { return cLineEndAssignment_4; }
		
		//QUOTE_AND_NL
		public RuleCall getLineEndQUOTE_AND_NLTerminalRuleCall_4_0() { return cLineEndQUOTE_AND_NLTerminalRuleCall_4_0; }
	}
	public class TAXSegmentElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "io.thlaegler.edifact.Edilang.TAXSegment");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cSegmentAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final Keyword cSegmentTAXKeyword_0_0 = (Keyword)cSegmentAssignment_0.eContents().get(0);
		private final RuleCall cPLUSTerminalRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		private final Assignment cNumAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cNumIDTerminalRuleCall_2_0 = (RuleCall)cNumAssignment_2.eContents().get(0);
		private final RuleCall cPLUSTerminalRuleCall_3 = (RuleCall)cGroup.eContents().get(3);
		private final Assignment cTypeAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cTypeIDTerminalRuleCall_4_0 = (RuleCall)cTypeAssignment_4.eContents().get(0);
		private final Group cGroup_5 = (Group)cGroup.eContents().get(5);
		private final RuleCall cPLUSTerminalRuleCall_5_0 = (RuleCall)cGroup_5.eContents().get(0);
		private final Assignment cTodo1Assignment_5_1 = (Assignment)cGroup_5.eContents().get(1);
		private final RuleCall cTodo1IDTerminalRuleCall_5_1_0 = (RuleCall)cTodo1Assignment_5_1.eContents().get(0);
		private final RuleCall cPLUSTerminalRuleCall_5_2 = (RuleCall)cGroup_5.eContents().get(2);
		private final Assignment cTodo2Assignment_5_3 = (Assignment)cGroup_5.eContents().get(3);
		private final RuleCall cTodo2IDTerminalRuleCall_5_3_0 = (RuleCall)cTodo2Assignment_5_3.eContents().get(0);
		private final RuleCall cPLUSTerminalRuleCall_5_4 = (RuleCall)cGroup_5.eContents().get(4);
		private final Group cGroup_5_5 = (Group)cGroup_5.eContents().get(5);
		private final Assignment cTodo3Assignment_5_5_0 = (Assignment)cGroup_5_5.eContents().get(0);
		private final RuleCall cTodo3IDTerminalRuleCall_5_5_0_0 = (RuleCall)cTodo3Assignment_5_5_0.eContents().get(0);
		private final RuleCall cCOLONTerminalRuleCall_5_5_1 = (RuleCall)cGroup_5_5.eContents().get(1);
		private final Assignment cTodo4Assignment_5_5_2 = (Assignment)cGroup_5_5.eContents().get(2);
		private final RuleCall cTodo4IDTerminalRuleCall_5_5_2_0 = (RuleCall)cTodo4Assignment_5_5_2.eContents().get(0);
		private final RuleCall cCOLONTerminalRuleCall_5_5_3 = (RuleCall)cGroup_5_5.eContents().get(3);
		private final Assignment cTodo5Assignment_5_5_4 = (Assignment)cGroup_5_5.eContents().get(4);
		private final RuleCall cTodo5IDTerminalRuleCall_5_5_4_0 = (RuleCall)cTodo5Assignment_5_5_4.eContents().get(0);
		private final RuleCall cCOLONTerminalRuleCall_5_5_5 = (RuleCall)cGroup_5_5.eContents().get(5);
		private final Assignment cTodo6Assignment_5_5_6 = (Assignment)cGroup_5_5.eContents().get(6);
		private final RuleCall cTodo6IDTerminalRuleCall_5_5_6_0 = (RuleCall)cTodo6Assignment_5_5_6.eContents().get(0);
		private final Assignment cLineEndAssignment_6 = (Assignment)cGroup.eContents().get(6);
		private final RuleCall cLineEndQUOTE_AND_NLTerminalRuleCall_6_0 = (RuleCall)cLineEndAssignment_6.eContents().get(0);
		
		////TAX+7+VAT'
		//TAXSegment:
		//    segment="TAX"
		//    PLUS
		//    num=ID
		//    PLUS
		//    type=ID
		//    (
		//        PLUS
		//        ( todo1=ID )?
		//        PLUS
		//        ( todo2=ID )?
		//        PLUS
		//        (
		//            ( todo3=ID )?
		//            COLON
		//            ( todo4=ID )?
		//            COLON
		//            ( todo5=ID )?
		//            COLON
		//            ( todo6=ID )?
		//        )?
		//    )?
		//    lineEnd=QUOTE_AND_NL
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//segment="TAX"
		//PLUS
		//num=ID
		//PLUS
		//type=ID
		//(
		//    PLUS
		//    ( todo1=ID )?
		//    PLUS
		//    ( todo2=ID )?
		//    PLUS
		//    (
		//        ( todo3=ID )?
		//        COLON
		//        ( todo4=ID )?
		//        COLON
		//        ( todo5=ID )?
		//        COLON
		//        ( todo6=ID )?
		//    )?
		//)?
		//lineEnd=QUOTE_AND_NL
		public Group getGroup() { return cGroup; }
		
		//segment="TAX"
		public Assignment getSegmentAssignment_0() { return cSegmentAssignment_0; }
		
		//"TAX"
		public Keyword getSegmentTAXKeyword_0_0() { return cSegmentTAXKeyword_0_0; }
		
		//PLUS
		public RuleCall getPLUSTerminalRuleCall_1() { return cPLUSTerminalRuleCall_1; }
		
		//num=ID
		public Assignment getNumAssignment_2() { return cNumAssignment_2; }
		
		//ID
		public RuleCall getNumIDTerminalRuleCall_2_0() { return cNumIDTerminalRuleCall_2_0; }
		
		//PLUS
		public RuleCall getPLUSTerminalRuleCall_3() { return cPLUSTerminalRuleCall_3; }
		
		//type=ID
		public Assignment getTypeAssignment_4() { return cTypeAssignment_4; }
		
		//ID
		public RuleCall getTypeIDTerminalRuleCall_4_0() { return cTypeIDTerminalRuleCall_4_0; }
		
		//(
		//    PLUS
		//    ( todo1=ID )?
		//    PLUS
		//    ( todo2=ID )?
		//    PLUS
		//    (
		//        ( todo3=ID )?
		//        COLON
		//        ( todo4=ID )?
		//        COLON
		//        ( todo5=ID )?
		//        COLON
		//        ( todo6=ID )?
		//    )?
		//)?
		public Group getGroup_5() { return cGroup_5; }
		
		//PLUS
		public RuleCall getPLUSTerminalRuleCall_5_0() { return cPLUSTerminalRuleCall_5_0; }
		
		//( todo1=ID )?
		public Assignment getTodo1Assignment_5_1() { return cTodo1Assignment_5_1; }
		
		//ID
		public RuleCall getTodo1IDTerminalRuleCall_5_1_0() { return cTodo1IDTerminalRuleCall_5_1_0; }
		
		//PLUS
		public RuleCall getPLUSTerminalRuleCall_5_2() { return cPLUSTerminalRuleCall_5_2; }
		
		//( todo2=ID )?
		public Assignment getTodo2Assignment_5_3() { return cTodo2Assignment_5_3; }
		
		//ID
		public RuleCall getTodo2IDTerminalRuleCall_5_3_0() { return cTodo2IDTerminalRuleCall_5_3_0; }
		
		//PLUS
		public RuleCall getPLUSTerminalRuleCall_5_4() { return cPLUSTerminalRuleCall_5_4; }
		
		//(
		//    ( todo3=ID )?
		//    COLON
		//    ( todo4=ID )?
		//    COLON
		//    ( todo5=ID )?
		//    COLON
		//    ( todo6=ID )?
		//)?
		public Group getGroup_5_5() { return cGroup_5_5; }
		
		//( todo3=ID )?
		public Assignment getTodo3Assignment_5_5_0() { return cTodo3Assignment_5_5_0; }
		
		//ID
		public RuleCall getTodo3IDTerminalRuleCall_5_5_0_0() { return cTodo3IDTerminalRuleCall_5_5_0_0; }
		
		//COLON
		public RuleCall getCOLONTerminalRuleCall_5_5_1() { return cCOLONTerminalRuleCall_5_5_1; }
		
		//( todo4=ID )?
		public Assignment getTodo4Assignment_5_5_2() { return cTodo4Assignment_5_5_2; }
		
		//ID
		public RuleCall getTodo4IDTerminalRuleCall_5_5_2_0() { return cTodo4IDTerminalRuleCall_5_5_2_0; }
		
		//COLON
		public RuleCall getCOLONTerminalRuleCall_5_5_3() { return cCOLONTerminalRuleCall_5_5_3; }
		
		//( todo5=ID )?
		public Assignment getTodo5Assignment_5_5_4() { return cTodo5Assignment_5_5_4; }
		
		//ID
		public RuleCall getTodo5IDTerminalRuleCall_5_5_4_0() { return cTodo5IDTerminalRuleCall_5_5_4_0; }
		
		//COLON
		public RuleCall getCOLONTerminalRuleCall_5_5_5() { return cCOLONTerminalRuleCall_5_5_5; }
		
		//( todo6=ID )?
		public Assignment getTodo6Assignment_5_5_6() { return cTodo6Assignment_5_5_6; }
		
		//ID
		public RuleCall getTodo6IDTerminalRuleCall_5_5_6_0() { return cTodo6IDTerminalRuleCall_5_5_6_0; }
		
		//lineEnd=QUOTE_AND_NL
		public Assignment getLineEndAssignment_6() { return cLineEndAssignment_6; }
		
		//QUOTE_AND_NL
		public RuleCall getLineEndQUOTE_AND_NLTerminalRuleCall_6_0() { return cLineEndQUOTE_AND_NLTerminalRuleCall_6_0; }
	}
	public class RFFSegmentElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "io.thlaegler.edifact.Edilang.RFFSegment");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cSegmentAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final Keyword cSegmentRFFKeyword_0_0 = (Keyword)cSegmentAssignment_0.eContents().get(0);
		private final RuleCall cPLUSTerminalRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		private final Assignment cRff1Assignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cRff1IDTerminalRuleCall_2_0 = (RuleCall)cRff1Assignment_2.eContents().get(0);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final RuleCall cCOLONTerminalRuleCall_3_0 = (RuleCall)cGroup_3.eContents().get(0);
		private final Assignment cRff2Assignment_3_1 = (Assignment)cGroup_3.eContents().get(1);
		private final RuleCall cRff2IDTerminalRuleCall_3_1_0 = (RuleCall)cRff2Assignment_3_1.eContents().get(0);
		private final Assignment cLineEndAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cLineEndQUOTE_AND_NLTerminalRuleCall_4_0 = (RuleCall)cLineEndAssignment_4.eContents().get(0);
		
		////RFF+VA:382324067'
		//RFFSegment:
		//    segment="RFF"
		//    PLUS
		//    rff1=ID
		//    (
		//        COLON
		//        rff2=ID
		//    )?
		//    lineEnd=QUOTE_AND_NL
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//segment="RFF"
		//PLUS
		//rff1=ID
		//(
		//    COLON
		//    rff2=ID
		//)?
		//lineEnd=QUOTE_AND_NL
		public Group getGroup() { return cGroup; }
		
		//segment="RFF"
		public Assignment getSegmentAssignment_0() { return cSegmentAssignment_0; }
		
		//"RFF"
		public Keyword getSegmentRFFKeyword_0_0() { return cSegmentRFFKeyword_0_0; }
		
		//PLUS
		public RuleCall getPLUSTerminalRuleCall_1() { return cPLUSTerminalRuleCall_1; }
		
		//rff1=ID
		public Assignment getRff1Assignment_2() { return cRff1Assignment_2; }
		
		//ID
		public RuleCall getRff1IDTerminalRuleCall_2_0() { return cRff1IDTerminalRuleCall_2_0; }
		
		//(
		//    COLON
		//    rff2=ID
		//)?
		public Group getGroup_3() { return cGroup_3; }
		
		//COLON
		public RuleCall getCOLONTerminalRuleCall_3_0() { return cCOLONTerminalRuleCall_3_0; }
		
		//rff2=ID
		public Assignment getRff2Assignment_3_1() { return cRff2Assignment_3_1; }
		
		//ID
		public RuleCall getRff2IDTerminalRuleCall_3_1_0() { return cRff2IDTerminalRuleCall_3_1_0; }
		
		//lineEnd=QUOTE_AND_NL
		public Assignment getLineEndAssignment_4() { return cLineEndAssignment_4; }
		
		//QUOTE_AND_NL
		public RuleCall getLineEndQUOTE_AND_NLTerminalRuleCall_4_0() { return cLineEndQUOTE_AND_NLTerminalRuleCall_4_0; }
	}
	public class NADSegmentElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "io.thlaegler.edifact.Edilang.NADSegment");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cSegmentAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final Keyword cSegmentNADKeyword_0_0 = (Keyword)cSegmentAssignment_0.eContents().get(0);
		private final RuleCall cPLUSTerminalRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		private final Assignment cCodeAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cCodeIDTerminalRuleCall_2_0 = (RuleCall)cCodeAssignment_2.eContents().get(0);
		private final RuleCall cPLUSTerminalRuleCall_3 = (RuleCall)cGroup.eContents().get(3);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Assignment cManufacturer1Assignment_4_0 = (Assignment)cGroup_4.eContents().get(0);
		private final RuleCall cManufacturer1IDTerminalRuleCall_4_0_0 = (RuleCall)cManufacturer1Assignment_4_0.eContents().get(0);
		private final RuleCall cCOLONTerminalRuleCall_4_1 = (RuleCall)cGroup_4.eContents().get(1);
		private final Assignment cManufacturer2Assignment_4_2 = (Assignment)cGroup_4.eContents().get(2);
		private final RuleCall cManufacturer2IDTerminalRuleCall_4_2_0 = (RuleCall)cManufacturer2Assignment_4_2.eContents().get(0);
		private final RuleCall cCOLONTerminalRuleCall_4_3 = (RuleCall)cGroup_4.eContents().get(3);
		private final Assignment cManufacturer3Assignment_4_4 = (Assignment)cGroup_4.eContents().get(4);
		private final RuleCall cManufacturer3IDTerminalRuleCall_4_4_0 = (RuleCall)cManufacturer3Assignment_4_4.eContents().get(0);
		private final Assignment cLineEndAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final RuleCall cLineEndQUOTE_AND_NLTerminalRuleCall_5_0 = (RuleCall)cLineEndAssignment_5.eContents().get(0);
		
		////NAD+BT+VAUXHALL MOTORS LTD::91'
		//NADSegment:
		//    segment="NAD"
		//    PLUS
		//    code=ID
		//    PLUS
		//    (
		//        ( manufacturer1=ID )?
		//        COLON
		//        ( manufacturer2=ID )?
		//        COLON
		//        ( manufacturer3=ID )?
		//    )?
		//    lineEnd=QUOTE_AND_NL
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//segment="NAD"
		//PLUS
		//code=ID
		//PLUS
		//(
		//    ( manufacturer1=ID )?
		//    COLON
		//    ( manufacturer2=ID )?
		//    COLON
		//    ( manufacturer3=ID )?
		//)?
		//lineEnd=QUOTE_AND_NL
		public Group getGroup() { return cGroup; }
		
		//segment="NAD"
		public Assignment getSegmentAssignment_0() { return cSegmentAssignment_0; }
		
		//"NAD"
		public Keyword getSegmentNADKeyword_0_0() { return cSegmentNADKeyword_0_0; }
		
		//PLUS
		public RuleCall getPLUSTerminalRuleCall_1() { return cPLUSTerminalRuleCall_1; }
		
		//code=ID
		public Assignment getCodeAssignment_2() { return cCodeAssignment_2; }
		
		//ID
		public RuleCall getCodeIDTerminalRuleCall_2_0() { return cCodeIDTerminalRuleCall_2_0; }
		
		//PLUS
		public RuleCall getPLUSTerminalRuleCall_3() { return cPLUSTerminalRuleCall_3; }
		
		//(
		//    ( manufacturer1=ID )?
		//    COLON
		//    ( manufacturer2=ID )?
		//    COLON
		//    ( manufacturer3=ID )?
		//)?
		public Group getGroup_4() { return cGroup_4; }
		
		//( manufacturer1=ID )?
		public Assignment getManufacturer1Assignment_4_0() { return cManufacturer1Assignment_4_0; }
		
		//ID
		public RuleCall getManufacturer1IDTerminalRuleCall_4_0_0() { return cManufacturer1IDTerminalRuleCall_4_0_0; }
		
		//COLON
		public RuleCall getCOLONTerminalRuleCall_4_1() { return cCOLONTerminalRuleCall_4_1; }
		
		//( manufacturer2=ID )?
		public Assignment getManufacturer2Assignment_4_2() { return cManufacturer2Assignment_4_2; }
		
		//ID
		public RuleCall getManufacturer2IDTerminalRuleCall_4_2_0() { return cManufacturer2IDTerminalRuleCall_4_2_0; }
		
		//COLON
		public RuleCall getCOLONTerminalRuleCall_4_3() { return cCOLONTerminalRuleCall_4_3; }
		
		//( manufacturer3=ID )?
		public Assignment getManufacturer3Assignment_4_4() { return cManufacturer3Assignment_4_4; }
		
		//ID
		public RuleCall getManufacturer3IDTerminalRuleCall_4_4_0() { return cManufacturer3IDTerminalRuleCall_4_4_0; }
		
		//lineEnd=QUOTE_AND_NL
		public Assignment getLineEndAssignment_5() { return cLineEndAssignment_5; }
		
		//QUOTE_AND_NL
		public RuleCall getLineEndQUOTE_AND_NLTerminalRuleCall_5_0() { return cLineEndQUOTE_AND_NLTerminalRuleCall_5_0; }
	}
	public class DTMSegmentElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "io.thlaegler.edifact.Edilang.DTMSegment");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cSegmentAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final Keyword cSegmentDTMKeyword_0_0 = (Keyword)cSegmentAssignment_0.eContents().get(0);
		private final RuleCall cPLUSTerminalRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		private final Assignment cNum1Assignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cNum1IDTerminalRuleCall_2_0 = (RuleCall)cNum1Assignment_2.eContents().get(0);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final RuleCall cCOLONTerminalRuleCall_3_0 = (RuleCall)cGroup_3.eContents().get(0);
		private final Assignment cNum2Assignment_3_1 = (Assignment)cGroup_3.eContents().get(1);
		private final RuleCall cNum2IDTerminalRuleCall_3_1_0 = (RuleCall)cNum2Assignment_3_1.eContents().get(0);
		private final RuleCall cCOLONTerminalRuleCall_3_2 = (RuleCall)cGroup_3.eContents().get(2);
		private final Assignment cNum3Assignment_3_3 = (Assignment)cGroup_3.eContents().get(3);
		private final RuleCall cNum3IDTerminalRuleCall_3_3_0 = (RuleCall)cNum3Assignment_3_3.eContents().get(0);
		private final Assignment cLineEndAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cLineEndQUOTE_AND_NLTerminalRuleCall_4_0 = (RuleCall)cLineEndAssignment_4.eContents().get(0);
		
		////DTM+137:199910060000:102'
		//DTMSegment:
		//    segment="DTM"
		//    PLUS
		//    num1=ID
		//    (
		//        COLON
		//        num2=ID
		//        COLON
		//        num3=ID
		//    )?
		//    lineEnd=QUOTE_AND_NL
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//segment="DTM"
		//PLUS
		//num1=ID
		//(
		//    COLON
		//    num2=ID
		//    COLON
		//    num3=ID
		//)?
		//lineEnd=QUOTE_AND_NL
		public Group getGroup() { return cGroup; }
		
		//segment="DTM"
		public Assignment getSegmentAssignment_0() { return cSegmentAssignment_0; }
		
		//"DTM"
		public Keyword getSegmentDTMKeyword_0_0() { return cSegmentDTMKeyword_0_0; }
		
		//PLUS
		public RuleCall getPLUSTerminalRuleCall_1() { return cPLUSTerminalRuleCall_1; }
		
		//num1=ID
		public Assignment getNum1Assignment_2() { return cNum1Assignment_2; }
		
		//ID
		public RuleCall getNum1IDTerminalRuleCall_2_0() { return cNum1IDTerminalRuleCall_2_0; }
		
		//(
		//    COLON
		//    num2=ID
		//    COLON
		//    num3=ID
		//)?
		public Group getGroup_3() { return cGroup_3; }
		
		//COLON
		public RuleCall getCOLONTerminalRuleCall_3_0() { return cCOLONTerminalRuleCall_3_0; }
		
		//num2=ID
		public Assignment getNum2Assignment_3_1() { return cNum2Assignment_3_1; }
		
		//ID
		public RuleCall getNum2IDTerminalRuleCall_3_1_0() { return cNum2IDTerminalRuleCall_3_1_0; }
		
		//COLON
		public RuleCall getCOLONTerminalRuleCall_3_2() { return cCOLONTerminalRuleCall_3_2; }
		
		//num3=ID
		public Assignment getNum3Assignment_3_3() { return cNum3Assignment_3_3; }
		
		//ID
		public RuleCall getNum3IDTerminalRuleCall_3_3_0() { return cNum3IDTerminalRuleCall_3_3_0; }
		
		//lineEnd=QUOTE_AND_NL
		public Assignment getLineEndAssignment_4() { return cLineEndAssignment_4; }
		
		//QUOTE_AND_NL
		public RuleCall getLineEndQUOTE_AND_NLTerminalRuleCall_4_0() { return cLineEndQUOTE_AND_NLTerminalRuleCall_4_0; }
	}
	public class BGMSegmentElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "io.thlaegler.edifact.Edilang.BGMSegment");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cSegmentAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final Keyword cSegmentBGMKeyword_0_0 = (Keyword)cSegmentAssignment_0.eContents().get(0);
		private final RuleCall cPLUSTerminalRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		private final Assignment cNum1Assignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cNum1IDTerminalRuleCall_2_0 = (RuleCall)cNum1Assignment_2.eContents().get(0);
		private final RuleCall cPLUSTerminalRuleCall_3 = (RuleCall)cGroup.eContents().get(3);
		private final Assignment cNum2Assignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cNum2IDTerminalRuleCall_4_0 = (RuleCall)cNum2Assignment_4.eContents().get(0);
		private final RuleCall cPLUSTerminalRuleCall_5 = (RuleCall)cGroup.eContents().get(5);
		private final Assignment cNum3Assignment_6 = (Assignment)cGroup.eContents().get(6);
		private final RuleCall cNum3IDTerminalRuleCall_6_0 = (RuleCall)cNum3Assignment_6.eContents().get(0);
		private final Assignment cLineEndAssignment_7 = (Assignment)cGroup.eContents().get(7);
		private final RuleCall cLineEndQUOTE_AND_NLTerminalRuleCall_7_0 = (RuleCall)cLineEndAssignment_7.eContents().get(0);
		
		////BGM+381+1060113800026+9'
		//BGMSegment:
		//    segment="BGM"
		//    PLUS
		//    (num1=ID)?
		//    PLUS
		//    (num2=ID)?
		//    PLUS
		//    (num3=ID)?
		//    lineEnd=QUOTE_AND_NL
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//segment="BGM"
		//PLUS
		//(num1=ID)?
		//PLUS
		//(num2=ID)?
		//PLUS
		//(num3=ID)?
		//lineEnd=QUOTE_AND_NL
		public Group getGroup() { return cGroup; }
		
		//segment="BGM"
		public Assignment getSegmentAssignment_0() { return cSegmentAssignment_0; }
		
		//"BGM"
		public Keyword getSegmentBGMKeyword_0_0() { return cSegmentBGMKeyword_0_0; }
		
		//PLUS
		public RuleCall getPLUSTerminalRuleCall_1() { return cPLUSTerminalRuleCall_1; }
		
		//(num1=ID)?
		public Assignment getNum1Assignment_2() { return cNum1Assignment_2; }
		
		//ID
		public RuleCall getNum1IDTerminalRuleCall_2_0() { return cNum1IDTerminalRuleCall_2_0; }
		
		//PLUS
		public RuleCall getPLUSTerminalRuleCall_3() { return cPLUSTerminalRuleCall_3; }
		
		//(num2=ID)?
		public Assignment getNum2Assignment_4() { return cNum2Assignment_4; }
		
		//ID
		public RuleCall getNum2IDTerminalRuleCall_4_0() { return cNum2IDTerminalRuleCall_4_0; }
		
		//PLUS
		public RuleCall getPLUSTerminalRuleCall_5() { return cPLUSTerminalRuleCall_5; }
		
		//(num3=ID)?
		public Assignment getNum3Assignment_6() { return cNum3Assignment_6; }
		
		//ID
		public RuleCall getNum3IDTerminalRuleCall_6_0() { return cNum3IDTerminalRuleCall_6_0; }
		
		//lineEnd=QUOTE_AND_NL
		public Assignment getLineEndAssignment_7() { return cLineEndAssignment_7; }
		
		//QUOTE_AND_NL
		public RuleCall getLineEndQUOTE_AND_NLTerminalRuleCall_7_0() { return cLineEndQUOTE_AND_NLTerminalRuleCall_7_0; }
	}
	public class PATSegmentElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "io.thlaegler.edifact.Edilang.PATSegment");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cSegmentAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final Keyword cSegmentPATKeyword_0_0 = (Keyword)cSegmentAssignment_0.eContents().get(0);
		private final RuleCall cPLUSTerminalRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		private final Assignment cSegmentCountAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cSegmentCountIDTerminalRuleCall_2_0 = (RuleCall)cSegmentCountAssignment_2.eContents().get(0);
		private final Assignment cLineEndAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cLineEndQUOTE_AND_NLTerminalRuleCall_3_0 = (RuleCall)cLineEndAssignment_3.eContents().get(0);
		
		////PAT+1'
		//PATSegment:
		//    segment="PAT"
		//    PLUS
		//    segmentCount=ID
		//    lineEnd=QUOTE_AND_NL
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//segment="PAT"
		//PLUS
		//segmentCount=ID
		//lineEnd=QUOTE_AND_NL
		public Group getGroup() { return cGroup; }
		
		//segment="PAT"
		public Assignment getSegmentAssignment_0() { return cSegmentAssignment_0; }
		
		//"PAT"
		public Keyword getSegmentPATKeyword_0_0() { return cSegmentPATKeyword_0_0; }
		
		//PLUS
		public RuleCall getPLUSTerminalRuleCall_1() { return cPLUSTerminalRuleCall_1; }
		
		//segmentCount=ID
		public Assignment getSegmentCountAssignment_2() { return cSegmentCountAssignment_2; }
		
		//ID
		public RuleCall getSegmentCountIDTerminalRuleCall_2_0() { return cSegmentCountIDTerminalRuleCall_2_0; }
		
		//lineEnd=QUOTE_AND_NL
		public Assignment getLineEndAssignment_3() { return cLineEndAssignment_3; }
		
		//QUOTE_AND_NL
		public RuleCall getLineEndQUOTE_AND_NLTerminalRuleCall_3_0() { return cLineEndQUOTE_AND_NLTerminalRuleCall_3_0; }
	}
	public class FTXSegmentElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "io.thlaegler.edifact.Edilang.FTXSegment");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cSegmentAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final Keyword cSegmentFTXKeyword_0_0 = (Keyword)cSegmentAssignment_0.eContents().get(0);
		private final RuleCall cPLUSTerminalRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		private final Assignment cTodo1Assignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cTodo1IDTerminalRuleCall_2_0 = (RuleCall)cTodo1Assignment_2.eContents().get(0);
		private final RuleCall cPLUSTerminalRuleCall_3 = (RuleCall)cGroup.eContents().get(3);
		private final Assignment cTodo2Assignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cTodo2IDTerminalRuleCall_4_0 = (RuleCall)cTodo2Assignment_4.eContents().get(0);
		private final RuleCall cPLUSTerminalRuleCall_5 = (RuleCall)cGroup.eContents().get(5);
		private final Assignment cTodo3Assignment_6 = (Assignment)cGroup.eContents().get(6);
		private final RuleCall cTodo3IDTerminalRuleCall_6_0 = (RuleCall)cTodo3Assignment_6.eContents().get(0);
		private final RuleCall cPLUSTerminalRuleCall_7 = (RuleCall)cGroup.eContents().get(7);
		private final Assignment cTodo4Assignment_8 = (Assignment)cGroup.eContents().get(8);
		private final RuleCall cTodo4IDTerminalRuleCall_8_0 = (RuleCall)cTodo4Assignment_8.eContents().get(0);
		private final Assignment cLineEndAssignment_9 = (Assignment)cGroup.eContents().get(9);
		private final RuleCall cLineEndQUOTE_AND_NLTerminalRuleCall_9_0 = (RuleCall)cLineEndAssignment_9.eContents().get(0);
		
		////FTX+AFM+1++XPath 2.0 Programmer?'s Reference'
		//FTXSegment:
		//    segment="FTX"
		//    PLUS
		//    ( todo1=ID )?
		//    PLUS
		//    ( todo2=ID )?
		//    PLUS
		//    ( todo3=ID )?
		//    PLUS
		//    ( todo4=ID )?
		//    lineEnd=QUOTE_AND_NL
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//segment="FTX"
		//PLUS
		//( todo1=ID )?
		//PLUS
		//( todo2=ID )?
		//PLUS
		//( todo3=ID )?
		//PLUS
		//( todo4=ID )?
		//lineEnd=QUOTE_AND_NL
		public Group getGroup() { return cGroup; }
		
		//segment="FTX"
		public Assignment getSegmentAssignment_0() { return cSegmentAssignment_0; }
		
		//"FTX"
		public Keyword getSegmentFTXKeyword_0_0() { return cSegmentFTXKeyword_0_0; }
		
		//PLUS
		public RuleCall getPLUSTerminalRuleCall_1() { return cPLUSTerminalRuleCall_1; }
		
		//( todo1=ID )?
		public Assignment getTodo1Assignment_2() { return cTodo1Assignment_2; }
		
		//ID
		public RuleCall getTodo1IDTerminalRuleCall_2_0() { return cTodo1IDTerminalRuleCall_2_0; }
		
		//PLUS
		public RuleCall getPLUSTerminalRuleCall_3() { return cPLUSTerminalRuleCall_3; }
		
		//( todo2=ID )?
		public Assignment getTodo2Assignment_4() { return cTodo2Assignment_4; }
		
		//ID
		public RuleCall getTodo2IDTerminalRuleCall_4_0() { return cTodo2IDTerminalRuleCall_4_0; }
		
		//PLUS
		public RuleCall getPLUSTerminalRuleCall_5() { return cPLUSTerminalRuleCall_5; }
		
		//( todo3=ID )?
		public Assignment getTodo3Assignment_6() { return cTodo3Assignment_6; }
		
		//ID
		public RuleCall getTodo3IDTerminalRuleCall_6_0() { return cTodo3IDTerminalRuleCall_6_0; }
		
		//PLUS
		public RuleCall getPLUSTerminalRuleCall_7() { return cPLUSTerminalRuleCall_7; }
		
		//( todo4=ID )?
		public Assignment getTodo4Assignment_8() { return cTodo4Assignment_8; }
		
		//ID
		public RuleCall getTodo4IDTerminalRuleCall_8_0() { return cTodo4IDTerminalRuleCall_8_0; }
		
		//lineEnd=QUOTE_AND_NL
		public Assignment getLineEndAssignment_9() { return cLineEndAssignment_9; }
		
		//QUOTE_AND_NL
		public RuleCall getLineEndQUOTE_AND_NLTerminalRuleCall_9_0() { return cLineEndQUOTE_AND_NLTerminalRuleCall_9_0; }
	}
	public class ERCSegmentElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "io.thlaegler.edifact.Edilang.ERCSegment");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cSegmentAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final Keyword cSegmentERCKeyword_0_0 = (Keyword)cSegmentAssignment_0.eContents().get(0);
		private final RuleCall cPLUSTerminalRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		private final Assignment cCode1Assignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cCode1IDTerminalRuleCall_2_0 = (RuleCall)cCode1Assignment_2.eContents().get(0);
		private final Assignment cLineEndAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cLineEndQUOTE_AND_NLTerminalRuleCall_3_0 = (RuleCall)cLineEndAssignment_3.eContents().get(0);
		
		//ERCSegment:
		//    segment="ERC"
		//    PLUS
		//    code1=ID
		//    lineEnd=QUOTE_AND_NL
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//segment="ERC"
		//PLUS
		//code1=ID
		//lineEnd=QUOTE_AND_NL
		public Group getGroup() { return cGroup; }
		
		//segment="ERC"
		public Assignment getSegmentAssignment_0() { return cSegmentAssignment_0; }
		
		//"ERC"
		public Keyword getSegmentERCKeyword_0_0() { return cSegmentERCKeyword_0_0; }
		
		//PLUS
		public RuleCall getPLUSTerminalRuleCall_1() { return cPLUSTerminalRuleCall_1; }
		
		//code1=ID
		public Assignment getCode1Assignment_2() { return cCode1Assignment_2; }
		
		//ID
		public RuleCall getCode1IDTerminalRuleCall_2_0() { return cCode1IDTerminalRuleCall_2_0; }
		
		//lineEnd=QUOTE_AND_NL
		public Assignment getLineEndAssignment_3() { return cLineEndAssignment_3; }
		
		//QUOTE_AND_NL
		public RuleCall getLineEndQUOTE_AND_NLTerminalRuleCall_3_0() { return cLineEndQUOTE_AND_NLTerminalRuleCall_3_0; }
	}
	public class CNTSegmentElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "io.thlaegler.edifact.Edilang.CNTSegment");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cSegmentAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final Keyword cSegmentCNTKeyword_0_0 = (Keyword)cSegmentAssignment_0.eContents().get(0);
		private final RuleCall cPLUSTerminalRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		private final Group cGroup_2 = (Group)cGroup.eContents().get(2);
		private final Assignment cTodo1Assignment_2_0 = (Assignment)cGroup_2.eContents().get(0);
		private final RuleCall cTodo1IDTerminalRuleCall_2_0_0 = (RuleCall)cTodo1Assignment_2_0.eContents().get(0);
		private final RuleCall cCOLONTerminalRuleCall_2_1 = (RuleCall)cGroup_2.eContents().get(1);
		private final Assignment cTodo2Assignment_2_2 = (Assignment)cGroup_2.eContents().get(2);
		private final RuleCall cTodo2IDTerminalRuleCall_2_2_0 = (RuleCall)cTodo2Assignment_2_2.eContents().get(0);
		private final Assignment cLineEndAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cLineEndQUOTE_AND_NLTerminalRuleCall_3_0 = (RuleCall)cLineEndAssignment_3.eContents().get(0);
		
		////CNT+2:4'
		//CNTSegment:
		//    segment="CNT"
		//    PLUS
		//    (
		//        ( todo1=ID )?
		//        COLON
		//        ( todo2=ID )?
		//    )?
		//    lineEnd=QUOTE_AND_NL
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//segment="CNT"
		//PLUS
		//(
		//    ( todo1=ID )?
		//    COLON
		//    ( todo2=ID )?
		//)?
		//lineEnd=QUOTE_AND_NL
		public Group getGroup() { return cGroup; }
		
		//segment="CNT"
		public Assignment getSegmentAssignment_0() { return cSegmentAssignment_0; }
		
		//"CNT"
		public Keyword getSegmentCNTKeyword_0_0() { return cSegmentCNTKeyword_0_0; }
		
		//PLUS
		public RuleCall getPLUSTerminalRuleCall_1() { return cPLUSTerminalRuleCall_1; }
		
		//(
		//    ( todo1=ID )?
		//    COLON
		//    ( todo2=ID )?
		//)?
		public Group getGroup_2() { return cGroup_2; }
		
		//( todo1=ID )?
		public Assignment getTodo1Assignment_2_0() { return cTodo1Assignment_2_0; }
		
		//ID
		public RuleCall getTodo1IDTerminalRuleCall_2_0_0() { return cTodo1IDTerminalRuleCall_2_0_0; }
		
		//COLON
		public RuleCall getCOLONTerminalRuleCall_2_1() { return cCOLONTerminalRuleCall_2_1; }
		
		//( todo2=ID )?
		public Assignment getTodo2Assignment_2_2() { return cTodo2Assignment_2_2; }
		
		//ID
		public RuleCall getTodo2IDTerminalRuleCall_2_2_0() { return cTodo2IDTerminalRuleCall_2_2_0; }
		
		//lineEnd=QUOTE_AND_NL
		public Assignment getLineEndAssignment_3() { return cLineEndAssignment_3; }
		
		//QUOTE_AND_NL
		public RuleCall getLineEndQUOTE_AND_NLTerminalRuleCall_3_0() { return cLineEndQUOTE_AND_NLTerminalRuleCall_3_0; }
	}
	public class CTASegmentElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "io.thlaegler.edifact.Edilang.CTASegment");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cSegmentAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final Keyword cSegmentCTAKeyword_0_0 = (Keyword)cSegmentAssignment_0.eContents().get(0);
		private final RuleCall cPLUSTerminalRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		private final Assignment cTodoAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cTodoIDTerminalRuleCall_2_0 = (RuleCall)cTodoAssignment_2.eContents().get(0);
		private final Assignment cLineEndAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cLineEndQUOTE_AND_NLTerminalRuleCall_3_0 = (RuleCall)cLineEndAssignment_3.eContents().get(0);
		
		//CTASegment:
		//    segment="CTA"
		//    PLUS
		//    ( todo=ID )?
		//    lineEnd=QUOTE_AND_NL
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//segment="CTA"
		//PLUS
		//( todo=ID )?
		//lineEnd=QUOTE_AND_NL
		public Group getGroup() { return cGroup; }
		
		//segment="CTA"
		public Assignment getSegmentAssignment_0() { return cSegmentAssignment_0; }
		
		//"CTA"
		public Keyword getSegmentCTAKeyword_0_0() { return cSegmentCTAKeyword_0_0; }
		
		//PLUS
		public RuleCall getPLUSTerminalRuleCall_1() { return cPLUSTerminalRuleCall_1; }
		
		//( todo=ID )?
		public Assignment getTodoAssignment_2() { return cTodoAssignment_2; }
		
		//ID
		public RuleCall getTodoIDTerminalRuleCall_2_0() { return cTodoIDTerminalRuleCall_2_0; }
		
		//lineEnd=QUOTE_AND_NL
		public Assignment getLineEndAssignment_3() { return cLineEndAssignment_3; }
		
		//QUOTE_AND_NL
		public RuleCall getLineEndQUOTE_AND_NLTerminalRuleCall_3_0() { return cLineEndQUOTE_AND_NLTerminalRuleCall_3_0; }
	}
	public class PCISegmentElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "io.thlaegler.edifact.Edilang.PCISegment");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cSegmentAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final Keyword cSegmentPCIKeyword_0_0 = (Keyword)cSegmentAssignment_0.eContents().get(0);
		private final RuleCall cPLUSTerminalRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		private final Assignment cTodoAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cTodoIDTerminalRuleCall_2_0 = (RuleCall)cTodoAssignment_2.eContents().get(0);
		private final Assignment cLineEndAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cLineEndQUOTE_AND_NLTerminalRuleCall_3_0 = (RuleCall)cLineEndAssignment_3.eContents().get(0);
		
		//PCISegment:
		//    segment="PCI"
		//    PLUS
		//    ( todo=ID )?
		//    lineEnd=QUOTE_AND_NL
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//segment="PCI"
		//PLUS
		//( todo=ID )?
		//lineEnd=QUOTE_AND_NL
		public Group getGroup() { return cGroup; }
		
		//segment="PCI"
		public Assignment getSegmentAssignment_0() { return cSegmentAssignment_0; }
		
		//"PCI"
		public Keyword getSegmentPCIKeyword_0_0() { return cSegmentPCIKeyword_0_0; }
		
		//PLUS
		public RuleCall getPLUSTerminalRuleCall_1() { return cPLUSTerminalRuleCall_1; }
		
		//( todo=ID )?
		public Assignment getTodoAssignment_2() { return cTodoAssignment_2; }
		
		//ID
		public RuleCall getTodoIDTerminalRuleCall_2_0() { return cTodoIDTerminalRuleCall_2_0; }
		
		//lineEnd=QUOTE_AND_NL
		public Assignment getLineEndAssignment_3() { return cLineEndAssignment_3; }
		
		//QUOTE_AND_NL
		public RuleCall getLineEndQUOTE_AND_NLTerminalRuleCall_3_0() { return cLineEndQUOTE_AND_NLTerminalRuleCall_3_0; }
	}
	public class UNSSegmentElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "io.thlaegler.edifact.Edilang.UNSSegment");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cSegmentAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final Keyword cSegmentUNSKeyword_0_0 = (Keyword)cSegmentAssignment_0.eContents().get(0);
		private final RuleCall cPLUSTerminalRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		private final Assignment cSegmentCountAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cSegmentCountIDTerminalRuleCall_2_0 = (RuleCall)cSegmentCountAssignment_2.eContents().get(0);
		private final Assignment cLineEndAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cLineEndQUOTE_AND_NLTerminalRuleCall_3_0 = (RuleCall)cLineEndAssignment_3.eContents().get(0);
		
		////UNS+S'
		//UNSSegment:
		//    segment="UNS"
		//    PLUS
		//    segmentCount=ID
		//    lineEnd=QUOTE_AND_NL
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//segment="UNS"
		//PLUS
		//segmentCount=ID
		//lineEnd=QUOTE_AND_NL
		public Group getGroup() { return cGroup; }
		
		//segment="UNS"
		public Assignment getSegmentAssignment_0() { return cSegmentAssignment_0; }
		
		//"UNS"
		public Keyword getSegmentUNSKeyword_0_0() { return cSegmentUNSKeyword_0_0; }
		
		//PLUS
		public RuleCall getPLUSTerminalRuleCall_1() { return cPLUSTerminalRuleCall_1; }
		
		//segmentCount=ID
		public Assignment getSegmentCountAssignment_2() { return cSegmentCountAssignment_2; }
		
		//ID
		public RuleCall getSegmentCountIDTerminalRuleCall_2_0() { return cSegmentCountIDTerminalRuleCall_2_0; }
		
		//lineEnd=QUOTE_AND_NL
		public Assignment getLineEndAssignment_3() { return cLineEndAssignment_3; }
		
		//QUOTE_AND_NL
		public RuleCall getLineEndQUOTE_AND_NLTerminalRuleCall_3_0() { return cLineEndQUOTE_AND_NLTerminalRuleCall_3_0; }
	}
	public class UNTSegmentElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "io.thlaegler.edifact.Edilang.UNTSegment");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cSegmentAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final Keyword cSegmentUNTKeyword_0_0 = (Keyword)cSegmentAssignment_0.eContents().get(0);
		private final RuleCall cPLUSTerminalRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		private final Assignment cSegmentCountAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cSegmentCountIDTerminalRuleCall_2_0 = (RuleCall)cSegmentCountAssignment_2.eContents().get(0);
		private final RuleCall cPLUSTerminalRuleCall_3 = (RuleCall)cGroup.eContents().get(3);
		private final Assignment cMessageReferenceNumberAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cMessageReferenceNumberIDTerminalRuleCall_4_0 = (RuleCall)cMessageReferenceNumberAssignment_4.eContents().get(0);
		private final Assignment cLineEndAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final RuleCall cLineEndQUOTE_AND_NLTerminalRuleCall_5_0 = (RuleCall)cLineEndAssignment_5.eContents().get(0);
		
		////UNT+9+1'
		//UNTSegment:
		//    segment="UNT"
		//    PLUS
		//    ( segmentCount=ID )?
		//    PLUS
		//    ( messageReferenceNumber=ID )?
		//    lineEnd=QUOTE_AND_NL
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//segment="UNT"
		//PLUS
		//( segmentCount=ID )?
		//PLUS
		//( messageReferenceNumber=ID )?
		//lineEnd=QUOTE_AND_NL
		public Group getGroup() { return cGroup; }
		
		//segment="UNT"
		public Assignment getSegmentAssignment_0() { return cSegmentAssignment_0; }
		
		//"UNT"
		public Keyword getSegmentUNTKeyword_0_0() { return cSegmentUNTKeyword_0_0; }
		
		//PLUS
		public RuleCall getPLUSTerminalRuleCall_1() { return cPLUSTerminalRuleCall_1; }
		
		//( segmentCount=ID )?
		public Assignment getSegmentCountAssignment_2() { return cSegmentCountAssignment_2; }
		
		//ID
		public RuleCall getSegmentCountIDTerminalRuleCall_2_0() { return cSegmentCountIDTerminalRuleCall_2_0; }
		
		//PLUS
		public RuleCall getPLUSTerminalRuleCall_3() { return cPLUSTerminalRuleCall_3; }
		
		//( messageReferenceNumber=ID )?
		public Assignment getMessageReferenceNumberAssignment_4() { return cMessageReferenceNumberAssignment_4; }
		
		//ID
		public RuleCall getMessageReferenceNumberIDTerminalRuleCall_4_0() { return cMessageReferenceNumberIDTerminalRuleCall_4_0; }
		
		//lineEnd=QUOTE_AND_NL
		public Assignment getLineEndAssignment_5() { return cLineEndAssignment_5; }
		
		//QUOTE_AND_NL
		public RuleCall getLineEndQUOTE_AND_NLTerminalRuleCall_5_0() { return cLineEndQUOTE_AND_NLTerminalRuleCall_5_0; }
	}
	public class UNZSegmentElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "io.thlaegler.edifact.Edilang.UNZSegment");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cSegmentAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final Keyword cSegmentUNZKeyword_0_0 = (Keyword)cSegmentAssignment_0.eContents().get(0);
		private final RuleCall cPLUSTerminalRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		private final Assignment cInterchangeControlCountAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cInterchangeControlCountIDTerminalRuleCall_2_0 = (RuleCall)cInterchangeControlCountAssignment_2.eContents().get(0);
		private final RuleCall cPLUSTerminalRuleCall_3 = (RuleCall)cGroup.eContents().get(3);
		private final Assignment cInterchangeControlRefAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cInterchangeControlRefIDTerminalRuleCall_4_0 = (RuleCall)cInterchangeControlRefAssignment_4.eContents().get(0);
		private final Assignment cLineEndAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final RuleCall cLineEndQUOTE_AND_NLTerminalRuleCall_5_0 = (RuleCall)cLineEndAssignment_5.eContents().get(0);
		
		////UNZ+1+039I42XXTK0001'
		//UNZSegment:
		//    segment="UNZ"
		//    PLUS
		//    ( interchangeControlCount=ID )?
		//    PLUS
		//    ( interchangeControlRef=ID )?
		//    lineEnd=QUOTE_AND_NL
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//segment="UNZ"
		//PLUS
		//( interchangeControlCount=ID )?
		//PLUS
		//( interchangeControlRef=ID )?
		//lineEnd=QUOTE_AND_NL
		public Group getGroup() { return cGroup; }
		
		//segment="UNZ"
		public Assignment getSegmentAssignment_0() { return cSegmentAssignment_0; }
		
		//"UNZ"
		public Keyword getSegmentUNZKeyword_0_0() { return cSegmentUNZKeyword_0_0; }
		
		//PLUS
		public RuleCall getPLUSTerminalRuleCall_1() { return cPLUSTerminalRuleCall_1; }
		
		//( interchangeControlCount=ID )?
		public Assignment getInterchangeControlCountAssignment_2() { return cInterchangeControlCountAssignment_2; }
		
		//ID
		public RuleCall getInterchangeControlCountIDTerminalRuleCall_2_0() { return cInterchangeControlCountIDTerminalRuleCall_2_0; }
		
		//PLUS
		public RuleCall getPLUSTerminalRuleCall_3() { return cPLUSTerminalRuleCall_3; }
		
		//( interchangeControlRef=ID )?
		public Assignment getInterchangeControlRefAssignment_4() { return cInterchangeControlRefAssignment_4; }
		
		//ID
		public RuleCall getInterchangeControlRefIDTerminalRuleCall_4_0() { return cInterchangeControlRefIDTerminalRuleCall_4_0; }
		
		//lineEnd=QUOTE_AND_NL
		public Assignment getLineEndAssignment_5() { return cLineEndAssignment_5; }
		
		//QUOTE_AND_NL
		public RuleCall getLineEndQUOTE_AND_NLTerminalRuleCall_5_0() { return cLineEndQUOTE_AND_NLTerminalRuleCall_5_0; }
	}
	public class AbstractEdiFunctionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "io.thlaegler.edifact.Edilang.AbstractEdiFunction");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cPRIFunctionParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cMessageBodyFunctionParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		private final RuleCall cMSGFunctionParserRuleCall_2 = (RuleCall)cAlternatives.eContents().get(2);
		private final RuleCall cProductFunctionParserRuleCall_3 = (RuleCall)cAlternatives.eContents().get(3);
		private final RuleCall cSystemDetailFunctionParserRuleCall_4 = (RuleCall)cAlternatives.eContents().get(4);
		private final RuleCall cOriginatorFunctionParserRuleCall_5 = (RuleCall)cAlternatives.eContents().get(5);
		private final RuleCall cOriginatorIdentificationFunctionParserRuleCall_6 = (RuleCall)cAlternatives.eContents().get(6);
		private final RuleCall cLocationFunctionParserRuleCall_7 = (RuleCall)cAlternatives.eContents().get(7);
		private final RuleCall cInterchangerFunctionParserRuleCall_8 = (RuleCall)cAlternatives.eContents().get(8);
		private final RuleCall cDateOnlyFunctionParserRuleCall_9 = (RuleCall)cAlternatives.eContents().get(9);
		private final RuleCall cDateAndTimeFunctionParserRuleCall_10 = (RuleCall)cAlternatives.eContents().get(10);
		
		//// EDIFACT Functions
		//AbstractEdiFunction:
		//    PRIFunction |
		//    MessageBodyFunction |
		//    MSGFunction |
		//    ProductFunction |
		//    SystemDetailFunction |
		//    OriginatorFunction |
		//    OriginatorIdentificationFunction |
		//    LocationFunction |
		//    InterchangerFunction |
		//    DateOnlyFunction |
		//    DateAndTimeFunction
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//PRIFunction |
		//MessageBodyFunction |
		//MSGFunction |
		//ProductFunction |
		//SystemDetailFunction |
		//OriginatorFunction |
		//OriginatorIdentificationFunction |
		//LocationFunction |
		//InterchangerFunction |
		//DateOnlyFunction |
		//DateAndTimeFunction
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//PRIFunction
		public RuleCall getPRIFunctionParserRuleCall_0() { return cPRIFunctionParserRuleCall_0; }
		
		//MessageBodyFunction
		public RuleCall getMessageBodyFunctionParserRuleCall_1() { return cMessageBodyFunctionParserRuleCall_1; }
		
		//MSGFunction
		public RuleCall getMSGFunctionParserRuleCall_2() { return cMSGFunctionParserRuleCall_2; }
		
		//ProductFunction
		public RuleCall getProductFunctionParserRuleCall_3() { return cProductFunctionParserRuleCall_3; }
		
		//SystemDetailFunction
		public RuleCall getSystemDetailFunctionParserRuleCall_4() { return cSystemDetailFunctionParserRuleCall_4; }
		
		//OriginatorFunction
		public RuleCall getOriginatorFunctionParserRuleCall_5() { return cOriginatorFunctionParserRuleCall_5; }
		
		//OriginatorIdentificationFunction
		public RuleCall getOriginatorIdentificationFunctionParserRuleCall_6() { return cOriginatorIdentificationFunctionParserRuleCall_6; }
		
		//LocationFunction
		public RuleCall getLocationFunctionParserRuleCall_7() { return cLocationFunctionParserRuleCall_7; }
		
		//InterchangerFunction
		public RuleCall getInterchangerFunctionParserRuleCall_8() { return cInterchangerFunctionParserRuleCall_8; }
		
		//DateOnlyFunction
		public RuleCall getDateOnlyFunctionParserRuleCall_9() { return cDateOnlyFunctionParserRuleCall_9; }
		
		//DateAndTimeFunction
		public RuleCall getDateAndTimeFunctionParserRuleCall_10() { return cDateAndTimeFunctionParserRuleCall_10; }
	}
	public class PRIFunctionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "io.thlaegler.edifact.Edilang.PRIFunction");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cCode1Assignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cCode1IDTerminalRuleCall_0_0 = (RuleCall)cCode1Assignment_0.eContents().get(0);
		private final RuleCall cCOLONTerminalRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		private final Assignment cCode2Assignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cCode2IDTerminalRuleCall_2_0 = (RuleCall)cCode2Assignment_2.eContents().get(0);
		private final RuleCall cCOLONTerminalRuleCall_3 = (RuleCall)cGroup.eContents().get(3);
		private final Assignment cCode3Assignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cCode3IDTerminalRuleCall_4_0 = (RuleCall)cCode3Assignment_4.eContents().get(0);
		private final RuleCall cCOLONTerminalRuleCall_5 = (RuleCall)cGroup.eContents().get(5);
		private final Assignment cCode4Assignment_6 = (Assignment)cGroup.eContents().get(6);
		private final RuleCall cCode4IDTerminalRuleCall_6_0 = (RuleCall)cCode4Assignment_6.eContents().get(0);
		private final RuleCall cCOLONTerminalRuleCall_7 = (RuleCall)cGroup.eContents().get(7);
		private final Assignment cCode5Assignment_8 = (Assignment)cGroup.eContents().get(8);
		private final RuleCall cCode5IDTerminalRuleCall_8_0 = (RuleCall)cCode5Assignment_8.eContents().get(0);
		private final RuleCall cCOLONTerminalRuleCall_9 = (RuleCall)cGroup.eContents().get(9);
		private final Assignment cCode6Assignment_10 = (Assignment)cGroup.eContents().get(10);
		private final RuleCall cCode6IDTerminalRuleCall_10_0 = (RuleCall)cCode6Assignment_10.eContents().get(0);
		
		//PRIFunction:
		//    code1=ID
		//    COLON
		//    ( code2=ID )?
		//    COLON
		//    ( code3=ID )?
		//    COLON
		//    ( code4=ID )?
		//    COLON
		//    ( code5=ID )?
		//    COLON
		//    ( code6=ID )?
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//code1=ID
		//COLON
		//( code2=ID )?
		//COLON
		//( code3=ID )?
		//COLON
		//( code4=ID )?
		//COLON
		//( code5=ID )?
		//COLON
		//( code6=ID )?
		public Group getGroup() { return cGroup; }
		
		//code1=ID
		public Assignment getCode1Assignment_0() { return cCode1Assignment_0; }
		
		//ID
		public RuleCall getCode1IDTerminalRuleCall_0_0() { return cCode1IDTerminalRuleCall_0_0; }
		
		//COLON
		public RuleCall getCOLONTerminalRuleCall_1() { return cCOLONTerminalRuleCall_1; }
		
		//( code2=ID )?
		public Assignment getCode2Assignment_2() { return cCode2Assignment_2; }
		
		//ID
		public RuleCall getCode2IDTerminalRuleCall_2_0() { return cCode2IDTerminalRuleCall_2_0; }
		
		//COLON
		public RuleCall getCOLONTerminalRuleCall_3() { return cCOLONTerminalRuleCall_3; }
		
		//( code3=ID )?
		public Assignment getCode3Assignment_4() { return cCode3Assignment_4; }
		
		//ID
		public RuleCall getCode3IDTerminalRuleCall_4_0() { return cCode3IDTerminalRuleCall_4_0; }
		
		//COLON
		public RuleCall getCOLONTerminalRuleCall_5() { return cCOLONTerminalRuleCall_5; }
		
		//( code4=ID )?
		public Assignment getCode4Assignment_6() { return cCode4Assignment_6; }
		
		//ID
		public RuleCall getCode4IDTerminalRuleCall_6_0() { return cCode4IDTerminalRuleCall_6_0; }
		
		//COLON
		public RuleCall getCOLONTerminalRuleCall_7() { return cCOLONTerminalRuleCall_7; }
		
		//( code5=ID )?
		public Assignment getCode5Assignment_8() { return cCode5Assignment_8; }
		
		//ID
		public RuleCall getCode5IDTerminalRuleCall_8_0() { return cCode5IDTerminalRuleCall_8_0; }
		
		//COLON
		public RuleCall getCOLONTerminalRuleCall_9() { return cCOLONTerminalRuleCall_9; }
		
		//( code6=ID )?
		public Assignment getCode6Assignment_10() { return cCode6Assignment_10; }
		
		//ID
		public RuleCall getCode6IDTerminalRuleCall_10_0() { return cCode6IDTerminalRuleCall_10_0; }
	}
	public class MessageBodyFunctionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "io.thlaegler.edifact.Edilang.MessageBodyFunction");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cTypeAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cTypeIDTerminalRuleCall_0_0 = (RuleCall)cTypeAssignment_0.eContents().get(0);
		private final RuleCall cCOLONTerminalRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		private final Assignment cVersionAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cVersionIDTerminalRuleCall_2_0 = (RuleCall)cVersionAssignment_2.eContents().get(0);
		private final RuleCall cCOLONTerminalRuleCall_3 = (RuleCall)cGroup.eContents().get(3);
		private final Assignment cReleaseAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cReleaseIDTerminalRuleCall_4_0 = (RuleCall)cReleaseAssignment_4.eContents().get(0);
		private final RuleCall cCOLONTerminalRuleCall_5 = (RuleCall)cGroup.eContents().get(5);
		private final Assignment cControllingAgencyAssignment_6 = (Assignment)cGroup.eContents().get(6);
		private final RuleCall cControllingAgencyIDTerminalRuleCall_6_0 = (RuleCall)cControllingAgencyAssignment_6.eContents().get(0);
		private final Group cGroup_7 = (Group)cGroup.eContents().get(7);
		private final RuleCall cCOLONTerminalRuleCall_7_0 = (RuleCall)cGroup_7.eContents().get(0);
		private final Assignment cMoreAssignment_7_1 = (Assignment)cGroup_7.eContents().get(1);
		private final RuleCall cMoreIDTerminalRuleCall_7_1_0 = (RuleCall)cMoreAssignment_7_1.eContents().get(0);
		
		//MessageBodyFunction:
		//    type=ID
		//    COLON
		//    ( version=ID )?
		//    COLON
		//    ( release=ID )?
		//    COLON
		//    ( controllingAgency=ID )?
		//    (
		//        COLON
		//        more=ID
		//    )?
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//type=ID
		//COLON
		//( version=ID )?
		//COLON
		//( release=ID )?
		//COLON
		//( controllingAgency=ID )?
		//(
		//    COLON
		//    more=ID
		//)?
		public Group getGroup() { return cGroup; }
		
		//type=ID
		public Assignment getTypeAssignment_0() { return cTypeAssignment_0; }
		
		//ID
		public RuleCall getTypeIDTerminalRuleCall_0_0() { return cTypeIDTerminalRuleCall_0_0; }
		
		//COLON
		public RuleCall getCOLONTerminalRuleCall_1() { return cCOLONTerminalRuleCall_1; }
		
		//( version=ID )?
		public Assignment getVersionAssignment_2() { return cVersionAssignment_2; }
		
		//ID
		public RuleCall getVersionIDTerminalRuleCall_2_0() { return cVersionIDTerminalRuleCall_2_0; }
		
		//COLON
		public RuleCall getCOLONTerminalRuleCall_3() { return cCOLONTerminalRuleCall_3; }
		
		//( release=ID )?
		public Assignment getReleaseAssignment_4() { return cReleaseAssignment_4; }
		
		//ID
		public RuleCall getReleaseIDTerminalRuleCall_4_0() { return cReleaseIDTerminalRuleCall_4_0; }
		
		//COLON
		public RuleCall getCOLONTerminalRuleCall_5() { return cCOLONTerminalRuleCall_5; }
		
		//( controllingAgency=ID )?
		public Assignment getControllingAgencyAssignment_6() { return cControllingAgencyAssignment_6; }
		
		//ID
		public RuleCall getControllingAgencyIDTerminalRuleCall_6_0() { return cControllingAgencyIDTerminalRuleCall_6_0; }
		
		//(
		//    COLON
		//    more=ID
		//)?
		public Group getGroup_7() { return cGroup_7; }
		
		//COLON
		public RuleCall getCOLONTerminalRuleCall_7_0() { return cCOLONTerminalRuleCall_7_0; }
		
		//more=ID
		public Assignment getMoreAssignment_7_1() { return cMoreAssignment_7_1; }
		
		//ID
		public RuleCall getMoreIDTerminalRuleCall_7_1_0() { return cMoreIDTerminalRuleCall_7_1_0; }
	}
	public class MSGFunctionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "io.thlaegler.edifact.Edilang.MSGFunction");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cBusinessFunctionAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cBusinessFunctionIDTerminalRuleCall_0_0 = (RuleCall)cBusinessFunctionAssignment_0.eContents().get(0);
		private final RuleCall cCOLONTerminalRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		private final Assignment cMessageFunction1Assignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cMessageFunction1IDTerminalRuleCall_2_0 = (RuleCall)cMessageFunction1Assignment_2.eContents().get(0);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final RuleCall cCOLONTerminalRuleCall_3_0 = (RuleCall)cGroup_3.eContents().get(0);
		private final Assignment cCodeListResponsibleAgencyAssignment_3_1 = (Assignment)cGroup_3.eContents().get(1);
		private final RuleCall cCodeListResponsibleAgencyIDTerminalRuleCall_3_1_0 = (RuleCall)cCodeListResponsibleAgencyAssignment_3_1.eContents().get(0);
		private final Group cGroup_3_2 = (Group)cGroup_3.eContents().get(2);
		private final RuleCall cCOLONTerminalRuleCall_3_2_0 = (RuleCall)cGroup_3_2.eContents().get(0);
		private final Assignment cMessageFunction2Assignment_3_2_1 = (Assignment)cGroup_3_2.eContents().get(1);
		private final RuleCall cMessageFunction2IDTerminalRuleCall_3_2_1_0 = (RuleCall)cMessageFunction2Assignment_3_2_1.eContents().get(0);
		
		//MSGFunction:
		//    ( businessFunction=ID )?
		//    COLON
		//    messageFunction1=ID
		//    (
		//        COLON
		//        codeListResponsibleAgency=ID
		//        (
		//            COLON
		//            messageFunction2=ID
		//        )?
		//    )?
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//( businessFunction=ID )?
		//COLON
		//messageFunction1=ID
		//(
		//    COLON
		//    codeListResponsibleAgency=ID
		//    (
		//        COLON
		//        messageFunction2=ID
		//    )?
		//)?
		public Group getGroup() { return cGroup; }
		
		//( businessFunction=ID )?
		public Assignment getBusinessFunctionAssignment_0() { return cBusinessFunctionAssignment_0; }
		
		//ID
		public RuleCall getBusinessFunctionIDTerminalRuleCall_0_0() { return cBusinessFunctionIDTerminalRuleCall_0_0; }
		
		//COLON
		public RuleCall getCOLONTerminalRuleCall_1() { return cCOLONTerminalRuleCall_1; }
		
		//messageFunction1=ID
		public Assignment getMessageFunction1Assignment_2() { return cMessageFunction1Assignment_2; }
		
		//ID
		public RuleCall getMessageFunction1IDTerminalRuleCall_2_0() { return cMessageFunction1IDTerminalRuleCall_2_0; }
		
		//(
		//    COLON
		//    codeListResponsibleAgency=ID
		//    (
		//        COLON
		//        messageFunction2=ID
		//    )?
		//)?
		public Group getGroup_3() { return cGroup_3; }
		
		//COLON
		public RuleCall getCOLONTerminalRuleCall_3_0() { return cCOLONTerminalRuleCall_3_0; }
		
		//codeListResponsibleAgency=ID
		public Assignment getCodeListResponsibleAgencyAssignment_3_1() { return cCodeListResponsibleAgencyAssignment_3_1; }
		
		//ID
		public RuleCall getCodeListResponsibleAgencyIDTerminalRuleCall_3_1_0() { return cCodeListResponsibleAgencyIDTerminalRuleCall_3_1_0; }
		
		//(
		//    COLON
		//    messageFunction2=ID
		//)?
		public Group getGroup_3_2() { return cGroup_3_2; }
		
		//COLON
		public RuleCall getCOLONTerminalRuleCall_3_2_0() { return cCOLONTerminalRuleCall_3_2_0; }
		
		//messageFunction2=ID
		public Assignment getMessageFunction2Assignment_3_2_1() { return cMessageFunction2Assignment_3_2_1; }
		
		//ID
		public RuleCall getMessageFunction2IDTerminalRuleCall_3_2_1_0() { return cMessageFunction2IDTerminalRuleCall_3_2_1_0; }
	}
	public class ProductFunctionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "io.thlaegler.edifact.Edilang.ProductFunction");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cBookingClassAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cBookingClassIDTerminalRuleCall_0_0 = (RuleCall)cBookingClassAssignment_0.eContents().get(0);
		private final Group cGroup_1 = (Group)cGroup.eContents().get(1);
		private final RuleCall cCOLONTerminalRuleCall_1_0 = (RuleCall)cGroup_1.eContents().get(0);
		private final Assignment cAvailAssignment_1_1 = (Assignment)cGroup_1.eContents().get(1);
		private final RuleCall cAvailIDTerminalRuleCall_1_1_0 = (RuleCall)cAvailAssignment_1_1.eContents().get(0);
		
		//ProductFunction:
		//    bookingClass=ID
		//    (
		//        COLON
		//        avail=ID
		//    )?
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//bookingClass=ID
		//(
		//    COLON
		//    avail=ID
		//)?
		public Group getGroup() { return cGroup; }
		
		//bookingClass=ID
		public Assignment getBookingClassAssignment_0() { return cBookingClassAssignment_0; }
		
		//ID
		public RuleCall getBookingClassIDTerminalRuleCall_0_0() { return cBookingClassIDTerminalRuleCall_0_0; }
		
		//(
		//    COLON
		//    avail=ID
		//)?
		public Group getGroup_1() { return cGroup_1; }
		
		//COLON
		public RuleCall getCOLONTerminalRuleCall_1_0() { return cCOLONTerminalRuleCall_1_0; }
		
		//avail=ID
		public Assignment getAvailAssignment_1_1() { return cAvailAssignment_1_1; }
		
		//ID
		public RuleCall getAvailIDTerminalRuleCall_1_1_0() { return cAvailIDTerminalRuleCall_1_1_0; }
	}
	public class SystemDetailFunctionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "io.thlaegler.edifact.Edilang.SystemDetailFunction");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cCompanyIdentificationAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cCompanyIdentificationIDTerminalRuleCall_0_0 = (RuleCall)cCompanyIdentificationAssignment_0.eContents().get(0);
		private final Group cGroup_1 = (Group)cGroup.eContents().get(1);
		private final RuleCall cCOLONTerminalRuleCall_1_0 = (RuleCall)cGroup_1.eContents().get(0);
		private final Assignment cLocationCodeAssignment_1_1 = (Assignment)cGroup_1.eContents().get(1);
		private final RuleCall cLocationCodeIDTerminalRuleCall_1_1_0 = (RuleCall)cLocationCodeAssignment_1_1.eContents().get(0);
		private final Group cGroup_1_2 = (Group)cGroup_1.eContents().get(2);
		private final RuleCall cCOLONTerminalRuleCall_1_2_0 = (RuleCall)cGroup_1_2.eContents().get(0);
		private final Assignment cLocationNameAssignment_1_2_1 = (Assignment)cGroup_1_2.eContents().get(1);
		private final RuleCall cLocationNameIDTerminalRuleCall_1_2_1_0 = (RuleCall)cLocationNameAssignment_1_2_1.eContents().get(0);
		
		//SystemDetailFunction:
		//    companyIdentification=ID
		//    (
		//        COLON
		//        locationCode=ID
		//        (
		//            COLON
		//            locationName=ID
		//        )?
		//    )?
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//companyIdentification=ID
		//(
		//    COLON
		//    locationCode=ID
		//    (
		//        COLON
		//        locationName=ID
		//    )?
		//)?
		public Group getGroup() { return cGroup; }
		
		//companyIdentification=ID
		public Assignment getCompanyIdentificationAssignment_0() { return cCompanyIdentificationAssignment_0; }
		
		//ID
		public RuleCall getCompanyIdentificationIDTerminalRuleCall_0_0() { return cCompanyIdentificationIDTerminalRuleCall_0_0; }
		
		//(
		//    COLON
		//    locationCode=ID
		//    (
		//        COLON
		//        locationName=ID
		//    )?
		//)?
		public Group getGroup_1() { return cGroup_1; }
		
		//COLON
		public RuleCall getCOLONTerminalRuleCall_1_0() { return cCOLONTerminalRuleCall_1_0; }
		
		//locationCode=ID
		public Assignment getLocationCodeAssignment_1_1() { return cLocationCodeAssignment_1_1; }
		
		//ID
		public RuleCall getLocationCodeIDTerminalRuleCall_1_1_0() { return cLocationCodeIDTerminalRuleCall_1_1_0; }
		
		//(
		//    COLON
		//    locationName=ID
		//)?
		public Group getGroup_1_2() { return cGroup_1_2; }
		
		//COLON
		public RuleCall getCOLONTerminalRuleCall_1_2_0() { return cCOLONTerminalRuleCall_1_2_0; }
		
		//locationName=ID
		public Assignment getLocationNameAssignment_1_2_1() { return cLocationNameAssignment_1_2_1; }
		
		//ID
		public RuleCall getLocationNameIDTerminalRuleCall_1_2_1_0() { return cLocationNameIDTerminalRuleCall_1_2_1_0; }
	}
	public class OriginatorFunctionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "io.thlaegler.edifact.Edilang.OriginatorFunction");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cCountryCodeAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cCountryCodeIDTerminalRuleCall_0_0 = (RuleCall)cCountryCodeAssignment_0.eContents().get(0);
		private final Group cGroup_1 = (Group)cGroup.eContents().get(1);
		private final RuleCall cCOLONTerminalRuleCall_1_0 = (RuleCall)cGroup_1.eContents().get(0);
		private final Assignment cCurrencyCodeAssignment_1_1 = (Assignment)cGroup_1.eContents().get(1);
		private final RuleCall cCurrencyCodeIDTerminalRuleCall_1_1_0 = (RuleCall)cCurrencyCodeAssignment_1_1.eContents().get(0);
		private final Group cGroup_1_2 = (Group)cGroup_1.eContents().get(2);
		private final RuleCall cCOLONTerminalRuleCall_1_2_0 = (RuleCall)cGroup_1_2.eContents().get(0);
		private final Assignment cLanguageCodeAssignment_1_2_1 = (Assignment)cGroup_1_2.eContents().get(1);
		private final RuleCall cLanguageCodeIDTerminalRuleCall_1_2_1_0 = (RuleCall)cLanguageCodeAssignment_1_2_1.eContents().get(0);
		
		//OriginatorFunction:
		//    countryCode=ID
		//    (
		//        COLON
		//        currencyCode=ID
		//        (
		//            COLON
		//            languageCode=ID
		//        )?
		//    )?
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//countryCode=ID
		//(
		//    COLON
		//    currencyCode=ID
		//    (
		//        COLON
		//        languageCode=ID
		//    )?
		//)?
		public Group getGroup() { return cGroup; }
		
		//countryCode=ID
		public Assignment getCountryCodeAssignment_0() { return cCountryCodeAssignment_0; }
		
		//ID
		public RuleCall getCountryCodeIDTerminalRuleCall_0_0() { return cCountryCodeIDTerminalRuleCall_0_0; }
		
		//(
		//    COLON
		//    currencyCode=ID
		//    (
		//        COLON
		//        languageCode=ID
		//    )?
		//)?
		public Group getGroup_1() { return cGroup_1; }
		
		//COLON
		public RuleCall getCOLONTerminalRuleCall_1_0() { return cCOLONTerminalRuleCall_1_0; }
		
		//currencyCode=ID
		public Assignment getCurrencyCodeAssignment_1_1() { return cCurrencyCodeAssignment_1_1; }
		
		//ID
		public RuleCall getCurrencyCodeIDTerminalRuleCall_1_1_0() { return cCurrencyCodeIDTerminalRuleCall_1_1_0; }
		
		//(
		//    COLON
		//    languageCode=ID
		//)?
		public Group getGroup_1_2() { return cGroup_1_2; }
		
		//COLON
		public RuleCall getCOLONTerminalRuleCall_1_2_0() { return cCOLONTerminalRuleCall_1_2_0; }
		
		//languageCode=ID
		public Assignment getLanguageCodeAssignment_1_2_1() { return cLanguageCodeAssignment_1_2_1; }
		
		//ID
		public RuleCall getLanguageCodeIDTerminalRuleCall_1_2_1_0() { return cLanguageCodeIDTerminalRuleCall_1_2_1_0; }
	}
	public class OriginatorIdentificationFunctionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "io.thlaegler.edifact.Edilang.OriginatorIdentificationFunction");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cTravelAgentIdAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cTravelAgentIdIDTerminalRuleCall_0_0 = (RuleCall)cTravelAgentIdAssignment_0.eContents().get(0);
		private final Group cGroup_1 = (Group)cGroup.eContents().get(1);
		private final RuleCall cCOLONTerminalRuleCall_1_0 = (RuleCall)cGroup_1.eContents().get(0);
		private final Assignment cInHouseId1Assignment_1_1 = (Assignment)cGroup_1.eContents().get(1);
		private final RuleCall cInHouseId1IDTerminalRuleCall_1_1_0 = (RuleCall)cInHouseId1Assignment_1_1.eContents().get(0);
		private final Group cGroup_1_2 = (Group)cGroup_1.eContents().get(2);
		private final RuleCall cCOLONTerminalRuleCall_1_2_0 = (RuleCall)cGroup_1_2.eContents().get(0);
		private final Assignment cInHouseId2Assignment_1_2_1 = (Assignment)cGroup_1_2.eContents().get(1);
		private final RuleCall cInHouseId2IDTerminalRuleCall_1_2_1_0 = (RuleCall)cInHouseId2Assignment_1_2_1.eContents().get(0);
		
		//OriginatorIdentificationFunction:
		//    travelAgentId=ID
		//    (
		//        COLON
		//        inHouseId1=ID?
		//        (
		//            COLON
		//            inHouseId2=ID
		//        )?
		//    )?
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//travelAgentId=ID
		//(
		//    COLON
		//    inHouseId1=ID?
		//    (
		//        COLON
		//        inHouseId2=ID
		//    )?
		//)?
		public Group getGroup() { return cGroup; }
		
		//travelAgentId=ID
		public Assignment getTravelAgentIdAssignment_0() { return cTravelAgentIdAssignment_0; }
		
		//ID
		public RuleCall getTravelAgentIdIDTerminalRuleCall_0_0() { return cTravelAgentIdIDTerminalRuleCall_0_0; }
		
		//(
		//    COLON
		//    inHouseId1=ID?
		//    (
		//        COLON
		//        inHouseId2=ID
		//    )?
		//)?
		public Group getGroup_1() { return cGroup_1; }
		
		//COLON
		public RuleCall getCOLONTerminalRuleCall_1_0() { return cCOLONTerminalRuleCall_1_0; }
		
		//inHouseId1=ID?
		public Assignment getInHouseId1Assignment_1_1() { return cInHouseId1Assignment_1_1; }
		
		//ID
		public RuleCall getInHouseId1IDTerminalRuleCall_1_1_0() { return cInHouseId1IDTerminalRuleCall_1_1_0; }
		
		//(
		//    COLON
		//    inHouseId2=ID
		//)?
		public Group getGroup_1_2() { return cGroup_1_2; }
		
		//COLON
		public RuleCall getCOLONTerminalRuleCall_1_2_0() { return cCOLONTerminalRuleCall_1_2_0; }
		
		//inHouseId2=ID
		public Assignment getInHouseId2Assignment_1_2_1() { return cInHouseId2Assignment_1_2_1; }
		
		//ID
		public RuleCall getInHouseId2IDTerminalRuleCall_1_2_1_0() { return cInHouseId2IDTerminalRuleCall_1_2_1_0; }
	}
	public class LocationFunctionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "io.thlaegler.edifact.Edilang.LocationFunction");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cLocationIdAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cLocationIdIDTerminalRuleCall_0_0 = (RuleCall)cLocationIdAssignment_0.eContents().get(0);
		private final Group cGroup_1 = (Group)cGroup.eContents().get(1);
		private final RuleCall cCOLONTerminalRuleCall_1_0 = (RuleCall)cGroup_1.eContents().get(0);
		private final Assignment cLocationNameAssignment_1_1 = (Assignment)cGroup_1.eContents().get(1);
		private final RuleCall cLocationNameIDTerminalRuleCall_1_1_0 = (RuleCall)cLocationNameAssignment_1_1.eContents().get(0);
		
		//LocationFunction:
		//    locationId=ID
		//    (
		//        COLON
		//        locationName=ID
		//    )?
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//locationId=ID
		//(
		//    COLON
		//    locationName=ID
		//)?
		public Group getGroup() { return cGroup; }
		
		//locationId=ID
		public Assignment getLocationIdAssignment_0() { return cLocationIdAssignment_0; }
		
		//ID
		public RuleCall getLocationIdIDTerminalRuleCall_0_0() { return cLocationIdIDTerminalRuleCall_0_0; }
		
		//(
		//    COLON
		//    locationName=ID
		//)?
		public Group getGroup_1() { return cGroup_1; }
		
		//COLON
		public RuleCall getCOLONTerminalRuleCall_1_0() { return cCOLONTerminalRuleCall_1_0; }
		
		//locationName=ID
		public Assignment getLocationNameAssignment_1_1() { return cLocationNameAssignment_1_1; }
		
		//ID
		public RuleCall getLocationNameIDTerminalRuleCall_1_1_0() { return cLocationNameIDTerminalRuleCall_1_1_0; }
	}
	public class InterchangerFunctionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "io.thlaegler.edifact.Edilang.InterchangerFunction");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cInterchangeAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cInterchangeIDTerminalRuleCall_0_0 = (RuleCall)cInterchangeAssignment_0.eContents().get(0);
		private final Group cGroup_1 = (Group)cGroup.eContents().get(1);
		private final RuleCall cCOLONTerminalRuleCall_1_0 = (RuleCall)cGroup_1.eContents().get(0);
		private final Assignment cInterchange2Assignment_1_1 = (Assignment)cGroup_1.eContents().get(1);
		private final RuleCall cInterchange2IDTerminalRuleCall_1_1_0 = (RuleCall)cInterchange2Assignment_1_1.eContents().get(0);
		
		//InterchangerFunction:
		//    interchange=ID
		//    (
		//        COLON
		//        interchange2=ID
		//    )?
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//interchange=ID
		//(
		//    COLON
		//    interchange2=ID
		//)?
		public Group getGroup() { return cGroup; }
		
		//interchange=ID
		public Assignment getInterchangeAssignment_0() { return cInterchangeAssignment_0; }
		
		//ID
		public RuleCall getInterchangeIDTerminalRuleCall_0_0() { return cInterchangeIDTerminalRuleCall_0_0; }
		
		//(
		//    COLON
		//    interchange2=ID
		//)?
		public Group getGroup_1() { return cGroup_1; }
		
		//COLON
		public RuleCall getCOLONTerminalRuleCall_1_0() { return cCOLONTerminalRuleCall_1_0; }
		
		//interchange2=ID
		public Assignment getInterchange2Assignment_1_1() { return cInterchange2Assignment_1_1; }
		
		//ID
		public RuleCall getInterchange2IDTerminalRuleCall_1_1_0() { return cInterchange2IDTerminalRuleCall_1_1_0; }
	}
	public class DateOnlyFunctionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "io.thlaegler.edifact.Edilang.DateOnlyFunction");
		private final Assignment cDate6Assignment = (Assignment)rule.eContents().get(1);
		private final RuleCall cDate6IDTerminalRuleCall_0 = (RuleCall)cDate6Assignment.eContents().get(0);
		
		//DateOnlyFunction:
		//    date6=ID
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//date6=ID
		public Assignment getDate6Assignment() { return cDate6Assignment; }
		
		//ID
		public RuleCall getDate6IDTerminalRuleCall_0() { return cDate6IDTerminalRuleCall_0; }
	}
	public class DateAndTimeFunctionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "io.thlaegler.edifact.Edilang.DateAndTimeFunction");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cDate6Assignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cDate6IDTerminalRuleCall_0_0 = (RuleCall)cDate6Assignment_0.eContents().get(0);
		private final RuleCall cCOLONTerminalRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		private final Assignment cTime4Assignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cTime4IDTerminalRuleCall_2_0 = (RuleCall)cTime4Assignment_2.eContents().get(0);
		
		//DateAndTimeFunction:
		//    date6=ID
		//    COLON
		//    time4=ID
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//date6=ID
		//COLON
		//time4=ID
		public Group getGroup() { return cGroup; }
		
		//date6=ID
		public Assignment getDate6Assignment_0() { return cDate6Assignment_0; }
		
		//ID
		public RuleCall getDate6IDTerminalRuleCall_0_0() { return cDate6IDTerminalRuleCall_0_0; }
		
		//COLON
		public RuleCall getCOLONTerminalRuleCall_1() { return cCOLONTerminalRuleCall_1; }
		
		//time4=ID
		public Assignment getTime4Assignment_2() { return cTime4Assignment_2; }
		
		//ID
		public RuleCall getTime4IDTerminalRuleCall_2_0() { return cTime4IDTerminalRuleCall_2_0; }
	}
	
	
	private final EdiModelElements pEdiModel;
	private final AbstractEdiSegmentElements pAbstractEdiSegment;
	private final UNASegmentElements pUNASegment;
	private final UNBSegmentElements pUNBSegment;
	private final UNHSegmentElements pUNHSegment;
	private final MSGSegmentElements pMSGSegment;
	private final ORGSegmentElements pORGSegment;
	private final POCSegmentElements pPOCSegment;
	private final ODISegmentElements pODISegment;
	private final UCISegmentElements pUCISegment;
	private final PDISegmentElements pPDISegment;
	private final TVLSegmentElements pTVLSegment;
	private final RPISegmentElements pRPISegment;
	private final MOASegmentElements pMOASegment;
	private final LINSegmentElements pLINSegment;
	private final PRISegmentElements pPRISegment;
	private final QTYSegmentElements pQTYSegment;
	private final CUXSegmentElements pCUXSegment;
	private final TAXSegmentElements pTAXSegment;
	private final RFFSegmentElements pRFFSegment;
	private final NADSegmentElements pNADSegment;
	private final DTMSegmentElements pDTMSegment;
	private final BGMSegmentElements pBGMSegment;
	private final PATSegmentElements pPATSegment;
	private final FTXSegmentElements pFTXSegment;
	private final ERCSegmentElements pERCSegment;
	private final CNTSegmentElements pCNTSegment;
	private final CTASegmentElements pCTASegment;
	private final PCISegmentElements pPCISegment;
	private final UNSSegmentElements pUNSSegment;
	private final UNTSegmentElements pUNTSegment;
	private final UNZSegmentElements pUNZSegment;
	private final AbstractEdiFunctionElements pAbstractEdiFunction;
	private final PRIFunctionElements pPRIFunction;
	private final MessageBodyFunctionElements pMessageBodyFunction;
	private final MSGFunctionElements pMSGFunction;
	private final ProductFunctionElements pProductFunction;
	private final SystemDetailFunctionElements pSystemDetailFunction;
	private final OriginatorFunctionElements pOriginatorFunction;
	private final OriginatorIdentificationFunctionElements pOriginatorIdentificationFunction;
	private final LocationFunctionElements pLocationFunction;
	private final InterchangerFunctionElements pInterchangerFunction;
	private final DateOnlyFunctionElements pDateOnlyFunction;
	private final DateAndTimeFunctionElements pDateAndTimeFunction;
	private final TerminalRule tQUOTE_AND_NL;
	private final TerminalRule tPLUS;
	private final TerminalRule tCOLON;
	private final TerminalRule tINT;
	private final TerminalRule tID;
	private final TerminalRule tSTRING;
	private final TerminalRule tWS;
	
	private final Grammar grammar;
	
	private final TerminalsGrammarAccess gaTerminals;

	@Inject
	public EdilangGrammarAccess(GrammarProvider grammarProvider,
			TerminalsGrammarAccess gaTerminals) {
		this.grammar = internalFindGrammar(grammarProvider);
		this.gaTerminals = gaTerminals;
		this.pEdiModel = new EdiModelElements();
		this.pAbstractEdiSegment = new AbstractEdiSegmentElements();
		this.pUNASegment = new UNASegmentElements();
		this.pUNBSegment = new UNBSegmentElements();
		this.pUNHSegment = new UNHSegmentElements();
		this.pMSGSegment = new MSGSegmentElements();
		this.pORGSegment = new ORGSegmentElements();
		this.pPOCSegment = new POCSegmentElements();
		this.pODISegment = new ODISegmentElements();
		this.pUCISegment = new UCISegmentElements();
		this.pPDISegment = new PDISegmentElements();
		this.pTVLSegment = new TVLSegmentElements();
		this.pRPISegment = new RPISegmentElements();
		this.pMOASegment = new MOASegmentElements();
		this.pLINSegment = new LINSegmentElements();
		this.pPRISegment = new PRISegmentElements();
		this.pQTYSegment = new QTYSegmentElements();
		this.pCUXSegment = new CUXSegmentElements();
		this.pTAXSegment = new TAXSegmentElements();
		this.pRFFSegment = new RFFSegmentElements();
		this.pNADSegment = new NADSegmentElements();
		this.pDTMSegment = new DTMSegmentElements();
		this.pBGMSegment = new BGMSegmentElements();
		this.pPATSegment = new PATSegmentElements();
		this.pFTXSegment = new FTXSegmentElements();
		this.pERCSegment = new ERCSegmentElements();
		this.pCNTSegment = new CNTSegmentElements();
		this.pCTASegment = new CTASegmentElements();
		this.pPCISegment = new PCISegmentElements();
		this.pUNSSegment = new UNSSegmentElements();
		this.pUNTSegment = new UNTSegmentElements();
		this.pUNZSegment = new UNZSegmentElements();
		this.pAbstractEdiFunction = new AbstractEdiFunctionElements();
		this.pPRIFunction = new PRIFunctionElements();
		this.pMessageBodyFunction = new MessageBodyFunctionElements();
		this.pMSGFunction = new MSGFunctionElements();
		this.pProductFunction = new ProductFunctionElements();
		this.pSystemDetailFunction = new SystemDetailFunctionElements();
		this.pOriginatorFunction = new OriginatorFunctionElements();
		this.pOriginatorIdentificationFunction = new OriginatorIdentificationFunctionElements();
		this.pLocationFunction = new LocationFunctionElements();
		this.pInterchangerFunction = new InterchangerFunctionElements();
		this.pDateOnlyFunction = new DateOnlyFunctionElements();
		this.pDateAndTimeFunction = new DateAndTimeFunctionElements();
		this.tQUOTE_AND_NL = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "io.thlaegler.edifact.Edilang.QUOTE_AND_NL");
		this.tPLUS = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "io.thlaegler.edifact.Edilang.PLUS");
		this.tCOLON = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "io.thlaegler.edifact.Edilang.COLON");
		this.tINT = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "io.thlaegler.edifact.Edilang.INT");
		this.tID = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "io.thlaegler.edifact.Edilang.ID");
		this.tSTRING = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "io.thlaegler.edifact.Edilang.STRING");
		this.tWS = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "io.thlaegler.edifact.Edilang.WS");
	}
	
	protected Grammar internalFindGrammar(GrammarProvider grammarProvider) {
		Grammar grammar = grammarProvider.getGrammar(this);
		while (grammar != null) {
			if ("io.thlaegler.edifact.Edilang".equals(grammar.getName())) {
				return grammar;
			}
			List<Grammar> grammars = grammar.getUsedGrammars();
			if (!grammars.isEmpty()) {
				grammar = grammars.iterator().next();
			} else {
				return null;
			}
		}
		return grammar;
	}
	
	@Override
	public Grammar getGrammar() {
		return grammar;
	}
	
	
	public TerminalsGrammarAccess getTerminalsGrammarAccess() {
		return gaTerminals;
	}

	
	//EdiModel:
	//    segments+=AbstractEdiSegment*;
	public EdiModelElements getEdiModelAccess() {
		return pEdiModel;
	}
	
	public ParserRule getEdiModelRule() {
		return getEdiModelAccess().getRule();
	}
	
	//AbstractEdiSegment:
	//    UNASegment |
	//    UNBSegment | // header for trailer UNZ
	//    UNHSegment | // header for trailer UNT
	//    MSGSegment | // Message type identification
	//    ORGSegment | // Organisation
	//    POCSegment | // Purpose of conveyance call
	//    ODISegment | // Origin/destination
	//    UCISegment | // ?
	//    PDISegment | // Person demographic information
	//    RPISegment | // ?
	//    TVLSegment | // Travel itinerary
	//    BGMSegment | // Beginning of message
	//    DTMSegment | // Date/time/period
	//    NADSegment | // Name and address
	//    RFFSegment | // Reference
	//    CUXSegment | // Currencies
	//    TAXSegment | // Duty/tax/fee details
	//    LINSegment | // Line item
	//    QTYSegment | // Quantity
	//    MOASegment | // Monetary amount
	//    PRISegment | // Price details
	//    PATSegment | // Payment terms basis
	//    PCISegment | // Package identification
	//    CTASegment | // Contact information
	//    CNTSegment | // Control total
	//    FTXSegment | // Free text
	//    ERCSegment | // Application error information
	////    ADR  Address
	////    AGR  Agreement identification
	////    AJT  Adjustment details
	////    ALC  Allowance or charge
	////    ALI  Additional information
	////+   APP  Applicability
	////    APR  Additional price information
	////    ARD  Monetary amount function
	////    ARR  Array information
	////    ASI  Array structure identification
	////    ATT  Attribute
	////    AUT  Authentication result
	////+   BAS  Basis
	////    BII  Structure identification
	////    BUS  Business function
	////    CAV  Characteristic value
	////    CCD  Credit cover details
	////    CCI  Characteristic/class id
	////    CDI  Physical or logical state
	////    CDS  Code set identification
	////    CDV  Code value definition
	////    CED  Computer environment details
	////    CIN  Clinical information
	////+   CLA  Clause identification
	////    CLI  Clinical intervention
	////    CMP  Composite data element identification
	////    CNI  Consignment information
	////    COD  Component details
	////    COM  Communication contact
	////    COT  Contribution details
	////    CPI  Charge payment instructions
	////    CPS  Consignment packing sequence
	////    CPT  Account identification
	////    CST  Customs status of goods
	////    DAM  Damage
	////    DFN  Definition function
	////    DGS  Dangerous goods
	////    DII  Directory identification
	////    DIM  Dimensions
	////    DLI  Document line identification
	////    DLM  Delivery limitations
	////    DMS  Document/message summary
	////    DOC  Document/message details
	////    DRD  Data representation details
	////    DSG  Dosage administration
	////    DSI  Data set identification
	////    EDT  Editing details
	////    EFI  External file link identification
	////    ELM  Simple data element details
	////    ELU  Data element usage details
	////    ELV  Element value definition
	////    EMP  Employment details
	////    EQA  Attached equipment
	////    EQD  Equipment details
	////    EQN  Number of units
	////    ERP  Error point details
	////*   EVE  Event
	////X   EVT  Event
	////    FCA  Financial charges allocation
	////    FII  Financial institution information
	////    FNS  Footnote set
	////    FNT  Footnote
	////    FOR  Formula
	////    FSQ  Formula sequence
	////    GDS  Nature of cargo
	////    GEI  Processing information
	////    GID  Goods item details
	////    GIN  Goods identity number
	////    GIR  Related identification numbers
	////X   GIS  General indicator
	////    GOR  Governmental requirements
	////    GRU  Segment group usage details
	////    HAN  Handling instructions
	////    HYN  Hierarchy information
	////    ICD  Insurance cover description
	////    IDE  Identity
	////*   IFD  Information detail
	////    IHC  Person characteristic
	////    IMD  Item description
	////    IND  Index details
	////    INP  Parties and instruction
	////    INV  Inventory management related details
	////    IRQ  Information required
	////    LAN  Language
	////    LOC  Place/location identification
	////    MEA  Measurements
	////    MEM  Membership details
	////    MKS  Market/sales channel information
	////    NAT  Nationality
	////    PAC  Package
	////    PAI  Payment instructions
	////    PAS  Attendance
	////    PCC  Premium calculation component details
	////*   PCD  Percentage details
	////+   PER  Period related details
	////    PGI  Product group information
	////    PIA  Additional product id
	////    PNA  Party identification
	////    PRC  Process identification
	////+   PRV  Proviso details
	////    PSD  Physical sample description
	////    PTY  Priority
	////    PYT  Payment terms
	////    QRS  Query and response
	////    QUA  Qualification
	////    QVR  Quantity variances
	////    RCS  Requirements and conditions
	////    REL  Relationship
	////    RJL  Accounting journal identification
	////    RNG  Range details
	////    ROD  Risk object type
	////    RSL  Result
	////*   RTE  Rate details
	////    SAL  Remuneration type identification
	////    SCC  Scheduling conditions
	////    SCD  Structure component definition
	////    SEG  Segment identification
	////    SEL  Seal number
	////    SEQ  Sequence details
	////    SFI  Safety information
	////    SGP  Split goods placement
	////    SGU  Segment usage details
	////    SPR  Organisation classification details
	////    SPS  Sampling parameters for summary statistics
	////    STA  Statistics
	////    STC  Statistical concept
	////    STG  Stages
	////    STS  Status
	////    TCC  Transport charge/rate calculations
	////    TDT  Details of transport
	////    TEM  Test method
	////    TMD  Transport movement details
	////    TMP  Temperature
	////    TOD  Terms of delivery or transport
	////    TPL  Transport placement
	////    TRU  Technical rules
	////    TSR  Transport service requirements
	////    VLI  Value list identification
	//    UNSSegment |
	//    UNZSegment | // trailer for header UNB
	//    UNTSegment // trailer for header UNH
	//;
	public AbstractEdiSegmentElements getAbstractEdiSegmentAccess() {
		return pAbstractEdiSegment;
	}
	
	public ParserRule getAbstractEdiSegmentRule() {
		return getAbstractEdiSegmentAccess().getRule();
	}
	
	//UNASegment:
	//    segment="UNA"
	//    COLON
	//    PLUS
	//    ".?"
	//    lineEnd=QUOTE_AND_NL
	//;
	public UNASegmentElements getUNASegmentAccess() {
		return pUNASegment;
	}
	
	public ParserRule getUNASegmentRule() {
		return getUNASegmentAccess().getRule();
	}
	
	////UNB+IATB:1+1APPC+NZ0AV+200120:2136+039I42XXTK0001+++O'
	//UNBSegment:
	//    segment="UNB"
	//    PLUS
	//    (
	//        (syntax=ID)?
	//        COLON
	//        (num1=ID)?
	//    )?
	//    PLUS
	//    ( interchangeSender=InterchangerFunction )?
	//    PLUS
	//    ( interchangeRecipient=InterchangerFunction )?
	//    PLUS
	//    ( dateAndTime+=DateAndTimeFunction )?
	//    PLUS
	//    ( interchangeControlSenderRef=ID )?
	//    (
	//        PLUS
	//        ( interchangeControlRecipientRef=ID )?
	//        (
	//            PLUS
	//            ( fse=ID )?
	//            (
	//                PLUS
	//                ( assiciationCode=ID )?
	//            )?
	//        )?
	//    )?
	//    lineEnd=QUOTE_AND_NL
	//;
	public UNBSegmentElements getUNBSegmentAccess() {
		return pUNBSegment;
	}
	
	public ParserRule getUNBSegmentRule() {
		return getUNBSegmentAccess().getRule();
	}
	
	////UNH+1+PAOREQ:96:2:IA+00012432090782'
	//UNHSegment:
	//    segment="UNH"
	//    PLUS
	//    messageReferenceNumber=ID
	//    PLUS
	//    message=MessageBodyFunction
	//    (
	//        PLUS
	//        commonAccessReference=ID
	//    )?
	//    lineEnd=QUOTE_AND_NL
	//;
	public UNHSegmentElements getUNHSegmentAccess() {
		return pUNHSegment;
	}
	
	public ParserRule getUNHSegmentRule() {
		return getUNHSegmentAccess().getRule();
	}
	
	////MSG+1:46'
	//MSGSegment:
	//    segment="MSG"
	//    PLUS
	//    ( messageFunction=MSGFunction )?
	//    (
	//        PLUS
	//        responseType=ID
	//    )?
	//    lineEnd=QUOTE_AND_NL
	//;
	public MSGSegmentElements getMSGSegmentAccess() {
		return pMSGSegment;
	}
	
	public ParserRule getMSGSegmentRule() {
		return getMSGSegmentAccess().getRule();
	}
	
	////ORG+1A:MUC+27213082:ATHGR28CS+ATH++T+GR:EUR:EN+A9996WSSU+04261178+1A'
	////ORG+NZ:AKL:00++AKL+NZ+A+NZ:NZD+PR'
	//ORGSegment:
	//    segment="ORG"
	//    PLUS
	//    ( systemDetail1=SystemDetailFunction )?
	//    PLUS
	//    ( originatorIdentification=OriginatorIdentificationFunction )?
	//    PLUS
	//    ( location=LocationFunction )?
	//    PLUS
	//    ( systemDetail2=SystemDetailFunction )?
	//    PLUS
	//    ( originatorTypeCode=ID )?
	//    PLUS
	//    ( originator=OriginatorFunction )?
	//    PLUS
	//    ( originatorsAuthorityRequestCode=ID )?
	//    (
	//        PLUS
	//        communicationNumber=ID
	//        (
	//            PLUS
	//            partyIdIdentification=ID
	//        )?
	//    )?
	//    lineEnd=QUOTE_AND_NL
	//;
	public ORGSegmentElements getORGSegmentAccess() {
		return pORGSegment;
	}
	
	public ParserRule getORGSegmentRule() {
		return getORGSegmentAccess().getRule();
	}
	
	////POC+BNE+220120'
	//POCSegment:
	//    segment="POC"
	//    PLUS
	//    (location=ID)?
	//    PLUS
	//    (departureDate=ID)?
	//    (
	//        PLUS
	//        departureTime=ID
	//    )?
	//    lineEnd=QUOTE_AND_NL
	//;
	public POCSegmentElements getPOCSegmentAccess() {
		return pPOCSegment;
	}
	
	public ParserRule getPOCSegmentRule() {
		return getPOCSegmentAccess().getRule();
	}
	
	////ODI+BNE+ZQN'
	//ODISegment:
	//    segment="ODI"
	//    (
	//        PLUS
	//        (origin=ID)?
	//        PLUS
	//        (destination=ID)?
	//    )?
	//    lineEnd=QUOTE_AND_NL
	//;
	public ODISegmentElements getODISegmentAccess() {
		return pODISegment;
	}
	
	public ParserRule getODISegmentRule() {
		return getODISegmentAccess().getRule();
	}
	
	////
	//UCISegment:
	//    segment="UCI"
	//    PLUS
	//    ( interchangeControlReference=ID )?
	//    PLUS
	//    ( interchangeSender=ID )?
	//    PLUS
	//    ( interchangeRecipient=ID )?
	//    PLUS
	//    ( action=ID )?
	//    PLUS
	//    ( syntaxErrorCode=ID )?
	//    PLUS
	//    ( segmentTagCode=ID )?
	//    lineEnd=QUOTE_AND_NL
	//;
	public UCISegmentElements getUCISegmentAccess() {
		return pUCISegment;
	}
	
	public ParserRule getUCISegmentRule() {
		return getUCISegmentAccess().getRule();
	}
	
	////
	//PDISegment:
	//    segment="PDI"
	//    PLUS
	//    ( productDetailsQualifier=ID )?
	//    (
	//        PLUS
	//        products+=ProductFunction
	//    )*
	//    lineEnd=QUOTE_AND_NL
	//;
	public PDISegmentElements getPDISegmentAccess() {
		return pPDISegment;
	}
	
	public ParserRule getPDISegmentRule() {
		return getPDISegmentAccess().getRule();
	}
	
	////TVL+230120+CHC+ZQN+NZ+5641+3+2+P"
	//TVLSegment:
	//    segment="TVL"
	//    PLUS
	//    (
	//        (
	//            dateAndTime+=DateOnlyFunction
	////            (
	////                COLON
	////                dateAndTime+=DateOnly
	////            )*
	//        )
	//        |
	//        (
	//            dateAndTime+=DateAndTimeFunction
	//            (
	//                COLON
	//                dateAndTime+=DateAndTimeFunction
	//            )*
	//        )
	//    )
	//    PLUS
	//    (originCode=ID)?
	//    PLUS
	//    (destinationCode=ID)?
	//    PLUS
	//    (carrierId=ID)?
	//    PLUS
	//    (
	//        productId=ID
	//        (
	//            COLON
	//            characteristicId=ID
	//            (
	//                COLON
	//                productIdCharacteristic=ID
	//                (
	//                    COLON
	//                    descriptionIds+=ID
	//                )*
	//            )?
	//        )?
	//    )?
	//    (
	//        PLUS
	//        productType=ID
	//        (
	//            PLUS
	//            lineItemNumber=ID
	//            (
	//                PLUS
	//                processingIndicatorCode=ID
	//            )?
	//        )?
	//    )?
	//    lineEnd=QUOTE_AND_NL
	//;
	public TVLSegmentElements getTVLSegmentAccess() {
		return pTVLSegment;
	}
	
	public ParserRule getTVLSegmentRule() {
		return getTVLSegmentAccess().getRule();
	}
	
	////RPI+1+SS'
	//RPISegment:
	//    segment="RPI"
	//    PLUS
	//    (numberOfPax=ID)?
	//    PLUS
	//    (status=ID)?
	//    lineEnd=QUOTE_AND_NL
	//;
	public RPISegmentElements getRPISegmentAccess() {
		return pRPISegment;
	}
	
	public ParserRule getRPISegmentRule() {
		return getRPISegmentAccess().getRule();
	}
	
	////MOA+203:1960.29'
	//MOASegment:
	//    segment="MOA"
	//    PLUS
	//    code1=ID
	//    (
	//        COLON
	//        code2=ID
	//    )?
	//    lineEnd=QUOTE_AND_NL
	//;
	public MOASegmentElements getMOASegmentAccess() {
		return pMOASegment;
	}
	
	public ParserRule getMOASegmentRule() {
		return getMOASegmentAccess().getRule();
	}
	
	////LIN+++090346642:IN'
	//LINSegment:
	//    segment="LIN"
	//    PLUS
	//    ( code1=ID )?
	//    PLUS
	//    ( code2=ID )?
	//    PLUS
	//    (
	//        code3=ID
	//        COLON
	//        code4=ID
	//    )?
	//    lineEnd=QUOTE_AND_NL
	//;
	public LINSegmentElements getLINSegmentAccess() {
		return pLINSegment;
	}
	
	public ParserRule getLINSegmentRule() {
		return getLINSegmentAccess().getRule();
	}
	
	////PRI+AAA:3630.1724::NTP:100:C62'
	//PRISegment:
	//    segment="PRI"
	//    PLUS
	//    sub=PRIFunction
	//    lineEnd=QUOTE_AND_NL
	//;
	public PRISegmentElements getPRISegmentAccess() {
		return pPRISegment;
	}
	
	public ParserRule getPRISegmentRule() {
		return getPRISegmentAccess().getRule();
	}
	
	////QTY+12:54:PCE'
	//QTYSegment:
	//    segment="QTY"
	//    PLUS
	//    code1=ID
	//    (
	//        COLON
	//        code2=ID
	//        (
	//            COLON
	//            code3=ID
	//        )?
	//    )?
	//    lineEnd=QUOTE_AND_NL
	//;
	public QTYSegmentElements getQTYSegmentAccess() {
		return pQTYSegment;
	}
	
	public ParserRule getQTYSegmentRule() {
		return getQTYSegmentAccess().getRule();
	}
	
	////CUX+2:EUR'
	//CUXSegment:
	//    segment="CUX"
	//    PLUS
	//    num=ID
	//    (
	//        COLON
	//        currency=ID
	//    )?
	//    lineEnd=QUOTE_AND_NL
	//;
	public CUXSegmentElements getCUXSegmentAccess() {
		return pCUXSegment;
	}
	
	public ParserRule getCUXSegmentRule() {
		return getCUXSegmentAccess().getRule();
	}
	
	////TAX+7+VAT'
	//TAXSegment:
	//    segment="TAX"
	//    PLUS
	//    num=ID
	//    PLUS
	//    type=ID
	//    (
	//        PLUS
	//        ( todo1=ID )?
	//        PLUS
	//        ( todo2=ID )?
	//        PLUS
	//        (
	//            ( todo3=ID )?
	//            COLON
	//            ( todo4=ID )?
	//            COLON
	//            ( todo5=ID )?
	//            COLON
	//            ( todo6=ID )?
	//        )?
	//    )?
	//    lineEnd=QUOTE_AND_NL
	//;
	public TAXSegmentElements getTAXSegmentAccess() {
		return pTAXSegment;
	}
	
	public ParserRule getTAXSegmentRule() {
		return getTAXSegmentAccess().getRule();
	}
	
	////RFF+VA:382324067'
	//RFFSegment:
	//    segment="RFF"
	//    PLUS
	//    rff1=ID
	//    (
	//        COLON
	//        rff2=ID
	//    )?
	//    lineEnd=QUOTE_AND_NL
	//;
	public RFFSegmentElements getRFFSegmentAccess() {
		return pRFFSegment;
	}
	
	public ParserRule getRFFSegmentRule() {
		return getRFFSegmentAccess().getRule();
	}
	
	////NAD+BT+VAUXHALL MOTORS LTD::91'
	//NADSegment:
	//    segment="NAD"
	//    PLUS
	//    code=ID
	//    PLUS
	//    (
	//        ( manufacturer1=ID )?
	//        COLON
	//        ( manufacturer2=ID )?
	//        COLON
	//        ( manufacturer3=ID )?
	//    )?
	//    lineEnd=QUOTE_AND_NL
	//;
	public NADSegmentElements getNADSegmentAccess() {
		return pNADSegment;
	}
	
	public ParserRule getNADSegmentRule() {
		return getNADSegmentAccess().getRule();
	}
	
	////DTM+137:199910060000:102'
	//DTMSegment:
	//    segment="DTM"
	//    PLUS
	//    num1=ID
	//    (
	//        COLON
	//        num2=ID
	//        COLON
	//        num3=ID
	//    )?
	//    lineEnd=QUOTE_AND_NL
	//;
	public DTMSegmentElements getDTMSegmentAccess() {
		return pDTMSegment;
	}
	
	public ParserRule getDTMSegmentRule() {
		return getDTMSegmentAccess().getRule();
	}
	
	////BGM+381+1060113800026+9'
	//BGMSegment:
	//    segment="BGM"
	//    PLUS
	//    (num1=ID)?
	//    PLUS
	//    (num2=ID)?
	//    PLUS
	//    (num3=ID)?
	//    lineEnd=QUOTE_AND_NL
	//;
	public BGMSegmentElements getBGMSegmentAccess() {
		return pBGMSegment;
	}
	
	public ParserRule getBGMSegmentRule() {
		return getBGMSegmentAccess().getRule();
	}
	
	////PAT+1'
	//PATSegment:
	//    segment="PAT"
	//    PLUS
	//    segmentCount=ID
	//    lineEnd=QUOTE_AND_NL
	//;
	public PATSegmentElements getPATSegmentAccess() {
		return pPATSegment;
	}
	
	public ParserRule getPATSegmentRule() {
		return getPATSegmentAccess().getRule();
	}
	
	////FTX+AFM+1++XPath 2.0 Programmer?'s Reference'
	//FTXSegment:
	//    segment="FTX"
	//    PLUS
	//    ( todo1=ID )?
	//    PLUS
	//    ( todo2=ID )?
	//    PLUS
	//    ( todo3=ID )?
	//    PLUS
	//    ( todo4=ID )?
	//    lineEnd=QUOTE_AND_NL
	//;
	public FTXSegmentElements getFTXSegmentAccess() {
		return pFTXSegment;
	}
	
	public ParserRule getFTXSegmentRule() {
		return getFTXSegmentAccess().getRule();
	}
	
	//ERCSegment:
	//    segment="ERC"
	//    PLUS
	//    code1=ID
	//    lineEnd=QUOTE_AND_NL
	//;
	public ERCSegmentElements getERCSegmentAccess() {
		return pERCSegment;
	}
	
	public ParserRule getERCSegmentRule() {
		return getERCSegmentAccess().getRule();
	}
	
	////CNT+2:4'
	//CNTSegment:
	//    segment="CNT"
	//    PLUS
	//    (
	//        ( todo1=ID )?
	//        COLON
	//        ( todo2=ID )?
	//    )?
	//    lineEnd=QUOTE_AND_NL
	//;
	public CNTSegmentElements getCNTSegmentAccess() {
		return pCNTSegment;
	}
	
	public ParserRule getCNTSegmentRule() {
		return getCNTSegmentAccess().getRule();
	}
	
	//CTASegment:
	//    segment="CTA"
	//    PLUS
	//    ( todo=ID )?
	//    lineEnd=QUOTE_AND_NL
	//;
	public CTASegmentElements getCTASegmentAccess() {
		return pCTASegment;
	}
	
	public ParserRule getCTASegmentRule() {
		return getCTASegmentAccess().getRule();
	}
	
	//PCISegment:
	//    segment="PCI"
	//    PLUS
	//    ( todo=ID )?
	//    lineEnd=QUOTE_AND_NL
	//;
	public PCISegmentElements getPCISegmentAccess() {
		return pPCISegment;
	}
	
	public ParserRule getPCISegmentRule() {
		return getPCISegmentAccess().getRule();
	}
	
	////UNS+S'
	//UNSSegment:
	//    segment="UNS"
	//    PLUS
	//    segmentCount=ID
	//    lineEnd=QUOTE_AND_NL
	//;
	public UNSSegmentElements getUNSSegmentAccess() {
		return pUNSSegment;
	}
	
	public ParserRule getUNSSegmentRule() {
		return getUNSSegmentAccess().getRule();
	}
	
	////UNT+9+1'
	//UNTSegment:
	//    segment="UNT"
	//    PLUS
	//    ( segmentCount=ID )?
	//    PLUS
	//    ( messageReferenceNumber=ID )?
	//    lineEnd=QUOTE_AND_NL
	//;
	public UNTSegmentElements getUNTSegmentAccess() {
		return pUNTSegment;
	}
	
	public ParserRule getUNTSegmentRule() {
		return getUNTSegmentAccess().getRule();
	}
	
	////UNZ+1+039I42XXTK0001'
	//UNZSegment:
	//    segment="UNZ"
	//    PLUS
	//    ( interchangeControlCount=ID )?
	//    PLUS
	//    ( interchangeControlRef=ID )?
	//    lineEnd=QUOTE_AND_NL
	//;
	public UNZSegmentElements getUNZSegmentAccess() {
		return pUNZSegment;
	}
	
	public ParserRule getUNZSegmentRule() {
		return getUNZSegmentAccess().getRule();
	}
	
	//// EDIFACT Functions
	//AbstractEdiFunction:
	//    PRIFunction |
	//    MessageBodyFunction |
	//    MSGFunction |
	//    ProductFunction |
	//    SystemDetailFunction |
	//    OriginatorFunction |
	//    OriginatorIdentificationFunction |
	//    LocationFunction |
	//    InterchangerFunction |
	//    DateOnlyFunction |
	//    DateAndTimeFunction
	//;
	public AbstractEdiFunctionElements getAbstractEdiFunctionAccess() {
		return pAbstractEdiFunction;
	}
	
	public ParserRule getAbstractEdiFunctionRule() {
		return getAbstractEdiFunctionAccess().getRule();
	}
	
	//PRIFunction:
	//    code1=ID
	//    COLON
	//    ( code2=ID )?
	//    COLON
	//    ( code3=ID )?
	//    COLON
	//    ( code4=ID )?
	//    COLON
	//    ( code5=ID )?
	//    COLON
	//    ( code6=ID )?
	//;
	public PRIFunctionElements getPRIFunctionAccess() {
		return pPRIFunction;
	}
	
	public ParserRule getPRIFunctionRule() {
		return getPRIFunctionAccess().getRule();
	}
	
	//MessageBodyFunction:
	//    type=ID
	//    COLON
	//    ( version=ID )?
	//    COLON
	//    ( release=ID )?
	//    COLON
	//    ( controllingAgency=ID )?
	//    (
	//        COLON
	//        more=ID
	//    )?
	//;
	public MessageBodyFunctionElements getMessageBodyFunctionAccess() {
		return pMessageBodyFunction;
	}
	
	public ParserRule getMessageBodyFunctionRule() {
		return getMessageBodyFunctionAccess().getRule();
	}
	
	//MSGFunction:
	//    ( businessFunction=ID )?
	//    COLON
	//    messageFunction1=ID
	//    (
	//        COLON
	//        codeListResponsibleAgency=ID
	//        (
	//            COLON
	//            messageFunction2=ID
	//        )?
	//    )?
	//;
	public MSGFunctionElements getMSGFunctionAccess() {
		return pMSGFunction;
	}
	
	public ParserRule getMSGFunctionRule() {
		return getMSGFunctionAccess().getRule();
	}
	
	//ProductFunction:
	//    bookingClass=ID
	//    (
	//        COLON
	//        avail=ID
	//    )?
	//;
	public ProductFunctionElements getProductFunctionAccess() {
		return pProductFunction;
	}
	
	public ParserRule getProductFunctionRule() {
		return getProductFunctionAccess().getRule();
	}
	
	//SystemDetailFunction:
	//    companyIdentification=ID
	//    (
	//        COLON
	//        locationCode=ID
	//        (
	//            COLON
	//            locationName=ID
	//        )?
	//    )?
	//;
	public SystemDetailFunctionElements getSystemDetailFunctionAccess() {
		return pSystemDetailFunction;
	}
	
	public ParserRule getSystemDetailFunctionRule() {
		return getSystemDetailFunctionAccess().getRule();
	}
	
	//OriginatorFunction:
	//    countryCode=ID
	//    (
	//        COLON
	//        currencyCode=ID
	//        (
	//            COLON
	//            languageCode=ID
	//        )?
	//    )?
	//;
	public OriginatorFunctionElements getOriginatorFunctionAccess() {
		return pOriginatorFunction;
	}
	
	public ParserRule getOriginatorFunctionRule() {
		return getOriginatorFunctionAccess().getRule();
	}
	
	//OriginatorIdentificationFunction:
	//    travelAgentId=ID
	//    (
	//        COLON
	//        inHouseId1=ID?
	//        (
	//            COLON
	//            inHouseId2=ID
	//        )?
	//    )?
	//;
	public OriginatorIdentificationFunctionElements getOriginatorIdentificationFunctionAccess() {
		return pOriginatorIdentificationFunction;
	}
	
	public ParserRule getOriginatorIdentificationFunctionRule() {
		return getOriginatorIdentificationFunctionAccess().getRule();
	}
	
	//LocationFunction:
	//    locationId=ID
	//    (
	//        COLON
	//        locationName=ID
	//    )?
	//;
	public LocationFunctionElements getLocationFunctionAccess() {
		return pLocationFunction;
	}
	
	public ParserRule getLocationFunctionRule() {
		return getLocationFunctionAccess().getRule();
	}
	
	//InterchangerFunction:
	//    interchange=ID
	//    (
	//        COLON
	//        interchange2=ID
	//    )?
	//;
	public InterchangerFunctionElements getInterchangerFunctionAccess() {
		return pInterchangerFunction;
	}
	
	public ParserRule getInterchangerFunctionRule() {
		return getInterchangerFunctionAccess().getRule();
	}
	
	//DateOnlyFunction:
	//    date6=ID
	//;
	public DateOnlyFunctionElements getDateOnlyFunctionAccess() {
		return pDateOnlyFunction;
	}
	
	public ParserRule getDateOnlyFunctionRule() {
		return getDateOnlyFunctionAccess().getRule();
	}
	
	//DateAndTimeFunction:
	//    date6=ID
	//    COLON
	//    time4=ID
	//;
	public DateAndTimeFunctionElements getDateAndTimeFunctionAccess() {
		return pDateAndTimeFunction;
	}
	
	public ParserRule getDateAndTimeFunctionRule() {
		return getDateAndTimeFunctionAccess().getRule();
	}
	
	//terminal QUOTE_AND_NL: ( "'" | "~" ) ( "\n" )?;
	public TerminalRule getQUOTE_AND_NLRule() {
		return tQUOTE_AND_NL;
	}
	
	//terminal PLUS: ( "+" | "*" );
	public TerminalRule getPLUSRule() {
		return tPLUS;
	}
	
	//terminal COLON: ":";
	public TerminalRule getCOLONRule() {
		return tCOLON;
	}
	
	////terminal INT_DATE returns ecore::EString: ( "0".."9" )( "0".."9" )( "0".."9" )( "0".."9" )( "0".."9" )( "0".."9" );
	////terminal INT_TIME returns ecore::EString: ( "0".."9" )( "0".."9" )( "0".."9" )( "0".."9" );
	//@Override
	//terminal INT returns ecore::EInt: ( "0".."9" )( "0".."9" )( "0".."9" )( "0".."9" )( "0".."9" )( "0".."9" )( "0".."9" )( "0".."9" )( "0".."9" )( "0".."9" )( "0".."9" )( "0".."9" )( "0".."9" )( "0".."9" )( "0".."9" )( "0".."9" );
	public TerminalRule getINTRule() {
		return tINT;
	}
	
	//@Override
	//terminal ID returns ecore::EString: ( "a".."z" | "A".."Z" | "0".."9" ) ( ( "a".."z" | "A".."Z" | "0".."9" | "-" | "_" | "." | " " | "?" )* ( "a".."z" | "A".."Z" | "0".."9" ) )?;
	public TerminalRule getIDRule() {
		return tID;
	}
	
	//@Override
	//terminal STRING returns ecore::EString: '"' ( '\\' . /* 'b'|'t'|'n'|'f'|'r'|'u'|'"'|"'"|'\\' */ | !('\\'|'"') )* '"';
	public TerminalRule getSTRINGRule() {
		return tSTRING;
	}
	
	//@Override
	//terminal WS: ( "\t" | "\r" | "\n" )+;
	public TerminalRule getWSRule() {
		return tWS;
	}
	
	//terminal ML_COMMENT : '/*' -> '*/';
	public TerminalRule getML_COMMENTRule() {
		return gaTerminals.getML_COMMENTRule();
	}
	
	//terminal SL_COMMENT : '//' !('\n'|'\r')* ('\r'? '\n')?;
	public TerminalRule getSL_COMMENTRule() {
		return gaTerminals.getSL_COMMENTRule();
	}
	
	//terminal ANY_OTHER: .;
	public TerminalRule getANY_OTHERRule() {
		return gaTerminals.getANY_OTHERRule();
	}
}
