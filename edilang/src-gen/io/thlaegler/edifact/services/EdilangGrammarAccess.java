/*
 * generated by Xtext 2.26.0
 */
package io.thlaegler.edifact.services;

import com.google.inject.Inject;
import com.google.inject.Singleton;
import java.util.List;
import org.eclipse.xtext.Action;
import org.eclipse.xtext.Alternatives;
import org.eclipse.xtext.Assignment;
import org.eclipse.xtext.Grammar;
import org.eclipse.xtext.GrammarUtil;
import org.eclipse.xtext.Group;
import org.eclipse.xtext.Keyword;
import org.eclipse.xtext.ParserRule;
import org.eclipse.xtext.RuleCall;
import org.eclipse.xtext.TerminalRule;
import org.eclipse.xtext.common.services.TerminalsGrammarAccess;
import org.eclipse.xtext.service.AbstractElementFinder;
import org.eclipse.xtext.service.GrammarProvider;

@Singleton
public class EdilangGrammarAccess extends AbstractElementFinder.AbstractGrammarElementFinder {
	
	public class EdiModelElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "io.thlaegler.edifact.Edilang.EdiModel");
		private final Assignment cSegmentsAssignment = (Assignment)rule.eContents().get(1);
		private final RuleCall cSegmentsAbstractEdiSegmentParserRuleCall_0 = (RuleCall)cSegmentsAssignment.eContents().get(0);
		
		//EdiModel:
		//    segments+=AbstractEdiSegment*;
		@Override public ParserRule getRule() { return rule; }
		
		//segments+=AbstractEdiSegment*
		public Assignment getSegmentsAssignment() { return cSegmentsAssignment; }
		
		//AbstractEdiSegment
		public RuleCall getSegmentsAbstractEdiSegmentParserRuleCall_0() { return cSegmentsAbstractEdiSegmentParserRuleCall_0; }
	}
	public class AbstractEdiSegmentElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "io.thlaegler.edifact.Edilang.AbstractEdiSegment");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cUNASegmentParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cUNBSegmentParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		private final RuleCall cUNHSegmentParserRuleCall_2 = (RuleCall)cAlternatives.eContents().get(2);
		private final RuleCall cADRSegmentParserRuleCall_3 = (RuleCall)cAlternatives.eContents().get(3);
		private final RuleCall cAGRSegmentParserRuleCall_4 = (RuleCall)cAlternatives.eContents().get(4);
		private final RuleCall cAJTSegmentParserRuleCall_5 = (RuleCall)cAlternatives.eContents().get(5);
		private final RuleCall cALCSegmentParserRuleCall_6 = (RuleCall)cAlternatives.eContents().get(6);
		private final RuleCall cALISegmentParserRuleCall_7 = (RuleCall)cAlternatives.eContents().get(7);
		private final RuleCall cAPPSegmentParserRuleCall_8 = (RuleCall)cAlternatives.eContents().get(8);
		private final RuleCall cAPRSegmentParserRuleCall_9 = (RuleCall)cAlternatives.eContents().get(9);
		private final RuleCall cARDSegmentParserRuleCall_10 = (RuleCall)cAlternatives.eContents().get(10);
		private final RuleCall cARRSegmentParserRuleCall_11 = (RuleCall)cAlternatives.eContents().get(11);
		private final RuleCall cASISegmentParserRuleCall_12 = (RuleCall)cAlternatives.eContents().get(12);
		private final RuleCall cATTSegmentParserRuleCall_13 = (RuleCall)cAlternatives.eContents().get(13);
		private final RuleCall cAUTSegmentParserRuleCall_14 = (RuleCall)cAlternatives.eContents().get(14);
		private final RuleCall cBASSegmentParserRuleCall_15 = (RuleCall)cAlternatives.eContents().get(15);
		private final RuleCall cBGMSegmentParserRuleCall_16 = (RuleCall)cAlternatives.eContents().get(16);
		private final RuleCall cBIISegmentParserRuleCall_17 = (RuleCall)cAlternatives.eContents().get(17);
		private final RuleCall cBUSSegmentParserRuleCall_18 = (RuleCall)cAlternatives.eContents().get(18);
		private final RuleCall cCAVSegmentParserRuleCall_19 = (RuleCall)cAlternatives.eContents().get(19);
		private final RuleCall cCCDSegmentParserRuleCall_20 = (RuleCall)cAlternatives.eContents().get(20);
		private final RuleCall cCCISegmentParserRuleCall_21 = (RuleCall)cAlternatives.eContents().get(21);
		private final RuleCall cCDISegmentParserRuleCall_22 = (RuleCall)cAlternatives.eContents().get(22);
		private final RuleCall cCDSSegmentParserRuleCall_23 = (RuleCall)cAlternatives.eContents().get(23);
		private final RuleCall cCDVSegmentParserRuleCall_24 = (RuleCall)cAlternatives.eContents().get(24);
		private final RuleCall cCEDSegmentParserRuleCall_25 = (RuleCall)cAlternatives.eContents().get(25);
		private final RuleCall cCINSegmentParserRuleCall_26 = (RuleCall)cAlternatives.eContents().get(26);
		private final RuleCall cCLASegmentParserRuleCall_27 = (RuleCall)cAlternatives.eContents().get(27);
		private final RuleCall cCLISegmentParserRuleCall_28 = (RuleCall)cAlternatives.eContents().get(28);
		private final RuleCall cCMPSegmentParserRuleCall_29 = (RuleCall)cAlternatives.eContents().get(29);
		private final RuleCall cCNISegmentParserRuleCall_30 = (RuleCall)cAlternatives.eContents().get(30);
		private final RuleCall cCNTSegmentParserRuleCall_31 = (RuleCall)cAlternatives.eContents().get(31);
		private final RuleCall cCODSegmentParserRuleCall_32 = (RuleCall)cAlternatives.eContents().get(32);
		private final RuleCall cCOMSegmentParserRuleCall_33 = (RuleCall)cAlternatives.eContents().get(33);
		private final RuleCall cCOTSegmentParserRuleCall_34 = (RuleCall)cAlternatives.eContents().get(34);
		private final RuleCall cCPISegmentParserRuleCall_35 = (RuleCall)cAlternatives.eContents().get(35);
		private final RuleCall cCPSSegmentParserRuleCall_36 = (RuleCall)cAlternatives.eContents().get(36);
		private final RuleCall cCPTSegmentParserRuleCall_37 = (RuleCall)cAlternatives.eContents().get(37);
		private final RuleCall cCSTSegmentParserRuleCall_38 = (RuleCall)cAlternatives.eContents().get(38);
		private final RuleCall cCTASegmentParserRuleCall_39 = (RuleCall)cAlternatives.eContents().get(39);
		private final RuleCall cCUXSegmentParserRuleCall_40 = (RuleCall)cAlternatives.eContents().get(40);
		private final RuleCall cDAMSegmentParserRuleCall_41 = (RuleCall)cAlternatives.eContents().get(41);
		private final RuleCall cDFNSegmentParserRuleCall_42 = (RuleCall)cAlternatives.eContents().get(42);
		private final RuleCall cDGSSegmentParserRuleCall_43 = (RuleCall)cAlternatives.eContents().get(43);
		private final RuleCall cDIISegmentParserRuleCall_44 = (RuleCall)cAlternatives.eContents().get(44);
		private final RuleCall cDIMSegmentParserRuleCall_45 = (RuleCall)cAlternatives.eContents().get(45);
		private final RuleCall cDLISegmentParserRuleCall_46 = (RuleCall)cAlternatives.eContents().get(46);
		private final RuleCall cDLMSegmentParserRuleCall_47 = (RuleCall)cAlternatives.eContents().get(47);
		private final RuleCall cDMSSegmentParserRuleCall_48 = (RuleCall)cAlternatives.eContents().get(48);
		private final RuleCall cDOCSegmentParserRuleCall_49 = (RuleCall)cAlternatives.eContents().get(49);
		private final RuleCall cDRDSegmentParserRuleCall_50 = (RuleCall)cAlternatives.eContents().get(50);
		private final RuleCall cDSGSegmentParserRuleCall_51 = (RuleCall)cAlternatives.eContents().get(51);
		private final RuleCall cDSISegmentParserRuleCall_52 = (RuleCall)cAlternatives.eContents().get(52);
		private final RuleCall cDTMSegmentParserRuleCall_53 = (RuleCall)cAlternatives.eContents().get(53);
		private final RuleCall cEDTSegmentParserRuleCall_54 = (RuleCall)cAlternatives.eContents().get(54);
		private final RuleCall cEFISegmentParserRuleCall_55 = (RuleCall)cAlternatives.eContents().get(55);
		private final RuleCall cELMSegmentParserRuleCall_56 = (RuleCall)cAlternatives.eContents().get(56);
		private final RuleCall cELUSegmentParserRuleCall_57 = (RuleCall)cAlternatives.eContents().get(57);
		private final RuleCall cELVSegmentParserRuleCall_58 = (RuleCall)cAlternatives.eContents().get(58);
		private final RuleCall cEMPSegmentParserRuleCall_59 = (RuleCall)cAlternatives.eContents().get(59);
		private final RuleCall cEQASegmentParserRuleCall_60 = (RuleCall)cAlternatives.eContents().get(60);
		private final RuleCall cEQDSegmentParserRuleCall_61 = (RuleCall)cAlternatives.eContents().get(61);
		private final RuleCall cEQNSegmentParserRuleCall_62 = (RuleCall)cAlternatives.eContents().get(62);
		private final RuleCall cERPSegmentParserRuleCall_63 = (RuleCall)cAlternatives.eContents().get(63);
		private final RuleCall cERCSegmentParserRuleCall_64 = (RuleCall)cAlternatives.eContents().get(64);
		private final RuleCall cEVESegmentParserRuleCall_65 = (RuleCall)cAlternatives.eContents().get(65);
		private final RuleCall cEVTSegmentParserRuleCall_66 = (RuleCall)cAlternatives.eContents().get(66);
		private final RuleCall cFCASegmentParserRuleCall_67 = (RuleCall)cAlternatives.eContents().get(67);
		private final RuleCall cFIISegmentParserRuleCall_68 = (RuleCall)cAlternatives.eContents().get(68);
		private final RuleCall cFNSSegmentParserRuleCall_69 = (RuleCall)cAlternatives.eContents().get(69);
		private final RuleCall cFNTSegmentParserRuleCall_70 = (RuleCall)cAlternatives.eContents().get(70);
		private final RuleCall cFORSegmentParserRuleCall_71 = (RuleCall)cAlternatives.eContents().get(71);
		private final RuleCall cFSQSegmentParserRuleCall_72 = (RuleCall)cAlternatives.eContents().get(72);
		private final RuleCall cFTXSegmentParserRuleCall_73 = (RuleCall)cAlternatives.eContents().get(73);
		private final RuleCall cGDSSegmentParserRuleCall_74 = (RuleCall)cAlternatives.eContents().get(74);
		private final RuleCall cGEISegmentParserRuleCall_75 = (RuleCall)cAlternatives.eContents().get(75);
		private final RuleCall cGIDSegmentParserRuleCall_76 = (RuleCall)cAlternatives.eContents().get(76);
		private final RuleCall cGINSegmentParserRuleCall_77 = (RuleCall)cAlternatives.eContents().get(77);
		private final RuleCall cGIRSegmentParserRuleCall_78 = (RuleCall)cAlternatives.eContents().get(78);
		private final RuleCall cGISSegmentParserRuleCall_79 = (RuleCall)cAlternatives.eContents().get(79);
		private final RuleCall cGORSegmentParserRuleCall_80 = (RuleCall)cAlternatives.eContents().get(80);
		private final RuleCall cGRUSegmentParserRuleCall_81 = (RuleCall)cAlternatives.eContents().get(81);
		private final RuleCall cHANSegmentParserRuleCall_82 = (RuleCall)cAlternatives.eContents().get(82);
		private final RuleCall cHYNSegmentParserRuleCall_83 = (RuleCall)cAlternatives.eContents().get(83);
		private final RuleCall cICDSegmentParserRuleCall_84 = (RuleCall)cAlternatives.eContents().get(84);
		private final RuleCall cIDESegmentParserRuleCall_85 = (RuleCall)cAlternatives.eContents().get(85);
		private final RuleCall cIFDSegmentParserRuleCall_86 = (RuleCall)cAlternatives.eContents().get(86);
		private final RuleCall cIHCSegmentParserRuleCall_87 = (RuleCall)cAlternatives.eContents().get(87);
		private final RuleCall cIMDSegmentParserRuleCall_88 = (RuleCall)cAlternatives.eContents().get(88);
		private final RuleCall cINDSegmentParserRuleCall_89 = (RuleCall)cAlternatives.eContents().get(89);
		private final RuleCall cINPSegmentParserRuleCall_90 = (RuleCall)cAlternatives.eContents().get(90);
		private final RuleCall cINVSegmentParserRuleCall_91 = (RuleCall)cAlternatives.eContents().get(91);
		private final RuleCall cIRQSegmentParserRuleCall_92 = (RuleCall)cAlternatives.eContents().get(92);
		private final RuleCall cLANSegmentParserRuleCall_93 = (RuleCall)cAlternatives.eContents().get(93);
		private final RuleCall cLINSegmentParserRuleCall_94 = (RuleCall)cAlternatives.eContents().get(94);
		private final RuleCall cLOCSegmentParserRuleCall_95 = (RuleCall)cAlternatives.eContents().get(95);
		private final RuleCall cMEASegmentParserRuleCall_96 = (RuleCall)cAlternatives.eContents().get(96);
		private final RuleCall cMEMSegmentParserRuleCall_97 = (RuleCall)cAlternatives.eContents().get(97);
		private final RuleCall cMKSSegmentParserRuleCall_98 = (RuleCall)cAlternatives.eContents().get(98);
		private final RuleCall cMOASegmentParserRuleCall_99 = (RuleCall)cAlternatives.eContents().get(99);
		private final RuleCall cMSGSegmentParserRuleCall_100 = (RuleCall)cAlternatives.eContents().get(100);
		private final RuleCall cNADSegmentParserRuleCall_101 = (RuleCall)cAlternatives.eContents().get(101);
		private final RuleCall cNATSegmentParserRuleCall_102 = (RuleCall)cAlternatives.eContents().get(102);
		private final RuleCall cODISegmentParserRuleCall_103 = (RuleCall)cAlternatives.eContents().get(103);
		private final RuleCall cORGSegmentParserRuleCall_104 = (RuleCall)cAlternatives.eContents().get(104);
		private final RuleCall cPACSegmentParserRuleCall_105 = (RuleCall)cAlternatives.eContents().get(105);
		private final RuleCall cPAISegmentParserRuleCall_106 = (RuleCall)cAlternatives.eContents().get(106);
		private final RuleCall cPASSegmentParserRuleCall_107 = (RuleCall)cAlternatives.eContents().get(107);
		private final RuleCall cPATSegmentParserRuleCall_108 = (RuleCall)cAlternatives.eContents().get(108);
		private final RuleCall cPCCSegmentParserRuleCall_109 = (RuleCall)cAlternatives.eContents().get(109);
		private final RuleCall cPCDSegmentParserRuleCall_110 = (RuleCall)cAlternatives.eContents().get(110);
		private final RuleCall cPCISegmentParserRuleCall_111 = (RuleCall)cAlternatives.eContents().get(111);
		private final RuleCall cPDISegmentParserRuleCall_112 = (RuleCall)cAlternatives.eContents().get(112);
		private final RuleCall cPERSegmentParserRuleCall_113 = (RuleCall)cAlternatives.eContents().get(113);
		private final RuleCall cPGISegmentParserRuleCall_114 = (RuleCall)cAlternatives.eContents().get(114);
		private final RuleCall cPIASegmentParserRuleCall_115 = (RuleCall)cAlternatives.eContents().get(115);
		private final RuleCall cPNASegmentParserRuleCall_116 = (RuleCall)cAlternatives.eContents().get(116);
		private final RuleCall cPOCSegmentParserRuleCall_117 = (RuleCall)cAlternatives.eContents().get(117);
		private final RuleCall cPRCSegmentParserRuleCall_118 = (RuleCall)cAlternatives.eContents().get(118);
		private final RuleCall cPRISegmentParserRuleCall_119 = (RuleCall)cAlternatives.eContents().get(119);
		private final RuleCall cPRVSegmentParserRuleCall_120 = (RuleCall)cAlternatives.eContents().get(120);
		private final RuleCall cPSDSegmentParserRuleCall_121 = (RuleCall)cAlternatives.eContents().get(121);
		private final RuleCall cPTYSegmentParserRuleCall_122 = (RuleCall)cAlternatives.eContents().get(122);
		private final RuleCall cPYTSegmentParserRuleCall_123 = (RuleCall)cAlternatives.eContents().get(123);
		private final RuleCall cQRSSegmentParserRuleCall_124 = (RuleCall)cAlternatives.eContents().get(124);
		private final RuleCall cQTYSegmentParserRuleCall_125 = (RuleCall)cAlternatives.eContents().get(125);
		private final RuleCall cQUASegmentParserRuleCall_126 = (RuleCall)cAlternatives.eContents().get(126);
		private final RuleCall cQVRSegmentParserRuleCall_127 = (RuleCall)cAlternatives.eContents().get(127);
		private final RuleCall cRCSSegmentParserRuleCall_128 = (RuleCall)cAlternatives.eContents().get(128);
		private final RuleCall cRELSegmentParserRuleCall_129 = (RuleCall)cAlternatives.eContents().get(129);
		private final RuleCall cRFFSegmentParserRuleCall_130 = (RuleCall)cAlternatives.eContents().get(130);
		private final RuleCall cRJLSegmentParserRuleCall_131 = (RuleCall)cAlternatives.eContents().get(131);
		private final RuleCall cRNGSegmentParserRuleCall_132 = (RuleCall)cAlternatives.eContents().get(132);
		private final RuleCall cRODSegmentParserRuleCall_133 = (RuleCall)cAlternatives.eContents().get(133);
		private final RuleCall cRPISegmentParserRuleCall_134 = (RuleCall)cAlternatives.eContents().get(134);
		private final RuleCall cRSLSegmentParserRuleCall_135 = (RuleCall)cAlternatives.eContents().get(135);
		private final RuleCall cRTESegmentParserRuleCall_136 = (RuleCall)cAlternatives.eContents().get(136);
		private final RuleCall cSALSegmentParserRuleCall_137 = (RuleCall)cAlternatives.eContents().get(137);
		private final RuleCall cSCCSegmentParserRuleCall_138 = (RuleCall)cAlternatives.eContents().get(138);
		private final RuleCall cSCDSegmentParserRuleCall_139 = (RuleCall)cAlternatives.eContents().get(139);
		private final RuleCall cSEGSegmentParserRuleCall_140 = (RuleCall)cAlternatives.eContents().get(140);
		private final RuleCall cSELSegmentParserRuleCall_141 = (RuleCall)cAlternatives.eContents().get(141);
		private final RuleCall cSEQSegmentParserRuleCall_142 = (RuleCall)cAlternatives.eContents().get(142);
		private final RuleCall cSFISegmentParserRuleCall_143 = (RuleCall)cAlternatives.eContents().get(143);
		private final RuleCall cSGPSegmentParserRuleCall_144 = (RuleCall)cAlternatives.eContents().get(144);
		private final RuleCall cSGUSegmentParserRuleCall_145 = (RuleCall)cAlternatives.eContents().get(145);
		private final RuleCall cSPRSegmentParserRuleCall_146 = (RuleCall)cAlternatives.eContents().get(146);
		private final RuleCall cSPSSegmentParserRuleCall_147 = (RuleCall)cAlternatives.eContents().get(147);
		private final RuleCall cSTASegmentParserRuleCall_148 = (RuleCall)cAlternatives.eContents().get(148);
		private final RuleCall cSTCSegmentParserRuleCall_149 = (RuleCall)cAlternatives.eContents().get(149);
		private final RuleCall cSTGSegmentParserRuleCall_150 = (RuleCall)cAlternatives.eContents().get(150);
		private final RuleCall cSTSSegmentParserRuleCall_151 = (RuleCall)cAlternatives.eContents().get(151);
		private final RuleCall cTAXSegmentParserRuleCall_152 = (RuleCall)cAlternatives.eContents().get(152);
		private final RuleCall cTCCSegmentParserRuleCall_153 = (RuleCall)cAlternatives.eContents().get(153);
		private final RuleCall cTDTSegmentParserRuleCall_154 = (RuleCall)cAlternatives.eContents().get(154);
		private final RuleCall cTEMSegmentParserRuleCall_155 = (RuleCall)cAlternatives.eContents().get(155);
		private final RuleCall cTMDSegmentParserRuleCall_156 = (RuleCall)cAlternatives.eContents().get(156);
		private final RuleCall cTMPSegmentParserRuleCall_157 = (RuleCall)cAlternatives.eContents().get(157);
		private final RuleCall cTODSegmentParserRuleCall_158 = (RuleCall)cAlternatives.eContents().get(158);
		private final RuleCall cTPLSegmentParserRuleCall_159 = (RuleCall)cAlternatives.eContents().get(159);
		private final RuleCall cTRUSegmentParserRuleCall_160 = (RuleCall)cAlternatives.eContents().get(160);
		private final RuleCall cTSRSegmentParserRuleCall_161 = (RuleCall)cAlternatives.eContents().get(161);
		private final RuleCall cTVLSegmentParserRuleCall_162 = (RuleCall)cAlternatives.eContents().get(162);
		private final RuleCall cUCISegmentParserRuleCall_163 = (RuleCall)cAlternatives.eContents().get(163);
		private final RuleCall cVLISegmentParserRuleCall_164 = (RuleCall)cAlternatives.eContents().get(164);
		private final RuleCall cUNSSegmentParserRuleCall_165 = (RuleCall)cAlternatives.eContents().get(165);
		private final RuleCall cUNZSegmentParserRuleCall_166 = (RuleCall)cAlternatives.eContents().get(166);
		private final RuleCall cUNTSegmentParserRuleCall_167 = (RuleCall)cAlternatives.eContents().get(167);
		
		//AbstractEdiSegment:
		//    UNASegment | // Header UNA
		//    UNBSegment | // Header for trailer UNZ
		//    UNHSegment | // Header for trailer UNT
		//    ADRSegment | // Address
		//    AGRSegment | // Agreement identification
		//    AJTSegment | // Adjustment details
		//    ALCSegment | // Allowance or charge
		//    ALISegment | // Additional information
		//    APPSegment | // Applicability
		//    APRSegment | // Additional price information
		//    ARDSegment | // Monetary amount function
		//    ARRSegment | // Array information
		//    ASISegment | // Array structure identification
		//    ATTSegment | // Attribute
		//    AUTSegment | // Authentication result
		//    BASSegment | // Basis
		//    BGMSegment | // Beginning of message
		//    BIISegment | // Structure identification
		//    BUSSegment | // Business function
		//    CAVSegment | // Characteristic value
		//    CCDSegment | // Credit cover details
		//    CCISegment | // Characteristic/class id
		//    CDISegment | // Physical or logical state
		//    CDSSegment | // Code set identification
		//    CDVSegment | // Code value definition
		//    CEDSegment | // Computer environment details
		//    CINSegment | // Clinical information
		//    CLASegment | // Clause identification
		//    CLISegment | // Clinical intervention
		//    CMPSegment | // Composite data element identification
		//    CNISegment | // Consignment information
		//    CNTSegment | // Control total
		//    CODSegment | // Component details
		//    COMSegment | // Communication contact
		//    COTSegment | // Contribution details
		//    CPISegment | // Charge payment instructions
		//    CPSSegment | // Consignment packing sequence
		//    CPTSegment | // Account identification
		//    CSTSegment | // Customs status of goods
		//    CTASegment | // Contact information
		//    CUXSegment | // Currencies
		//    DAMSegment | // Damage
		//    DFNSegment | // Definition function
		//    DGSSegment | // Dangerous goods
		//    DIISegment | // Directory identification
		//    DIMSegment | // Dimensions
		//    DLISegment | // Document line identification
		//    DLMSegment | // Delivery limitations
		//    DMSSegment | // Document/message summary
		//    DOCSegment | // Document/message details
		//    DRDSegment | // Data representation details
		//    DSGSegment | // Dosage administration
		//    DSISegment | // Data set identification
		//    DTMSegment | // Date/time/period
		//    EDTSegment | // Editing details
		//    EFISegment | // External file link identification
		//    ELMSegment | // Simple data element details
		//    ELUSegment | // Data element usage details
		//    ELVSegment | // Element value definition
		//    EMPSegment | // Employment details
		//    EQASegment | // Attached equipment
		//    EQDSegment | // Equipment details
		//    EQNSegment | // Number of units
		//    ERPSegment | // Error point details
		//    ERCSegment | // Application error information
		//    EVESegment | // Event
		//    EVTSegment | // Event
		//    FCASegment | // Financial charges allocation
		//    FIISegment | // Financial institution information
		//    FNSSegment | // Footnote set
		//    FNTSegment | // Footnote
		//    FORSegment | // Formula
		//    FSQSegment | // Formula sequence
		//    FTXSegment | // Free text
		//    GDSSegment | // Nature of cargo
		//    GEISegment | // Processing information
		//    GIDSegment | // Goods item details
		//    GINSegment | // Goods identity number
		//    GIRSegment | // Related identification numbers
		//    GISSegment | // General indicator
		//    GORSegment | // Governmental requirements
		//    GRUSegment | // Segment group usage details
		//    HANSegment | // Handling instructions
		//    HYNSegment | // Hierarchy information
		//    ICDSegment | // Insurance cover description
		//    IDESegment | // Identity
		//    IFDSegment | // Information detail
		//    IHCSegment | // Person characteristic
		//    IMDSegment | // Item description
		//    INDSegment | // Index details
		//    INPSegment | // Parties and instruction
		//    INVSegment | // Inventory management related details
		//    IRQSegment | // Information required
		//    LANSegment | // Language
		//    LINSegment | // Line item
		//    LOCSegment | // Place/location identification
		//    MEASegment | // Measurements
		//    MEMSegment | // Membership details
		//    MKSSegment | // Market/sales channel information
		//    MOASegment | // Monetary amount
		//    MSGSegment | // Message type identification
		//    NADSegment | // Name and address
		//    NATSegment | // Nationality
		//    ODISegment | // Origin/destination
		//    ORGSegment | // Organisation
		//    PACSegment | // Package
		//    PAISegment | // Payment instructions
		//    PASSegment | // Attendance
		//    PATSegment | // Payment terms basis
		//    PCCSegment | // Premium calculation component details
		//    PCDSegment | // Percentage details
		//    PCISegment | // Package identification
		//    PDISegment | // Person demographic information
		//    PERSegment | // Period related details
		//    PGISegment | // Product group information
		//    PIASegment | // Additional product id
		//    PNASegment | // Party identification
		//    POCSegment | // Purpose of conveyance call
		//    PRCSegment | // Process identification
		//    PRISegment | // Price details
		//    PRVSegment | // Proviso details
		//    PSDSegment | // Physical sample description
		//    PTYSegment | // Priority
		//    PYTSegment | // Payment terms
		//    QRSSegment | // Query and response
		//    QTYSegment | // Quantity
		//    QUASegment | // Qualification
		//    QVRSegment | // Quantity variances
		//    RCSSegment | // Requirements and conditions
		//    RELSegment | // Relationship
		//    RFFSegment | // Reference
		//    RJLSegment | // Accounting journal identification
		//    RNGSegment | // Range details
		//    RODSegment | // Risk object type
		//    RPISegment | // ?
		//    RSLSegment | // Result
		//    RTESegment | // Rate details
		//    SALSegment | // Remuneration type identification
		//    SCCSegment | // Scheduling conditions
		//    SCDSegment | // Structure component definition
		//    SEGSegment | // Segment identification
		//    SELSegment | // Seal number
		//    SEQSegment | // Sequence details
		//    SFISegment | // Safety information
		//    SGPSegment | // Split goods placement
		//    SGUSegment | // Segment usage details
		//    SPRSegment | // Organisation classification details
		//    SPSSegment | // Sampling parameters for summary statistics
		//    STASegment | // Statistics
		//    STCSegment | // Statistical concept
		//    STGSegment | // Stages
		//    STSSegment | // Status
		//    TAXSegment | // Duty/tax/fee details
		//    TCCSegment | // Transport charge/rate calculations
		//    TDTSegment | // Details of transport
		//    TEMSegment | // Test method
		//    TMDSegment | // Transport movement details
		//    TMPSegment | // Temperature
		//    TODSegment | // Terms of delivery or transport
		//    TPLSegment | // Transport placement
		//    TRUSegment | // Technical rules
		//    TSRSegment | // Transport service requirements
		//    TVLSegment | // Travel itinerary
		//    UCISegment | // ?
		//    VLISegment | // Value list identification
		//    UNSSegment | // Trailer UNS
		//    UNZSegment | // Trailer for header UNB
		//    UNTSegment // Trailer for header UNH
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//UNASegment | // Header UNA
		//UNBSegment | // Header for trailer UNZ
		//UNHSegment | // Header for trailer UNT
		//ADRSegment | // Address
		//AGRSegment | // Agreement identification
		//AJTSegment | // Adjustment details
		//ALCSegment | // Allowance or charge
		//ALISegment | // Additional information
		//APPSegment | // Applicability
		//APRSegment | // Additional price information
		//ARDSegment | // Monetary amount function
		//ARRSegment | // Array information
		//ASISegment | // Array structure identification
		//ATTSegment | // Attribute
		//AUTSegment | // Authentication result
		//BASSegment | // Basis
		//BGMSegment | // Beginning of message
		//BIISegment | // Structure identification
		//BUSSegment | // Business function
		//CAVSegment | // Characteristic value
		//CCDSegment | // Credit cover details
		//CCISegment | // Characteristic/class id
		//CDISegment | // Physical or logical state
		//CDSSegment | // Code set identification
		//CDVSegment | // Code value definition
		//CEDSegment | // Computer environment details
		//CINSegment | // Clinical information
		//CLASegment | // Clause identification
		//CLISegment | // Clinical intervention
		//CMPSegment | // Composite data element identification
		//CNISegment | // Consignment information
		//CNTSegment | // Control total
		//CODSegment | // Component details
		//COMSegment | // Communication contact
		//COTSegment | // Contribution details
		//CPISegment | // Charge payment instructions
		//CPSSegment | // Consignment packing sequence
		//CPTSegment | // Account identification
		//CSTSegment | // Customs status of goods
		//CTASegment | // Contact information
		//CUXSegment | // Currencies
		//DAMSegment | // Damage
		//DFNSegment | // Definition function
		//DGSSegment | // Dangerous goods
		//DIISegment | // Directory identification
		//DIMSegment | // Dimensions
		//DLISegment | // Document line identification
		//DLMSegment | // Delivery limitations
		//DMSSegment | // Document/message summary
		//DOCSegment | // Document/message details
		//DRDSegment | // Data representation details
		//DSGSegment | // Dosage administration
		//DSISegment | // Data set identification
		//DTMSegment | // Date/time/period
		//EDTSegment | // Editing details
		//EFISegment | // External file link identification
		//ELMSegment | // Simple data element details
		//ELUSegment | // Data element usage details
		//ELVSegment | // Element value definition
		//EMPSegment | // Employment details
		//EQASegment | // Attached equipment
		//EQDSegment | // Equipment details
		//EQNSegment | // Number of units
		//ERPSegment | // Error point details
		//ERCSegment | // Application error information
		//EVESegment | // Event
		//EVTSegment | // Event
		//FCASegment | // Financial charges allocation
		//FIISegment | // Financial institution information
		//FNSSegment | // Footnote set
		//FNTSegment | // Footnote
		//FORSegment | // Formula
		//FSQSegment | // Formula sequence
		//FTXSegment | // Free text
		//GDSSegment | // Nature of cargo
		//GEISegment | // Processing information
		//GIDSegment | // Goods item details
		//GINSegment | // Goods identity number
		//GIRSegment | // Related identification numbers
		//GISSegment | // General indicator
		//GORSegment | // Governmental requirements
		//GRUSegment | // Segment group usage details
		//HANSegment | // Handling instructions
		//HYNSegment | // Hierarchy information
		//ICDSegment | // Insurance cover description
		//IDESegment | // Identity
		//IFDSegment | // Information detail
		//IHCSegment | // Person characteristic
		//IMDSegment | // Item description
		//INDSegment | // Index details
		//INPSegment | // Parties and instruction
		//INVSegment | // Inventory management related details
		//IRQSegment | // Information required
		//LANSegment | // Language
		//LINSegment | // Line item
		//LOCSegment | // Place/location identification
		//MEASegment | // Measurements
		//MEMSegment | // Membership details
		//MKSSegment | // Market/sales channel information
		//MOASegment | // Monetary amount
		//MSGSegment | // Message type identification
		//NADSegment | // Name and address
		//NATSegment | // Nationality
		//ODISegment | // Origin/destination
		//ORGSegment | // Organisation
		//PACSegment | // Package
		//PAISegment | // Payment instructions
		//PASSegment | // Attendance
		//PATSegment | // Payment terms basis
		//PCCSegment | // Premium calculation component details
		//PCDSegment | // Percentage details
		//PCISegment | // Package identification
		//PDISegment | // Person demographic information
		//PERSegment | // Period related details
		//PGISegment | // Product group information
		//PIASegment | // Additional product id
		//PNASegment | // Party identification
		//POCSegment | // Purpose of conveyance call
		//PRCSegment | // Process identification
		//PRISegment | // Price details
		//PRVSegment | // Proviso details
		//PSDSegment | // Physical sample description
		//PTYSegment | // Priority
		//PYTSegment | // Payment terms
		//QRSSegment | // Query and response
		//QTYSegment | // Quantity
		//QUASegment | // Qualification
		//QVRSegment | // Quantity variances
		//RCSSegment | // Requirements and conditions
		//RELSegment | // Relationship
		//RFFSegment | // Reference
		//RJLSegment | // Accounting journal identification
		//RNGSegment | // Range details
		//RODSegment | // Risk object type
		//RPISegment | // ?
		//RSLSegment | // Result
		//RTESegment | // Rate details
		//SALSegment | // Remuneration type identification
		//SCCSegment | // Scheduling conditions
		//SCDSegment | // Structure component definition
		//SEGSegment | // Segment identification
		//SELSegment | // Seal number
		//SEQSegment | // Sequence details
		//SFISegment | // Safety information
		//SGPSegment | // Split goods placement
		//SGUSegment | // Segment usage details
		//SPRSegment | // Organisation classification details
		//SPSSegment | // Sampling parameters for summary statistics
		//STASegment | // Statistics
		//STCSegment | // Statistical concept
		//STGSegment | // Stages
		//STSSegment | // Status
		//TAXSegment | // Duty/tax/fee details
		//TCCSegment | // Transport charge/rate calculations
		//TDTSegment | // Details of transport
		//TEMSegment | // Test method
		//TMDSegment | // Transport movement details
		//TMPSegment | // Temperature
		//TODSegment | // Terms of delivery or transport
		//TPLSegment | // Transport placement
		//TRUSegment | // Technical rules
		//TSRSegment | // Transport service requirements
		//TVLSegment | // Travel itinerary
		//UCISegment | // ?
		//VLISegment | // Value list identification
		//UNSSegment | // Trailer UNS
		//UNZSegment | // Trailer for header UNB
		//UNTSegment
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//UNASegment
		public RuleCall getUNASegmentParserRuleCall_0() { return cUNASegmentParserRuleCall_0; }
		
		//// Header UNA
		//   UNBSegment
		public RuleCall getUNBSegmentParserRuleCall_1() { return cUNBSegmentParserRuleCall_1; }
		
		//// Header for trailer UNZ
		//   UNHSegment
		public RuleCall getUNHSegmentParserRuleCall_2() { return cUNHSegmentParserRuleCall_2; }
		
		//// Header for trailer UNT
		//   ADRSegment
		public RuleCall getADRSegmentParserRuleCall_3() { return cADRSegmentParserRuleCall_3; }
		
		//// Address
		//   AGRSegment
		public RuleCall getAGRSegmentParserRuleCall_4() { return cAGRSegmentParserRuleCall_4; }
		
		//// Agreement identification
		//   AJTSegment
		public RuleCall getAJTSegmentParserRuleCall_5() { return cAJTSegmentParserRuleCall_5; }
		
		//// Adjustment details
		//   ALCSegment
		public RuleCall getALCSegmentParserRuleCall_6() { return cALCSegmentParserRuleCall_6; }
		
		//// Allowance or charge
		//   ALISegment
		public RuleCall getALISegmentParserRuleCall_7() { return cALISegmentParserRuleCall_7; }
		
		//// Additional information
		//   APPSegment
		public RuleCall getAPPSegmentParserRuleCall_8() { return cAPPSegmentParserRuleCall_8; }
		
		//// Applicability
		//   APRSegment
		public RuleCall getAPRSegmentParserRuleCall_9() { return cAPRSegmentParserRuleCall_9; }
		
		//// Additional price information
		//   ARDSegment
		public RuleCall getARDSegmentParserRuleCall_10() { return cARDSegmentParserRuleCall_10; }
		
		//// Monetary amount function
		//   ARRSegment
		public RuleCall getARRSegmentParserRuleCall_11() { return cARRSegmentParserRuleCall_11; }
		
		//// Array information
		//   ASISegment
		public RuleCall getASISegmentParserRuleCall_12() { return cASISegmentParserRuleCall_12; }
		
		//// Array structure identification
		//   ATTSegment
		public RuleCall getATTSegmentParserRuleCall_13() { return cATTSegmentParserRuleCall_13; }
		
		//// Attribute
		//   AUTSegment
		public RuleCall getAUTSegmentParserRuleCall_14() { return cAUTSegmentParserRuleCall_14; }
		
		//// Authentication result
		//   BASSegment
		public RuleCall getBASSegmentParserRuleCall_15() { return cBASSegmentParserRuleCall_15; }
		
		//// Basis
		//   BGMSegment
		public RuleCall getBGMSegmentParserRuleCall_16() { return cBGMSegmentParserRuleCall_16; }
		
		//// Beginning of message
		//   BIISegment
		public RuleCall getBIISegmentParserRuleCall_17() { return cBIISegmentParserRuleCall_17; }
		
		//// Structure identification
		//   BUSSegment
		public RuleCall getBUSSegmentParserRuleCall_18() { return cBUSSegmentParserRuleCall_18; }
		
		//// Business function
		//   CAVSegment
		public RuleCall getCAVSegmentParserRuleCall_19() { return cCAVSegmentParserRuleCall_19; }
		
		//// Characteristic value
		//   CCDSegment
		public RuleCall getCCDSegmentParserRuleCall_20() { return cCCDSegmentParserRuleCall_20; }
		
		//// Credit cover details
		//   CCISegment
		public RuleCall getCCISegmentParserRuleCall_21() { return cCCISegmentParserRuleCall_21; }
		
		//// Characteristic/class id
		//   CDISegment
		public RuleCall getCDISegmentParserRuleCall_22() { return cCDISegmentParserRuleCall_22; }
		
		//// Physical or logical state
		//   CDSSegment
		public RuleCall getCDSSegmentParserRuleCall_23() { return cCDSSegmentParserRuleCall_23; }
		
		//// Code set identification
		//   CDVSegment
		public RuleCall getCDVSegmentParserRuleCall_24() { return cCDVSegmentParserRuleCall_24; }
		
		//// Code value definition
		//   CEDSegment
		public RuleCall getCEDSegmentParserRuleCall_25() { return cCEDSegmentParserRuleCall_25; }
		
		//// Computer environment details
		//   CINSegment
		public RuleCall getCINSegmentParserRuleCall_26() { return cCINSegmentParserRuleCall_26; }
		
		//// Clinical information
		//   CLASegment
		public RuleCall getCLASegmentParserRuleCall_27() { return cCLASegmentParserRuleCall_27; }
		
		//// Clause identification
		//   CLISegment
		public RuleCall getCLISegmentParserRuleCall_28() { return cCLISegmentParserRuleCall_28; }
		
		//// Clinical intervention
		//   CMPSegment
		public RuleCall getCMPSegmentParserRuleCall_29() { return cCMPSegmentParserRuleCall_29; }
		
		//// Composite data element identification
		//   CNISegment
		public RuleCall getCNISegmentParserRuleCall_30() { return cCNISegmentParserRuleCall_30; }
		
		//// Consignment information
		//   CNTSegment
		public RuleCall getCNTSegmentParserRuleCall_31() { return cCNTSegmentParserRuleCall_31; }
		
		//// Control total
		//   CODSegment
		public RuleCall getCODSegmentParserRuleCall_32() { return cCODSegmentParserRuleCall_32; }
		
		//// Component details
		//   COMSegment
		public RuleCall getCOMSegmentParserRuleCall_33() { return cCOMSegmentParserRuleCall_33; }
		
		//// Communication contact
		//   COTSegment
		public RuleCall getCOTSegmentParserRuleCall_34() { return cCOTSegmentParserRuleCall_34; }
		
		//// Contribution details
		//   CPISegment
		public RuleCall getCPISegmentParserRuleCall_35() { return cCPISegmentParserRuleCall_35; }
		
		//// Charge payment instructions
		//   CPSSegment
		public RuleCall getCPSSegmentParserRuleCall_36() { return cCPSSegmentParserRuleCall_36; }
		
		//// Consignment packing sequence
		//   CPTSegment
		public RuleCall getCPTSegmentParserRuleCall_37() { return cCPTSegmentParserRuleCall_37; }
		
		//// Account identification
		//   CSTSegment
		public RuleCall getCSTSegmentParserRuleCall_38() { return cCSTSegmentParserRuleCall_38; }
		
		//// Customs status of goods
		//   CTASegment
		public RuleCall getCTASegmentParserRuleCall_39() { return cCTASegmentParserRuleCall_39; }
		
		//// Contact information
		//   CUXSegment
		public RuleCall getCUXSegmentParserRuleCall_40() { return cCUXSegmentParserRuleCall_40; }
		
		//// Currencies
		//   DAMSegment
		public RuleCall getDAMSegmentParserRuleCall_41() { return cDAMSegmentParserRuleCall_41; }
		
		//// Damage
		//   DFNSegment
		public RuleCall getDFNSegmentParserRuleCall_42() { return cDFNSegmentParserRuleCall_42; }
		
		//// Definition function
		//   DGSSegment
		public RuleCall getDGSSegmentParserRuleCall_43() { return cDGSSegmentParserRuleCall_43; }
		
		//// Dangerous goods
		//   DIISegment
		public RuleCall getDIISegmentParserRuleCall_44() { return cDIISegmentParserRuleCall_44; }
		
		//// Directory identification
		//   DIMSegment
		public RuleCall getDIMSegmentParserRuleCall_45() { return cDIMSegmentParserRuleCall_45; }
		
		//// Dimensions
		//   DLISegment
		public RuleCall getDLISegmentParserRuleCall_46() { return cDLISegmentParserRuleCall_46; }
		
		//// Document line identification
		//   DLMSegment
		public RuleCall getDLMSegmentParserRuleCall_47() { return cDLMSegmentParserRuleCall_47; }
		
		//// Delivery limitations
		//   DMSSegment
		public RuleCall getDMSSegmentParserRuleCall_48() { return cDMSSegmentParserRuleCall_48; }
		
		//// Document/message summary
		//   DOCSegment
		public RuleCall getDOCSegmentParserRuleCall_49() { return cDOCSegmentParserRuleCall_49; }
		
		//// Document/message details
		//   DRDSegment
		public RuleCall getDRDSegmentParserRuleCall_50() { return cDRDSegmentParserRuleCall_50; }
		
		//// Data representation details
		//   DSGSegment
		public RuleCall getDSGSegmentParserRuleCall_51() { return cDSGSegmentParserRuleCall_51; }
		
		//// Dosage administration
		//   DSISegment
		public RuleCall getDSISegmentParserRuleCall_52() { return cDSISegmentParserRuleCall_52; }
		
		//// Data set identification
		//   DTMSegment
		public RuleCall getDTMSegmentParserRuleCall_53() { return cDTMSegmentParserRuleCall_53; }
		
		//// Date/time/period
		//   EDTSegment
		public RuleCall getEDTSegmentParserRuleCall_54() { return cEDTSegmentParserRuleCall_54; }
		
		//// Editing details
		//   EFISegment
		public RuleCall getEFISegmentParserRuleCall_55() { return cEFISegmentParserRuleCall_55; }
		
		//// External file link identification
		//   ELMSegment
		public RuleCall getELMSegmentParserRuleCall_56() { return cELMSegmentParserRuleCall_56; }
		
		//// Simple data element details
		//   ELUSegment
		public RuleCall getELUSegmentParserRuleCall_57() { return cELUSegmentParserRuleCall_57; }
		
		//// Data element usage details
		//   ELVSegment
		public RuleCall getELVSegmentParserRuleCall_58() { return cELVSegmentParserRuleCall_58; }
		
		//// Element value definition
		//   EMPSegment
		public RuleCall getEMPSegmentParserRuleCall_59() { return cEMPSegmentParserRuleCall_59; }
		
		//// Employment details
		//   EQASegment
		public RuleCall getEQASegmentParserRuleCall_60() { return cEQASegmentParserRuleCall_60; }
		
		//// Attached equipment
		//   EQDSegment
		public RuleCall getEQDSegmentParserRuleCall_61() { return cEQDSegmentParserRuleCall_61; }
		
		//// Equipment details
		//   EQNSegment
		public RuleCall getEQNSegmentParserRuleCall_62() { return cEQNSegmentParserRuleCall_62; }
		
		//// Number of units
		//   ERPSegment
		public RuleCall getERPSegmentParserRuleCall_63() { return cERPSegmentParserRuleCall_63; }
		
		//// Error point details
		//   ERCSegment
		public RuleCall getERCSegmentParserRuleCall_64() { return cERCSegmentParserRuleCall_64; }
		
		//// Application error information
		//   EVESegment
		public RuleCall getEVESegmentParserRuleCall_65() { return cEVESegmentParserRuleCall_65; }
		
		//// Event
		//   EVTSegment
		public RuleCall getEVTSegmentParserRuleCall_66() { return cEVTSegmentParserRuleCall_66; }
		
		//// Event
		//   FCASegment
		public RuleCall getFCASegmentParserRuleCall_67() { return cFCASegmentParserRuleCall_67; }
		
		//// Financial charges allocation
		//   FIISegment
		public RuleCall getFIISegmentParserRuleCall_68() { return cFIISegmentParserRuleCall_68; }
		
		//// Financial institution information
		//   FNSSegment
		public RuleCall getFNSSegmentParserRuleCall_69() { return cFNSSegmentParserRuleCall_69; }
		
		//// Footnote set
		//   FNTSegment
		public RuleCall getFNTSegmentParserRuleCall_70() { return cFNTSegmentParserRuleCall_70; }
		
		//// Footnote
		//   FORSegment
		public RuleCall getFORSegmentParserRuleCall_71() { return cFORSegmentParserRuleCall_71; }
		
		//// Formula
		//   FSQSegment
		public RuleCall getFSQSegmentParserRuleCall_72() { return cFSQSegmentParserRuleCall_72; }
		
		//// Formula sequence
		//   FTXSegment
		public RuleCall getFTXSegmentParserRuleCall_73() { return cFTXSegmentParserRuleCall_73; }
		
		//// Free text
		//   GDSSegment
		public RuleCall getGDSSegmentParserRuleCall_74() { return cGDSSegmentParserRuleCall_74; }
		
		//// Nature of cargo
		//   GEISegment
		public RuleCall getGEISegmentParserRuleCall_75() { return cGEISegmentParserRuleCall_75; }
		
		//// Processing information
		//   GIDSegment
		public RuleCall getGIDSegmentParserRuleCall_76() { return cGIDSegmentParserRuleCall_76; }
		
		//// Goods item details
		//   GINSegment
		public RuleCall getGINSegmentParserRuleCall_77() { return cGINSegmentParserRuleCall_77; }
		
		//// Goods identity number
		//   GIRSegment
		public RuleCall getGIRSegmentParserRuleCall_78() { return cGIRSegmentParserRuleCall_78; }
		
		//// Related identification numbers
		//   GISSegment
		public RuleCall getGISSegmentParserRuleCall_79() { return cGISSegmentParserRuleCall_79; }
		
		//// General indicator
		//   GORSegment
		public RuleCall getGORSegmentParserRuleCall_80() { return cGORSegmentParserRuleCall_80; }
		
		//// Governmental requirements
		//   GRUSegment
		public RuleCall getGRUSegmentParserRuleCall_81() { return cGRUSegmentParserRuleCall_81; }
		
		//// Segment group usage details
		//   HANSegment
		public RuleCall getHANSegmentParserRuleCall_82() { return cHANSegmentParserRuleCall_82; }
		
		//// Handling instructions
		//   HYNSegment
		public RuleCall getHYNSegmentParserRuleCall_83() { return cHYNSegmentParserRuleCall_83; }
		
		//// Hierarchy information
		//   ICDSegment
		public RuleCall getICDSegmentParserRuleCall_84() { return cICDSegmentParserRuleCall_84; }
		
		//// Insurance cover description
		//   IDESegment
		public RuleCall getIDESegmentParserRuleCall_85() { return cIDESegmentParserRuleCall_85; }
		
		//// Identity
		//   IFDSegment
		public RuleCall getIFDSegmentParserRuleCall_86() { return cIFDSegmentParserRuleCall_86; }
		
		//// Information detail
		//   IHCSegment
		public RuleCall getIHCSegmentParserRuleCall_87() { return cIHCSegmentParserRuleCall_87; }
		
		//// Person characteristic
		//   IMDSegment
		public RuleCall getIMDSegmentParserRuleCall_88() { return cIMDSegmentParserRuleCall_88; }
		
		//// Item description
		//   INDSegment
		public RuleCall getINDSegmentParserRuleCall_89() { return cINDSegmentParserRuleCall_89; }
		
		//// Index details
		//   INPSegment
		public RuleCall getINPSegmentParserRuleCall_90() { return cINPSegmentParserRuleCall_90; }
		
		//// Parties and instruction
		//   INVSegment
		public RuleCall getINVSegmentParserRuleCall_91() { return cINVSegmentParserRuleCall_91; }
		
		//// Inventory management related details
		//   IRQSegment
		public RuleCall getIRQSegmentParserRuleCall_92() { return cIRQSegmentParserRuleCall_92; }
		
		//// Information required
		//   LANSegment
		public RuleCall getLANSegmentParserRuleCall_93() { return cLANSegmentParserRuleCall_93; }
		
		//// Language
		//   LINSegment
		public RuleCall getLINSegmentParserRuleCall_94() { return cLINSegmentParserRuleCall_94; }
		
		//// Line item
		//   LOCSegment
		public RuleCall getLOCSegmentParserRuleCall_95() { return cLOCSegmentParserRuleCall_95; }
		
		//// Place/location identification
		//   MEASegment
		public RuleCall getMEASegmentParserRuleCall_96() { return cMEASegmentParserRuleCall_96; }
		
		//// Measurements
		//   MEMSegment
		public RuleCall getMEMSegmentParserRuleCall_97() { return cMEMSegmentParserRuleCall_97; }
		
		//// Membership details
		//   MKSSegment
		public RuleCall getMKSSegmentParserRuleCall_98() { return cMKSSegmentParserRuleCall_98; }
		
		//// Market/sales channel information
		//   MOASegment
		public RuleCall getMOASegmentParserRuleCall_99() { return cMOASegmentParserRuleCall_99; }
		
		//// Monetary amount
		//   MSGSegment
		public RuleCall getMSGSegmentParserRuleCall_100() { return cMSGSegmentParserRuleCall_100; }
		
		//// Message type identification
		//   NADSegment
		public RuleCall getNADSegmentParserRuleCall_101() { return cNADSegmentParserRuleCall_101; }
		
		//// Name and address
		//   NATSegment
		public RuleCall getNATSegmentParserRuleCall_102() { return cNATSegmentParserRuleCall_102; }
		
		//// Nationality
		//   ODISegment
		public RuleCall getODISegmentParserRuleCall_103() { return cODISegmentParserRuleCall_103; }
		
		//// Origin/destination
		//   ORGSegment
		public RuleCall getORGSegmentParserRuleCall_104() { return cORGSegmentParserRuleCall_104; }
		
		//// Organisation
		//   PACSegment
		public RuleCall getPACSegmentParserRuleCall_105() { return cPACSegmentParserRuleCall_105; }
		
		//// Package
		//   PAISegment
		public RuleCall getPAISegmentParserRuleCall_106() { return cPAISegmentParserRuleCall_106; }
		
		//// Payment instructions
		//   PASSegment
		public RuleCall getPASSegmentParserRuleCall_107() { return cPASSegmentParserRuleCall_107; }
		
		//// Attendance
		//   PATSegment
		public RuleCall getPATSegmentParserRuleCall_108() { return cPATSegmentParserRuleCall_108; }
		
		//// Payment terms basis
		//   PCCSegment
		public RuleCall getPCCSegmentParserRuleCall_109() { return cPCCSegmentParserRuleCall_109; }
		
		//// Premium calculation component details
		//   PCDSegment
		public RuleCall getPCDSegmentParserRuleCall_110() { return cPCDSegmentParserRuleCall_110; }
		
		//// Percentage details
		//   PCISegment
		public RuleCall getPCISegmentParserRuleCall_111() { return cPCISegmentParserRuleCall_111; }
		
		//// Package identification
		//   PDISegment
		public RuleCall getPDISegmentParserRuleCall_112() { return cPDISegmentParserRuleCall_112; }
		
		//// Person demographic information
		//   PERSegment
		public RuleCall getPERSegmentParserRuleCall_113() { return cPERSegmentParserRuleCall_113; }
		
		//// Period related details
		//   PGISegment
		public RuleCall getPGISegmentParserRuleCall_114() { return cPGISegmentParserRuleCall_114; }
		
		//// Product group information
		//   PIASegment
		public RuleCall getPIASegmentParserRuleCall_115() { return cPIASegmentParserRuleCall_115; }
		
		//// Additional product id
		//   PNASegment
		public RuleCall getPNASegmentParserRuleCall_116() { return cPNASegmentParserRuleCall_116; }
		
		//// Party identification
		//   POCSegment
		public RuleCall getPOCSegmentParserRuleCall_117() { return cPOCSegmentParserRuleCall_117; }
		
		//// Purpose of conveyance call
		//   PRCSegment
		public RuleCall getPRCSegmentParserRuleCall_118() { return cPRCSegmentParserRuleCall_118; }
		
		//// Process identification
		//   PRISegment
		public RuleCall getPRISegmentParserRuleCall_119() { return cPRISegmentParserRuleCall_119; }
		
		//// Price details
		//   PRVSegment
		public RuleCall getPRVSegmentParserRuleCall_120() { return cPRVSegmentParserRuleCall_120; }
		
		//// Proviso details
		//   PSDSegment
		public RuleCall getPSDSegmentParserRuleCall_121() { return cPSDSegmentParserRuleCall_121; }
		
		//// Physical sample description
		//   PTYSegment
		public RuleCall getPTYSegmentParserRuleCall_122() { return cPTYSegmentParserRuleCall_122; }
		
		//// Priority
		//   PYTSegment
		public RuleCall getPYTSegmentParserRuleCall_123() { return cPYTSegmentParserRuleCall_123; }
		
		//// Payment terms
		//   QRSSegment
		public RuleCall getQRSSegmentParserRuleCall_124() { return cQRSSegmentParserRuleCall_124; }
		
		//// Query and response
		//   QTYSegment
		public RuleCall getQTYSegmentParserRuleCall_125() { return cQTYSegmentParserRuleCall_125; }
		
		//// Quantity
		//   QUASegment
		public RuleCall getQUASegmentParserRuleCall_126() { return cQUASegmentParserRuleCall_126; }
		
		//// Qualification
		//   QVRSegment
		public RuleCall getQVRSegmentParserRuleCall_127() { return cQVRSegmentParserRuleCall_127; }
		
		//// Quantity variances
		//   RCSSegment
		public RuleCall getRCSSegmentParserRuleCall_128() { return cRCSSegmentParserRuleCall_128; }
		
		//// Requirements and conditions
		//   RELSegment
		public RuleCall getRELSegmentParserRuleCall_129() { return cRELSegmentParserRuleCall_129; }
		
		//// Relationship
		//   RFFSegment
		public RuleCall getRFFSegmentParserRuleCall_130() { return cRFFSegmentParserRuleCall_130; }
		
		//// Reference
		//   RJLSegment
		public RuleCall getRJLSegmentParserRuleCall_131() { return cRJLSegmentParserRuleCall_131; }
		
		//// Accounting journal identification
		//   RNGSegment
		public RuleCall getRNGSegmentParserRuleCall_132() { return cRNGSegmentParserRuleCall_132; }
		
		//// Range details
		//   RODSegment
		public RuleCall getRODSegmentParserRuleCall_133() { return cRODSegmentParserRuleCall_133; }
		
		//// Risk object type
		//   RPISegment
		public RuleCall getRPISegmentParserRuleCall_134() { return cRPISegmentParserRuleCall_134; }
		
		//// ?
		//   RSLSegment
		public RuleCall getRSLSegmentParserRuleCall_135() { return cRSLSegmentParserRuleCall_135; }
		
		//// Result
		//   RTESegment
		public RuleCall getRTESegmentParserRuleCall_136() { return cRTESegmentParserRuleCall_136; }
		
		//// Rate details
		//   SALSegment
		public RuleCall getSALSegmentParserRuleCall_137() { return cSALSegmentParserRuleCall_137; }
		
		//// Remuneration type identification
		//   SCCSegment
		public RuleCall getSCCSegmentParserRuleCall_138() { return cSCCSegmentParserRuleCall_138; }
		
		//// Scheduling conditions
		//   SCDSegment
		public RuleCall getSCDSegmentParserRuleCall_139() { return cSCDSegmentParserRuleCall_139; }
		
		//// Structure component definition
		//   SEGSegment
		public RuleCall getSEGSegmentParserRuleCall_140() { return cSEGSegmentParserRuleCall_140; }
		
		//// Segment identification
		//   SELSegment
		public RuleCall getSELSegmentParserRuleCall_141() { return cSELSegmentParserRuleCall_141; }
		
		//// Seal number
		//   SEQSegment
		public RuleCall getSEQSegmentParserRuleCall_142() { return cSEQSegmentParserRuleCall_142; }
		
		//// Sequence details
		//   SFISegment
		public RuleCall getSFISegmentParserRuleCall_143() { return cSFISegmentParserRuleCall_143; }
		
		//// Safety information
		//   SGPSegment
		public RuleCall getSGPSegmentParserRuleCall_144() { return cSGPSegmentParserRuleCall_144; }
		
		//// Split goods placement
		//   SGUSegment
		public RuleCall getSGUSegmentParserRuleCall_145() { return cSGUSegmentParserRuleCall_145; }
		
		//// Segment usage details
		//   SPRSegment
		public RuleCall getSPRSegmentParserRuleCall_146() { return cSPRSegmentParserRuleCall_146; }
		
		//// Organisation classification details
		//   SPSSegment
		public RuleCall getSPSSegmentParserRuleCall_147() { return cSPSSegmentParserRuleCall_147; }
		
		//// Sampling parameters for summary statistics
		//   STASegment
		public RuleCall getSTASegmentParserRuleCall_148() { return cSTASegmentParserRuleCall_148; }
		
		//// Statistics
		//   STCSegment
		public RuleCall getSTCSegmentParserRuleCall_149() { return cSTCSegmentParserRuleCall_149; }
		
		//// Statistical concept
		//   STGSegment
		public RuleCall getSTGSegmentParserRuleCall_150() { return cSTGSegmentParserRuleCall_150; }
		
		//// Stages
		//   STSSegment
		public RuleCall getSTSSegmentParserRuleCall_151() { return cSTSSegmentParserRuleCall_151; }
		
		//// Status
		//   TAXSegment
		public RuleCall getTAXSegmentParserRuleCall_152() { return cTAXSegmentParserRuleCall_152; }
		
		//// Duty/tax/fee details
		//   TCCSegment
		public RuleCall getTCCSegmentParserRuleCall_153() { return cTCCSegmentParserRuleCall_153; }
		
		//// Transport charge/rate calculations
		//   TDTSegment
		public RuleCall getTDTSegmentParserRuleCall_154() { return cTDTSegmentParserRuleCall_154; }
		
		//// Details of transport
		//   TEMSegment
		public RuleCall getTEMSegmentParserRuleCall_155() { return cTEMSegmentParserRuleCall_155; }
		
		//// Test method
		//   TMDSegment
		public RuleCall getTMDSegmentParserRuleCall_156() { return cTMDSegmentParserRuleCall_156; }
		
		//// Transport movement details
		//   TMPSegment
		public RuleCall getTMPSegmentParserRuleCall_157() { return cTMPSegmentParserRuleCall_157; }
		
		//// Temperature
		//   TODSegment
		public RuleCall getTODSegmentParserRuleCall_158() { return cTODSegmentParserRuleCall_158; }
		
		//// Terms of delivery or transport
		//   TPLSegment
		public RuleCall getTPLSegmentParserRuleCall_159() { return cTPLSegmentParserRuleCall_159; }
		
		//// Transport placement
		//   TRUSegment
		public RuleCall getTRUSegmentParserRuleCall_160() { return cTRUSegmentParserRuleCall_160; }
		
		//// Technical rules
		//   TSRSegment
		public RuleCall getTSRSegmentParserRuleCall_161() { return cTSRSegmentParserRuleCall_161; }
		
		//// Transport service requirements
		//   TVLSegment
		public RuleCall getTVLSegmentParserRuleCall_162() { return cTVLSegmentParserRuleCall_162; }
		
		//// Travel itinerary
		//   UCISegment
		public RuleCall getUCISegmentParserRuleCall_163() { return cUCISegmentParserRuleCall_163; }
		
		//// ?
		//   VLISegment
		public RuleCall getVLISegmentParserRuleCall_164() { return cVLISegmentParserRuleCall_164; }
		
		//// Value list identification
		//   UNSSegment
		public RuleCall getUNSSegmentParserRuleCall_165() { return cUNSSegmentParserRuleCall_165; }
		
		//// Trailer UNS
		//   UNZSegment
		public RuleCall getUNZSegmentParserRuleCall_166() { return cUNZSegmentParserRuleCall_166; }
		
		//// Trailer for header UNB
		//   UNTSegment
		public RuleCall getUNTSegmentParserRuleCall_167() { return cUNTSegmentParserRuleCall_167; }
	}
	public class UNASegmentElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "io.thlaegler.edifact.Edilang.UNASegment");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cSegmentAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final Keyword cSegmentUNAKeyword_0_0 = (Keyword)cSegmentAssignment_0.eContents().get(0);
		private final RuleCall cCOLONTerminalRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		private final RuleCall cPLUSTerminalRuleCall_2 = (RuleCall)cGroup.eContents().get(2);
		private final Keyword cFullStopQuestionMarkKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Assignment cLineEndAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cLineEndQUOTE_AND_NLTerminalRuleCall_4_0 = (RuleCall)cLineEndAssignment_4.eContents().get(0);
		
		//UNASegment:
		//    segment="UNA"
		//    COLON
		//    PLUS
		//    ".?"
		//    lineEnd=QUOTE_AND_NL
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//segment="UNA"
		//COLON
		//PLUS
		//".?"
		//lineEnd=QUOTE_AND_NL
		public Group getGroup() { return cGroup; }
		
		//segment="UNA"
		public Assignment getSegmentAssignment_0() { return cSegmentAssignment_0; }
		
		//"UNA"
		public Keyword getSegmentUNAKeyword_0_0() { return cSegmentUNAKeyword_0_0; }
		
		//COLON
		public RuleCall getCOLONTerminalRuleCall_1() { return cCOLONTerminalRuleCall_1; }
		
		//PLUS
		public RuleCall getPLUSTerminalRuleCall_2() { return cPLUSTerminalRuleCall_2; }
		
		//".?"
		public Keyword getFullStopQuestionMarkKeyword_3() { return cFullStopQuestionMarkKeyword_3; }
		
		//lineEnd=QUOTE_AND_NL
		public Assignment getLineEndAssignment_4() { return cLineEndAssignment_4; }
		
		//QUOTE_AND_NL
		public RuleCall getLineEndQUOTE_AND_NLTerminalRuleCall_4_0() { return cLineEndQUOTE_AND_NLTerminalRuleCall_4_0; }
	}
	public class UNBSegmentElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "io.thlaegler.edifact.Edilang.UNBSegment");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cSegmentAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final Keyword cSegmentUNBKeyword_0_0 = (Keyword)cSegmentAssignment_0.eContents().get(0);
		private final RuleCall cPLUSTerminalRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		private final Assignment cHeaderAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cHeaderUNBHeaderParserRuleCall_2_0 = (RuleCall)cHeaderAssignment_2.eContents().get(0);
		private final RuleCall cPLUSTerminalRuleCall_3 = (RuleCall)cGroup.eContents().get(3);
		private final Assignment cInterchangeSenderAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cInterchangeSenderInterchangerFunctionParserRuleCall_4_0 = (RuleCall)cInterchangeSenderAssignment_4.eContents().get(0);
		private final RuleCall cPLUSTerminalRuleCall_5 = (RuleCall)cGroup.eContents().get(5);
		private final Assignment cInterchangeRecipientAssignment_6 = (Assignment)cGroup.eContents().get(6);
		private final RuleCall cInterchangeRecipientInterchangerFunctionParserRuleCall_6_0 = (RuleCall)cInterchangeRecipientAssignment_6.eContents().get(0);
		private final RuleCall cPLUSTerminalRuleCall_7 = (RuleCall)cGroup.eContents().get(7);
		private final Assignment cDateAndTimeAssignment_8 = (Assignment)cGroup.eContents().get(8);
		private final RuleCall cDateAndTimeDateAndTimeFunctionParserRuleCall_8_0 = (RuleCall)cDateAndTimeAssignment_8.eContents().get(0);
		private final RuleCall cPLUSTerminalRuleCall_9 = (RuleCall)cGroup.eContents().get(9);
		private final Assignment cInterchangeControlSenderRefAssignment_10 = (Assignment)cGroup.eContents().get(10);
		private final RuleCall cInterchangeControlSenderRefIDTerminalRuleCall_10_0 = (RuleCall)cInterchangeControlSenderRefAssignment_10.eContents().get(0);
		private final Group cGroup_11 = (Group)cGroup.eContents().get(11);
		private final RuleCall cPLUSTerminalRuleCall_11_0 = (RuleCall)cGroup_11.eContents().get(0);
		private final Assignment cInterchangeControlRecipientRefAssignment_11_1 = (Assignment)cGroup_11.eContents().get(1);
		private final RuleCall cInterchangeControlRecipientRefIDTerminalRuleCall_11_1_0 = (RuleCall)cInterchangeControlRecipientRefAssignment_11_1.eContents().get(0);
		private final Group cGroup_11_2 = (Group)cGroup_11.eContents().get(2);
		private final RuleCall cPLUSTerminalRuleCall_11_2_0 = (RuleCall)cGroup_11_2.eContents().get(0);
		private final Assignment cFseAssignment_11_2_1 = (Assignment)cGroup_11_2.eContents().get(1);
		private final RuleCall cFseIDTerminalRuleCall_11_2_1_0 = (RuleCall)cFseAssignment_11_2_1.eContents().get(0);
		private final Group cGroup_11_2_2 = (Group)cGroup_11_2.eContents().get(2);
		private final RuleCall cPLUSTerminalRuleCall_11_2_2_0 = (RuleCall)cGroup_11_2_2.eContents().get(0);
		private final Assignment cAssiciationCodeAssignment_11_2_2_1 = (Assignment)cGroup_11_2_2.eContents().get(1);
		private final RuleCall cAssiciationCodeIDTerminalRuleCall_11_2_2_1_0 = (RuleCall)cAssiciationCodeAssignment_11_2_2_1.eContents().get(0);
		private final Assignment cLineEndAssignment_12 = (Assignment)cGroup.eContents().get(12);
		private final RuleCall cLineEndQUOTE_AND_NLTerminalRuleCall_12_0 = (RuleCall)cLineEndAssignment_12.eContents().get(0);
		
		////UNB+IATB:1+1APPC+NZ0AV+200120:2136+039I42XXTK0001+++O'
		//UNBSegment:
		//    segment="UNB"
		//    PLUS
		//    ( header=UNBHeader )?
		//    PLUS
		//    ( interchangeSender=InterchangerFunction )?
		//    PLUS
		//    ( interchangeRecipient=InterchangerFunction )?
		//    PLUS
		//    ( dateAndTime+=DateAndTimeFunction )?
		//    PLUS
		//    ( interchangeControlSenderRef=ID )?
		//    (
		//        PLUS
		//        ( interchangeControlRecipientRef=ID )?
		//        (
		//            PLUS
		//            ( fse=ID )?
		//            (
		//                PLUS
		//                ( assiciationCode=ID )?
		//            )?
		//        )?
		//    )?
		//    lineEnd=QUOTE_AND_NL
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//segment="UNB"
		//PLUS
		//( header=UNBHeader )?
		//PLUS
		//( interchangeSender=InterchangerFunction )?
		//PLUS
		//( interchangeRecipient=InterchangerFunction )?
		//PLUS
		//( dateAndTime+=DateAndTimeFunction )?
		//PLUS
		//( interchangeControlSenderRef=ID )?
		//(
		//    PLUS
		//    ( interchangeControlRecipientRef=ID )?
		//    (
		//        PLUS
		//        ( fse=ID )?
		//        (
		//            PLUS
		//            ( assiciationCode=ID )?
		//        )?
		//    )?
		//)?
		//lineEnd=QUOTE_AND_NL
		public Group getGroup() { return cGroup; }
		
		//segment="UNB"
		public Assignment getSegmentAssignment_0() { return cSegmentAssignment_0; }
		
		//"UNB"
		public Keyword getSegmentUNBKeyword_0_0() { return cSegmentUNBKeyword_0_0; }
		
		//PLUS
		public RuleCall getPLUSTerminalRuleCall_1() { return cPLUSTerminalRuleCall_1; }
		
		//( header=UNBHeader )?
		public Assignment getHeaderAssignment_2() { return cHeaderAssignment_2; }
		
		//UNBHeader
		public RuleCall getHeaderUNBHeaderParserRuleCall_2_0() { return cHeaderUNBHeaderParserRuleCall_2_0; }
		
		//PLUS
		public RuleCall getPLUSTerminalRuleCall_3() { return cPLUSTerminalRuleCall_3; }
		
		//( interchangeSender=InterchangerFunction )?
		public Assignment getInterchangeSenderAssignment_4() { return cInterchangeSenderAssignment_4; }
		
		//InterchangerFunction
		public RuleCall getInterchangeSenderInterchangerFunctionParserRuleCall_4_0() { return cInterchangeSenderInterchangerFunctionParserRuleCall_4_0; }
		
		//PLUS
		public RuleCall getPLUSTerminalRuleCall_5() { return cPLUSTerminalRuleCall_5; }
		
		//( interchangeRecipient=InterchangerFunction )?
		public Assignment getInterchangeRecipientAssignment_6() { return cInterchangeRecipientAssignment_6; }
		
		//InterchangerFunction
		public RuleCall getInterchangeRecipientInterchangerFunctionParserRuleCall_6_0() { return cInterchangeRecipientInterchangerFunctionParserRuleCall_6_0; }
		
		//PLUS
		public RuleCall getPLUSTerminalRuleCall_7() { return cPLUSTerminalRuleCall_7; }
		
		//( dateAndTime+=DateAndTimeFunction )?
		public Assignment getDateAndTimeAssignment_8() { return cDateAndTimeAssignment_8; }
		
		//DateAndTimeFunction
		public RuleCall getDateAndTimeDateAndTimeFunctionParserRuleCall_8_0() { return cDateAndTimeDateAndTimeFunctionParserRuleCall_8_0; }
		
		//PLUS
		public RuleCall getPLUSTerminalRuleCall_9() { return cPLUSTerminalRuleCall_9; }
		
		//( interchangeControlSenderRef=ID )?
		public Assignment getInterchangeControlSenderRefAssignment_10() { return cInterchangeControlSenderRefAssignment_10; }
		
		//ID
		public RuleCall getInterchangeControlSenderRefIDTerminalRuleCall_10_0() { return cInterchangeControlSenderRefIDTerminalRuleCall_10_0; }
		
		//(
		//    PLUS
		//    ( interchangeControlRecipientRef=ID )?
		//    (
		//        PLUS
		//        ( fse=ID )?
		//        (
		//            PLUS
		//            ( assiciationCode=ID )?
		//        )?
		//    )?
		//)?
		public Group getGroup_11() { return cGroup_11; }
		
		//PLUS
		public RuleCall getPLUSTerminalRuleCall_11_0() { return cPLUSTerminalRuleCall_11_0; }
		
		//( interchangeControlRecipientRef=ID )?
		public Assignment getInterchangeControlRecipientRefAssignment_11_1() { return cInterchangeControlRecipientRefAssignment_11_1; }
		
		//ID
		public RuleCall getInterchangeControlRecipientRefIDTerminalRuleCall_11_1_0() { return cInterchangeControlRecipientRefIDTerminalRuleCall_11_1_0; }
		
		//(
		//    PLUS
		//    ( fse=ID )?
		//    (
		//        PLUS
		//        ( assiciationCode=ID )?
		//    )?
		//)?
		public Group getGroup_11_2() { return cGroup_11_2; }
		
		//PLUS
		public RuleCall getPLUSTerminalRuleCall_11_2_0() { return cPLUSTerminalRuleCall_11_2_0; }
		
		//( fse=ID )?
		public Assignment getFseAssignment_11_2_1() { return cFseAssignment_11_2_1; }
		
		//ID
		public RuleCall getFseIDTerminalRuleCall_11_2_1_0() { return cFseIDTerminalRuleCall_11_2_1_0; }
		
		//(
		//    PLUS
		//    ( assiciationCode=ID )?
		//)?
		public Group getGroup_11_2_2() { return cGroup_11_2_2; }
		
		//PLUS
		public RuleCall getPLUSTerminalRuleCall_11_2_2_0() { return cPLUSTerminalRuleCall_11_2_2_0; }
		
		//( assiciationCode=ID )?
		public Assignment getAssiciationCodeAssignment_11_2_2_1() { return cAssiciationCodeAssignment_11_2_2_1; }
		
		//ID
		public RuleCall getAssiciationCodeIDTerminalRuleCall_11_2_2_1_0() { return cAssiciationCodeIDTerminalRuleCall_11_2_2_1_0; }
		
		//lineEnd=QUOTE_AND_NL
		public Assignment getLineEndAssignment_12() { return cLineEndAssignment_12; }
		
		//QUOTE_AND_NL
		public RuleCall getLineEndQUOTE_AND_NLTerminalRuleCall_12_0() { return cLineEndQUOTE_AND_NLTerminalRuleCall_12_0; }
	}
	public class UNHSegmentElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "io.thlaegler.edifact.Edilang.UNHSegment");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cSegmentAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final Keyword cSegmentUNHKeyword_0_0 = (Keyword)cSegmentAssignment_0.eContents().get(0);
		private final RuleCall cPLUSTerminalRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		private final Assignment cMessageReferenceNumberAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cMessageReferenceNumberIDTerminalRuleCall_2_0 = (RuleCall)cMessageReferenceNumberAssignment_2.eContents().get(0);
		private final RuleCall cPLUSTerminalRuleCall_3 = (RuleCall)cGroup.eContents().get(3);
		private final Assignment cMessageAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cMessageMessageBodyFunctionParserRuleCall_4_0 = (RuleCall)cMessageAssignment_4.eContents().get(0);
		private final Group cGroup_5 = (Group)cGroup.eContents().get(5);
		private final RuleCall cPLUSTerminalRuleCall_5_0 = (RuleCall)cGroup_5.eContents().get(0);
		private final Assignment cCommonAccessReferenceAssignment_5_1 = (Assignment)cGroup_5.eContents().get(1);
		private final RuleCall cCommonAccessReferenceIDTerminalRuleCall_5_1_0 = (RuleCall)cCommonAccessReferenceAssignment_5_1.eContents().get(0);
		private final Assignment cLineEndAssignment_6 = (Assignment)cGroup.eContents().get(6);
		private final RuleCall cLineEndQUOTE_AND_NLTerminalRuleCall_6_0 = (RuleCall)cLineEndAssignment_6.eContents().get(0);
		
		////UNH+1+PAOREQ:96:2:IA+00012432090782'
		//UNHSegment:
		//    segment="UNH"
		//    PLUS
		//    messageReferenceNumber=ID
		//    PLUS
		//    message=MessageBodyFunction
		//    (
		//        PLUS
		//        commonAccessReference=ID
		//    )?
		//    lineEnd=QUOTE_AND_NL
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//segment="UNH"
		//PLUS
		//messageReferenceNumber=ID
		//PLUS
		//message=MessageBodyFunction
		//(
		//    PLUS
		//    commonAccessReference=ID
		//)?
		//lineEnd=QUOTE_AND_NL
		public Group getGroup() { return cGroup; }
		
		//segment="UNH"
		public Assignment getSegmentAssignment_0() { return cSegmentAssignment_0; }
		
		//"UNH"
		public Keyword getSegmentUNHKeyword_0_0() { return cSegmentUNHKeyword_0_0; }
		
		//PLUS
		public RuleCall getPLUSTerminalRuleCall_1() { return cPLUSTerminalRuleCall_1; }
		
		//messageReferenceNumber=ID
		public Assignment getMessageReferenceNumberAssignment_2() { return cMessageReferenceNumberAssignment_2; }
		
		//ID
		public RuleCall getMessageReferenceNumberIDTerminalRuleCall_2_0() { return cMessageReferenceNumberIDTerminalRuleCall_2_0; }
		
		//PLUS
		public RuleCall getPLUSTerminalRuleCall_3() { return cPLUSTerminalRuleCall_3; }
		
		//message=MessageBodyFunction
		public Assignment getMessageAssignment_4() { return cMessageAssignment_4; }
		
		//MessageBodyFunction
		public RuleCall getMessageMessageBodyFunctionParserRuleCall_4_0() { return cMessageMessageBodyFunctionParserRuleCall_4_0; }
		
		//(
		//    PLUS
		//    commonAccessReference=ID
		//)?
		public Group getGroup_5() { return cGroup_5; }
		
		//PLUS
		public RuleCall getPLUSTerminalRuleCall_5_0() { return cPLUSTerminalRuleCall_5_0; }
		
		//commonAccessReference=ID
		public Assignment getCommonAccessReferenceAssignment_5_1() { return cCommonAccessReferenceAssignment_5_1; }
		
		//ID
		public RuleCall getCommonAccessReferenceIDTerminalRuleCall_5_1_0() { return cCommonAccessReferenceIDTerminalRuleCall_5_1_0; }
		
		//lineEnd=QUOTE_AND_NL
		public Assignment getLineEndAssignment_6() { return cLineEndAssignment_6; }
		
		//QUOTE_AND_NL
		public RuleCall getLineEndQUOTE_AND_NLTerminalRuleCall_6_0() { return cLineEndQUOTE_AND_NLTerminalRuleCall_6_0; }
	}
	public class ADRSegmentElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "io.thlaegler.edifact.Edilang.ADRSegment");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cSegmentAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final Keyword cSegmentADRKeyword_0_0 = (Keyword)cSegmentAssignment_0.eContents().get(0);
		private final RuleCall cPLUSTerminalRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		private final Assignment cTodoAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cTodoIDTerminalRuleCall_2_0 = (RuleCall)cTodoAssignment_2.eContents().get(0);
		private final Assignment cLineEndAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cLineEndQUOTE_AND_NLTerminalRuleCall_3_0 = (RuleCall)cLineEndAssignment_3.eContents().get(0);
		
		////TODO
		//ADRSegment:
		//    segment="ADR"
		//    PLUS
		//    todo=ID
		//    lineEnd=QUOTE_AND_NL
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//segment="ADR"
		//PLUS
		//todo=ID
		//lineEnd=QUOTE_AND_NL
		public Group getGroup() { return cGroup; }
		
		//segment="ADR"
		public Assignment getSegmentAssignment_0() { return cSegmentAssignment_0; }
		
		//"ADR"
		public Keyword getSegmentADRKeyword_0_0() { return cSegmentADRKeyword_0_0; }
		
		//PLUS
		public RuleCall getPLUSTerminalRuleCall_1() { return cPLUSTerminalRuleCall_1; }
		
		//todo=ID
		public Assignment getTodoAssignment_2() { return cTodoAssignment_2; }
		
		//ID
		public RuleCall getTodoIDTerminalRuleCall_2_0() { return cTodoIDTerminalRuleCall_2_0; }
		
		//lineEnd=QUOTE_AND_NL
		public Assignment getLineEndAssignment_3() { return cLineEndAssignment_3; }
		
		//QUOTE_AND_NL
		public RuleCall getLineEndQUOTE_AND_NLTerminalRuleCall_3_0() { return cLineEndQUOTE_AND_NLTerminalRuleCall_3_0; }
	}
	public class AGRSegmentElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "io.thlaegler.edifact.Edilang.AGRSegment");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cSegmentAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final Keyword cSegmentAGRKeyword_0_0 = (Keyword)cSegmentAssignment_0.eContents().get(0);
		private final RuleCall cPLUSTerminalRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		private final Assignment cTodoAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cTodoIDTerminalRuleCall_2_0 = (RuleCall)cTodoAssignment_2.eContents().get(0);
		private final Assignment cLineEndAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cLineEndQUOTE_AND_NLTerminalRuleCall_3_0 = (RuleCall)cLineEndAssignment_3.eContents().get(0);
		
		////TODO
		//AGRSegment:
		//    segment="AGR"
		//    PLUS
		//    todo=ID
		//    lineEnd=QUOTE_AND_NL
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//segment="AGR"
		//PLUS
		//todo=ID
		//lineEnd=QUOTE_AND_NL
		public Group getGroup() { return cGroup; }
		
		//segment="AGR"
		public Assignment getSegmentAssignment_0() { return cSegmentAssignment_0; }
		
		//"AGR"
		public Keyword getSegmentAGRKeyword_0_0() { return cSegmentAGRKeyword_0_0; }
		
		//PLUS
		public RuleCall getPLUSTerminalRuleCall_1() { return cPLUSTerminalRuleCall_1; }
		
		//todo=ID
		public Assignment getTodoAssignment_2() { return cTodoAssignment_2; }
		
		//ID
		public RuleCall getTodoIDTerminalRuleCall_2_0() { return cTodoIDTerminalRuleCall_2_0; }
		
		//lineEnd=QUOTE_AND_NL
		public Assignment getLineEndAssignment_3() { return cLineEndAssignment_3; }
		
		//QUOTE_AND_NL
		public RuleCall getLineEndQUOTE_AND_NLTerminalRuleCall_3_0() { return cLineEndQUOTE_AND_NLTerminalRuleCall_3_0; }
	}
	public class AJTSegmentElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "io.thlaegler.edifact.Edilang.AJTSegment");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cSegmentAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final Keyword cSegmentAJTKeyword_0_0 = (Keyword)cSegmentAssignment_0.eContents().get(0);
		private final RuleCall cPLUSTerminalRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		private final Assignment cTodoAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cTodoIDTerminalRuleCall_2_0 = (RuleCall)cTodoAssignment_2.eContents().get(0);
		private final Assignment cLineEndAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cLineEndQUOTE_AND_NLTerminalRuleCall_3_0 = (RuleCall)cLineEndAssignment_3.eContents().get(0);
		
		////TODO
		//AJTSegment:
		//    segment="AJT"
		//    PLUS
		//    todo=ID
		//    lineEnd=QUOTE_AND_NL
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//segment="AJT"
		//PLUS
		//todo=ID
		//lineEnd=QUOTE_AND_NL
		public Group getGroup() { return cGroup; }
		
		//segment="AJT"
		public Assignment getSegmentAssignment_0() { return cSegmentAssignment_0; }
		
		//"AJT"
		public Keyword getSegmentAJTKeyword_0_0() { return cSegmentAJTKeyword_0_0; }
		
		//PLUS
		public RuleCall getPLUSTerminalRuleCall_1() { return cPLUSTerminalRuleCall_1; }
		
		//todo=ID
		public Assignment getTodoAssignment_2() { return cTodoAssignment_2; }
		
		//ID
		public RuleCall getTodoIDTerminalRuleCall_2_0() { return cTodoIDTerminalRuleCall_2_0; }
		
		//lineEnd=QUOTE_AND_NL
		public Assignment getLineEndAssignment_3() { return cLineEndAssignment_3; }
		
		//QUOTE_AND_NL
		public RuleCall getLineEndQUOTE_AND_NLTerminalRuleCall_3_0() { return cLineEndQUOTE_AND_NLTerminalRuleCall_3_0; }
	}
	public class ALCSegmentElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "io.thlaegler.edifact.Edilang.ALCSegment");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cSegmentAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final Keyword cSegmentALCKeyword_0_0 = (Keyword)cSegmentAssignment_0.eContents().get(0);
		private final RuleCall cPLUSTerminalRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		private final Assignment cTodoAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cTodoIDTerminalRuleCall_2_0 = (RuleCall)cTodoAssignment_2.eContents().get(0);
		private final Assignment cLineEndAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cLineEndQUOTE_AND_NLTerminalRuleCall_3_0 = (RuleCall)cLineEndAssignment_3.eContents().get(0);
		
		////TODO
		//ALCSegment:
		//    segment="ALC"
		//    PLUS
		//    todo=ID
		//    lineEnd=QUOTE_AND_NL
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//segment="ALC"
		//PLUS
		//todo=ID
		//lineEnd=QUOTE_AND_NL
		public Group getGroup() { return cGroup; }
		
		//segment="ALC"
		public Assignment getSegmentAssignment_0() { return cSegmentAssignment_0; }
		
		//"ALC"
		public Keyword getSegmentALCKeyword_0_0() { return cSegmentALCKeyword_0_0; }
		
		//PLUS
		public RuleCall getPLUSTerminalRuleCall_1() { return cPLUSTerminalRuleCall_1; }
		
		//todo=ID
		public Assignment getTodoAssignment_2() { return cTodoAssignment_2; }
		
		//ID
		public RuleCall getTodoIDTerminalRuleCall_2_0() { return cTodoIDTerminalRuleCall_2_0; }
		
		//lineEnd=QUOTE_AND_NL
		public Assignment getLineEndAssignment_3() { return cLineEndAssignment_3; }
		
		//QUOTE_AND_NL
		public RuleCall getLineEndQUOTE_AND_NLTerminalRuleCall_3_0() { return cLineEndQUOTE_AND_NLTerminalRuleCall_3_0; }
	}
	public class ALISegmentElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "io.thlaegler.edifact.Edilang.ALISegment");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cSegmentAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final Keyword cSegmentALIKeyword_0_0 = (Keyword)cSegmentAssignment_0.eContents().get(0);
		private final RuleCall cPLUSTerminalRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		private final Assignment cTodoAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cTodoIDTerminalRuleCall_2_0 = (RuleCall)cTodoAssignment_2.eContents().get(0);
		private final Assignment cLineEndAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cLineEndQUOTE_AND_NLTerminalRuleCall_3_0 = (RuleCall)cLineEndAssignment_3.eContents().get(0);
		
		////TODO
		//ALISegment:
		//    segment="ALI"
		//    PLUS
		//    todo=ID
		//    lineEnd=QUOTE_AND_NL
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//segment="ALI"
		//PLUS
		//todo=ID
		//lineEnd=QUOTE_AND_NL
		public Group getGroup() { return cGroup; }
		
		//segment="ALI"
		public Assignment getSegmentAssignment_0() { return cSegmentAssignment_0; }
		
		//"ALI"
		public Keyword getSegmentALIKeyword_0_0() { return cSegmentALIKeyword_0_0; }
		
		//PLUS
		public RuleCall getPLUSTerminalRuleCall_1() { return cPLUSTerminalRuleCall_1; }
		
		//todo=ID
		public Assignment getTodoAssignment_2() { return cTodoAssignment_2; }
		
		//ID
		public RuleCall getTodoIDTerminalRuleCall_2_0() { return cTodoIDTerminalRuleCall_2_0; }
		
		//lineEnd=QUOTE_AND_NL
		public Assignment getLineEndAssignment_3() { return cLineEndAssignment_3; }
		
		//QUOTE_AND_NL
		public RuleCall getLineEndQUOTE_AND_NLTerminalRuleCall_3_0() { return cLineEndQUOTE_AND_NLTerminalRuleCall_3_0; }
	}
	public class APPSegmentElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "io.thlaegler.edifact.Edilang.APPSegment");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cSegmentAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final Keyword cSegmentAPPKeyword_0_0 = (Keyword)cSegmentAssignment_0.eContents().get(0);
		private final RuleCall cPLUSTerminalRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		private final Assignment cTodoAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cTodoIDTerminalRuleCall_2_0 = (RuleCall)cTodoAssignment_2.eContents().get(0);
		private final Assignment cLineEndAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cLineEndQUOTE_AND_NLTerminalRuleCall_3_0 = (RuleCall)cLineEndAssignment_3.eContents().get(0);
		
		////TODO
		//APPSegment:
		//    segment="APP"
		//    PLUS
		//    todo=ID
		//    lineEnd=QUOTE_AND_NL
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//segment="APP"
		//PLUS
		//todo=ID
		//lineEnd=QUOTE_AND_NL
		public Group getGroup() { return cGroup; }
		
		//segment="APP"
		public Assignment getSegmentAssignment_0() { return cSegmentAssignment_0; }
		
		//"APP"
		public Keyword getSegmentAPPKeyword_0_0() { return cSegmentAPPKeyword_0_0; }
		
		//PLUS
		public RuleCall getPLUSTerminalRuleCall_1() { return cPLUSTerminalRuleCall_1; }
		
		//todo=ID
		public Assignment getTodoAssignment_2() { return cTodoAssignment_2; }
		
		//ID
		public RuleCall getTodoIDTerminalRuleCall_2_0() { return cTodoIDTerminalRuleCall_2_0; }
		
		//lineEnd=QUOTE_AND_NL
		public Assignment getLineEndAssignment_3() { return cLineEndAssignment_3; }
		
		//QUOTE_AND_NL
		public RuleCall getLineEndQUOTE_AND_NLTerminalRuleCall_3_0() { return cLineEndQUOTE_AND_NLTerminalRuleCall_3_0; }
	}
	public class APRSegmentElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "io.thlaegler.edifact.Edilang.APRSegment");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cSegmentAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final Keyword cSegmentAPRKeyword_0_0 = (Keyword)cSegmentAssignment_0.eContents().get(0);
		private final RuleCall cPLUSTerminalRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		private final Assignment cTodoAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cTodoIDTerminalRuleCall_2_0 = (RuleCall)cTodoAssignment_2.eContents().get(0);
		private final Assignment cLineEndAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cLineEndQUOTE_AND_NLTerminalRuleCall_3_0 = (RuleCall)cLineEndAssignment_3.eContents().get(0);
		
		////TODO
		//APRSegment:
		//    segment="APR"
		//    PLUS
		//    todo=ID
		//    lineEnd=QUOTE_AND_NL
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//segment="APR"
		//PLUS
		//todo=ID
		//lineEnd=QUOTE_AND_NL
		public Group getGroup() { return cGroup; }
		
		//segment="APR"
		public Assignment getSegmentAssignment_0() { return cSegmentAssignment_0; }
		
		//"APR"
		public Keyword getSegmentAPRKeyword_0_0() { return cSegmentAPRKeyword_0_0; }
		
		//PLUS
		public RuleCall getPLUSTerminalRuleCall_1() { return cPLUSTerminalRuleCall_1; }
		
		//todo=ID
		public Assignment getTodoAssignment_2() { return cTodoAssignment_2; }
		
		//ID
		public RuleCall getTodoIDTerminalRuleCall_2_0() { return cTodoIDTerminalRuleCall_2_0; }
		
		//lineEnd=QUOTE_AND_NL
		public Assignment getLineEndAssignment_3() { return cLineEndAssignment_3; }
		
		//QUOTE_AND_NL
		public RuleCall getLineEndQUOTE_AND_NLTerminalRuleCall_3_0() { return cLineEndQUOTE_AND_NLTerminalRuleCall_3_0; }
	}
	public class ARDSegmentElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "io.thlaegler.edifact.Edilang.ARDSegment");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cSegmentAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final Keyword cSegmentARDKeyword_0_0 = (Keyword)cSegmentAssignment_0.eContents().get(0);
		private final RuleCall cPLUSTerminalRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		private final Assignment cTodoAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cTodoIDTerminalRuleCall_2_0 = (RuleCall)cTodoAssignment_2.eContents().get(0);
		private final Assignment cLineEndAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cLineEndQUOTE_AND_NLTerminalRuleCall_3_0 = (RuleCall)cLineEndAssignment_3.eContents().get(0);
		
		////TODO
		//ARDSegment:
		//    segment="ARD"
		//    PLUS
		//    todo=ID
		//    lineEnd=QUOTE_AND_NL
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//segment="ARD"
		//PLUS
		//todo=ID
		//lineEnd=QUOTE_AND_NL
		public Group getGroup() { return cGroup; }
		
		//segment="ARD"
		public Assignment getSegmentAssignment_0() { return cSegmentAssignment_0; }
		
		//"ARD"
		public Keyword getSegmentARDKeyword_0_0() { return cSegmentARDKeyword_0_0; }
		
		//PLUS
		public RuleCall getPLUSTerminalRuleCall_1() { return cPLUSTerminalRuleCall_1; }
		
		//todo=ID
		public Assignment getTodoAssignment_2() { return cTodoAssignment_2; }
		
		//ID
		public RuleCall getTodoIDTerminalRuleCall_2_0() { return cTodoIDTerminalRuleCall_2_0; }
		
		//lineEnd=QUOTE_AND_NL
		public Assignment getLineEndAssignment_3() { return cLineEndAssignment_3; }
		
		//QUOTE_AND_NL
		public RuleCall getLineEndQUOTE_AND_NLTerminalRuleCall_3_0() { return cLineEndQUOTE_AND_NLTerminalRuleCall_3_0; }
	}
	public class ARRSegmentElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "io.thlaegler.edifact.Edilang.ARRSegment");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cSegmentAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final Keyword cSegmentARRKeyword_0_0 = (Keyword)cSegmentAssignment_0.eContents().get(0);
		private final RuleCall cPLUSTerminalRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		private final Assignment cTodoAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cTodoIDTerminalRuleCall_2_0 = (RuleCall)cTodoAssignment_2.eContents().get(0);
		private final Assignment cLineEndAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cLineEndQUOTE_AND_NLTerminalRuleCall_3_0 = (RuleCall)cLineEndAssignment_3.eContents().get(0);
		
		////TODO
		//ARRSegment:
		//    segment="ARR"
		//    PLUS
		//    todo=ID
		//    lineEnd=QUOTE_AND_NL
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//segment="ARR"
		//PLUS
		//todo=ID
		//lineEnd=QUOTE_AND_NL
		public Group getGroup() { return cGroup; }
		
		//segment="ARR"
		public Assignment getSegmentAssignment_0() { return cSegmentAssignment_0; }
		
		//"ARR"
		public Keyword getSegmentARRKeyword_0_0() { return cSegmentARRKeyword_0_0; }
		
		//PLUS
		public RuleCall getPLUSTerminalRuleCall_1() { return cPLUSTerminalRuleCall_1; }
		
		//todo=ID
		public Assignment getTodoAssignment_2() { return cTodoAssignment_2; }
		
		//ID
		public RuleCall getTodoIDTerminalRuleCall_2_0() { return cTodoIDTerminalRuleCall_2_0; }
		
		//lineEnd=QUOTE_AND_NL
		public Assignment getLineEndAssignment_3() { return cLineEndAssignment_3; }
		
		//QUOTE_AND_NL
		public RuleCall getLineEndQUOTE_AND_NLTerminalRuleCall_3_0() { return cLineEndQUOTE_AND_NLTerminalRuleCall_3_0; }
	}
	public class ASISegmentElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "io.thlaegler.edifact.Edilang.ASISegment");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cSegmentAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final Keyword cSegmentASIKeyword_0_0 = (Keyword)cSegmentAssignment_0.eContents().get(0);
		private final RuleCall cPLUSTerminalRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		private final Assignment cTodoAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cTodoIDTerminalRuleCall_2_0 = (RuleCall)cTodoAssignment_2.eContents().get(0);
		private final Assignment cLineEndAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cLineEndQUOTE_AND_NLTerminalRuleCall_3_0 = (RuleCall)cLineEndAssignment_3.eContents().get(0);
		
		////TODO
		//ASISegment:
		//    segment="ASI"
		//    PLUS
		//    todo=ID
		//    lineEnd=QUOTE_AND_NL
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//segment="ASI"
		//PLUS
		//todo=ID
		//lineEnd=QUOTE_AND_NL
		public Group getGroup() { return cGroup; }
		
		//segment="ASI"
		public Assignment getSegmentAssignment_0() { return cSegmentAssignment_0; }
		
		//"ASI"
		public Keyword getSegmentASIKeyword_0_0() { return cSegmentASIKeyword_0_0; }
		
		//PLUS
		public RuleCall getPLUSTerminalRuleCall_1() { return cPLUSTerminalRuleCall_1; }
		
		//todo=ID
		public Assignment getTodoAssignment_2() { return cTodoAssignment_2; }
		
		//ID
		public RuleCall getTodoIDTerminalRuleCall_2_0() { return cTodoIDTerminalRuleCall_2_0; }
		
		//lineEnd=QUOTE_AND_NL
		public Assignment getLineEndAssignment_3() { return cLineEndAssignment_3; }
		
		//QUOTE_AND_NL
		public RuleCall getLineEndQUOTE_AND_NLTerminalRuleCall_3_0() { return cLineEndQUOTE_AND_NLTerminalRuleCall_3_0; }
	}
	public class ATTSegmentElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "io.thlaegler.edifact.Edilang.ATTSegment");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cSegmentAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final Keyword cSegmentATTKeyword_0_0 = (Keyword)cSegmentAssignment_0.eContents().get(0);
		private final RuleCall cPLUSTerminalRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		private final Assignment cTodoAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cTodoIDTerminalRuleCall_2_0 = (RuleCall)cTodoAssignment_2.eContents().get(0);
		private final Assignment cLineEndAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cLineEndQUOTE_AND_NLTerminalRuleCall_3_0 = (RuleCall)cLineEndAssignment_3.eContents().get(0);
		
		////TODO
		//ATTSegment:
		//    segment="ATT"
		//    PLUS
		//    todo=ID
		//    lineEnd=QUOTE_AND_NL
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//segment="ATT"
		//PLUS
		//todo=ID
		//lineEnd=QUOTE_AND_NL
		public Group getGroup() { return cGroup; }
		
		//segment="ATT"
		public Assignment getSegmentAssignment_0() { return cSegmentAssignment_0; }
		
		//"ATT"
		public Keyword getSegmentATTKeyword_0_0() { return cSegmentATTKeyword_0_0; }
		
		//PLUS
		public RuleCall getPLUSTerminalRuleCall_1() { return cPLUSTerminalRuleCall_1; }
		
		//todo=ID
		public Assignment getTodoAssignment_2() { return cTodoAssignment_2; }
		
		//ID
		public RuleCall getTodoIDTerminalRuleCall_2_0() { return cTodoIDTerminalRuleCall_2_0; }
		
		//lineEnd=QUOTE_AND_NL
		public Assignment getLineEndAssignment_3() { return cLineEndAssignment_3; }
		
		//QUOTE_AND_NL
		public RuleCall getLineEndQUOTE_AND_NLTerminalRuleCall_3_0() { return cLineEndQUOTE_AND_NLTerminalRuleCall_3_0; }
	}
	public class AUTSegmentElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "io.thlaegler.edifact.Edilang.AUTSegment");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cSegmentAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final Keyword cSegmentAUTKeyword_0_0 = (Keyword)cSegmentAssignment_0.eContents().get(0);
		private final RuleCall cPLUSTerminalRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		private final Assignment cTodoAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cTodoIDTerminalRuleCall_2_0 = (RuleCall)cTodoAssignment_2.eContents().get(0);
		private final Assignment cLineEndAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cLineEndQUOTE_AND_NLTerminalRuleCall_3_0 = (RuleCall)cLineEndAssignment_3.eContents().get(0);
		
		////TODO
		//AUTSegment:
		//    segment="AUT"
		//    PLUS
		//    todo=ID
		//    lineEnd=QUOTE_AND_NL
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//segment="AUT"
		//PLUS
		//todo=ID
		//lineEnd=QUOTE_AND_NL
		public Group getGroup() { return cGroup; }
		
		//segment="AUT"
		public Assignment getSegmentAssignment_0() { return cSegmentAssignment_0; }
		
		//"AUT"
		public Keyword getSegmentAUTKeyword_0_0() { return cSegmentAUTKeyword_0_0; }
		
		//PLUS
		public RuleCall getPLUSTerminalRuleCall_1() { return cPLUSTerminalRuleCall_1; }
		
		//todo=ID
		public Assignment getTodoAssignment_2() { return cTodoAssignment_2; }
		
		//ID
		public RuleCall getTodoIDTerminalRuleCall_2_0() { return cTodoIDTerminalRuleCall_2_0; }
		
		//lineEnd=QUOTE_AND_NL
		public Assignment getLineEndAssignment_3() { return cLineEndAssignment_3; }
		
		//QUOTE_AND_NL
		public RuleCall getLineEndQUOTE_AND_NLTerminalRuleCall_3_0() { return cLineEndQUOTE_AND_NLTerminalRuleCall_3_0; }
	}
	public class BASSegmentElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "io.thlaegler.edifact.Edilang.BASSegment");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cSegmentAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final Keyword cSegmentBASKeyword_0_0 = (Keyword)cSegmentAssignment_0.eContents().get(0);
		private final RuleCall cPLUSTerminalRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		private final Assignment cTodoAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cTodoIDTerminalRuleCall_2_0 = (RuleCall)cTodoAssignment_2.eContents().get(0);
		private final Assignment cLineEndAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cLineEndQUOTE_AND_NLTerminalRuleCall_3_0 = (RuleCall)cLineEndAssignment_3.eContents().get(0);
		
		////TODO
		//BASSegment:
		//    segment="BAS"
		//    PLUS
		//    todo=ID
		//    lineEnd=QUOTE_AND_NL
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//segment="BAS"
		//PLUS
		//todo=ID
		//lineEnd=QUOTE_AND_NL
		public Group getGroup() { return cGroup; }
		
		//segment="BAS"
		public Assignment getSegmentAssignment_0() { return cSegmentAssignment_0; }
		
		//"BAS"
		public Keyword getSegmentBASKeyword_0_0() { return cSegmentBASKeyword_0_0; }
		
		//PLUS
		public RuleCall getPLUSTerminalRuleCall_1() { return cPLUSTerminalRuleCall_1; }
		
		//todo=ID
		public Assignment getTodoAssignment_2() { return cTodoAssignment_2; }
		
		//ID
		public RuleCall getTodoIDTerminalRuleCall_2_0() { return cTodoIDTerminalRuleCall_2_0; }
		
		//lineEnd=QUOTE_AND_NL
		public Assignment getLineEndAssignment_3() { return cLineEndAssignment_3; }
		
		//QUOTE_AND_NL
		public RuleCall getLineEndQUOTE_AND_NLTerminalRuleCall_3_0() { return cLineEndQUOTE_AND_NLTerminalRuleCall_3_0; }
	}
	public class BIISegmentElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "io.thlaegler.edifact.Edilang.BIISegment");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cSegmentAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final Keyword cSegmentBIIKeyword_0_0 = (Keyword)cSegmentAssignment_0.eContents().get(0);
		private final RuleCall cPLUSTerminalRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		private final Assignment cTodoAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cTodoIDTerminalRuleCall_2_0 = (RuleCall)cTodoAssignment_2.eContents().get(0);
		private final Assignment cLineEndAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cLineEndQUOTE_AND_NLTerminalRuleCall_3_0 = (RuleCall)cLineEndAssignment_3.eContents().get(0);
		
		////TODO
		//BIISegment:
		//    segment="BII"
		//    PLUS
		//    todo=ID
		//    lineEnd=QUOTE_AND_NL
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//segment="BII"
		//PLUS
		//todo=ID
		//lineEnd=QUOTE_AND_NL
		public Group getGroup() { return cGroup; }
		
		//segment="BII"
		public Assignment getSegmentAssignment_0() { return cSegmentAssignment_0; }
		
		//"BII"
		public Keyword getSegmentBIIKeyword_0_0() { return cSegmentBIIKeyword_0_0; }
		
		//PLUS
		public RuleCall getPLUSTerminalRuleCall_1() { return cPLUSTerminalRuleCall_1; }
		
		//todo=ID
		public Assignment getTodoAssignment_2() { return cTodoAssignment_2; }
		
		//ID
		public RuleCall getTodoIDTerminalRuleCall_2_0() { return cTodoIDTerminalRuleCall_2_0; }
		
		//lineEnd=QUOTE_AND_NL
		public Assignment getLineEndAssignment_3() { return cLineEndAssignment_3; }
		
		//QUOTE_AND_NL
		public RuleCall getLineEndQUOTE_AND_NLTerminalRuleCall_3_0() { return cLineEndQUOTE_AND_NLTerminalRuleCall_3_0; }
	}
	public class BUSSegmentElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "io.thlaegler.edifact.Edilang.BUSSegment");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cSegmentAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final Keyword cSegmentBUSKeyword_0_0 = (Keyword)cSegmentAssignment_0.eContents().get(0);
		private final RuleCall cPLUSTerminalRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		private final Assignment cTodoAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cTodoIDTerminalRuleCall_2_0 = (RuleCall)cTodoAssignment_2.eContents().get(0);
		private final Assignment cLineEndAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cLineEndQUOTE_AND_NLTerminalRuleCall_3_0 = (RuleCall)cLineEndAssignment_3.eContents().get(0);
		
		////TODO
		//BUSSegment:
		//    segment="BUS"
		//    PLUS
		//    todo=ID
		//    lineEnd=QUOTE_AND_NL
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//segment="BUS"
		//PLUS
		//todo=ID
		//lineEnd=QUOTE_AND_NL
		public Group getGroup() { return cGroup; }
		
		//segment="BUS"
		public Assignment getSegmentAssignment_0() { return cSegmentAssignment_0; }
		
		//"BUS"
		public Keyword getSegmentBUSKeyword_0_0() { return cSegmentBUSKeyword_0_0; }
		
		//PLUS
		public RuleCall getPLUSTerminalRuleCall_1() { return cPLUSTerminalRuleCall_1; }
		
		//todo=ID
		public Assignment getTodoAssignment_2() { return cTodoAssignment_2; }
		
		//ID
		public RuleCall getTodoIDTerminalRuleCall_2_0() { return cTodoIDTerminalRuleCall_2_0; }
		
		//lineEnd=QUOTE_AND_NL
		public Assignment getLineEndAssignment_3() { return cLineEndAssignment_3; }
		
		//QUOTE_AND_NL
		public RuleCall getLineEndQUOTE_AND_NLTerminalRuleCall_3_0() { return cLineEndQUOTE_AND_NLTerminalRuleCall_3_0; }
	}
	public class CAVSegmentElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "io.thlaegler.edifact.Edilang.CAVSegment");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cSegmentAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final Keyword cSegmentCAVKeyword_0_0 = (Keyword)cSegmentAssignment_0.eContents().get(0);
		private final RuleCall cPLUSTerminalRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		private final Assignment cTodoAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cTodoIDTerminalRuleCall_2_0 = (RuleCall)cTodoAssignment_2.eContents().get(0);
		private final Assignment cLineEndAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cLineEndQUOTE_AND_NLTerminalRuleCall_3_0 = (RuleCall)cLineEndAssignment_3.eContents().get(0);
		
		////TODO
		//CAVSegment:
		//    segment="CAV"
		//    PLUS
		//    todo=ID
		//    lineEnd=QUOTE_AND_NL
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//segment="CAV"
		//PLUS
		//todo=ID
		//lineEnd=QUOTE_AND_NL
		public Group getGroup() { return cGroup; }
		
		//segment="CAV"
		public Assignment getSegmentAssignment_0() { return cSegmentAssignment_0; }
		
		//"CAV"
		public Keyword getSegmentCAVKeyword_0_0() { return cSegmentCAVKeyword_0_0; }
		
		//PLUS
		public RuleCall getPLUSTerminalRuleCall_1() { return cPLUSTerminalRuleCall_1; }
		
		//todo=ID
		public Assignment getTodoAssignment_2() { return cTodoAssignment_2; }
		
		//ID
		public RuleCall getTodoIDTerminalRuleCall_2_0() { return cTodoIDTerminalRuleCall_2_0; }
		
		//lineEnd=QUOTE_AND_NL
		public Assignment getLineEndAssignment_3() { return cLineEndAssignment_3; }
		
		//QUOTE_AND_NL
		public RuleCall getLineEndQUOTE_AND_NLTerminalRuleCall_3_0() { return cLineEndQUOTE_AND_NLTerminalRuleCall_3_0; }
	}
	public class CCDSegmentElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "io.thlaegler.edifact.Edilang.CCDSegment");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cSegmentAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final Keyword cSegmentCCDKeyword_0_0 = (Keyword)cSegmentAssignment_0.eContents().get(0);
		private final RuleCall cPLUSTerminalRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		private final Assignment cTodoAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cTodoIDTerminalRuleCall_2_0 = (RuleCall)cTodoAssignment_2.eContents().get(0);
		private final Assignment cLineEndAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cLineEndQUOTE_AND_NLTerminalRuleCall_3_0 = (RuleCall)cLineEndAssignment_3.eContents().get(0);
		
		////TODO
		//CCDSegment:
		//    segment="CCD"
		//    PLUS
		//    todo=ID
		//    lineEnd=QUOTE_AND_NL
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//segment="CCD"
		//PLUS
		//todo=ID
		//lineEnd=QUOTE_AND_NL
		public Group getGroup() { return cGroup; }
		
		//segment="CCD"
		public Assignment getSegmentAssignment_0() { return cSegmentAssignment_0; }
		
		//"CCD"
		public Keyword getSegmentCCDKeyword_0_0() { return cSegmentCCDKeyword_0_0; }
		
		//PLUS
		public RuleCall getPLUSTerminalRuleCall_1() { return cPLUSTerminalRuleCall_1; }
		
		//todo=ID
		public Assignment getTodoAssignment_2() { return cTodoAssignment_2; }
		
		//ID
		public RuleCall getTodoIDTerminalRuleCall_2_0() { return cTodoIDTerminalRuleCall_2_0; }
		
		//lineEnd=QUOTE_AND_NL
		public Assignment getLineEndAssignment_3() { return cLineEndAssignment_3; }
		
		//QUOTE_AND_NL
		public RuleCall getLineEndQUOTE_AND_NLTerminalRuleCall_3_0() { return cLineEndQUOTE_AND_NLTerminalRuleCall_3_0; }
	}
	public class CCISegmentElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "io.thlaegler.edifact.Edilang.CCISegment");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cSegmentAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final Keyword cSegmentCCIKeyword_0_0 = (Keyword)cSegmentAssignment_0.eContents().get(0);
		private final RuleCall cPLUSTerminalRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		private final Assignment cTodoAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cTodoIDTerminalRuleCall_2_0 = (RuleCall)cTodoAssignment_2.eContents().get(0);
		private final Assignment cLineEndAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cLineEndQUOTE_AND_NLTerminalRuleCall_3_0 = (RuleCall)cLineEndAssignment_3.eContents().get(0);
		
		////TODO
		//CCISegment:
		//    segment="CCI"
		//    PLUS
		//    todo=ID
		//    lineEnd=QUOTE_AND_NL
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//segment="CCI"
		//PLUS
		//todo=ID
		//lineEnd=QUOTE_AND_NL
		public Group getGroup() { return cGroup; }
		
		//segment="CCI"
		public Assignment getSegmentAssignment_0() { return cSegmentAssignment_0; }
		
		//"CCI"
		public Keyword getSegmentCCIKeyword_0_0() { return cSegmentCCIKeyword_0_0; }
		
		//PLUS
		public RuleCall getPLUSTerminalRuleCall_1() { return cPLUSTerminalRuleCall_1; }
		
		//todo=ID
		public Assignment getTodoAssignment_2() { return cTodoAssignment_2; }
		
		//ID
		public RuleCall getTodoIDTerminalRuleCall_2_0() { return cTodoIDTerminalRuleCall_2_0; }
		
		//lineEnd=QUOTE_AND_NL
		public Assignment getLineEndAssignment_3() { return cLineEndAssignment_3; }
		
		//QUOTE_AND_NL
		public RuleCall getLineEndQUOTE_AND_NLTerminalRuleCall_3_0() { return cLineEndQUOTE_AND_NLTerminalRuleCall_3_0; }
	}
	public class CDISegmentElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "io.thlaegler.edifact.Edilang.CDISegment");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cSegmentAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final Keyword cSegmentCDIKeyword_0_0 = (Keyword)cSegmentAssignment_0.eContents().get(0);
		private final RuleCall cPLUSTerminalRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		private final Assignment cTodoAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cTodoIDTerminalRuleCall_2_0 = (RuleCall)cTodoAssignment_2.eContents().get(0);
		private final Assignment cLineEndAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cLineEndQUOTE_AND_NLTerminalRuleCall_3_0 = (RuleCall)cLineEndAssignment_3.eContents().get(0);
		
		////TODO
		//CDISegment:
		//    segment="CDI"
		//    PLUS
		//    todo=ID
		//    lineEnd=QUOTE_AND_NL
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//segment="CDI"
		//PLUS
		//todo=ID
		//lineEnd=QUOTE_AND_NL
		public Group getGroup() { return cGroup; }
		
		//segment="CDI"
		public Assignment getSegmentAssignment_0() { return cSegmentAssignment_0; }
		
		//"CDI"
		public Keyword getSegmentCDIKeyword_0_0() { return cSegmentCDIKeyword_0_0; }
		
		//PLUS
		public RuleCall getPLUSTerminalRuleCall_1() { return cPLUSTerminalRuleCall_1; }
		
		//todo=ID
		public Assignment getTodoAssignment_2() { return cTodoAssignment_2; }
		
		//ID
		public RuleCall getTodoIDTerminalRuleCall_2_0() { return cTodoIDTerminalRuleCall_2_0; }
		
		//lineEnd=QUOTE_AND_NL
		public Assignment getLineEndAssignment_3() { return cLineEndAssignment_3; }
		
		//QUOTE_AND_NL
		public RuleCall getLineEndQUOTE_AND_NLTerminalRuleCall_3_0() { return cLineEndQUOTE_AND_NLTerminalRuleCall_3_0; }
	}
	public class CDSSegmentElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "io.thlaegler.edifact.Edilang.CDSSegment");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cSegmentAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final Keyword cSegmentCDSKeyword_0_0 = (Keyword)cSegmentAssignment_0.eContents().get(0);
		private final RuleCall cPLUSTerminalRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		private final Assignment cTodoAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cTodoIDTerminalRuleCall_2_0 = (RuleCall)cTodoAssignment_2.eContents().get(0);
		private final Assignment cLineEndAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cLineEndQUOTE_AND_NLTerminalRuleCall_3_0 = (RuleCall)cLineEndAssignment_3.eContents().get(0);
		
		////TODO
		//CDSSegment:
		//    segment="CDS"
		//    PLUS
		//    todo=ID
		//    lineEnd=QUOTE_AND_NL
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//segment="CDS"
		//PLUS
		//todo=ID
		//lineEnd=QUOTE_AND_NL
		public Group getGroup() { return cGroup; }
		
		//segment="CDS"
		public Assignment getSegmentAssignment_0() { return cSegmentAssignment_0; }
		
		//"CDS"
		public Keyword getSegmentCDSKeyword_0_0() { return cSegmentCDSKeyword_0_0; }
		
		//PLUS
		public RuleCall getPLUSTerminalRuleCall_1() { return cPLUSTerminalRuleCall_1; }
		
		//todo=ID
		public Assignment getTodoAssignment_2() { return cTodoAssignment_2; }
		
		//ID
		public RuleCall getTodoIDTerminalRuleCall_2_0() { return cTodoIDTerminalRuleCall_2_0; }
		
		//lineEnd=QUOTE_AND_NL
		public Assignment getLineEndAssignment_3() { return cLineEndAssignment_3; }
		
		//QUOTE_AND_NL
		public RuleCall getLineEndQUOTE_AND_NLTerminalRuleCall_3_0() { return cLineEndQUOTE_AND_NLTerminalRuleCall_3_0; }
	}
	public class CDVSegmentElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "io.thlaegler.edifact.Edilang.CDVSegment");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cSegmentAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final Keyword cSegmentCDVKeyword_0_0 = (Keyword)cSegmentAssignment_0.eContents().get(0);
		private final RuleCall cPLUSTerminalRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		private final Assignment cTodoAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cTodoIDTerminalRuleCall_2_0 = (RuleCall)cTodoAssignment_2.eContents().get(0);
		private final Assignment cLineEndAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cLineEndQUOTE_AND_NLTerminalRuleCall_3_0 = (RuleCall)cLineEndAssignment_3.eContents().get(0);
		
		////TODO
		//CDVSegment:
		//    segment="CDV"
		//    PLUS
		//    todo=ID
		//    lineEnd=QUOTE_AND_NL
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//segment="CDV"
		//PLUS
		//todo=ID
		//lineEnd=QUOTE_AND_NL
		public Group getGroup() { return cGroup; }
		
		//segment="CDV"
		public Assignment getSegmentAssignment_0() { return cSegmentAssignment_0; }
		
		//"CDV"
		public Keyword getSegmentCDVKeyword_0_0() { return cSegmentCDVKeyword_0_0; }
		
		//PLUS
		public RuleCall getPLUSTerminalRuleCall_1() { return cPLUSTerminalRuleCall_1; }
		
		//todo=ID
		public Assignment getTodoAssignment_2() { return cTodoAssignment_2; }
		
		//ID
		public RuleCall getTodoIDTerminalRuleCall_2_0() { return cTodoIDTerminalRuleCall_2_0; }
		
		//lineEnd=QUOTE_AND_NL
		public Assignment getLineEndAssignment_3() { return cLineEndAssignment_3; }
		
		//QUOTE_AND_NL
		public RuleCall getLineEndQUOTE_AND_NLTerminalRuleCall_3_0() { return cLineEndQUOTE_AND_NLTerminalRuleCall_3_0; }
	}
	public class CEDSegmentElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "io.thlaegler.edifact.Edilang.CEDSegment");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cSegmentAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final Keyword cSegmentCEDKeyword_0_0 = (Keyword)cSegmentAssignment_0.eContents().get(0);
		private final RuleCall cPLUSTerminalRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		private final Assignment cTodoAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cTodoIDTerminalRuleCall_2_0 = (RuleCall)cTodoAssignment_2.eContents().get(0);
		private final Assignment cLineEndAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cLineEndQUOTE_AND_NLTerminalRuleCall_3_0 = (RuleCall)cLineEndAssignment_3.eContents().get(0);
		
		////TODO
		//CEDSegment:
		//    segment="CED"
		//    PLUS
		//    todo=ID
		//    lineEnd=QUOTE_AND_NL
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//segment="CED"
		//PLUS
		//todo=ID
		//lineEnd=QUOTE_AND_NL
		public Group getGroup() { return cGroup; }
		
		//segment="CED"
		public Assignment getSegmentAssignment_0() { return cSegmentAssignment_0; }
		
		//"CED"
		public Keyword getSegmentCEDKeyword_0_0() { return cSegmentCEDKeyword_0_0; }
		
		//PLUS
		public RuleCall getPLUSTerminalRuleCall_1() { return cPLUSTerminalRuleCall_1; }
		
		//todo=ID
		public Assignment getTodoAssignment_2() { return cTodoAssignment_2; }
		
		//ID
		public RuleCall getTodoIDTerminalRuleCall_2_0() { return cTodoIDTerminalRuleCall_2_0; }
		
		//lineEnd=QUOTE_AND_NL
		public Assignment getLineEndAssignment_3() { return cLineEndAssignment_3; }
		
		//QUOTE_AND_NL
		public RuleCall getLineEndQUOTE_AND_NLTerminalRuleCall_3_0() { return cLineEndQUOTE_AND_NLTerminalRuleCall_3_0; }
	}
	public class CINSegmentElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "io.thlaegler.edifact.Edilang.CINSegment");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cSegmentAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final Keyword cSegmentCINKeyword_0_0 = (Keyword)cSegmentAssignment_0.eContents().get(0);
		private final RuleCall cPLUSTerminalRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		private final Assignment cTodoAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cTodoIDTerminalRuleCall_2_0 = (RuleCall)cTodoAssignment_2.eContents().get(0);
		private final Assignment cLineEndAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cLineEndQUOTE_AND_NLTerminalRuleCall_3_0 = (RuleCall)cLineEndAssignment_3.eContents().get(0);
		
		////TODO
		//CINSegment:
		//    segment="CIN"
		//    PLUS
		//    todo=ID
		//    lineEnd=QUOTE_AND_NL
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//segment="CIN"
		//PLUS
		//todo=ID
		//lineEnd=QUOTE_AND_NL
		public Group getGroup() { return cGroup; }
		
		//segment="CIN"
		public Assignment getSegmentAssignment_0() { return cSegmentAssignment_0; }
		
		//"CIN"
		public Keyword getSegmentCINKeyword_0_0() { return cSegmentCINKeyword_0_0; }
		
		//PLUS
		public RuleCall getPLUSTerminalRuleCall_1() { return cPLUSTerminalRuleCall_1; }
		
		//todo=ID
		public Assignment getTodoAssignment_2() { return cTodoAssignment_2; }
		
		//ID
		public RuleCall getTodoIDTerminalRuleCall_2_0() { return cTodoIDTerminalRuleCall_2_0; }
		
		//lineEnd=QUOTE_AND_NL
		public Assignment getLineEndAssignment_3() { return cLineEndAssignment_3; }
		
		//QUOTE_AND_NL
		public RuleCall getLineEndQUOTE_AND_NLTerminalRuleCall_3_0() { return cLineEndQUOTE_AND_NLTerminalRuleCall_3_0; }
	}
	public class CLASegmentElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "io.thlaegler.edifact.Edilang.CLASegment");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cSegmentAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final Keyword cSegmentCLAKeyword_0_0 = (Keyword)cSegmentAssignment_0.eContents().get(0);
		private final RuleCall cPLUSTerminalRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		private final Assignment cTodoAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cTodoIDTerminalRuleCall_2_0 = (RuleCall)cTodoAssignment_2.eContents().get(0);
		private final Assignment cLineEndAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cLineEndQUOTE_AND_NLTerminalRuleCall_3_0 = (RuleCall)cLineEndAssignment_3.eContents().get(0);
		
		//CLASegment:
		//    segment="CLA"
		//    PLUS
		//    todo=ID
		//    lineEnd=QUOTE_AND_NL
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//segment="CLA"
		//PLUS
		//todo=ID
		//lineEnd=QUOTE_AND_NL
		public Group getGroup() { return cGroup; }
		
		//segment="CLA"
		public Assignment getSegmentAssignment_0() { return cSegmentAssignment_0; }
		
		//"CLA"
		public Keyword getSegmentCLAKeyword_0_0() { return cSegmentCLAKeyword_0_0; }
		
		//PLUS
		public RuleCall getPLUSTerminalRuleCall_1() { return cPLUSTerminalRuleCall_1; }
		
		//todo=ID
		public Assignment getTodoAssignment_2() { return cTodoAssignment_2; }
		
		//ID
		public RuleCall getTodoIDTerminalRuleCall_2_0() { return cTodoIDTerminalRuleCall_2_0; }
		
		//lineEnd=QUOTE_AND_NL
		public Assignment getLineEndAssignment_3() { return cLineEndAssignment_3; }
		
		//QUOTE_AND_NL
		public RuleCall getLineEndQUOTE_AND_NLTerminalRuleCall_3_0() { return cLineEndQUOTE_AND_NLTerminalRuleCall_3_0; }
	}
	public class CLISegmentElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "io.thlaegler.edifact.Edilang.CLISegment");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cSegmentAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final Keyword cSegmentCLIKeyword_0_0 = (Keyword)cSegmentAssignment_0.eContents().get(0);
		private final RuleCall cPLUSTerminalRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		private final Assignment cTodoAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cTodoIDTerminalRuleCall_2_0 = (RuleCall)cTodoAssignment_2.eContents().get(0);
		private final Assignment cLineEndAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cLineEndQUOTE_AND_NLTerminalRuleCall_3_0 = (RuleCall)cLineEndAssignment_3.eContents().get(0);
		
		////TODO
		//CLISegment:
		//    segment="CLI"
		//    PLUS
		//    todo=ID
		//    lineEnd=QUOTE_AND_NL
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//segment="CLI"
		//PLUS
		//todo=ID
		//lineEnd=QUOTE_AND_NL
		public Group getGroup() { return cGroup; }
		
		//segment="CLI"
		public Assignment getSegmentAssignment_0() { return cSegmentAssignment_0; }
		
		//"CLI"
		public Keyword getSegmentCLIKeyword_0_0() { return cSegmentCLIKeyword_0_0; }
		
		//PLUS
		public RuleCall getPLUSTerminalRuleCall_1() { return cPLUSTerminalRuleCall_1; }
		
		//todo=ID
		public Assignment getTodoAssignment_2() { return cTodoAssignment_2; }
		
		//ID
		public RuleCall getTodoIDTerminalRuleCall_2_0() { return cTodoIDTerminalRuleCall_2_0; }
		
		//lineEnd=QUOTE_AND_NL
		public Assignment getLineEndAssignment_3() { return cLineEndAssignment_3; }
		
		//QUOTE_AND_NL
		public RuleCall getLineEndQUOTE_AND_NLTerminalRuleCall_3_0() { return cLineEndQUOTE_AND_NLTerminalRuleCall_3_0; }
	}
	public class CMPSegmentElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "io.thlaegler.edifact.Edilang.CMPSegment");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cSegmentAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final Keyword cSegmentCMPKeyword_0_0 = (Keyword)cSegmentAssignment_0.eContents().get(0);
		private final RuleCall cPLUSTerminalRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		private final Assignment cTodoAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cTodoIDTerminalRuleCall_2_0 = (RuleCall)cTodoAssignment_2.eContents().get(0);
		private final Assignment cLineEndAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cLineEndQUOTE_AND_NLTerminalRuleCall_3_0 = (RuleCall)cLineEndAssignment_3.eContents().get(0);
		
		////TODO
		//CMPSegment:
		//    segment="CMP"
		//    PLUS
		//    todo=ID
		//    lineEnd=QUOTE_AND_NL
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//segment="CMP"
		//PLUS
		//todo=ID
		//lineEnd=QUOTE_AND_NL
		public Group getGroup() { return cGroup; }
		
		//segment="CMP"
		public Assignment getSegmentAssignment_0() { return cSegmentAssignment_0; }
		
		//"CMP"
		public Keyword getSegmentCMPKeyword_0_0() { return cSegmentCMPKeyword_0_0; }
		
		//PLUS
		public RuleCall getPLUSTerminalRuleCall_1() { return cPLUSTerminalRuleCall_1; }
		
		//todo=ID
		public Assignment getTodoAssignment_2() { return cTodoAssignment_2; }
		
		//ID
		public RuleCall getTodoIDTerminalRuleCall_2_0() { return cTodoIDTerminalRuleCall_2_0; }
		
		//lineEnd=QUOTE_AND_NL
		public Assignment getLineEndAssignment_3() { return cLineEndAssignment_3; }
		
		//QUOTE_AND_NL
		public RuleCall getLineEndQUOTE_AND_NLTerminalRuleCall_3_0() { return cLineEndQUOTE_AND_NLTerminalRuleCall_3_0; }
	}
	public class CNISegmentElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "io.thlaegler.edifact.Edilang.CNISegment");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cSegmentAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final Keyword cSegmentCNIKeyword_0_0 = (Keyword)cSegmentAssignment_0.eContents().get(0);
		private final RuleCall cPLUSTerminalRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		private final Assignment cTodoAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cTodoIDTerminalRuleCall_2_0 = (RuleCall)cTodoAssignment_2.eContents().get(0);
		private final Assignment cLineEndAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cLineEndQUOTE_AND_NLTerminalRuleCall_3_0 = (RuleCall)cLineEndAssignment_3.eContents().get(0);
		
		////TODO
		//CNISegment:
		//    segment="CNI"
		//    PLUS
		//    todo=ID
		//    lineEnd=QUOTE_AND_NL
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//segment="CNI"
		//PLUS
		//todo=ID
		//lineEnd=QUOTE_AND_NL
		public Group getGroup() { return cGroup; }
		
		//segment="CNI"
		public Assignment getSegmentAssignment_0() { return cSegmentAssignment_0; }
		
		//"CNI"
		public Keyword getSegmentCNIKeyword_0_0() { return cSegmentCNIKeyword_0_0; }
		
		//PLUS
		public RuleCall getPLUSTerminalRuleCall_1() { return cPLUSTerminalRuleCall_1; }
		
		//todo=ID
		public Assignment getTodoAssignment_2() { return cTodoAssignment_2; }
		
		//ID
		public RuleCall getTodoIDTerminalRuleCall_2_0() { return cTodoIDTerminalRuleCall_2_0; }
		
		//lineEnd=QUOTE_AND_NL
		public Assignment getLineEndAssignment_3() { return cLineEndAssignment_3; }
		
		//QUOTE_AND_NL
		public RuleCall getLineEndQUOTE_AND_NLTerminalRuleCall_3_0() { return cLineEndQUOTE_AND_NLTerminalRuleCall_3_0; }
	}
	public class CODSegmentElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "io.thlaegler.edifact.Edilang.CODSegment");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cSegmentAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final Keyword cSegmentCODKeyword_0_0 = (Keyword)cSegmentAssignment_0.eContents().get(0);
		private final RuleCall cPLUSTerminalRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		private final Assignment cTodoAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cTodoIDTerminalRuleCall_2_0 = (RuleCall)cTodoAssignment_2.eContents().get(0);
		private final Assignment cLineEndAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cLineEndQUOTE_AND_NLTerminalRuleCall_3_0 = (RuleCall)cLineEndAssignment_3.eContents().get(0);
		
		////TODO
		//CODSegment:
		//    segment="COD"
		//    PLUS
		//    todo=ID
		//    lineEnd=QUOTE_AND_NL
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//segment="COD"
		//PLUS
		//todo=ID
		//lineEnd=QUOTE_AND_NL
		public Group getGroup() { return cGroup; }
		
		//segment="COD"
		public Assignment getSegmentAssignment_0() { return cSegmentAssignment_0; }
		
		//"COD"
		public Keyword getSegmentCODKeyword_0_0() { return cSegmentCODKeyword_0_0; }
		
		//PLUS
		public RuleCall getPLUSTerminalRuleCall_1() { return cPLUSTerminalRuleCall_1; }
		
		//todo=ID
		public Assignment getTodoAssignment_2() { return cTodoAssignment_2; }
		
		//ID
		public RuleCall getTodoIDTerminalRuleCall_2_0() { return cTodoIDTerminalRuleCall_2_0; }
		
		//lineEnd=QUOTE_AND_NL
		public Assignment getLineEndAssignment_3() { return cLineEndAssignment_3; }
		
		//QUOTE_AND_NL
		public RuleCall getLineEndQUOTE_AND_NLTerminalRuleCall_3_0() { return cLineEndQUOTE_AND_NLTerminalRuleCall_3_0; }
	}
	public class COMSegmentElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "io.thlaegler.edifact.Edilang.COMSegment");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cSegmentAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final Keyword cSegmentCOMKeyword_0_0 = (Keyword)cSegmentAssignment_0.eContents().get(0);
		private final RuleCall cPLUSTerminalRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		private final Assignment cTodoAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cTodoIDTerminalRuleCall_2_0 = (RuleCall)cTodoAssignment_2.eContents().get(0);
		private final Assignment cLineEndAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cLineEndQUOTE_AND_NLTerminalRuleCall_3_0 = (RuleCall)cLineEndAssignment_3.eContents().get(0);
		
		////TODO
		//COMSegment:
		//    segment="COM"
		//    PLUS
		//    todo=ID
		//    lineEnd=QUOTE_AND_NL
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//segment="COM"
		//PLUS
		//todo=ID
		//lineEnd=QUOTE_AND_NL
		public Group getGroup() { return cGroup; }
		
		//segment="COM"
		public Assignment getSegmentAssignment_0() { return cSegmentAssignment_0; }
		
		//"COM"
		public Keyword getSegmentCOMKeyword_0_0() { return cSegmentCOMKeyword_0_0; }
		
		//PLUS
		public RuleCall getPLUSTerminalRuleCall_1() { return cPLUSTerminalRuleCall_1; }
		
		//todo=ID
		public Assignment getTodoAssignment_2() { return cTodoAssignment_2; }
		
		//ID
		public RuleCall getTodoIDTerminalRuleCall_2_0() { return cTodoIDTerminalRuleCall_2_0; }
		
		//lineEnd=QUOTE_AND_NL
		public Assignment getLineEndAssignment_3() { return cLineEndAssignment_3; }
		
		//QUOTE_AND_NL
		public RuleCall getLineEndQUOTE_AND_NLTerminalRuleCall_3_0() { return cLineEndQUOTE_AND_NLTerminalRuleCall_3_0; }
	}
	public class COTSegmentElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "io.thlaegler.edifact.Edilang.COTSegment");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cSegmentAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final Keyword cSegmentCOTKeyword_0_0 = (Keyword)cSegmentAssignment_0.eContents().get(0);
		private final RuleCall cPLUSTerminalRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		private final Assignment cTodoAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cTodoIDTerminalRuleCall_2_0 = (RuleCall)cTodoAssignment_2.eContents().get(0);
		private final Assignment cLineEndAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cLineEndQUOTE_AND_NLTerminalRuleCall_3_0 = (RuleCall)cLineEndAssignment_3.eContents().get(0);
		
		////TODO
		//COTSegment:
		//    segment="COT"
		//    PLUS
		//    todo=ID
		//    lineEnd=QUOTE_AND_NL
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//segment="COT"
		//PLUS
		//todo=ID
		//lineEnd=QUOTE_AND_NL
		public Group getGroup() { return cGroup; }
		
		//segment="COT"
		public Assignment getSegmentAssignment_0() { return cSegmentAssignment_0; }
		
		//"COT"
		public Keyword getSegmentCOTKeyword_0_0() { return cSegmentCOTKeyword_0_0; }
		
		//PLUS
		public RuleCall getPLUSTerminalRuleCall_1() { return cPLUSTerminalRuleCall_1; }
		
		//todo=ID
		public Assignment getTodoAssignment_2() { return cTodoAssignment_2; }
		
		//ID
		public RuleCall getTodoIDTerminalRuleCall_2_0() { return cTodoIDTerminalRuleCall_2_0; }
		
		//lineEnd=QUOTE_AND_NL
		public Assignment getLineEndAssignment_3() { return cLineEndAssignment_3; }
		
		//QUOTE_AND_NL
		public RuleCall getLineEndQUOTE_AND_NLTerminalRuleCall_3_0() { return cLineEndQUOTE_AND_NLTerminalRuleCall_3_0; }
	}
	public class CPISegmentElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "io.thlaegler.edifact.Edilang.CPISegment");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cSegmentAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final Keyword cSegmentCPIKeyword_0_0 = (Keyword)cSegmentAssignment_0.eContents().get(0);
		private final RuleCall cPLUSTerminalRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		private final Assignment cTodoAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cTodoIDTerminalRuleCall_2_0 = (RuleCall)cTodoAssignment_2.eContents().get(0);
		private final Assignment cLineEndAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cLineEndQUOTE_AND_NLTerminalRuleCall_3_0 = (RuleCall)cLineEndAssignment_3.eContents().get(0);
		
		////TODO
		//CPISegment:
		//    segment="CPI"
		//    PLUS
		//    todo=ID
		//    lineEnd=QUOTE_AND_NL
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//segment="CPI"
		//PLUS
		//todo=ID
		//lineEnd=QUOTE_AND_NL
		public Group getGroup() { return cGroup; }
		
		//segment="CPI"
		public Assignment getSegmentAssignment_0() { return cSegmentAssignment_0; }
		
		//"CPI"
		public Keyword getSegmentCPIKeyword_0_0() { return cSegmentCPIKeyword_0_0; }
		
		//PLUS
		public RuleCall getPLUSTerminalRuleCall_1() { return cPLUSTerminalRuleCall_1; }
		
		//todo=ID
		public Assignment getTodoAssignment_2() { return cTodoAssignment_2; }
		
		//ID
		public RuleCall getTodoIDTerminalRuleCall_2_0() { return cTodoIDTerminalRuleCall_2_0; }
		
		//lineEnd=QUOTE_AND_NL
		public Assignment getLineEndAssignment_3() { return cLineEndAssignment_3; }
		
		//QUOTE_AND_NL
		public RuleCall getLineEndQUOTE_AND_NLTerminalRuleCall_3_0() { return cLineEndQUOTE_AND_NLTerminalRuleCall_3_0; }
	}
	public class CPSSegmentElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "io.thlaegler.edifact.Edilang.CPSSegment");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cSegmentAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final Keyword cSegmentCPSKeyword_0_0 = (Keyword)cSegmentAssignment_0.eContents().get(0);
		private final RuleCall cPLUSTerminalRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		private final Assignment cTodoAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cTodoIDTerminalRuleCall_2_0 = (RuleCall)cTodoAssignment_2.eContents().get(0);
		private final Assignment cLineEndAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cLineEndQUOTE_AND_NLTerminalRuleCall_3_0 = (RuleCall)cLineEndAssignment_3.eContents().get(0);
		
		////TODO
		//CPSSegment:
		//    segment="CPS"
		//    PLUS
		//    todo=ID
		//    lineEnd=QUOTE_AND_NL
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//segment="CPS"
		//PLUS
		//todo=ID
		//lineEnd=QUOTE_AND_NL
		public Group getGroup() { return cGroup; }
		
		//segment="CPS"
		public Assignment getSegmentAssignment_0() { return cSegmentAssignment_0; }
		
		//"CPS"
		public Keyword getSegmentCPSKeyword_0_0() { return cSegmentCPSKeyword_0_0; }
		
		//PLUS
		public RuleCall getPLUSTerminalRuleCall_1() { return cPLUSTerminalRuleCall_1; }
		
		//todo=ID
		public Assignment getTodoAssignment_2() { return cTodoAssignment_2; }
		
		//ID
		public RuleCall getTodoIDTerminalRuleCall_2_0() { return cTodoIDTerminalRuleCall_2_0; }
		
		//lineEnd=QUOTE_AND_NL
		public Assignment getLineEndAssignment_3() { return cLineEndAssignment_3; }
		
		//QUOTE_AND_NL
		public RuleCall getLineEndQUOTE_AND_NLTerminalRuleCall_3_0() { return cLineEndQUOTE_AND_NLTerminalRuleCall_3_0; }
	}
	public class CPTSegmentElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "io.thlaegler.edifact.Edilang.CPTSegment");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cSegmentAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final Keyword cSegmentCPTKeyword_0_0 = (Keyword)cSegmentAssignment_0.eContents().get(0);
		private final RuleCall cPLUSTerminalRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		private final Assignment cTodoAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cTodoIDTerminalRuleCall_2_0 = (RuleCall)cTodoAssignment_2.eContents().get(0);
		private final Assignment cLineEndAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cLineEndQUOTE_AND_NLTerminalRuleCall_3_0 = (RuleCall)cLineEndAssignment_3.eContents().get(0);
		
		////TODO
		//CPTSegment:
		//    segment="CPT"
		//    PLUS
		//    todo=ID
		//    lineEnd=QUOTE_AND_NL
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//segment="CPT"
		//PLUS
		//todo=ID
		//lineEnd=QUOTE_AND_NL
		public Group getGroup() { return cGroup; }
		
		//segment="CPT"
		public Assignment getSegmentAssignment_0() { return cSegmentAssignment_0; }
		
		//"CPT"
		public Keyword getSegmentCPTKeyword_0_0() { return cSegmentCPTKeyword_0_0; }
		
		//PLUS
		public RuleCall getPLUSTerminalRuleCall_1() { return cPLUSTerminalRuleCall_1; }
		
		//todo=ID
		public Assignment getTodoAssignment_2() { return cTodoAssignment_2; }
		
		//ID
		public RuleCall getTodoIDTerminalRuleCall_2_0() { return cTodoIDTerminalRuleCall_2_0; }
		
		//lineEnd=QUOTE_AND_NL
		public Assignment getLineEndAssignment_3() { return cLineEndAssignment_3; }
		
		//QUOTE_AND_NL
		public RuleCall getLineEndQUOTE_AND_NLTerminalRuleCall_3_0() { return cLineEndQUOTE_AND_NLTerminalRuleCall_3_0; }
	}
	public class CSTSegmentElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "io.thlaegler.edifact.Edilang.CSTSegment");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cSegmentAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final Keyword cSegmentCSTKeyword_0_0 = (Keyword)cSegmentAssignment_0.eContents().get(0);
		private final RuleCall cPLUSTerminalRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		private final Assignment cTodoAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cTodoIDTerminalRuleCall_2_0 = (RuleCall)cTodoAssignment_2.eContents().get(0);
		private final Assignment cLineEndAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cLineEndQUOTE_AND_NLTerminalRuleCall_3_0 = (RuleCall)cLineEndAssignment_3.eContents().get(0);
		
		////TODO
		//CSTSegment:
		//    segment="CST"
		//    PLUS
		//    todo=ID
		//    lineEnd=QUOTE_AND_NL
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//segment="CST"
		//PLUS
		//todo=ID
		//lineEnd=QUOTE_AND_NL
		public Group getGroup() { return cGroup; }
		
		//segment="CST"
		public Assignment getSegmentAssignment_0() { return cSegmentAssignment_0; }
		
		//"CST"
		public Keyword getSegmentCSTKeyword_0_0() { return cSegmentCSTKeyword_0_0; }
		
		//PLUS
		public RuleCall getPLUSTerminalRuleCall_1() { return cPLUSTerminalRuleCall_1; }
		
		//todo=ID
		public Assignment getTodoAssignment_2() { return cTodoAssignment_2; }
		
		//ID
		public RuleCall getTodoIDTerminalRuleCall_2_0() { return cTodoIDTerminalRuleCall_2_0; }
		
		//lineEnd=QUOTE_AND_NL
		public Assignment getLineEndAssignment_3() { return cLineEndAssignment_3; }
		
		//QUOTE_AND_NL
		public RuleCall getLineEndQUOTE_AND_NLTerminalRuleCall_3_0() { return cLineEndQUOTE_AND_NLTerminalRuleCall_3_0; }
	}
	public class DAMSegmentElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "io.thlaegler.edifact.Edilang.DAMSegment");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cSegmentAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final Keyword cSegmentDAMKeyword_0_0 = (Keyword)cSegmentAssignment_0.eContents().get(0);
		private final RuleCall cPLUSTerminalRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		private final Assignment cTodoAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cTodoIDTerminalRuleCall_2_0 = (RuleCall)cTodoAssignment_2.eContents().get(0);
		private final Assignment cLineEndAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cLineEndQUOTE_AND_NLTerminalRuleCall_3_0 = (RuleCall)cLineEndAssignment_3.eContents().get(0);
		
		////TODO
		//DAMSegment:
		//    segment="DAM"
		//    PLUS
		//    todo=ID
		//    lineEnd=QUOTE_AND_NL
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//segment="DAM"
		//PLUS
		//todo=ID
		//lineEnd=QUOTE_AND_NL
		public Group getGroup() { return cGroup; }
		
		//segment="DAM"
		public Assignment getSegmentAssignment_0() { return cSegmentAssignment_0; }
		
		//"DAM"
		public Keyword getSegmentDAMKeyword_0_0() { return cSegmentDAMKeyword_0_0; }
		
		//PLUS
		public RuleCall getPLUSTerminalRuleCall_1() { return cPLUSTerminalRuleCall_1; }
		
		//todo=ID
		public Assignment getTodoAssignment_2() { return cTodoAssignment_2; }
		
		//ID
		public RuleCall getTodoIDTerminalRuleCall_2_0() { return cTodoIDTerminalRuleCall_2_0; }
		
		//lineEnd=QUOTE_AND_NL
		public Assignment getLineEndAssignment_3() { return cLineEndAssignment_3; }
		
		//QUOTE_AND_NL
		public RuleCall getLineEndQUOTE_AND_NLTerminalRuleCall_3_0() { return cLineEndQUOTE_AND_NLTerminalRuleCall_3_0; }
	}
	public class DFNSegmentElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "io.thlaegler.edifact.Edilang.DFNSegment");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cSegmentAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final Keyword cSegmentDFNKeyword_0_0 = (Keyword)cSegmentAssignment_0.eContents().get(0);
		private final RuleCall cPLUSTerminalRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		private final Assignment cTodoAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cTodoIDTerminalRuleCall_2_0 = (RuleCall)cTodoAssignment_2.eContents().get(0);
		private final Assignment cLineEndAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cLineEndQUOTE_AND_NLTerminalRuleCall_3_0 = (RuleCall)cLineEndAssignment_3.eContents().get(0);
		
		////TODO
		//DFNSegment:
		//    segment="DFN"
		//    PLUS
		//    todo=ID
		//    lineEnd=QUOTE_AND_NL
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//segment="DFN"
		//PLUS
		//todo=ID
		//lineEnd=QUOTE_AND_NL
		public Group getGroup() { return cGroup; }
		
		//segment="DFN"
		public Assignment getSegmentAssignment_0() { return cSegmentAssignment_0; }
		
		//"DFN"
		public Keyword getSegmentDFNKeyword_0_0() { return cSegmentDFNKeyword_0_0; }
		
		//PLUS
		public RuleCall getPLUSTerminalRuleCall_1() { return cPLUSTerminalRuleCall_1; }
		
		//todo=ID
		public Assignment getTodoAssignment_2() { return cTodoAssignment_2; }
		
		//ID
		public RuleCall getTodoIDTerminalRuleCall_2_0() { return cTodoIDTerminalRuleCall_2_0; }
		
		//lineEnd=QUOTE_AND_NL
		public Assignment getLineEndAssignment_3() { return cLineEndAssignment_3; }
		
		//QUOTE_AND_NL
		public RuleCall getLineEndQUOTE_AND_NLTerminalRuleCall_3_0() { return cLineEndQUOTE_AND_NLTerminalRuleCall_3_0; }
	}
	public class DGSSegmentElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "io.thlaegler.edifact.Edilang.DGSSegment");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cSegmentAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final Keyword cSegmentDGSKeyword_0_0 = (Keyword)cSegmentAssignment_0.eContents().get(0);
		private final RuleCall cPLUSTerminalRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		private final Assignment cTodoAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cTodoIDTerminalRuleCall_2_0 = (RuleCall)cTodoAssignment_2.eContents().get(0);
		private final Assignment cLineEndAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cLineEndQUOTE_AND_NLTerminalRuleCall_3_0 = (RuleCall)cLineEndAssignment_3.eContents().get(0);
		
		////TODO
		//DGSSegment:
		//    segment="DGS"
		//    PLUS
		//    todo=ID
		//    lineEnd=QUOTE_AND_NL
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//segment="DGS"
		//PLUS
		//todo=ID
		//lineEnd=QUOTE_AND_NL
		public Group getGroup() { return cGroup; }
		
		//segment="DGS"
		public Assignment getSegmentAssignment_0() { return cSegmentAssignment_0; }
		
		//"DGS"
		public Keyword getSegmentDGSKeyword_0_0() { return cSegmentDGSKeyword_0_0; }
		
		//PLUS
		public RuleCall getPLUSTerminalRuleCall_1() { return cPLUSTerminalRuleCall_1; }
		
		//todo=ID
		public Assignment getTodoAssignment_2() { return cTodoAssignment_2; }
		
		//ID
		public RuleCall getTodoIDTerminalRuleCall_2_0() { return cTodoIDTerminalRuleCall_2_0; }
		
		//lineEnd=QUOTE_AND_NL
		public Assignment getLineEndAssignment_3() { return cLineEndAssignment_3; }
		
		//QUOTE_AND_NL
		public RuleCall getLineEndQUOTE_AND_NLTerminalRuleCall_3_0() { return cLineEndQUOTE_AND_NLTerminalRuleCall_3_0; }
	}
	public class DIISegmentElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "io.thlaegler.edifact.Edilang.DIISegment");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cSegmentAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final Keyword cSegmentDIIKeyword_0_0 = (Keyword)cSegmentAssignment_0.eContents().get(0);
		private final RuleCall cPLUSTerminalRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		private final Assignment cTodoAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cTodoIDTerminalRuleCall_2_0 = (RuleCall)cTodoAssignment_2.eContents().get(0);
		private final Assignment cLineEndAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cLineEndQUOTE_AND_NLTerminalRuleCall_3_0 = (RuleCall)cLineEndAssignment_3.eContents().get(0);
		
		////TODO
		//DIISegment:
		//    segment="DII"
		//    PLUS
		//    todo=ID
		//    lineEnd=QUOTE_AND_NL
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//segment="DII"
		//PLUS
		//todo=ID
		//lineEnd=QUOTE_AND_NL
		public Group getGroup() { return cGroup; }
		
		//segment="DII"
		public Assignment getSegmentAssignment_0() { return cSegmentAssignment_0; }
		
		//"DII"
		public Keyword getSegmentDIIKeyword_0_0() { return cSegmentDIIKeyword_0_0; }
		
		//PLUS
		public RuleCall getPLUSTerminalRuleCall_1() { return cPLUSTerminalRuleCall_1; }
		
		//todo=ID
		public Assignment getTodoAssignment_2() { return cTodoAssignment_2; }
		
		//ID
		public RuleCall getTodoIDTerminalRuleCall_2_0() { return cTodoIDTerminalRuleCall_2_0; }
		
		//lineEnd=QUOTE_AND_NL
		public Assignment getLineEndAssignment_3() { return cLineEndAssignment_3; }
		
		//QUOTE_AND_NL
		public RuleCall getLineEndQUOTE_AND_NLTerminalRuleCall_3_0() { return cLineEndQUOTE_AND_NLTerminalRuleCall_3_0; }
	}
	public class DIMSegmentElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "io.thlaegler.edifact.Edilang.DIMSegment");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cSegmentAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final Keyword cSegmentDIMKeyword_0_0 = (Keyword)cSegmentAssignment_0.eContents().get(0);
		private final RuleCall cPLUSTerminalRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		private final Assignment cTodoAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cTodoIDTerminalRuleCall_2_0 = (RuleCall)cTodoAssignment_2.eContents().get(0);
		private final Assignment cLineEndAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cLineEndQUOTE_AND_NLTerminalRuleCall_3_0 = (RuleCall)cLineEndAssignment_3.eContents().get(0);
		
		////TODO
		//DIMSegment:
		//    segment="DIM"
		//    PLUS
		//    todo=ID
		//    lineEnd=QUOTE_AND_NL
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//segment="DIM"
		//PLUS
		//todo=ID
		//lineEnd=QUOTE_AND_NL
		public Group getGroup() { return cGroup; }
		
		//segment="DIM"
		public Assignment getSegmentAssignment_0() { return cSegmentAssignment_0; }
		
		//"DIM"
		public Keyword getSegmentDIMKeyword_0_0() { return cSegmentDIMKeyword_0_0; }
		
		//PLUS
		public RuleCall getPLUSTerminalRuleCall_1() { return cPLUSTerminalRuleCall_1; }
		
		//todo=ID
		public Assignment getTodoAssignment_2() { return cTodoAssignment_2; }
		
		//ID
		public RuleCall getTodoIDTerminalRuleCall_2_0() { return cTodoIDTerminalRuleCall_2_0; }
		
		//lineEnd=QUOTE_AND_NL
		public Assignment getLineEndAssignment_3() { return cLineEndAssignment_3; }
		
		//QUOTE_AND_NL
		public RuleCall getLineEndQUOTE_AND_NLTerminalRuleCall_3_0() { return cLineEndQUOTE_AND_NLTerminalRuleCall_3_0; }
	}
	public class DLISegmentElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "io.thlaegler.edifact.Edilang.DLISegment");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cSegmentAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final Keyword cSegmentDLIKeyword_0_0 = (Keyword)cSegmentAssignment_0.eContents().get(0);
		private final RuleCall cPLUSTerminalRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		private final Assignment cTodoAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cTodoIDTerminalRuleCall_2_0 = (RuleCall)cTodoAssignment_2.eContents().get(0);
		private final Assignment cLineEndAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cLineEndQUOTE_AND_NLTerminalRuleCall_3_0 = (RuleCall)cLineEndAssignment_3.eContents().get(0);
		
		////TODO
		//DLISegment:
		//    segment="DLI"
		//    PLUS
		//    todo=ID
		//    lineEnd=QUOTE_AND_NL
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//segment="DLI"
		//PLUS
		//todo=ID
		//lineEnd=QUOTE_AND_NL
		public Group getGroup() { return cGroup; }
		
		//segment="DLI"
		public Assignment getSegmentAssignment_0() { return cSegmentAssignment_0; }
		
		//"DLI"
		public Keyword getSegmentDLIKeyword_0_0() { return cSegmentDLIKeyword_0_0; }
		
		//PLUS
		public RuleCall getPLUSTerminalRuleCall_1() { return cPLUSTerminalRuleCall_1; }
		
		//todo=ID
		public Assignment getTodoAssignment_2() { return cTodoAssignment_2; }
		
		//ID
		public RuleCall getTodoIDTerminalRuleCall_2_0() { return cTodoIDTerminalRuleCall_2_0; }
		
		//lineEnd=QUOTE_AND_NL
		public Assignment getLineEndAssignment_3() { return cLineEndAssignment_3; }
		
		//QUOTE_AND_NL
		public RuleCall getLineEndQUOTE_AND_NLTerminalRuleCall_3_0() { return cLineEndQUOTE_AND_NLTerminalRuleCall_3_0; }
	}
	public class DLMSegmentElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "io.thlaegler.edifact.Edilang.DLMSegment");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cSegmentAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final Keyword cSegmentDLMKeyword_0_0 = (Keyword)cSegmentAssignment_0.eContents().get(0);
		private final RuleCall cPLUSTerminalRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		private final Assignment cTodoAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cTodoIDTerminalRuleCall_2_0 = (RuleCall)cTodoAssignment_2.eContents().get(0);
		private final Assignment cLineEndAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cLineEndQUOTE_AND_NLTerminalRuleCall_3_0 = (RuleCall)cLineEndAssignment_3.eContents().get(0);
		
		////TODO
		//DLMSegment:
		//    segment="DLM"
		//    PLUS
		//    todo=ID
		//    lineEnd=QUOTE_AND_NL
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//segment="DLM"
		//PLUS
		//todo=ID
		//lineEnd=QUOTE_AND_NL
		public Group getGroup() { return cGroup; }
		
		//segment="DLM"
		public Assignment getSegmentAssignment_0() { return cSegmentAssignment_0; }
		
		//"DLM"
		public Keyword getSegmentDLMKeyword_0_0() { return cSegmentDLMKeyword_0_0; }
		
		//PLUS
		public RuleCall getPLUSTerminalRuleCall_1() { return cPLUSTerminalRuleCall_1; }
		
		//todo=ID
		public Assignment getTodoAssignment_2() { return cTodoAssignment_2; }
		
		//ID
		public RuleCall getTodoIDTerminalRuleCall_2_0() { return cTodoIDTerminalRuleCall_2_0; }
		
		//lineEnd=QUOTE_AND_NL
		public Assignment getLineEndAssignment_3() { return cLineEndAssignment_3; }
		
		//QUOTE_AND_NL
		public RuleCall getLineEndQUOTE_AND_NLTerminalRuleCall_3_0() { return cLineEndQUOTE_AND_NLTerminalRuleCall_3_0; }
	}
	public class DMSSegmentElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "io.thlaegler.edifact.Edilang.DMSSegment");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cSegmentAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final Keyword cSegmentDMSKeyword_0_0 = (Keyword)cSegmentAssignment_0.eContents().get(0);
		private final RuleCall cPLUSTerminalRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		private final Assignment cTodoAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cTodoIDTerminalRuleCall_2_0 = (RuleCall)cTodoAssignment_2.eContents().get(0);
		private final Assignment cLineEndAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cLineEndQUOTE_AND_NLTerminalRuleCall_3_0 = (RuleCall)cLineEndAssignment_3.eContents().get(0);
		
		////TODO
		//DMSSegment:
		//    segment="DMS"
		//    PLUS
		//    todo=ID
		//    lineEnd=QUOTE_AND_NL
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//segment="DMS"
		//PLUS
		//todo=ID
		//lineEnd=QUOTE_AND_NL
		public Group getGroup() { return cGroup; }
		
		//segment="DMS"
		public Assignment getSegmentAssignment_0() { return cSegmentAssignment_0; }
		
		//"DMS"
		public Keyword getSegmentDMSKeyword_0_0() { return cSegmentDMSKeyword_0_0; }
		
		//PLUS
		public RuleCall getPLUSTerminalRuleCall_1() { return cPLUSTerminalRuleCall_1; }
		
		//todo=ID
		public Assignment getTodoAssignment_2() { return cTodoAssignment_2; }
		
		//ID
		public RuleCall getTodoIDTerminalRuleCall_2_0() { return cTodoIDTerminalRuleCall_2_0; }
		
		//lineEnd=QUOTE_AND_NL
		public Assignment getLineEndAssignment_3() { return cLineEndAssignment_3; }
		
		//QUOTE_AND_NL
		public RuleCall getLineEndQUOTE_AND_NLTerminalRuleCall_3_0() { return cLineEndQUOTE_AND_NLTerminalRuleCall_3_0; }
	}
	public class DOCSegmentElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "io.thlaegler.edifact.Edilang.DOCSegment");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cSegmentAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final Keyword cSegmentDOCKeyword_0_0 = (Keyword)cSegmentAssignment_0.eContents().get(0);
		private final RuleCall cPLUSTerminalRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		private final Assignment cTodoAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cTodoIDTerminalRuleCall_2_0 = (RuleCall)cTodoAssignment_2.eContents().get(0);
		private final Assignment cLineEndAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cLineEndQUOTE_AND_NLTerminalRuleCall_3_0 = (RuleCall)cLineEndAssignment_3.eContents().get(0);
		
		////TODO
		//DOCSegment:
		//    segment="DOC"
		//    PLUS
		//    todo=ID
		//    lineEnd=QUOTE_AND_NL
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//segment="DOC"
		//PLUS
		//todo=ID
		//lineEnd=QUOTE_AND_NL
		public Group getGroup() { return cGroup; }
		
		//segment="DOC"
		public Assignment getSegmentAssignment_0() { return cSegmentAssignment_0; }
		
		//"DOC"
		public Keyword getSegmentDOCKeyword_0_0() { return cSegmentDOCKeyword_0_0; }
		
		//PLUS
		public RuleCall getPLUSTerminalRuleCall_1() { return cPLUSTerminalRuleCall_1; }
		
		//todo=ID
		public Assignment getTodoAssignment_2() { return cTodoAssignment_2; }
		
		//ID
		public RuleCall getTodoIDTerminalRuleCall_2_0() { return cTodoIDTerminalRuleCall_2_0; }
		
		//lineEnd=QUOTE_AND_NL
		public Assignment getLineEndAssignment_3() { return cLineEndAssignment_3; }
		
		//QUOTE_AND_NL
		public RuleCall getLineEndQUOTE_AND_NLTerminalRuleCall_3_0() { return cLineEndQUOTE_AND_NLTerminalRuleCall_3_0; }
	}
	public class DRDSegmentElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "io.thlaegler.edifact.Edilang.DRDSegment");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cSegmentAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final Keyword cSegmentDRDKeyword_0_0 = (Keyword)cSegmentAssignment_0.eContents().get(0);
		private final RuleCall cPLUSTerminalRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		private final Assignment cTodoAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cTodoIDTerminalRuleCall_2_0 = (RuleCall)cTodoAssignment_2.eContents().get(0);
		private final Assignment cLineEndAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cLineEndQUOTE_AND_NLTerminalRuleCall_3_0 = (RuleCall)cLineEndAssignment_3.eContents().get(0);
		
		////TODO
		//DRDSegment:
		//    segment="DRD"
		//    PLUS
		//    todo=ID
		//    lineEnd=QUOTE_AND_NL
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//segment="DRD"
		//PLUS
		//todo=ID
		//lineEnd=QUOTE_AND_NL
		public Group getGroup() { return cGroup; }
		
		//segment="DRD"
		public Assignment getSegmentAssignment_0() { return cSegmentAssignment_0; }
		
		//"DRD"
		public Keyword getSegmentDRDKeyword_0_0() { return cSegmentDRDKeyword_0_0; }
		
		//PLUS
		public RuleCall getPLUSTerminalRuleCall_1() { return cPLUSTerminalRuleCall_1; }
		
		//todo=ID
		public Assignment getTodoAssignment_2() { return cTodoAssignment_2; }
		
		//ID
		public RuleCall getTodoIDTerminalRuleCall_2_0() { return cTodoIDTerminalRuleCall_2_0; }
		
		//lineEnd=QUOTE_AND_NL
		public Assignment getLineEndAssignment_3() { return cLineEndAssignment_3; }
		
		//QUOTE_AND_NL
		public RuleCall getLineEndQUOTE_AND_NLTerminalRuleCall_3_0() { return cLineEndQUOTE_AND_NLTerminalRuleCall_3_0; }
	}
	public class DSGSegmentElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "io.thlaegler.edifact.Edilang.DSGSegment");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cSegmentAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final Keyword cSegmentDSGKeyword_0_0 = (Keyword)cSegmentAssignment_0.eContents().get(0);
		private final RuleCall cPLUSTerminalRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		private final Assignment cTodoAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cTodoIDTerminalRuleCall_2_0 = (RuleCall)cTodoAssignment_2.eContents().get(0);
		private final Assignment cLineEndAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cLineEndQUOTE_AND_NLTerminalRuleCall_3_0 = (RuleCall)cLineEndAssignment_3.eContents().get(0);
		
		////TODO
		//DSGSegment:
		//    segment="DSG"
		//    PLUS
		//    todo=ID
		//    lineEnd=QUOTE_AND_NL
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//segment="DSG"
		//PLUS
		//todo=ID
		//lineEnd=QUOTE_AND_NL
		public Group getGroup() { return cGroup; }
		
		//segment="DSG"
		public Assignment getSegmentAssignment_0() { return cSegmentAssignment_0; }
		
		//"DSG"
		public Keyword getSegmentDSGKeyword_0_0() { return cSegmentDSGKeyword_0_0; }
		
		//PLUS
		public RuleCall getPLUSTerminalRuleCall_1() { return cPLUSTerminalRuleCall_1; }
		
		//todo=ID
		public Assignment getTodoAssignment_2() { return cTodoAssignment_2; }
		
		//ID
		public RuleCall getTodoIDTerminalRuleCall_2_0() { return cTodoIDTerminalRuleCall_2_0; }
		
		//lineEnd=QUOTE_AND_NL
		public Assignment getLineEndAssignment_3() { return cLineEndAssignment_3; }
		
		//QUOTE_AND_NL
		public RuleCall getLineEndQUOTE_AND_NLTerminalRuleCall_3_0() { return cLineEndQUOTE_AND_NLTerminalRuleCall_3_0; }
	}
	public class DSISegmentElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "io.thlaegler.edifact.Edilang.DSISegment");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cSegmentAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final Keyword cSegmentDSIKeyword_0_0 = (Keyword)cSegmentAssignment_0.eContents().get(0);
		private final RuleCall cPLUSTerminalRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		private final Assignment cTodoAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cTodoIDTerminalRuleCall_2_0 = (RuleCall)cTodoAssignment_2.eContents().get(0);
		private final Assignment cLineEndAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cLineEndQUOTE_AND_NLTerminalRuleCall_3_0 = (RuleCall)cLineEndAssignment_3.eContents().get(0);
		
		////TODO
		//DSISegment:
		//    segment="DSI"
		//    PLUS
		//    todo=ID
		//    lineEnd=QUOTE_AND_NL
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//segment="DSI"
		//PLUS
		//todo=ID
		//lineEnd=QUOTE_AND_NL
		public Group getGroup() { return cGroup; }
		
		//segment="DSI"
		public Assignment getSegmentAssignment_0() { return cSegmentAssignment_0; }
		
		//"DSI"
		public Keyword getSegmentDSIKeyword_0_0() { return cSegmentDSIKeyword_0_0; }
		
		//PLUS
		public RuleCall getPLUSTerminalRuleCall_1() { return cPLUSTerminalRuleCall_1; }
		
		//todo=ID
		public Assignment getTodoAssignment_2() { return cTodoAssignment_2; }
		
		//ID
		public RuleCall getTodoIDTerminalRuleCall_2_0() { return cTodoIDTerminalRuleCall_2_0; }
		
		//lineEnd=QUOTE_AND_NL
		public Assignment getLineEndAssignment_3() { return cLineEndAssignment_3; }
		
		//QUOTE_AND_NL
		public RuleCall getLineEndQUOTE_AND_NLTerminalRuleCall_3_0() { return cLineEndQUOTE_AND_NLTerminalRuleCall_3_0; }
	}
	public class EDTSegmentElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "io.thlaegler.edifact.Edilang.EDTSegment");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cSegmentAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final Keyword cSegmentEDTKeyword_0_0 = (Keyword)cSegmentAssignment_0.eContents().get(0);
		private final RuleCall cPLUSTerminalRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		private final Assignment cTodoAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cTodoIDTerminalRuleCall_2_0 = (RuleCall)cTodoAssignment_2.eContents().get(0);
		private final Assignment cLineEndAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cLineEndQUOTE_AND_NLTerminalRuleCall_3_0 = (RuleCall)cLineEndAssignment_3.eContents().get(0);
		
		////TODO
		//EDTSegment:
		//    segment="EDT"
		//    PLUS
		//    todo=ID
		//    lineEnd=QUOTE_AND_NL
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//segment="EDT"
		//PLUS
		//todo=ID
		//lineEnd=QUOTE_AND_NL
		public Group getGroup() { return cGroup; }
		
		//segment="EDT"
		public Assignment getSegmentAssignment_0() { return cSegmentAssignment_0; }
		
		//"EDT"
		public Keyword getSegmentEDTKeyword_0_0() { return cSegmentEDTKeyword_0_0; }
		
		//PLUS
		public RuleCall getPLUSTerminalRuleCall_1() { return cPLUSTerminalRuleCall_1; }
		
		//todo=ID
		public Assignment getTodoAssignment_2() { return cTodoAssignment_2; }
		
		//ID
		public RuleCall getTodoIDTerminalRuleCall_2_0() { return cTodoIDTerminalRuleCall_2_0; }
		
		//lineEnd=QUOTE_AND_NL
		public Assignment getLineEndAssignment_3() { return cLineEndAssignment_3; }
		
		//QUOTE_AND_NL
		public RuleCall getLineEndQUOTE_AND_NLTerminalRuleCall_3_0() { return cLineEndQUOTE_AND_NLTerminalRuleCall_3_0; }
	}
	public class EFISegmentElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "io.thlaegler.edifact.Edilang.EFISegment");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cSegmentAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final Keyword cSegmentEFIKeyword_0_0 = (Keyword)cSegmentAssignment_0.eContents().get(0);
		private final RuleCall cPLUSTerminalRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		private final Assignment cTodoAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cTodoIDTerminalRuleCall_2_0 = (RuleCall)cTodoAssignment_2.eContents().get(0);
		private final Assignment cLineEndAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cLineEndQUOTE_AND_NLTerminalRuleCall_3_0 = (RuleCall)cLineEndAssignment_3.eContents().get(0);
		
		////TODO
		//EFISegment:
		//    segment="EFI"
		//    PLUS
		//    todo=ID
		//    lineEnd=QUOTE_AND_NL
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//segment="EFI"
		//PLUS
		//todo=ID
		//lineEnd=QUOTE_AND_NL
		public Group getGroup() { return cGroup; }
		
		//segment="EFI"
		public Assignment getSegmentAssignment_0() { return cSegmentAssignment_0; }
		
		//"EFI"
		public Keyword getSegmentEFIKeyword_0_0() { return cSegmentEFIKeyword_0_0; }
		
		//PLUS
		public RuleCall getPLUSTerminalRuleCall_1() { return cPLUSTerminalRuleCall_1; }
		
		//todo=ID
		public Assignment getTodoAssignment_2() { return cTodoAssignment_2; }
		
		//ID
		public RuleCall getTodoIDTerminalRuleCall_2_0() { return cTodoIDTerminalRuleCall_2_0; }
		
		//lineEnd=QUOTE_AND_NL
		public Assignment getLineEndAssignment_3() { return cLineEndAssignment_3; }
		
		//QUOTE_AND_NL
		public RuleCall getLineEndQUOTE_AND_NLTerminalRuleCall_3_0() { return cLineEndQUOTE_AND_NLTerminalRuleCall_3_0; }
	}
	public class ELMSegmentElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "io.thlaegler.edifact.Edilang.ELMSegment");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cSegmentAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final Keyword cSegmentELMKeyword_0_0 = (Keyword)cSegmentAssignment_0.eContents().get(0);
		private final RuleCall cPLUSTerminalRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		private final Assignment cTodoAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cTodoIDTerminalRuleCall_2_0 = (RuleCall)cTodoAssignment_2.eContents().get(0);
		private final Assignment cLineEndAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cLineEndQUOTE_AND_NLTerminalRuleCall_3_0 = (RuleCall)cLineEndAssignment_3.eContents().get(0);
		
		////TODO
		//ELMSegment:
		//    segment="ELM"
		//    PLUS
		//    todo=ID
		//    lineEnd=QUOTE_AND_NL
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//segment="ELM"
		//PLUS
		//todo=ID
		//lineEnd=QUOTE_AND_NL
		public Group getGroup() { return cGroup; }
		
		//segment="ELM"
		public Assignment getSegmentAssignment_0() { return cSegmentAssignment_0; }
		
		//"ELM"
		public Keyword getSegmentELMKeyword_0_0() { return cSegmentELMKeyword_0_0; }
		
		//PLUS
		public RuleCall getPLUSTerminalRuleCall_1() { return cPLUSTerminalRuleCall_1; }
		
		//todo=ID
		public Assignment getTodoAssignment_2() { return cTodoAssignment_2; }
		
		//ID
		public RuleCall getTodoIDTerminalRuleCall_2_0() { return cTodoIDTerminalRuleCall_2_0; }
		
		//lineEnd=QUOTE_AND_NL
		public Assignment getLineEndAssignment_3() { return cLineEndAssignment_3; }
		
		//QUOTE_AND_NL
		public RuleCall getLineEndQUOTE_AND_NLTerminalRuleCall_3_0() { return cLineEndQUOTE_AND_NLTerminalRuleCall_3_0; }
	}
	public class ELUSegmentElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "io.thlaegler.edifact.Edilang.ELUSegment");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cSegmentAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final Keyword cSegmentELUKeyword_0_0 = (Keyword)cSegmentAssignment_0.eContents().get(0);
		private final RuleCall cPLUSTerminalRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		private final Assignment cTodoAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cTodoIDTerminalRuleCall_2_0 = (RuleCall)cTodoAssignment_2.eContents().get(0);
		private final Assignment cLineEndAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cLineEndQUOTE_AND_NLTerminalRuleCall_3_0 = (RuleCall)cLineEndAssignment_3.eContents().get(0);
		
		////TODO
		//ELUSegment:
		//    segment="ELU"
		//    PLUS
		//    todo=ID
		//    lineEnd=QUOTE_AND_NL
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//segment="ELU"
		//PLUS
		//todo=ID
		//lineEnd=QUOTE_AND_NL
		public Group getGroup() { return cGroup; }
		
		//segment="ELU"
		public Assignment getSegmentAssignment_0() { return cSegmentAssignment_0; }
		
		//"ELU"
		public Keyword getSegmentELUKeyword_0_0() { return cSegmentELUKeyword_0_0; }
		
		//PLUS
		public RuleCall getPLUSTerminalRuleCall_1() { return cPLUSTerminalRuleCall_1; }
		
		//todo=ID
		public Assignment getTodoAssignment_2() { return cTodoAssignment_2; }
		
		//ID
		public RuleCall getTodoIDTerminalRuleCall_2_0() { return cTodoIDTerminalRuleCall_2_0; }
		
		//lineEnd=QUOTE_AND_NL
		public Assignment getLineEndAssignment_3() { return cLineEndAssignment_3; }
		
		//QUOTE_AND_NL
		public RuleCall getLineEndQUOTE_AND_NLTerminalRuleCall_3_0() { return cLineEndQUOTE_AND_NLTerminalRuleCall_3_0; }
	}
	public class ELVSegmentElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "io.thlaegler.edifact.Edilang.ELVSegment");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cSegmentAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final Keyword cSegmentELVKeyword_0_0 = (Keyword)cSegmentAssignment_0.eContents().get(0);
		private final RuleCall cPLUSTerminalRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		private final Assignment cTodoAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cTodoIDTerminalRuleCall_2_0 = (RuleCall)cTodoAssignment_2.eContents().get(0);
		private final Assignment cLineEndAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cLineEndQUOTE_AND_NLTerminalRuleCall_3_0 = (RuleCall)cLineEndAssignment_3.eContents().get(0);
		
		////TODO
		//ELVSegment:
		//    segment="ELV"
		//    PLUS
		//    todo=ID
		//    lineEnd=QUOTE_AND_NL
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//segment="ELV"
		//PLUS
		//todo=ID
		//lineEnd=QUOTE_AND_NL
		public Group getGroup() { return cGroup; }
		
		//segment="ELV"
		public Assignment getSegmentAssignment_0() { return cSegmentAssignment_0; }
		
		//"ELV"
		public Keyword getSegmentELVKeyword_0_0() { return cSegmentELVKeyword_0_0; }
		
		//PLUS
		public RuleCall getPLUSTerminalRuleCall_1() { return cPLUSTerminalRuleCall_1; }
		
		//todo=ID
		public Assignment getTodoAssignment_2() { return cTodoAssignment_2; }
		
		//ID
		public RuleCall getTodoIDTerminalRuleCall_2_0() { return cTodoIDTerminalRuleCall_2_0; }
		
		//lineEnd=QUOTE_AND_NL
		public Assignment getLineEndAssignment_3() { return cLineEndAssignment_3; }
		
		//QUOTE_AND_NL
		public RuleCall getLineEndQUOTE_AND_NLTerminalRuleCall_3_0() { return cLineEndQUOTE_AND_NLTerminalRuleCall_3_0; }
	}
	public class EMPSegmentElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "io.thlaegler.edifact.Edilang.EMPSegment");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cSegmentAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final Keyword cSegmentEMPKeyword_0_0 = (Keyword)cSegmentAssignment_0.eContents().get(0);
		private final RuleCall cPLUSTerminalRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		private final Assignment cTodoAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cTodoIDTerminalRuleCall_2_0 = (RuleCall)cTodoAssignment_2.eContents().get(0);
		private final Assignment cLineEndAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cLineEndQUOTE_AND_NLTerminalRuleCall_3_0 = (RuleCall)cLineEndAssignment_3.eContents().get(0);
		
		////TODO
		//EMPSegment:
		//    segment="EMP"
		//    PLUS
		//    todo=ID
		//    lineEnd=QUOTE_AND_NL
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//segment="EMP"
		//PLUS
		//todo=ID
		//lineEnd=QUOTE_AND_NL
		public Group getGroup() { return cGroup; }
		
		//segment="EMP"
		public Assignment getSegmentAssignment_0() { return cSegmentAssignment_0; }
		
		//"EMP"
		public Keyword getSegmentEMPKeyword_0_0() { return cSegmentEMPKeyword_0_0; }
		
		//PLUS
		public RuleCall getPLUSTerminalRuleCall_1() { return cPLUSTerminalRuleCall_1; }
		
		//todo=ID
		public Assignment getTodoAssignment_2() { return cTodoAssignment_2; }
		
		//ID
		public RuleCall getTodoIDTerminalRuleCall_2_0() { return cTodoIDTerminalRuleCall_2_0; }
		
		//lineEnd=QUOTE_AND_NL
		public Assignment getLineEndAssignment_3() { return cLineEndAssignment_3; }
		
		//QUOTE_AND_NL
		public RuleCall getLineEndQUOTE_AND_NLTerminalRuleCall_3_0() { return cLineEndQUOTE_AND_NLTerminalRuleCall_3_0; }
	}
	public class EQASegmentElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "io.thlaegler.edifact.Edilang.EQASegment");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cSegmentAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final Keyword cSegmentEQAKeyword_0_0 = (Keyword)cSegmentAssignment_0.eContents().get(0);
		private final RuleCall cPLUSTerminalRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		private final Assignment cTodoAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cTodoIDTerminalRuleCall_2_0 = (RuleCall)cTodoAssignment_2.eContents().get(0);
		private final Assignment cLineEndAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cLineEndQUOTE_AND_NLTerminalRuleCall_3_0 = (RuleCall)cLineEndAssignment_3.eContents().get(0);
		
		////TODO
		//EQASegment:
		//    segment="EQA"
		//    PLUS
		//    todo=ID
		//    lineEnd=QUOTE_AND_NL
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//segment="EQA"
		//PLUS
		//todo=ID
		//lineEnd=QUOTE_AND_NL
		public Group getGroup() { return cGroup; }
		
		//segment="EQA"
		public Assignment getSegmentAssignment_0() { return cSegmentAssignment_0; }
		
		//"EQA"
		public Keyword getSegmentEQAKeyword_0_0() { return cSegmentEQAKeyword_0_0; }
		
		//PLUS
		public RuleCall getPLUSTerminalRuleCall_1() { return cPLUSTerminalRuleCall_1; }
		
		//todo=ID
		public Assignment getTodoAssignment_2() { return cTodoAssignment_2; }
		
		//ID
		public RuleCall getTodoIDTerminalRuleCall_2_0() { return cTodoIDTerminalRuleCall_2_0; }
		
		//lineEnd=QUOTE_AND_NL
		public Assignment getLineEndAssignment_3() { return cLineEndAssignment_3; }
		
		//QUOTE_AND_NL
		public RuleCall getLineEndQUOTE_AND_NLTerminalRuleCall_3_0() { return cLineEndQUOTE_AND_NLTerminalRuleCall_3_0; }
	}
	public class EQDSegmentElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "io.thlaegler.edifact.Edilang.EQDSegment");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cSegmentAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final Keyword cSegmentEQDKeyword_0_0 = (Keyword)cSegmentAssignment_0.eContents().get(0);
		private final RuleCall cPLUSTerminalRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		private final Assignment cTodoAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cTodoIDTerminalRuleCall_2_0 = (RuleCall)cTodoAssignment_2.eContents().get(0);
		private final Assignment cLineEndAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cLineEndQUOTE_AND_NLTerminalRuleCall_3_0 = (RuleCall)cLineEndAssignment_3.eContents().get(0);
		
		////TODO
		//EQDSegment:
		//    segment="EQD"
		//    PLUS
		//    todo=ID
		//    lineEnd=QUOTE_AND_NL
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//segment="EQD"
		//PLUS
		//todo=ID
		//lineEnd=QUOTE_AND_NL
		public Group getGroup() { return cGroup; }
		
		//segment="EQD"
		public Assignment getSegmentAssignment_0() { return cSegmentAssignment_0; }
		
		//"EQD"
		public Keyword getSegmentEQDKeyword_0_0() { return cSegmentEQDKeyword_0_0; }
		
		//PLUS
		public RuleCall getPLUSTerminalRuleCall_1() { return cPLUSTerminalRuleCall_1; }
		
		//todo=ID
		public Assignment getTodoAssignment_2() { return cTodoAssignment_2; }
		
		//ID
		public RuleCall getTodoIDTerminalRuleCall_2_0() { return cTodoIDTerminalRuleCall_2_0; }
		
		//lineEnd=QUOTE_AND_NL
		public Assignment getLineEndAssignment_3() { return cLineEndAssignment_3; }
		
		//QUOTE_AND_NL
		public RuleCall getLineEndQUOTE_AND_NLTerminalRuleCall_3_0() { return cLineEndQUOTE_AND_NLTerminalRuleCall_3_0; }
	}
	public class EQNSegmentElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "io.thlaegler.edifact.Edilang.EQNSegment");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cSegmentAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final Keyword cSegmentEQNKeyword_0_0 = (Keyword)cSegmentAssignment_0.eContents().get(0);
		private final RuleCall cPLUSTerminalRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		private final Assignment cTodoAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cTodoIDTerminalRuleCall_2_0 = (RuleCall)cTodoAssignment_2.eContents().get(0);
		private final Assignment cLineEndAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cLineEndQUOTE_AND_NLTerminalRuleCall_3_0 = (RuleCall)cLineEndAssignment_3.eContents().get(0);
		
		//EQNSegment:
		//    segment="EQN"
		//    PLUS
		//    todo=ID
		//    lineEnd=QUOTE_AND_NL
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//segment="EQN"
		//PLUS
		//todo=ID
		//lineEnd=QUOTE_AND_NL
		public Group getGroup() { return cGroup; }
		
		//segment="EQN"
		public Assignment getSegmentAssignment_0() { return cSegmentAssignment_0; }
		
		//"EQN"
		public Keyword getSegmentEQNKeyword_0_0() { return cSegmentEQNKeyword_0_0; }
		
		//PLUS
		public RuleCall getPLUSTerminalRuleCall_1() { return cPLUSTerminalRuleCall_1; }
		
		//todo=ID
		public Assignment getTodoAssignment_2() { return cTodoAssignment_2; }
		
		//ID
		public RuleCall getTodoIDTerminalRuleCall_2_0() { return cTodoIDTerminalRuleCall_2_0; }
		
		//lineEnd=QUOTE_AND_NL
		public Assignment getLineEndAssignment_3() { return cLineEndAssignment_3; }
		
		//QUOTE_AND_NL
		public RuleCall getLineEndQUOTE_AND_NLTerminalRuleCall_3_0() { return cLineEndQUOTE_AND_NLTerminalRuleCall_3_0; }
	}
	public class ERPSegmentElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "io.thlaegler.edifact.Edilang.ERPSegment");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cSegmentAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final Keyword cSegmentERPKeyword_0_0 = (Keyword)cSegmentAssignment_0.eContents().get(0);
		private final RuleCall cPLUSTerminalRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		private final Assignment cTodoAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cTodoIDTerminalRuleCall_2_0 = (RuleCall)cTodoAssignment_2.eContents().get(0);
		private final Assignment cLineEndAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cLineEndQUOTE_AND_NLTerminalRuleCall_3_0 = (RuleCall)cLineEndAssignment_3.eContents().get(0);
		
		////TODO
		//ERPSegment:
		//    segment="ERP"
		//    PLUS
		//    todo=ID
		//    lineEnd=QUOTE_AND_NL
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//segment="ERP"
		//PLUS
		//todo=ID
		//lineEnd=QUOTE_AND_NL
		public Group getGroup() { return cGroup; }
		
		//segment="ERP"
		public Assignment getSegmentAssignment_0() { return cSegmentAssignment_0; }
		
		//"ERP"
		public Keyword getSegmentERPKeyword_0_0() { return cSegmentERPKeyword_0_0; }
		
		//PLUS
		public RuleCall getPLUSTerminalRuleCall_1() { return cPLUSTerminalRuleCall_1; }
		
		//todo=ID
		public Assignment getTodoAssignment_2() { return cTodoAssignment_2; }
		
		//ID
		public RuleCall getTodoIDTerminalRuleCall_2_0() { return cTodoIDTerminalRuleCall_2_0; }
		
		//lineEnd=QUOTE_AND_NL
		public Assignment getLineEndAssignment_3() { return cLineEndAssignment_3; }
		
		//QUOTE_AND_NL
		public RuleCall getLineEndQUOTE_AND_NLTerminalRuleCall_3_0() { return cLineEndQUOTE_AND_NLTerminalRuleCall_3_0; }
	}
	public class EVESegmentElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "io.thlaegler.edifact.Edilang.EVESegment");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cSegmentAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final Keyword cSegmentEVEKeyword_0_0 = (Keyword)cSegmentAssignment_0.eContents().get(0);
		private final RuleCall cPLUSTerminalRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		private final Assignment cTodoAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cTodoIDTerminalRuleCall_2_0 = (RuleCall)cTodoAssignment_2.eContents().get(0);
		private final Assignment cLineEndAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cLineEndQUOTE_AND_NLTerminalRuleCall_3_0 = (RuleCall)cLineEndAssignment_3.eContents().get(0);
		
		////TODO
		//EVESegment:
		//    segment="EVE"
		//    PLUS
		//    todo=ID
		//    lineEnd=QUOTE_AND_NL
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//segment="EVE"
		//PLUS
		//todo=ID
		//lineEnd=QUOTE_AND_NL
		public Group getGroup() { return cGroup; }
		
		//segment="EVE"
		public Assignment getSegmentAssignment_0() { return cSegmentAssignment_0; }
		
		//"EVE"
		public Keyword getSegmentEVEKeyword_0_0() { return cSegmentEVEKeyword_0_0; }
		
		//PLUS
		public RuleCall getPLUSTerminalRuleCall_1() { return cPLUSTerminalRuleCall_1; }
		
		//todo=ID
		public Assignment getTodoAssignment_2() { return cTodoAssignment_2; }
		
		//ID
		public RuleCall getTodoIDTerminalRuleCall_2_0() { return cTodoIDTerminalRuleCall_2_0; }
		
		//lineEnd=QUOTE_AND_NL
		public Assignment getLineEndAssignment_3() { return cLineEndAssignment_3; }
		
		//QUOTE_AND_NL
		public RuleCall getLineEndQUOTE_AND_NLTerminalRuleCall_3_0() { return cLineEndQUOTE_AND_NLTerminalRuleCall_3_0; }
	}
	public class EVTSegmentElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "io.thlaegler.edifact.Edilang.EVTSegment");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cSegmentAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final Keyword cSegmentEVTKeyword_0_0 = (Keyword)cSegmentAssignment_0.eContents().get(0);
		private final RuleCall cPLUSTerminalRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		private final Assignment cTodoAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cTodoIDTerminalRuleCall_2_0 = (RuleCall)cTodoAssignment_2.eContents().get(0);
		private final Assignment cLineEndAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cLineEndQUOTE_AND_NLTerminalRuleCall_3_0 = (RuleCall)cLineEndAssignment_3.eContents().get(0);
		
		////TODO
		//EVTSegment:
		//    segment="EVT"
		//    PLUS
		//    todo=ID
		//    lineEnd=QUOTE_AND_NL
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//segment="EVT"
		//PLUS
		//todo=ID
		//lineEnd=QUOTE_AND_NL
		public Group getGroup() { return cGroup; }
		
		//segment="EVT"
		public Assignment getSegmentAssignment_0() { return cSegmentAssignment_0; }
		
		//"EVT"
		public Keyword getSegmentEVTKeyword_0_0() { return cSegmentEVTKeyword_0_0; }
		
		//PLUS
		public RuleCall getPLUSTerminalRuleCall_1() { return cPLUSTerminalRuleCall_1; }
		
		//todo=ID
		public Assignment getTodoAssignment_2() { return cTodoAssignment_2; }
		
		//ID
		public RuleCall getTodoIDTerminalRuleCall_2_0() { return cTodoIDTerminalRuleCall_2_0; }
		
		//lineEnd=QUOTE_AND_NL
		public Assignment getLineEndAssignment_3() { return cLineEndAssignment_3; }
		
		//QUOTE_AND_NL
		public RuleCall getLineEndQUOTE_AND_NLTerminalRuleCall_3_0() { return cLineEndQUOTE_AND_NLTerminalRuleCall_3_0; }
	}
	public class FCASegmentElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "io.thlaegler.edifact.Edilang.FCASegment");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cSegmentAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final Keyword cSegmentFCAKeyword_0_0 = (Keyword)cSegmentAssignment_0.eContents().get(0);
		private final RuleCall cPLUSTerminalRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		private final Assignment cTodoAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cTodoIDTerminalRuleCall_2_0 = (RuleCall)cTodoAssignment_2.eContents().get(0);
		private final Assignment cLineEndAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cLineEndQUOTE_AND_NLTerminalRuleCall_3_0 = (RuleCall)cLineEndAssignment_3.eContents().get(0);
		
		////TODO
		//FCASegment:
		//    segment="FCA"
		//    PLUS
		//    todo=ID
		//    lineEnd=QUOTE_AND_NL
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//segment="FCA"
		//PLUS
		//todo=ID
		//lineEnd=QUOTE_AND_NL
		public Group getGroup() { return cGroup; }
		
		//segment="FCA"
		public Assignment getSegmentAssignment_0() { return cSegmentAssignment_0; }
		
		//"FCA"
		public Keyword getSegmentFCAKeyword_0_0() { return cSegmentFCAKeyword_0_0; }
		
		//PLUS
		public RuleCall getPLUSTerminalRuleCall_1() { return cPLUSTerminalRuleCall_1; }
		
		//todo=ID
		public Assignment getTodoAssignment_2() { return cTodoAssignment_2; }
		
		//ID
		public RuleCall getTodoIDTerminalRuleCall_2_0() { return cTodoIDTerminalRuleCall_2_0; }
		
		//lineEnd=QUOTE_AND_NL
		public Assignment getLineEndAssignment_3() { return cLineEndAssignment_3; }
		
		//QUOTE_AND_NL
		public RuleCall getLineEndQUOTE_AND_NLTerminalRuleCall_3_0() { return cLineEndQUOTE_AND_NLTerminalRuleCall_3_0; }
	}
	public class FIISegmentElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "io.thlaegler.edifact.Edilang.FIISegment");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cSegmentAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final Keyword cSegmentFIIKeyword_0_0 = (Keyword)cSegmentAssignment_0.eContents().get(0);
		private final RuleCall cPLUSTerminalRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		private final Assignment cTodoAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cTodoIDTerminalRuleCall_2_0 = (RuleCall)cTodoAssignment_2.eContents().get(0);
		private final Assignment cLineEndAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cLineEndQUOTE_AND_NLTerminalRuleCall_3_0 = (RuleCall)cLineEndAssignment_3.eContents().get(0);
		
		////TODO
		//FIISegment:
		//    segment="FII"
		//    PLUS
		//    todo=ID
		//    lineEnd=QUOTE_AND_NL
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//segment="FII"
		//PLUS
		//todo=ID
		//lineEnd=QUOTE_AND_NL
		public Group getGroup() { return cGroup; }
		
		//segment="FII"
		public Assignment getSegmentAssignment_0() { return cSegmentAssignment_0; }
		
		//"FII"
		public Keyword getSegmentFIIKeyword_0_0() { return cSegmentFIIKeyword_0_0; }
		
		//PLUS
		public RuleCall getPLUSTerminalRuleCall_1() { return cPLUSTerminalRuleCall_1; }
		
		//todo=ID
		public Assignment getTodoAssignment_2() { return cTodoAssignment_2; }
		
		//ID
		public RuleCall getTodoIDTerminalRuleCall_2_0() { return cTodoIDTerminalRuleCall_2_0; }
		
		//lineEnd=QUOTE_AND_NL
		public Assignment getLineEndAssignment_3() { return cLineEndAssignment_3; }
		
		//QUOTE_AND_NL
		public RuleCall getLineEndQUOTE_AND_NLTerminalRuleCall_3_0() { return cLineEndQUOTE_AND_NLTerminalRuleCall_3_0; }
	}
	public class FNSSegmentElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "io.thlaegler.edifact.Edilang.FNSSegment");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cSegmentAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final Keyword cSegmentFNSKeyword_0_0 = (Keyword)cSegmentAssignment_0.eContents().get(0);
		private final RuleCall cPLUSTerminalRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		private final Assignment cTodoAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cTodoIDTerminalRuleCall_2_0 = (RuleCall)cTodoAssignment_2.eContents().get(0);
		private final Assignment cLineEndAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cLineEndQUOTE_AND_NLTerminalRuleCall_3_0 = (RuleCall)cLineEndAssignment_3.eContents().get(0);
		
		////TODO
		//FNSSegment:
		//    segment="FNS"
		//    PLUS
		//    todo=ID
		//    lineEnd=QUOTE_AND_NL
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//segment="FNS"
		//PLUS
		//todo=ID
		//lineEnd=QUOTE_AND_NL
		public Group getGroup() { return cGroup; }
		
		//segment="FNS"
		public Assignment getSegmentAssignment_0() { return cSegmentAssignment_0; }
		
		//"FNS"
		public Keyword getSegmentFNSKeyword_0_0() { return cSegmentFNSKeyword_0_0; }
		
		//PLUS
		public RuleCall getPLUSTerminalRuleCall_1() { return cPLUSTerminalRuleCall_1; }
		
		//todo=ID
		public Assignment getTodoAssignment_2() { return cTodoAssignment_2; }
		
		//ID
		public RuleCall getTodoIDTerminalRuleCall_2_0() { return cTodoIDTerminalRuleCall_2_0; }
		
		//lineEnd=QUOTE_AND_NL
		public Assignment getLineEndAssignment_3() { return cLineEndAssignment_3; }
		
		//QUOTE_AND_NL
		public RuleCall getLineEndQUOTE_AND_NLTerminalRuleCall_3_0() { return cLineEndQUOTE_AND_NLTerminalRuleCall_3_0; }
	}
	public class FNTSegmentElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "io.thlaegler.edifact.Edilang.FNTSegment");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cSegmentAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final Keyword cSegmentFNTKeyword_0_0 = (Keyword)cSegmentAssignment_0.eContents().get(0);
		private final RuleCall cPLUSTerminalRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		private final Assignment cTodoAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cTodoIDTerminalRuleCall_2_0 = (RuleCall)cTodoAssignment_2.eContents().get(0);
		private final Assignment cLineEndAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cLineEndQUOTE_AND_NLTerminalRuleCall_3_0 = (RuleCall)cLineEndAssignment_3.eContents().get(0);
		
		////TODO
		//FNTSegment:
		//    segment="FNT"
		//    PLUS
		//    todo=ID
		//    lineEnd=QUOTE_AND_NL
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//segment="FNT"
		//PLUS
		//todo=ID
		//lineEnd=QUOTE_AND_NL
		public Group getGroup() { return cGroup; }
		
		//segment="FNT"
		public Assignment getSegmentAssignment_0() { return cSegmentAssignment_0; }
		
		//"FNT"
		public Keyword getSegmentFNTKeyword_0_0() { return cSegmentFNTKeyword_0_0; }
		
		//PLUS
		public RuleCall getPLUSTerminalRuleCall_1() { return cPLUSTerminalRuleCall_1; }
		
		//todo=ID
		public Assignment getTodoAssignment_2() { return cTodoAssignment_2; }
		
		//ID
		public RuleCall getTodoIDTerminalRuleCall_2_0() { return cTodoIDTerminalRuleCall_2_0; }
		
		//lineEnd=QUOTE_AND_NL
		public Assignment getLineEndAssignment_3() { return cLineEndAssignment_3; }
		
		//QUOTE_AND_NL
		public RuleCall getLineEndQUOTE_AND_NLTerminalRuleCall_3_0() { return cLineEndQUOTE_AND_NLTerminalRuleCall_3_0; }
	}
	public class FORSegmentElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "io.thlaegler.edifact.Edilang.FORSegment");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cSegmentAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final Keyword cSegmentFORKeyword_0_0 = (Keyword)cSegmentAssignment_0.eContents().get(0);
		private final RuleCall cPLUSTerminalRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		private final Assignment cTodoAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cTodoIDTerminalRuleCall_2_0 = (RuleCall)cTodoAssignment_2.eContents().get(0);
		private final Assignment cLineEndAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cLineEndQUOTE_AND_NLTerminalRuleCall_3_0 = (RuleCall)cLineEndAssignment_3.eContents().get(0);
		
		////TODO
		//FORSegment:
		//    segment="FOR"
		//    PLUS
		//    todo=ID
		//    lineEnd=QUOTE_AND_NL
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//segment="FOR"
		//PLUS
		//todo=ID
		//lineEnd=QUOTE_AND_NL
		public Group getGroup() { return cGroup; }
		
		//segment="FOR"
		public Assignment getSegmentAssignment_0() { return cSegmentAssignment_0; }
		
		//"FOR"
		public Keyword getSegmentFORKeyword_0_0() { return cSegmentFORKeyword_0_0; }
		
		//PLUS
		public RuleCall getPLUSTerminalRuleCall_1() { return cPLUSTerminalRuleCall_1; }
		
		//todo=ID
		public Assignment getTodoAssignment_2() { return cTodoAssignment_2; }
		
		//ID
		public RuleCall getTodoIDTerminalRuleCall_2_0() { return cTodoIDTerminalRuleCall_2_0; }
		
		//lineEnd=QUOTE_AND_NL
		public Assignment getLineEndAssignment_3() { return cLineEndAssignment_3; }
		
		//QUOTE_AND_NL
		public RuleCall getLineEndQUOTE_AND_NLTerminalRuleCall_3_0() { return cLineEndQUOTE_AND_NLTerminalRuleCall_3_0; }
	}
	public class FSQSegmentElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "io.thlaegler.edifact.Edilang.FSQSegment");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cSegmentAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final Keyword cSegmentFSQKeyword_0_0 = (Keyword)cSegmentAssignment_0.eContents().get(0);
		private final RuleCall cPLUSTerminalRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		private final Assignment cTodoAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cTodoIDTerminalRuleCall_2_0 = (RuleCall)cTodoAssignment_2.eContents().get(0);
		private final Assignment cLineEndAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cLineEndQUOTE_AND_NLTerminalRuleCall_3_0 = (RuleCall)cLineEndAssignment_3.eContents().get(0);
		
		////TODO
		//FSQSegment:
		//    segment="FSQ"
		//    PLUS
		//    todo=ID
		//    lineEnd=QUOTE_AND_NL
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//segment="FSQ"
		//PLUS
		//todo=ID
		//lineEnd=QUOTE_AND_NL
		public Group getGroup() { return cGroup; }
		
		//segment="FSQ"
		public Assignment getSegmentAssignment_0() { return cSegmentAssignment_0; }
		
		//"FSQ"
		public Keyword getSegmentFSQKeyword_0_0() { return cSegmentFSQKeyword_0_0; }
		
		//PLUS
		public RuleCall getPLUSTerminalRuleCall_1() { return cPLUSTerminalRuleCall_1; }
		
		//todo=ID
		public Assignment getTodoAssignment_2() { return cTodoAssignment_2; }
		
		//ID
		public RuleCall getTodoIDTerminalRuleCall_2_0() { return cTodoIDTerminalRuleCall_2_0; }
		
		//lineEnd=QUOTE_AND_NL
		public Assignment getLineEndAssignment_3() { return cLineEndAssignment_3; }
		
		//QUOTE_AND_NL
		public RuleCall getLineEndQUOTE_AND_NLTerminalRuleCall_3_0() { return cLineEndQUOTE_AND_NLTerminalRuleCall_3_0; }
	}
	public class GDSSegmentElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "io.thlaegler.edifact.Edilang.GDSSegment");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cSegmentAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final Keyword cSegmentGDSKeyword_0_0 = (Keyword)cSegmentAssignment_0.eContents().get(0);
		private final RuleCall cPLUSTerminalRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		private final Assignment cTodoAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cTodoIDTerminalRuleCall_2_0 = (RuleCall)cTodoAssignment_2.eContents().get(0);
		private final Assignment cLineEndAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cLineEndQUOTE_AND_NLTerminalRuleCall_3_0 = (RuleCall)cLineEndAssignment_3.eContents().get(0);
		
		////TODO
		//GDSSegment:
		//    segment="GDS"
		//    PLUS
		//    todo=ID
		//    lineEnd=QUOTE_AND_NL
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//segment="GDS"
		//PLUS
		//todo=ID
		//lineEnd=QUOTE_AND_NL
		public Group getGroup() { return cGroup; }
		
		//segment="GDS"
		public Assignment getSegmentAssignment_0() { return cSegmentAssignment_0; }
		
		//"GDS"
		public Keyword getSegmentGDSKeyword_0_0() { return cSegmentGDSKeyword_0_0; }
		
		//PLUS
		public RuleCall getPLUSTerminalRuleCall_1() { return cPLUSTerminalRuleCall_1; }
		
		//todo=ID
		public Assignment getTodoAssignment_2() { return cTodoAssignment_2; }
		
		//ID
		public RuleCall getTodoIDTerminalRuleCall_2_0() { return cTodoIDTerminalRuleCall_2_0; }
		
		//lineEnd=QUOTE_AND_NL
		public Assignment getLineEndAssignment_3() { return cLineEndAssignment_3; }
		
		//QUOTE_AND_NL
		public RuleCall getLineEndQUOTE_AND_NLTerminalRuleCall_3_0() { return cLineEndQUOTE_AND_NLTerminalRuleCall_3_0; }
	}
	public class GEISegmentElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "io.thlaegler.edifact.Edilang.GEISegment");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cSegmentAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final Keyword cSegmentGEIKeyword_0_0 = (Keyword)cSegmentAssignment_0.eContents().get(0);
		private final RuleCall cPLUSTerminalRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		private final Assignment cTodoAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cTodoIDTerminalRuleCall_2_0 = (RuleCall)cTodoAssignment_2.eContents().get(0);
		private final Assignment cLineEndAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cLineEndQUOTE_AND_NLTerminalRuleCall_3_0 = (RuleCall)cLineEndAssignment_3.eContents().get(0);
		
		////TODO
		//GEISegment:
		//    segment="GEI"
		//    PLUS
		//    todo=ID
		//    lineEnd=QUOTE_AND_NL
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//segment="GEI"
		//PLUS
		//todo=ID
		//lineEnd=QUOTE_AND_NL
		public Group getGroup() { return cGroup; }
		
		//segment="GEI"
		public Assignment getSegmentAssignment_0() { return cSegmentAssignment_0; }
		
		//"GEI"
		public Keyword getSegmentGEIKeyword_0_0() { return cSegmentGEIKeyword_0_0; }
		
		//PLUS
		public RuleCall getPLUSTerminalRuleCall_1() { return cPLUSTerminalRuleCall_1; }
		
		//todo=ID
		public Assignment getTodoAssignment_2() { return cTodoAssignment_2; }
		
		//ID
		public RuleCall getTodoIDTerminalRuleCall_2_0() { return cTodoIDTerminalRuleCall_2_0; }
		
		//lineEnd=QUOTE_AND_NL
		public Assignment getLineEndAssignment_3() { return cLineEndAssignment_3; }
		
		//QUOTE_AND_NL
		public RuleCall getLineEndQUOTE_AND_NLTerminalRuleCall_3_0() { return cLineEndQUOTE_AND_NLTerminalRuleCall_3_0; }
	}
	public class GIDSegmentElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "io.thlaegler.edifact.Edilang.GIDSegment");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cSegmentAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final Keyword cSegmentGIDKeyword_0_0 = (Keyword)cSegmentAssignment_0.eContents().get(0);
		private final RuleCall cPLUSTerminalRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		private final Assignment cTodoAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cTodoIDTerminalRuleCall_2_0 = (RuleCall)cTodoAssignment_2.eContents().get(0);
		private final Assignment cLineEndAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cLineEndQUOTE_AND_NLTerminalRuleCall_3_0 = (RuleCall)cLineEndAssignment_3.eContents().get(0);
		
		////TODO
		//GIDSegment:
		//    segment="GID"
		//    PLUS
		//    todo=ID
		//    lineEnd=QUOTE_AND_NL
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//segment="GID"
		//PLUS
		//todo=ID
		//lineEnd=QUOTE_AND_NL
		public Group getGroup() { return cGroup; }
		
		//segment="GID"
		public Assignment getSegmentAssignment_0() { return cSegmentAssignment_0; }
		
		//"GID"
		public Keyword getSegmentGIDKeyword_0_0() { return cSegmentGIDKeyword_0_0; }
		
		//PLUS
		public RuleCall getPLUSTerminalRuleCall_1() { return cPLUSTerminalRuleCall_1; }
		
		//todo=ID
		public Assignment getTodoAssignment_2() { return cTodoAssignment_2; }
		
		//ID
		public RuleCall getTodoIDTerminalRuleCall_2_0() { return cTodoIDTerminalRuleCall_2_0; }
		
		//lineEnd=QUOTE_AND_NL
		public Assignment getLineEndAssignment_3() { return cLineEndAssignment_3; }
		
		//QUOTE_AND_NL
		public RuleCall getLineEndQUOTE_AND_NLTerminalRuleCall_3_0() { return cLineEndQUOTE_AND_NLTerminalRuleCall_3_0; }
	}
	public class GINSegmentElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "io.thlaegler.edifact.Edilang.GINSegment");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cSegmentAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final Keyword cSegmentGINKeyword_0_0 = (Keyword)cSegmentAssignment_0.eContents().get(0);
		private final RuleCall cPLUSTerminalRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		private final Assignment cTodoAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cTodoIDTerminalRuleCall_2_0 = (RuleCall)cTodoAssignment_2.eContents().get(0);
		private final Assignment cLineEndAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cLineEndQUOTE_AND_NLTerminalRuleCall_3_0 = (RuleCall)cLineEndAssignment_3.eContents().get(0);
		
		////TODO
		//GINSegment:
		//    segment="GIN"
		//    PLUS
		//    todo=ID
		//    lineEnd=QUOTE_AND_NL
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//segment="GIN"
		//PLUS
		//todo=ID
		//lineEnd=QUOTE_AND_NL
		public Group getGroup() { return cGroup; }
		
		//segment="GIN"
		public Assignment getSegmentAssignment_0() { return cSegmentAssignment_0; }
		
		//"GIN"
		public Keyword getSegmentGINKeyword_0_0() { return cSegmentGINKeyword_0_0; }
		
		//PLUS
		public RuleCall getPLUSTerminalRuleCall_1() { return cPLUSTerminalRuleCall_1; }
		
		//todo=ID
		public Assignment getTodoAssignment_2() { return cTodoAssignment_2; }
		
		//ID
		public RuleCall getTodoIDTerminalRuleCall_2_0() { return cTodoIDTerminalRuleCall_2_0; }
		
		//lineEnd=QUOTE_AND_NL
		public Assignment getLineEndAssignment_3() { return cLineEndAssignment_3; }
		
		//QUOTE_AND_NL
		public RuleCall getLineEndQUOTE_AND_NLTerminalRuleCall_3_0() { return cLineEndQUOTE_AND_NLTerminalRuleCall_3_0; }
	}
	public class GIRSegmentElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "io.thlaegler.edifact.Edilang.GIRSegment");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cSegmentAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final Keyword cSegmentGIRKeyword_0_0 = (Keyword)cSegmentAssignment_0.eContents().get(0);
		private final RuleCall cPLUSTerminalRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		private final Assignment cTodoAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cTodoIDTerminalRuleCall_2_0 = (RuleCall)cTodoAssignment_2.eContents().get(0);
		private final Assignment cLineEndAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cLineEndQUOTE_AND_NLTerminalRuleCall_3_0 = (RuleCall)cLineEndAssignment_3.eContents().get(0);
		
		////TODO
		//GIRSegment:
		//    segment="GIR"
		//    PLUS
		//    todo=ID
		//    lineEnd=QUOTE_AND_NL
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//segment="GIR"
		//PLUS
		//todo=ID
		//lineEnd=QUOTE_AND_NL
		public Group getGroup() { return cGroup; }
		
		//segment="GIR"
		public Assignment getSegmentAssignment_0() { return cSegmentAssignment_0; }
		
		//"GIR"
		public Keyword getSegmentGIRKeyword_0_0() { return cSegmentGIRKeyword_0_0; }
		
		//PLUS
		public RuleCall getPLUSTerminalRuleCall_1() { return cPLUSTerminalRuleCall_1; }
		
		//todo=ID
		public Assignment getTodoAssignment_2() { return cTodoAssignment_2; }
		
		//ID
		public RuleCall getTodoIDTerminalRuleCall_2_0() { return cTodoIDTerminalRuleCall_2_0; }
		
		//lineEnd=QUOTE_AND_NL
		public Assignment getLineEndAssignment_3() { return cLineEndAssignment_3; }
		
		//QUOTE_AND_NL
		public RuleCall getLineEndQUOTE_AND_NLTerminalRuleCall_3_0() { return cLineEndQUOTE_AND_NLTerminalRuleCall_3_0; }
	}
	public class GISSegmentElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "io.thlaegler.edifact.Edilang.GISSegment");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cSegmentAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final Keyword cSegmentGISKeyword_0_0 = (Keyword)cSegmentAssignment_0.eContents().get(0);
		private final RuleCall cPLUSTerminalRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		private final Assignment cTodoAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cTodoIDTerminalRuleCall_2_0 = (RuleCall)cTodoAssignment_2.eContents().get(0);
		private final Assignment cLineEndAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cLineEndQUOTE_AND_NLTerminalRuleCall_3_0 = (RuleCall)cLineEndAssignment_3.eContents().get(0);
		
		////TODO
		//GISSegment:
		//    segment="GIS"
		//    PLUS
		//    todo=ID
		//    lineEnd=QUOTE_AND_NL
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//segment="GIS"
		//PLUS
		//todo=ID
		//lineEnd=QUOTE_AND_NL
		public Group getGroup() { return cGroup; }
		
		//segment="GIS"
		public Assignment getSegmentAssignment_0() { return cSegmentAssignment_0; }
		
		//"GIS"
		public Keyword getSegmentGISKeyword_0_0() { return cSegmentGISKeyword_0_0; }
		
		//PLUS
		public RuleCall getPLUSTerminalRuleCall_1() { return cPLUSTerminalRuleCall_1; }
		
		//todo=ID
		public Assignment getTodoAssignment_2() { return cTodoAssignment_2; }
		
		//ID
		public RuleCall getTodoIDTerminalRuleCall_2_0() { return cTodoIDTerminalRuleCall_2_0; }
		
		//lineEnd=QUOTE_AND_NL
		public Assignment getLineEndAssignment_3() { return cLineEndAssignment_3; }
		
		//QUOTE_AND_NL
		public RuleCall getLineEndQUOTE_AND_NLTerminalRuleCall_3_0() { return cLineEndQUOTE_AND_NLTerminalRuleCall_3_0; }
	}
	public class GORSegmentElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "io.thlaegler.edifact.Edilang.GORSegment");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cSegmentAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final Keyword cSegmentGORKeyword_0_0 = (Keyword)cSegmentAssignment_0.eContents().get(0);
		private final RuleCall cPLUSTerminalRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		private final Assignment cTodoAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cTodoIDTerminalRuleCall_2_0 = (RuleCall)cTodoAssignment_2.eContents().get(0);
		private final Assignment cLineEndAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cLineEndQUOTE_AND_NLTerminalRuleCall_3_0 = (RuleCall)cLineEndAssignment_3.eContents().get(0);
		
		////TODO
		//GORSegment:
		//    segment="GOR"
		//    PLUS
		//    todo=ID
		//    lineEnd=QUOTE_AND_NL
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//segment="GOR"
		//PLUS
		//todo=ID
		//lineEnd=QUOTE_AND_NL
		public Group getGroup() { return cGroup; }
		
		//segment="GOR"
		public Assignment getSegmentAssignment_0() { return cSegmentAssignment_0; }
		
		//"GOR"
		public Keyword getSegmentGORKeyword_0_0() { return cSegmentGORKeyword_0_0; }
		
		//PLUS
		public RuleCall getPLUSTerminalRuleCall_1() { return cPLUSTerminalRuleCall_1; }
		
		//todo=ID
		public Assignment getTodoAssignment_2() { return cTodoAssignment_2; }
		
		//ID
		public RuleCall getTodoIDTerminalRuleCall_2_0() { return cTodoIDTerminalRuleCall_2_0; }
		
		//lineEnd=QUOTE_AND_NL
		public Assignment getLineEndAssignment_3() { return cLineEndAssignment_3; }
		
		//QUOTE_AND_NL
		public RuleCall getLineEndQUOTE_AND_NLTerminalRuleCall_3_0() { return cLineEndQUOTE_AND_NLTerminalRuleCall_3_0; }
	}
	public class GRUSegmentElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "io.thlaegler.edifact.Edilang.GRUSegment");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cSegmentAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final Keyword cSegmentGRUKeyword_0_0 = (Keyword)cSegmentAssignment_0.eContents().get(0);
		private final RuleCall cPLUSTerminalRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		private final Assignment cTodoAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cTodoIDTerminalRuleCall_2_0 = (RuleCall)cTodoAssignment_2.eContents().get(0);
		private final Assignment cLineEndAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cLineEndQUOTE_AND_NLTerminalRuleCall_3_0 = (RuleCall)cLineEndAssignment_3.eContents().get(0);
		
		////TODO
		//GRUSegment:
		//    segment="GRU"
		//    PLUS
		//    todo=ID
		//    lineEnd=QUOTE_AND_NL
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//segment="GRU"
		//PLUS
		//todo=ID
		//lineEnd=QUOTE_AND_NL
		public Group getGroup() { return cGroup; }
		
		//segment="GRU"
		public Assignment getSegmentAssignment_0() { return cSegmentAssignment_0; }
		
		//"GRU"
		public Keyword getSegmentGRUKeyword_0_0() { return cSegmentGRUKeyword_0_0; }
		
		//PLUS
		public RuleCall getPLUSTerminalRuleCall_1() { return cPLUSTerminalRuleCall_1; }
		
		//todo=ID
		public Assignment getTodoAssignment_2() { return cTodoAssignment_2; }
		
		//ID
		public RuleCall getTodoIDTerminalRuleCall_2_0() { return cTodoIDTerminalRuleCall_2_0; }
		
		//lineEnd=QUOTE_AND_NL
		public Assignment getLineEndAssignment_3() { return cLineEndAssignment_3; }
		
		//QUOTE_AND_NL
		public RuleCall getLineEndQUOTE_AND_NLTerminalRuleCall_3_0() { return cLineEndQUOTE_AND_NLTerminalRuleCall_3_0; }
	}
	public class HANSegmentElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "io.thlaegler.edifact.Edilang.HANSegment");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cSegmentAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final Keyword cSegmentHANKeyword_0_0 = (Keyword)cSegmentAssignment_0.eContents().get(0);
		private final RuleCall cPLUSTerminalRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		private final Assignment cTodoAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cTodoIDTerminalRuleCall_2_0 = (RuleCall)cTodoAssignment_2.eContents().get(0);
		private final Assignment cLineEndAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cLineEndQUOTE_AND_NLTerminalRuleCall_3_0 = (RuleCall)cLineEndAssignment_3.eContents().get(0);
		
		////TODO
		//HANSegment:
		//    segment="HAN"
		//    PLUS
		//    todo=ID
		//    lineEnd=QUOTE_AND_NL
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//segment="HAN"
		//PLUS
		//todo=ID
		//lineEnd=QUOTE_AND_NL
		public Group getGroup() { return cGroup; }
		
		//segment="HAN"
		public Assignment getSegmentAssignment_0() { return cSegmentAssignment_0; }
		
		//"HAN"
		public Keyword getSegmentHANKeyword_0_0() { return cSegmentHANKeyword_0_0; }
		
		//PLUS
		public RuleCall getPLUSTerminalRuleCall_1() { return cPLUSTerminalRuleCall_1; }
		
		//todo=ID
		public Assignment getTodoAssignment_2() { return cTodoAssignment_2; }
		
		//ID
		public RuleCall getTodoIDTerminalRuleCall_2_0() { return cTodoIDTerminalRuleCall_2_0; }
		
		//lineEnd=QUOTE_AND_NL
		public Assignment getLineEndAssignment_3() { return cLineEndAssignment_3; }
		
		//QUOTE_AND_NL
		public RuleCall getLineEndQUOTE_AND_NLTerminalRuleCall_3_0() { return cLineEndQUOTE_AND_NLTerminalRuleCall_3_0; }
	}
	public class HYNSegmentElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "io.thlaegler.edifact.Edilang.HYNSegment");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cSegmentAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final Keyword cSegmentHYNKeyword_0_0 = (Keyword)cSegmentAssignment_0.eContents().get(0);
		private final RuleCall cPLUSTerminalRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		private final Assignment cTodoAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cTodoIDTerminalRuleCall_2_0 = (RuleCall)cTodoAssignment_2.eContents().get(0);
		private final Assignment cLineEndAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cLineEndQUOTE_AND_NLTerminalRuleCall_3_0 = (RuleCall)cLineEndAssignment_3.eContents().get(0);
		
		////TODO
		//HYNSegment:
		//    segment="HYN"
		//    PLUS
		//    todo=ID
		//    lineEnd=QUOTE_AND_NL
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//segment="HYN"
		//PLUS
		//todo=ID
		//lineEnd=QUOTE_AND_NL
		public Group getGroup() { return cGroup; }
		
		//segment="HYN"
		public Assignment getSegmentAssignment_0() { return cSegmentAssignment_0; }
		
		//"HYN"
		public Keyword getSegmentHYNKeyword_0_0() { return cSegmentHYNKeyword_0_0; }
		
		//PLUS
		public RuleCall getPLUSTerminalRuleCall_1() { return cPLUSTerminalRuleCall_1; }
		
		//todo=ID
		public Assignment getTodoAssignment_2() { return cTodoAssignment_2; }
		
		//ID
		public RuleCall getTodoIDTerminalRuleCall_2_0() { return cTodoIDTerminalRuleCall_2_0; }
		
		//lineEnd=QUOTE_AND_NL
		public Assignment getLineEndAssignment_3() { return cLineEndAssignment_3; }
		
		//QUOTE_AND_NL
		public RuleCall getLineEndQUOTE_AND_NLTerminalRuleCall_3_0() { return cLineEndQUOTE_AND_NLTerminalRuleCall_3_0; }
	}
	public class ICDSegmentElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "io.thlaegler.edifact.Edilang.ICDSegment");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cSegmentAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final Keyword cSegmentICDKeyword_0_0 = (Keyword)cSegmentAssignment_0.eContents().get(0);
		private final RuleCall cPLUSTerminalRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		private final Assignment cTodoAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cTodoIDTerminalRuleCall_2_0 = (RuleCall)cTodoAssignment_2.eContents().get(0);
		private final Assignment cLineEndAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cLineEndQUOTE_AND_NLTerminalRuleCall_3_0 = (RuleCall)cLineEndAssignment_3.eContents().get(0);
		
		////TODO
		//ICDSegment:
		//    segment="ICD"
		//    PLUS
		//    todo=ID
		//    lineEnd=QUOTE_AND_NL
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//segment="ICD"
		//PLUS
		//todo=ID
		//lineEnd=QUOTE_AND_NL
		public Group getGroup() { return cGroup; }
		
		//segment="ICD"
		public Assignment getSegmentAssignment_0() { return cSegmentAssignment_0; }
		
		//"ICD"
		public Keyword getSegmentICDKeyword_0_0() { return cSegmentICDKeyword_0_0; }
		
		//PLUS
		public RuleCall getPLUSTerminalRuleCall_1() { return cPLUSTerminalRuleCall_1; }
		
		//todo=ID
		public Assignment getTodoAssignment_2() { return cTodoAssignment_2; }
		
		//ID
		public RuleCall getTodoIDTerminalRuleCall_2_0() { return cTodoIDTerminalRuleCall_2_0; }
		
		//lineEnd=QUOTE_AND_NL
		public Assignment getLineEndAssignment_3() { return cLineEndAssignment_3; }
		
		//QUOTE_AND_NL
		public RuleCall getLineEndQUOTE_AND_NLTerminalRuleCall_3_0() { return cLineEndQUOTE_AND_NLTerminalRuleCall_3_0; }
	}
	public class IDESegmentElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "io.thlaegler.edifact.Edilang.IDESegment");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cSegmentAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final Keyword cSegmentIDEKeyword_0_0 = (Keyword)cSegmentAssignment_0.eContents().get(0);
		private final RuleCall cPLUSTerminalRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		private final Assignment cTodoAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cTodoIDTerminalRuleCall_2_0 = (RuleCall)cTodoAssignment_2.eContents().get(0);
		private final Assignment cLineEndAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cLineEndQUOTE_AND_NLTerminalRuleCall_3_0 = (RuleCall)cLineEndAssignment_3.eContents().get(0);
		
		////TODO
		//IDESegment:
		//    segment="IDE"
		//    PLUS
		//    todo=ID
		//    lineEnd=QUOTE_AND_NL
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//segment="IDE"
		//PLUS
		//todo=ID
		//lineEnd=QUOTE_AND_NL
		public Group getGroup() { return cGroup; }
		
		//segment="IDE"
		public Assignment getSegmentAssignment_0() { return cSegmentAssignment_0; }
		
		//"IDE"
		public Keyword getSegmentIDEKeyword_0_0() { return cSegmentIDEKeyword_0_0; }
		
		//PLUS
		public RuleCall getPLUSTerminalRuleCall_1() { return cPLUSTerminalRuleCall_1; }
		
		//todo=ID
		public Assignment getTodoAssignment_2() { return cTodoAssignment_2; }
		
		//ID
		public RuleCall getTodoIDTerminalRuleCall_2_0() { return cTodoIDTerminalRuleCall_2_0; }
		
		//lineEnd=QUOTE_AND_NL
		public Assignment getLineEndAssignment_3() { return cLineEndAssignment_3; }
		
		//QUOTE_AND_NL
		public RuleCall getLineEndQUOTE_AND_NLTerminalRuleCall_3_0() { return cLineEndQUOTE_AND_NLTerminalRuleCall_3_0; }
	}
	public class IFDSegmentElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "io.thlaegler.edifact.Edilang.IFDSegment");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cSegmentAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final Keyword cSegmentIFDKeyword_0_0 = (Keyword)cSegmentAssignment_0.eContents().get(0);
		private final RuleCall cPLUSTerminalRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		private final Assignment cTodoAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cTodoIDTerminalRuleCall_2_0 = (RuleCall)cTodoAssignment_2.eContents().get(0);
		private final Assignment cLineEndAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cLineEndQUOTE_AND_NLTerminalRuleCall_3_0 = (RuleCall)cLineEndAssignment_3.eContents().get(0);
		
		////TODO
		//IFDSegment:
		//    segment="IFD"
		//    PLUS
		//    todo=ID
		//    lineEnd=QUOTE_AND_NL
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//segment="IFD"
		//PLUS
		//todo=ID
		//lineEnd=QUOTE_AND_NL
		public Group getGroup() { return cGroup; }
		
		//segment="IFD"
		public Assignment getSegmentAssignment_0() { return cSegmentAssignment_0; }
		
		//"IFD"
		public Keyword getSegmentIFDKeyword_0_0() { return cSegmentIFDKeyword_0_0; }
		
		//PLUS
		public RuleCall getPLUSTerminalRuleCall_1() { return cPLUSTerminalRuleCall_1; }
		
		//todo=ID
		public Assignment getTodoAssignment_2() { return cTodoAssignment_2; }
		
		//ID
		public RuleCall getTodoIDTerminalRuleCall_2_0() { return cTodoIDTerminalRuleCall_2_0; }
		
		//lineEnd=QUOTE_AND_NL
		public Assignment getLineEndAssignment_3() { return cLineEndAssignment_3; }
		
		//QUOTE_AND_NL
		public RuleCall getLineEndQUOTE_AND_NLTerminalRuleCall_3_0() { return cLineEndQUOTE_AND_NLTerminalRuleCall_3_0; }
	}
	public class IHCSegmentElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "io.thlaegler.edifact.Edilang.IHCSegment");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cSegmentAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final Keyword cSegmentIHCKeyword_0_0 = (Keyword)cSegmentAssignment_0.eContents().get(0);
		private final RuleCall cPLUSTerminalRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		private final Assignment cTodoAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cTodoIDTerminalRuleCall_2_0 = (RuleCall)cTodoAssignment_2.eContents().get(0);
		private final Assignment cLineEndAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cLineEndQUOTE_AND_NLTerminalRuleCall_3_0 = (RuleCall)cLineEndAssignment_3.eContents().get(0);
		
		////TODO
		//IHCSegment:
		//    segment="IHC"
		//    PLUS
		//    todo=ID
		//    lineEnd=QUOTE_AND_NL
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//segment="IHC"
		//PLUS
		//todo=ID
		//lineEnd=QUOTE_AND_NL
		public Group getGroup() { return cGroup; }
		
		//segment="IHC"
		public Assignment getSegmentAssignment_0() { return cSegmentAssignment_0; }
		
		//"IHC"
		public Keyword getSegmentIHCKeyword_0_0() { return cSegmentIHCKeyword_0_0; }
		
		//PLUS
		public RuleCall getPLUSTerminalRuleCall_1() { return cPLUSTerminalRuleCall_1; }
		
		//todo=ID
		public Assignment getTodoAssignment_2() { return cTodoAssignment_2; }
		
		//ID
		public RuleCall getTodoIDTerminalRuleCall_2_0() { return cTodoIDTerminalRuleCall_2_0; }
		
		//lineEnd=QUOTE_AND_NL
		public Assignment getLineEndAssignment_3() { return cLineEndAssignment_3; }
		
		//QUOTE_AND_NL
		public RuleCall getLineEndQUOTE_AND_NLTerminalRuleCall_3_0() { return cLineEndQUOTE_AND_NLTerminalRuleCall_3_0; }
	}
	public class IMDSegmentElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "io.thlaegler.edifact.Edilang.IMDSegment");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cSegmentAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final Keyword cSegmentIMDKeyword_0_0 = (Keyword)cSegmentAssignment_0.eContents().get(0);
		private final RuleCall cPLUSTerminalRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		private final Assignment cTodoAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cTodoIDTerminalRuleCall_2_0 = (RuleCall)cTodoAssignment_2.eContents().get(0);
		private final Assignment cLineEndAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cLineEndQUOTE_AND_NLTerminalRuleCall_3_0 = (RuleCall)cLineEndAssignment_3.eContents().get(0);
		
		////TODO
		//IMDSegment:
		//    segment="IMD"
		//    PLUS
		//    todo=ID
		//    lineEnd=QUOTE_AND_NL
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//segment="IMD"
		//PLUS
		//todo=ID
		//lineEnd=QUOTE_AND_NL
		public Group getGroup() { return cGroup; }
		
		//segment="IMD"
		public Assignment getSegmentAssignment_0() { return cSegmentAssignment_0; }
		
		//"IMD"
		public Keyword getSegmentIMDKeyword_0_0() { return cSegmentIMDKeyword_0_0; }
		
		//PLUS
		public RuleCall getPLUSTerminalRuleCall_1() { return cPLUSTerminalRuleCall_1; }
		
		//todo=ID
		public Assignment getTodoAssignment_2() { return cTodoAssignment_2; }
		
		//ID
		public RuleCall getTodoIDTerminalRuleCall_2_0() { return cTodoIDTerminalRuleCall_2_0; }
		
		//lineEnd=QUOTE_AND_NL
		public Assignment getLineEndAssignment_3() { return cLineEndAssignment_3; }
		
		//QUOTE_AND_NL
		public RuleCall getLineEndQUOTE_AND_NLTerminalRuleCall_3_0() { return cLineEndQUOTE_AND_NLTerminalRuleCall_3_0; }
	}
	public class INDSegmentElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "io.thlaegler.edifact.Edilang.INDSegment");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cSegmentAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final Keyword cSegmentINDKeyword_0_0 = (Keyword)cSegmentAssignment_0.eContents().get(0);
		private final RuleCall cPLUSTerminalRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		private final Assignment cTodoAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cTodoIDTerminalRuleCall_2_0 = (RuleCall)cTodoAssignment_2.eContents().get(0);
		private final Assignment cLineEndAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cLineEndQUOTE_AND_NLTerminalRuleCall_3_0 = (RuleCall)cLineEndAssignment_3.eContents().get(0);
		
		////TODO
		//INDSegment:
		//    segment="IND"
		//    PLUS
		//    todo=ID
		//    lineEnd=QUOTE_AND_NL
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//segment="IND"
		//PLUS
		//todo=ID
		//lineEnd=QUOTE_AND_NL
		public Group getGroup() { return cGroup; }
		
		//segment="IND"
		public Assignment getSegmentAssignment_0() { return cSegmentAssignment_0; }
		
		//"IND"
		public Keyword getSegmentINDKeyword_0_0() { return cSegmentINDKeyword_0_0; }
		
		//PLUS
		public RuleCall getPLUSTerminalRuleCall_1() { return cPLUSTerminalRuleCall_1; }
		
		//todo=ID
		public Assignment getTodoAssignment_2() { return cTodoAssignment_2; }
		
		//ID
		public RuleCall getTodoIDTerminalRuleCall_2_0() { return cTodoIDTerminalRuleCall_2_0; }
		
		//lineEnd=QUOTE_AND_NL
		public Assignment getLineEndAssignment_3() { return cLineEndAssignment_3; }
		
		//QUOTE_AND_NL
		public RuleCall getLineEndQUOTE_AND_NLTerminalRuleCall_3_0() { return cLineEndQUOTE_AND_NLTerminalRuleCall_3_0; }
	}
	public class INPSegmentElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "io.thlaegler.edifact.Edilang.INPSegment");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cSegmentAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final Keyword cSegmentINPKeyword_0_0 = (Keyword)cSegmentAssignment_0.eContents().get(0);
		private final RuleCall cPLUSTerminalRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		private final Assignment cTodoAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cTodoIDTerminalRuleCall_2_0 = (RuleCall)cTodoAssignment_2.eContents().get(0);
		private final Assignment cLineEndAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cLineEndQUOTE_AND_NLTerminalRuleCall_3_0 = (RuleCall)cLineEndAssignment_3.eContents().get(0);
		
		////TODO
		//INPSegment:
		//    segment="INP"
		//    PLUS
		//    todo=ID
		//    lineEnd=QUOTE_AND_NL
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//segment="INP"
		//PLUS
		//todo=ID
		//lineEnd=QUOTE_AND_NL
		public Group getGroup() { return cGroup; }
		
		//segment="INP"
		public Assignment getSegmentAssignment_0() { return cSegmentAssignment_0; }
		
		//"INP"
		public Keyword getSegmentINPKeyword_0_0() { return cSegmentINPKeyword_0_0; }
		
		//PLUS
		public RuleCall getPLUSTerminalRuleCall_1() { return cPLUSTerminalRuleCall_1; }
		
		//todo=ID
		public Assignment getTodoAssignment_2() { return cTodoAssignment_2; }
		
		//ID
		public RuleCall getTodoIDTerminalRuleCall_2_0() { return cTodoIDTerminalRuleCall_2_0; }
		
		//lineEnd=QUOTE_AND_NL
		public Assignment getLineEndAssignment_3() { return cLineEndAssignment_3; }
		
		//QUOTE_AND_NL
		public RuleCall getLineEndQUOTE_AND_NLTerminalRuleCall_3_0() { return cLineEndQUOTE_AND_NLTerminalRuleCall_3_0; }
	}
	public class INVSegmentElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "io.thlaegler.edifact.Edilang.INVSegment");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cSegmentAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final Keyword cSegmentINVKeyword_0_0 = (Keyword)cSegmentAssignment_0.eContents().get(0);
		private final RuleCall cPLUSTerminalRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		private final Assignment cTodoAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cTodoIDTerminalRuleCall_2_0 = (RuleCall)cTodoAssignment_2.eContents().get(0);
		private final Assignment cLineEndAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cLineEndQUOTE_AND_NLTerminalRuleCall_3_0 = (RuleCall)cLineEndAssignment_3.eContents().get(0);
		
		////TODO
		//INVSegment:
		//    segment="INV"
		//    PLUS
		//    todo=ID
		//    lineEnd=QUOTE_AND_NL
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//segment="INV"
		//PLUS
		//todo=ID
		//lineEnd=QUOTE_AND_NL
		public Group getGroup() { return cGroup; }
		
		//segment="INV"
		public Assignment getSegmentAssignment_0() { return cSegmentAssignment_0; }
		
		//"INV"
		public Keyword getSegmentINVKeyword_0_0() { return cSegmentINVKeyword_0_0; }
		
		//PLUS
		public RuleCall getPLUSTerminalRuleCall_1() { return cPLUSTerminalRuleCall_1; }
		
		//todo=ID
		public Assignment getTodoAssignment_2() { return cTodoAssignment_2; }
		
		//ID
		public RuleCall getTodoIDTerminalRuleCall_2_0() { return cTodoIDTerminalRuleCall_2_0; }
		
		//lineEnd=QUOTE_AND_NL
		public Assignment getLineEndAssignment_3() { return cLineEndAssignment_3; }
		
		//QUOTE_AND_NL
		public RuleCall getLineEndQUOTE_AND_NLTerminalRuleCall_3_0() { return cLineEndQUOTE_AND_NLTerminalRuleCall_3_0; }
	}
	public class IRQSegmentElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "io.thlaegler.edifact.Edilang.IRQSegment");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cSegmentAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final Keyword cSegmentIRQKeyword_0_0 = (Keyword)cSegmentAssignment_0.eContents().get(0);
		private final RuleCall cPLUSTerminalRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		private final Assignment cTodoAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cTodoIDTerminalRuleCall_2_0 = (RuleCall)cTodoAssignment_2.eContents().get(0);
		private final Assignment cLineEndAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cLineEndQUOTE_AND_NLTerminalRuleCall_3_0 = (RuleCall)cLineEndAssignment_3.eContents().get(0);
		
		////TODO
		//IRQSegment:
		//    segment="IRQ"
		//    PLUS
		//    todo=ID
		//    lineEnd=QUOTE_AND_NL
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//segment="IRQ"
		//PLUS
		//todo=ID
		//lineEnd=QUOTE_AND_NL
		public Group getGroup() { return cGroup; }
		
		//segment="IRQ"
		public Assignment getSegmentAssignment_0() { return cSegmentAssignment_0; }
		
		//"IRQ"
		public Keyword getSegmentIRQKeyword_0_0() { return cSegmentIRQKeyword_0_0; }
		
		//PLUS
		public RuleCall getPLUSTerminalRuleCall_1() { return cPLUSTerminalRuleCall_1; }
		
		//todo=ID
		public Assignment getTodoAssignment_2() { return cTodoAssignment_2; }
		
		//ID
		public RuleCall getTodoIDTerminalRuleCall_2_0() { return cTodoIDTerminalRuleCall_2_0; }
		
		//lineEnd=QUOTE_AND_NL
		public Assignment getLineEndAssignment_3() { return cLineEndAssignment_3; }
		
		//QUOTE_AND_NL
		public RuleCall getLineEndQUOTE_AND_NLTerminalRuleCall_3_0() { return cLineEndQUOTE_AND_NLTerminalRuleCall_3_0; }
	}
	public class LANSegmentElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "io.thlaegler.edifact.Edilang.LANSegment");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cSegmentAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final Keyword cSegmentLANKeyword_0_0 = (Keyword)cSegmentAssignment_0.eContents().get(0);
		private final RuleCall cPLUSTerminalRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		private final Assignment cTodoAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cTodoIDTerminalRuleCall_2_0 = (RuleCall)cTodoAssignment_2.eContents().get(0);
		private final Assignment cLineEndAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cLineEndQUOTE_AND_NLTerminalRuleCall_3_0 = (RuleCall)cLineEndAssignment_3.eContents().get(0);
		
		////TODO
		//LANSegment:
		//    segment="LAN"
		//    PLUS
		//    todo=ID
		//    lineEnd=QUOTE_AND_NL
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//segment="LAN"
		//PLUS
		//todo=ID
		//lineEnd=QUOTE_AND_NL
		public Group getGroup() { return cGroup; }
		
		//segment="LAN"
		public Assignment getSegmentAssignment_0() { return cSegmentAssignment_0; }
		
		//"LAN"
		public Keyword getSegmentLANKeyword_0_0() { return cSegmentLANKeyword_0_0; }
		
		//PLUS
		public RuleCall getPLUSTerminalRuleCall_1() { return cPLUSTerminalRuleCall_1; }
		
		//todo=ID
		public Assignment getTodoAssignment_2() { return cTodoAssignment_2; }
		
		//ID
		public RuleCall getTodoIDTerminalRuleCall_2_0() { return cTodoIDTerminalRuleCall_2_0; }
		
		//lineEnd=QUOTE_AND_NL
		public Assignment getLineEndAssignment_3() { return cLineEndAssignment_3; }
		
		//QUOTE_AND_NL
		public RuleCall getLineEndQUOTE_AND_NLTerminalRuleCall_3_0() { return cLineEndQUOTE_AND_NLTerminalRuleCall_3_0; }
	}
	public class LOCSegmentElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "io.thlaegler.edifact.Edilang.LOCSegment");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cSegmentAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final Keyword cSegmentLOCKeyword_0_0 = (Keyword)cSegmentAssignment_0.eContents().get(0);
		private final RuleCall cPLUSTerminalRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		private final Assignment cTodoAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cTodoIDTerminalRuleCall_2_0 = (RuleCall)cTodoAssignment_2.eContents().get(0);
		private final Assignment cLineEndAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cLineEndQUOTE_AND_NLTerminalRuleCall_3_0 = (RuleCall)cLineEndAssignment_3.eContents().get(0);
		
		////TODO
		//LOCSegment:
		//    segment="LOC"
		//    PLUS
		//    todo=ID
		//    lineEnd=QUOTE_AND_NL
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//segment="LOC"
		//PLUS
		//todo=ID
		//lineEnd=QUOTE_AND_NL
		public Group getGroup() { return cGroup; }
		
		//segment="LOC"
		public Assignment getSegmentAssignment_0() { return cSegmentAssignment_0; }
		
		//"LOC"
		public Keyword getSegmentLOCKeyword_0_0() { return cSegmentLOCKeyword_0_0; }
		
		//PLUS
		public RuleCall getPLUSTerminalRuleCall_1() { return cPLUSTerminalRuleCall_1; }
		
		//todo=ID
		public Assignment getTodoAssignment_2() { return cTodoAssignment_2; }
		
		//ID
		public RuleCall getTodoIDTerminalRuleCall_2_0() { return cTodoIDTerminalRuleCall_2_0; }
		
		//lineEnd=QUOTE_AND_NL
		public Assignment getLineEndAssignment_3() { return cLineEndAssignment_3; }
		
		//QUOTE_AND_NL
		public RuleCall getLineEndQUOTE_AND_NLTerminalRuleCall_3_0() { return cLineEndQUOTE_AND_NLTerminalRuleCall_3_0; }
	}
	public class MEASegmentElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "io.thlaegler.edifact.Edilang.MEASegment");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cSegmentAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final Keyword cSegmentMEAKeyword_0_0 = (Keyword)cSegmentAssignment_0.eContents().get(0);
		private final RuleCall cPLUSTerminalRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		private final Assignment cTodoAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cTodoIDTerminalRuleCall_2_0 = (RuleCall)cTodoAssignment_2.eContents().get(0);
		private final Assignment cLineEndAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cLineEndQUOTE_AND_NLTerminalRuleCall_3_0 = (RuleCall)cLineEndAssignment_3.eContents().get(0);
		
		////TODO
		//MEASegment:
		//    segment="MEA"
		//    PLUS
		//    todo=ID
		//    lineEnd=QUOTE_AND_NL
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//segment="MEA"
		//PLUS
		//todo=ID
		//lineEnd=QUOTE_AND_NL
		public Group getGroup() { return cGroup; }
		
		//segment="MEA"
		public Assignment getSegmentAssignment_0() { return cSegmentAssignment_0; }
		
		//"MEA"
		public Keyword getSegmentMEAKeyword_0_0() { return cSegmentMEAKeyword_0_0; }
		
		//PLUS
		public RuleCall getPLUSTerminalRuleCall_1() { return cPLUSTerminalRuleCall_1; }
		
		//todo=ID
		public Assignment getTodoAssignment_2() { return cTodoAssignment_2; }
		
		//ID
		public RuleCall getTodoIDTerminalRuleCall_2_0() { return cTodoIDTerminalRuleCall_2_0; }
		
		//lineEnd=QUOTE_AND_NL
		public Assignment getLineEndAssignment_3() { return cLineEndAssignment_3; }
		
		//QUOTE_AND_NL
		public RuleCall getLineEndQUOTE_AND_NLTerminalRuleCall_3_0() { return cLineEndQUOTE_AND_NLTerminalRuleCall_3_0; }
	}
	public class MEMSegmentElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "io.thlaegler.edifact.Edilang.MEMSegment");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cSegmentAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final Keyword cSegmentMEMKeyword_0_0 = (Keyword)cSegmentAssignment_0.eContents().get(0);
		private final RuleCall cPLUSTerminalRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		private final Assignment cTodoAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cTodoIDTerminalRuleCall_2_0 = (RuleCall)cTodoAssignment_2.eContents().get(0);
		private final Assignment cLineEndAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cLineEndQUOTE_AND_NLTerminalRuleCall_3_0 = (RuleCall)cLineEndAssignment_3.eContents().get(0);
		
		////TODO
		//MEMSegment:
		//    segment="MEM"
		//    PLUS
		//    todo=ID
		//    lineEnd=QUOTE_AND_NL
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//segment="MEM"
		//PLUS
		//todo=ID
		//lineEnd=QUOTE_AND_NL
		public Group getGroup() { return cGroup; }
		
		//segment="MEM"
		public Assignment getSegmentAssignment_0() { return cSegmentAssignment_0; }
		
		//"MEM"
		public Keyword getSegmentMEMKeyword_0_0() { return cSegmentMEMKeyword_0_0; }
		
		//PLUS
		public RuleCall getPLUSTerminalRuleCall_1() { return cPLUSTerminalRuleCall_1; }
		
		//todo=ID
		public Assignment getTodoAssignment_2() { return cTodoAssignment_2; }
		
		//ID
		public RuleCall getTodoIDTerminalRuleCall_2_0() { return cTodoIDTerminalRuleCall_2_0; }
		
		//lineEnd=QUOTE_AND_NL
		public Assignment getLineEndAssignment_3() { return cLineEndAssignment_3; }
		
		//QUOTE_AND_NL
		public RuleCall getLineEndQUOTE_AND_NLTerminalRuleCall_3_0() { return cLineEndQUOTE_AND_NLTerminalRuleCall_3_0; }
	}
	public class MKSSegmentElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "io.thlaegler.edifact.Edilang.MKSSegment");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cSegmentAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final Keyword cSegmentMKSKeyword_0_0 = (Keyword)cSegmentAssignment_0.eContents().get(0);
		private final RuleCall cPLUSTerminalRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		private final Assignment cTodoAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cTodoIDTerminalRuleCall_2_0 = (RuleCall)cTodoAssignment_2.eContents().get(0);
		private final Assignment cLineEndAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cLineEndQUOTE_AND_NLTerminalRuleCall_3_0 = (RuleCall)cLineEndAssignment_3.eContents().get(0);
		
		////TODO
		//MKSSegment:
		//    segment="MKS"
		//    PLUS
		//    todo=ID
		//    lineEnd=QUOTE_AND_NL
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//segment="MKS"
		//PLUS
		//todo=ID
		//lineEnd=QUOTE_AND_NL
		public Group getGroup() { return cGroup; }
		
		//segment="MKS"
		public Assignment getSegmentAssignment_0() { return cSegmentAssignment_0; }
		
		//"MKS"
		public Keyword getSegmentMKSKeyword_0_0() { return cSegmentMKSKeyword_0_0; }
		
		//PLUS
		public RuleCall getPLUSTerminalRuleCall_1() { return cPLUSTerminalRuleCall_1; }
		
		//todo=ID
		public Assignment getTodoAssignment_2() { return cTodoAssignment_2; }
		
		//ID
		public RuleCall getTodoIDTerminalRuleCall_2_0() { return cTodoIDTerminalRuleCall_2_0; }
		
		//lineEnd=QUOTE_AND_NL
		public Assignment getLineEndAssignment_3() { return cLineEndAssignment_3; }
		
		//QUOTE_AND_NL
		public RuleCall getLineEndQUOTE_AND_NLTerminalRuleCall_3_0() { return cLineEndQUOTE_AND_NLTerminalRuleCall_3_0; }
	}
	public class NATSegmentElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "io.thlaegler.edifact.Edilang.NATSegment");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cSegmentAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final Keyword cSegmentNATKeyword_0_0 = (Keyword)cSegmentAssignment_0.eContents().get(0);
		private final RuleCall cPLUSTerminalRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		private final Assignment cTodoAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cTodoIDTerminalRuleCall_2_0 = (RuleCall)cTodoAssignment_2.eContents().get(0);
		private final Assignment cLineEndAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cLineEndQUOTE_AND_NLTerminalRuleCall_3_0 = (RuleCall)cLineEndAssignment_3.eContents().get(0);
		
		////TODO
		//NATSegment:
		//    segment="NAT"
		//    PLUS
		//    todo=ID
		//    lineEnd=QUOTE_AND_NL
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//segment="NAT"
		//PLUS
		//todo=ID
		//lineEnd=QUOTE_AND_NL
		public Group getGroup() { return cGroup; }
		
		//segment="NAT"
		public Assignment getSegmentAssignment_0() { return cSegmentAssignment_0; }
		
		//"NAT"
		public Keyword getSegmentNATKeyword_0_0() { return cSegmentNATKeyword_0_0; }
		
		//PLUS
		public RuleCall getPLUSTerminalRuleCall_1() { return cPLUSTerminalRuleCall_1; }
		
		//todo=ID
		public Assignment getTodoAssignment_2() { return cTodoAssignment_2; }
		
		//ID
		public RuleCall getTodoIDTerminalRuleCall_2_0() { return cTodoIDTerminalRuleCall_2_0; }
		
		//lineEnd=QUOTE_AND_NL
		public Assignment getLineEndAssignment_3() { return cLineEndAssignment_3; }
		
		//QUOTE_AND_NL
		public RuleCall getLineEndQUOTE_AND_NLTerminalRuleCall_3_0() { return cLineEndQUOTE_AND_NLTerminalRuleCall_3_0; }
	}
	public class PACSegmentElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "io.thlaegler.edifact.Edilang.PACSegment");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cSegmentAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final Keyword cSegmentPACKeyword_0_0 = (Keyword)cSegmentAssignment_0.eContents().get(0);
		private final RuleCall cPLUSTerminalRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		private final Assignment cTodoAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cTodoIDTerminalRuleCall_2_0 = (RuleCall)cTodoAssignment_2.eContents().get(0);
		private final Assignment cLineEndAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cLineEndQUOTE_AND_NLTerminalRuleCall_3_0 = (RuleCall)cLineEndAssignment_3.eContents().get(0);
		
		//PACSegment:
		//    segment="PAC"
		//    PLUS
		//    todo=ID
		//    lineEnd=QUOTE_AND_NL
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//segment="PAC"
		//PLUS
		//todo=ID
		//lineEnd=QUOTE_AND_NL
		public Group getGroup() { return cGroup; }
		
		//segment="PAC"
		public Assignment getSegmentAssignment_0() { return cSegmentAssignment_0; }
		
		//"PAC"
		public Keyword getSegmentPACKeyword_0_0() { return cSegmentPACKeyword_0_0; }
		
		//PLUS
		public RuleCall getPLUSTerminalRuleCall_1() { return cPLUSTerminalRuleCall_1; }
		
		//todo=ID
		public Assignment getTodoAssignment_2() { return cTodoAssignment_2; }
		
		//ID
		public RuleCall getTodoIDTerminalRuleCall_2_0() { return cTodoIDTerminalRuleCall_2_0; }
		
		//lineEnd=QUOTE_AND_NL
		public Assignment getLineEndAssignment_3() { return cLineEndAssignment_3; }
		
		//QUOTE_AND_NL
		public RuleCall getLineEndQUOTE_AND_NLTerminalRuleCall_3_0() { return cLineEndQUOTE_AND_NLTerminalRuleCall_3_0; }
	}
	public class PAISegmentElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "io.thlaegler.edifact.Edilang.PAISegment");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cSegmentAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final Keyword cSegmentPAIKeyword_0_0 = (Keyword)cSegmentAssignment_0.eContents().get(0);
		private final RuleCall cPLUSTerminalRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		private final Assignment cTodoAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cTodoIDTerminalRuleCall_2_0 = (RuleCall)cTodoAssignment_2.eContents().get(0);
		private final Assignment cLineEndAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cLineEndQUOTE_AND_NLTerminalRuleCall_3_0 = (RuleCall)cLineEndAssignment_3.eContents().get(0);
		
		////TODO
		//PAISegment:
		//    segment="PAI"
		//    PLUS
		//    todo=ID
		//    lineEnd=QUOTE_AND_NL
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//segment="PAI"
		//PLUS
		//todo=ID
		//lineEnd=QUOTE_AND_NL
		public Group getGroup() { return cGroup; }
		
		//segment="PAI"
		public Assignment getSegmentAssignment_0() { return cSegmentAssignment_0; }
		
		//"PAI"
		public Keyword getSegmentPAIKeyword_0_0() { return cSegmentPAIKeyword_0_0; }
		
		//PLUS
		public RuleCall getPLUSTerminalRuleCall_1() { return cPLUSTerminalRuleCall_1; }
		
		//todo=ID
		public Assignment getTodoAssignment_2() { return cTodoAssignment_2; }
		
		//ID
		public RuleCall getTodoIDTerminalRuleCall_2_0() { return cTodoIDTerminalRuleCall_2_0; }
		
		//lineEnd=QUOTE_AND_NL
		public Assignment getLineEndAssignment_3() { return cLineEndAssignment_3; }
		
		//QUOTE_AND_NL
		public RuleCall getLineEndQUOTE_AND_NLTerminalRuleCall_3_0() { return cLineEndQUOTE_AND_NLTerminalRuleCall_3_0; }
	}
	public class PASSegmentElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "io.thlaegler.edifact.Edilang.PASSegment");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cSegmentAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final Keyword cSegmentPASKeyword_0_0 = (Keyword)cSegmentAssignment_0.eContents().get(0);
		private final RuleCall cPLUSTerminalRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		private final Assignment cTodoAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cTodoIDTerminalRuleCall_2_0 = (RuleCall)cTodoAssignment_2.eContents().get(0);
		private final Assignment cLineEndAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cLineEndQUOTE_AND_NLTerminalRuleCall_3_0 = (RuleCall)cLineEndAssignment_3.eContents().get(0);
		
		////TODO
		//PASSegment:
		//    segment="PAS"
		//    PLUS
		//    todo=ID
		//    lineEnd=QUOTE_AND_NL
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//segment="PAS"
		//PLUS
		//todo=ID
		//lineEnd=QUOTE_AND_NL
		public Group getGroup() { return cGroup; }
		
		//segment="PAS"
		public Assignment getSegmentAssignment_0() { return cSegmentAssignment_0; }
		
		//"PAS"
		public Keyword getSegmentPASKeyword_0_0() { return cSegmentPASKeyword_0_0; }
		
		//PLUS
		public RuleCall getPLUSTerminalRuleCall_1() { return cPLUSTerminalRuleCall_1; }
		
		//todo=ID
		public Assignment getTodoAssignment_2() { return cTodoAssignment_2; }
		
		//ID
		public RuleCall getTodoIDTerminalRuleCall_2_0() { return cTodoIDTerminalRuleCall_2_0; }
		
		//lineEnd=QUOTE_AND_NL
		public Assignment getLineEndAssignment_3() { return cLineEndAssignment_3; }
		
		//QUOTE_AND_NL
		public RuleCall getLineEndQUOTE_AND_NLTerminalRuleCall_3_0() { return cLineEndQUOTE_AND_NLTerminalRuleCall_3_0; }
	}
	public class PCCSegmentElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "io.thlaegler.edifact.Edilang.PCCSegment");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cSegmentAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final Keyword cSegmentPCCKeyword_0_0 = (Keyword)cSegmentAssignment_0.eContents().get(0);
		private final RuleCall cPLUSTerminalRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		private final Assignment cTodoAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cTodoIDTerminalRuleCall_2_0 = (RuleCall)cTodoAssignment_2.eContents().get(0);
		private final Assignment cLineEndAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cLineEndQUOTE_AND_NLTerminalRuleCall_3_0 = (RuleCall)cLineEndAssignment_3.eContents().get(0);
		
		////TODO
		//PCCSegment:
		//    segment="PCC"
		//    PLUS
		//    todo=ID
		//    lineEnd=QUOTE_AND_NL
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//segment="PCC"
		//PLUS
		//todo=ID
		//lineEnd=QUOTE_AND_NL
		public Group getGroup() { return cGroup; }
		
		//segment="PCC"
		public Assignment getSegmentAssignment_0() { return cSegmentAssignment_0; }
		
		//"PCC"
		public Keyword getSegmentPCCKeyword_0_0() { return cSegmentPCCKeyword_0_0; }
		
		//PLUS
		public RuleCall getPLUSTerminalRuleCall_1() { return cPLUSTerminalRuleCall_1; }
		
		//todo=ID
		public Assignment getTodoAssignment_2() { return cTodoAssignment_2; }
		
		//ID
		public RuleCall getTodoIDTerminalRuleCall_2_0() { return cTodoIDTerminalRuleCall_2_0; }
		
		//lineEnd=QUOTE_AND_NL
		public Assignment getLineEndAssignment_3() { return cLineEndAssignment_3; }
		
		//QUOTE_AND_NL
		public RuleCall getLineEndQUOTE_AND_NLTerminalRuleCall_3_0() { return cLineEndQUOTE_AND_NLTerminalRuleCall_3_0; }
	}
	public class PCDSegmentElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "io.thlaegler.edifact.Edilang.PCDSegment");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cSegmentAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final Keyword cSegmentPCDKeyword_0_0 = (Keyword)cSegmentAssignment_0.eContents().get(0);
		private final RuleCall cPLUSTerminalRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		private final Assignment cTodoAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cTodoIDTerminalRuleCall_2_0 = (RuleCall)cTodoAssignment_2.eContents().get(0);
		private final Assignment cLineEndAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cLineEndQUOTE_AND_NLTerminalRuleCall_3_0 = (RuleCall)cLineEndAssignment_3.eContents().get(0);
		
		////TODO
		//PCDSegment:
		//    segment="PCD"
		//    PLUS
		//    todo=ID
		//    lineEnd=QUOTE_AND_NL
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//segment="PCD"
		//PLUS
		//todo=ID
		//lineEnd=QUOTE_AND_NL
		public Group getGroup() { return cGroup; }
		
		//segment="PCD"
		public Assignment getSegmentAssignment_0() { return cSegmentAssignment_0; }
		
		//"PCD"
		public Keyword getSegmentPCDKeyword_0_0() { return cSegmentPCDKeyword_0_0; }
		
		//PLUS
		public RuleCall getPLUSTerminalRuleCall_1() { return cPLUSTerminalRuleCall_1; }
		
		//todo=ID
		public Assignment getTodoAssignment_2() { return cTodoAssignment_2; }
		
		//ID
		public RuleCall getTodoIDTerminalRuleCall_2_0() { return cTodoIDTerminalRuleCall_2_0; }
		
		//lineEnd=QUOTE_AND_NL
		public Assignment getLineEndAssignment_3() { return cLineEndAssignment_3; }
		
		//QUOTE_AND_NL
		public RuleCall getLineEndQUOTE_AND_NLTerminalRuleCall_3_0() { return cLineEndQUOTE_AND_NLTerminalRuleCall_3_0; }
	}
	public class PERSegmentElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "io.thlaegler.edifact.Edilang.PERSegment");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cSegmentAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final Keyword cSegmentPERKeyword_0_0 = (Keyword)cSegmentAssignment_0.eContents().get(0);
		private final RuleCall cPLUSTerminalRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		private final Assignment cTodoAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cTodoIDTerminalRuleCall_2_0 = (RuleCall)cTodoAssignment_2.eContents().get(0);
		private final Assignment cLineEndAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cLineEndQUOTE_AND_NLTerminalRuleCall_3_0 = (RuleCall)cLineEndAssignment_3.eContents().get(0);
		
		////TODO
		//PERSegment:
		//    segment="PER"
		//    PLUS
		//    todo=ID
		//    lineEnd=QUOTE_AND_NL
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//segment="PER"
		//PLUS
		//todo=ID
		//lineEnd=QUOTE_AND_NL
		public Group getGroup() { return cGroup; }
		
		//segment="PER"
		public Assignment getSegmentAssignment_0() { return cSegmentAssignment_0; }
		
		//"PER"
		public Keyword getSegmentPERKeyword_0_0() { return cSegmentPERKeyword_0_0; }
		
		//PLUS
		public RuleCall getPLUSTerminalRuleCall_1() { return cPLUSTerminalRuleCall_1; }
		
		//todo=ID
		public Assignment getTodoAssignment_2() { return cTodoAssignment_2; }
		
		//ID
		public RuleCall getTodoIDTerminalRuleCall_2_0() { return cTodoIDTerminalRuleCall_2_0; }
		
		//lineEnd=QUOTE_AND_NL
		public Assignment getLineEndAssignment_3() { return cLineEndAssignment_3; }
		
		//QUOTE_AND_NL
		public RuleCall getLineEndQUOTE_AND_NLTerminalRuleCall_3_0() { return cLineEndQUOTE_AND_NLTerminalRuleCall_3_0; }
	}
	public class PGISegmentElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "io.thlaegler.edifact.Edilang.PGISegment");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cSegmentAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final Keyword cSegmentPGIKeyword_0_0 = (Keyword)cSegmentAssignment_0.eContents().get(0);
		private final RuleCall cPLUSTerminalRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		private final Assignment cTodoAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cTodoIDTerminalRuleCall_2_0 = (RuleCall)cTodoAssignment_2.eContents().get(0);
		private final Assignment cLineEndAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cLineEndQUOTE_AND_NLTerminalRuleCall_3_0 = (RuleCall)cLineEndAssignment_3.eContents().get(0);
		
		////TODO
		//PGISegment:
		//    segment="PGI"
		//    PLUS
		//    todo=ID
		//    lineEnd=QUOTE_AND_NL
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//segment="PGI"
		//PLUS
		//todo=ID
		//lineEnd=QUOTE_AND_NL
		public Group getGroup() { return cGroup; }
		
		//segment="PGI"
		public Assignment getSegmentAssignment_0() { return cSegmentAssignment_0; }
		
		//"PGI"
		public Keyword getSegmentPGIKeyword_0_0() { return cSegmentPGIKeyword_0_0; }
		
		//PLUS
		public RuleCall getPLUSTerminalRuleCall_1() { return cPLUSTerminalRuleCall_1; }
		
		//todo=ID
		public Assignment getTodoAssignment_2() { return cTodoAssignment_2; }
		
		//ID
		public RuleCall getTodoIDTerminalRuleCall_2_0() { return cTodoIDTerminalRuleCall_2_0; }
		
		//lineEnd=QUOTE_AND_NL
		public Assignment getLineEndAssignment_3() { return cLineEndAssignment_3; }
		
		//QUOTE_AND_NL
		public RuleCall getLineEndQUOTE_AND_NLTerminalRuleCall_3_0() { return cLineEndQUOTE_AND_NLTerminalRuleCall_3_0; }
	}
	public class PIASegmentElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "io.thlaegler.edifact.Edilang.PIASegment");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cSegmentAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final Keyword cSegmentPIAKeyword_0_0 = (Keyword)cSegmentAssignment_0.eContents().get(0);
		private final RuleCall cPLUSTerminalRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		private final Assignment cTodoAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cTodoIDTerminalRuleCall_2_0 = (RuleCall)cTodoAssignment_2.eContents().get(0);
		private final Assignment cLineEndAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cLineEndQUOTE_AND_NLTerminalRuleCall_3_0 = (RuleCall)cLineEndAssignment_3.eContents().get(0);
		
		////TODO
		//PIASegment:
		//    segment="PIA"
		//    PLUS
		//    todo=ID
		//    lineEnd=QUOTE_AND_NL
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//segment="PIA"
		//PLUS
		//todo=ID
		//lineEnd=QUOTE_AND_NL
		public Group getGroup() { return cGroup; }
		
		//segment="PIA"
		public Assignment getSegmentAssignment_0() { return cSegmentAssignment_0; }
		
		//"PIA"
		public Keyword getSegmentPIAKeyword_0_0() { return cSegmentPIAKeyword_0_0; }
		
		//PLUS
		public RuleCall getPLUSTerminalRuleCall_1() { return cPLUSTerminalRuleCall_1; }
		
		//todo=ID
		public Assignment getTodoAssignment_2() { return cTodoAssignment_2; }
		
		//ID
		public RuleCall getTodoIDTerminalRuleCall_2_0() { return cTodoIDTerminalRuleCall_2_0; }
		
		//lineEnd=QUOTE_AND_NL
		public Assignment getLineEndAssignment_3() { return cLineEndAssignment_3; }
		
		//QUOTE_AND_NL
		public RuleCall getLineEndQUOTE_AND_NLTerminalRuleCall_3_0() { return cLineEndQUOTE_AND_NLTerminalRuleCall_3_0; }
	}
	public class PNASegmentElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "io.thlaegler.edifact.Edilang.PNASegment");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cSegmentAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final Keyword cSegmentPNAKeyword_0_0 = (Keyword)cSegmentAssignment_0.eContents().get(0);
		private final RuleCall cPLUSTerminalRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		private final Assignment cTodoAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cTodoIDTerminalRuleCall_2_0 = (RuleCall)cTodoAssignment_2.eContents().get(0);
		private final Assignment cLineEndAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cLineEndQUOTE_AND_NLTerminalRuleCall_3_0 = (RuleCall)cLineEndAssignment_3.eContents().get(0);
		
		////TODO
		//PNASegment:
		//    segment="PNA"
		//    PLUS
		//    todo=ID
		//    lineEnd=QUOTE_AND_NL
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//segment="PNA"
		//PLUS
		//todo=ID
		//lineEnd=QUOTE_AND_NL
		public Group getGroup() { return cGroup; }
		
		//segment="PNA"
		public Assignment getSegmentAssignment_0() { return cSegmentAssignment_0; }
		
		//"PNA"
		public Keyword getSegmentPNAKeyword_0_0() { return cSegmentPNAKeyword_0_0; }
		
		//PLUS
		public RuleCall getPLUSTerminalRuleCall_1() { return cPLUSTerminalRuleCall_1; }
		
		//todo=ID
		public Assignment getTodoAssignment_2() { return cTodoAssignment_2; }
		
		//ID
		public RuleCall getTodoIDTerminalRuleCall_2_0() { return cTodoIDTerminalRuleCall_2_0; }
		
		//lineEnd=QUOTE_AND_NL
		public Assignment getLineEndAssignment_3() { return cLineEndAssignment_3; }
		
		//QUOTE_AND_NL
		public RuleCall getLineEndQUOTE_AND_NLTerminalRuleCall_3_0() { return cLineEndQUOTE_AND_NLTerminalRuleCall_3_0; }
	}
	public class PRCSegmentElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "io.thlaegler.edifact.Edilang.PRCSegment");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cSegmentAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final Keyword cSegmentPRCKeyword_0_0 = (Keyword)cSegmentAssignment_0.eContents().get(0);
		private final RuleCall cPLUSTerminalRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		private final Assignment cTodoAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cTodoIDTerminalRuleCall_2_0 = (RuleCall)cTodoAssignment_2.eContents().get(0);
		private final Assignment cLineEndAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cLineEndQUOTE_AND_NLTerminalRuleCall_3_0 = (RuleCall)cLineEndAssignment_3.eContents().get(0);
		
		////TODO
		//PRCSegment:
		//    segment="PRC"
		//    PLUS
		//    todo=ID
		//    lineEnd=QUOTE_AND_NL
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//segment="PRC"
		//PLUS
		//todo=ID
		//lineEnd=QUOTE_AND_NL
		public Group getGroup() { return cGroup; }
		
		//segment="PRC"
		public Assignment getSegmentAssignment_0() { return cSegmentAssignment_0; }
		
		//"PRC"
		public Keyword getSegmentPRCKeyword_0_0() { return cSegmentPRCKeyword_0_0; }
		
		//PLUS
		public RuleCall getPLUSTerminalRuleCall_1() { return cPLUSTerminalRuleCall_1; }
		
		//todo=ID
		public Assignment getTodoAssignment_2() { return cTodoAssignment_2; }
		
		//ID
		public RuleCall getTodoIDTerminalRuleCall_2_0() { return cTodoIDTerminalRuleCall_2_0; }
		
		//lineEnd=QUOTE_AND_NL
		public Assignment getLineEndAssignment_3() { return cLineEndAssignment_3; }
		
		//QUOTE_AND_NL
		public RuleCall getLineEndQUOTE_AND_NLTerminalRuleCall_3_0() { return cLineEndQUOTE_AND_NLTerminalRuleCall_3_0; }
	}
	public class PRVSegmentElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "io.thlaegler.edifact.Edilang.PRVSegment");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cSegmentAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final Keyword cSegmentPRVKeyword_0_0 = (Keyword)cSegmentAssignment_0.eContents().get(0);
		private final RuleCall cPLUSTerminalRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		private final Assignment cTodoAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cTodoIDTerminalRuleCall_2_0 = (RuleCall)cTodoAssignment_2.eContents().get(0);
		private final Assignment cLineEndAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cLineEndQUOTE_AND_NLTerminalRuleCall_3_0 = (RuleCall)cLineEndAssignment_3.eContents().get(0);
		
		////TODO
		//PRVSegment:
		//    segment="PRV"
		//    PLUS
		//    todo=ID
		//    lineEnd=QUOTE_AND_NL
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//segment="PRV"
		//PLUS
		//todo=ID
		//lineEnd=QUOTE_AND_NL
		public Group getGroup() { return cGroup; }
		
		//segment="PRV"
		public Assignment getSegmentAssignment_0() { return cSegmentAssignment_0; }
		
		//"PRV"
		public Keyword getSegmentPRVKeyword_0_0() { return cSegmentPRVKeyword_0_0; }
		
		//PLUS
		public RuleCall getPLUSTerminalRuleCall_1() { return cPLUSTerminalRuleCall_1; }
		
		//todo=ID
		public Assignment getTodoAssignment_2() { return cTodoAssignment_2; }
		
		//ID
		public RuleCall getTodoIDTerminalRuleCall_2_0() { return cTodoIDTerminalRuleCall_2_0; }
		
		//lineEnd=QUOTE_AND_NL
		public Assignment getLineEndAssignment_3() { return cLineEndAssignment_3; }
		
		//QUOTE_AND_NL
		public RuleCall getLineEndQUOTE_AND_NLTerminalRuleCall_3_0() { return cLineEndQUOTE_AND_NLTerminalRuleCall_3_0; }
	}
	public class PSDSegmentElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "io.thlaegler.edifact.Edilang.PSDSegment");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cSegmentAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final Keyword cSegmentPSDKeyword_0_0 = (Keyword)cSegmentAssignment_0.eContents().get(0);
		private final RuleCall cPLUSTerminalRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		private final Assignment cTodoAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cTodoIDTerminalRuleCall_2_0 = (RuleCall)cTodoAssignment_2.eContents().get(0);
		private final Assignment cLineEndAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cLineEndQUOTE_AND_NLTerminalRuleCall_3_0 = (RuleCall)cLineEndAssignment_3.eContents().get(0);
		
		////TODO
		//PSDSegment:
		//    segment="PSD"
		//    PLUS
		//    todo=ID
		//    lineEnd=QUOTE_AND_NL
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//segment="PSD"
		//PLUS
		//todo=ID
		//lineEnd=QUOTE_AND_NL
		public Group getGroup() { return cGroup; }
		
		//segment="PSD"
		public Assignment getSegmentAssignment_0() { return cSegmentAssignment_0; }
		
		//"PSD"
		public Keyword getSegmentPSDKeyword_0_0() { return cSegmentPSDKeyword_0_0; }
		
		//PLUS
		public RuleCall getPLUSTerminalRuleCall_1() { return cPLUSTerminalRuleCall_1; }
		
		//todo=ID
		public Assignment getTodoAssignment_2() { return cTodoAssignment_2; }
		
		//ID
		public RuleCall getTodoIDTerminalRuleCall_2_0() { return cTodoIDTerminalRuleCall_2_0; }
		
		//lineEnd=QUOTE_AND_NL
		public Assignment getLineEndAssignment_3() { return cLineEndAssignment_3; }
		
		//QUOTE_AND_NL
		public RuleCall getLineEndQUOTE_AND_NLTerminalRuleCall_3_0() { return cLineEndQUOTE_AND_NLTerminalRuleCall_3_0; }
	}
	public class PTYSegmentElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "io.thlaegler.edifact.Edilang.PTYSegment");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cSegmentAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final Keyword cSegmentPTYKeyword_0_0 = (Keyword)cSegmentAssignment_0.eContents().get(0);
		private final RuleCall cPLUSTerminalRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		private final Assignment cTodoAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cTodoIDTerminalRuleCall_2_0 = (RuleCall)cTodoAssignment_2.eContents().get(0);
		private final Assignment cLineEndAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cLineEndQUOTE_AND_NLTerminalRuleCall_3_0 = (RuleCall)cLineEndAssignment_3.eContents().get(0);
		
		////TODO
		//PTYSegment:
		//    segment="PTY"
		//    PLUS
		//    todo=ID
		//    lineEnd=QUOTE_AND_NL
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//segment="PTY"
		//PLUS
		//todo=ID
		//lineEnd=QUOTE_AND_NL
		public Group getGroup() { return cGroup; }
		
		//segment="PTY"
		public Assignment getSegmentAssignment_0() { return cSegmentAssignment_0; }
		
		//"PTY"
		public Keyword getSegmentPTYKeyword_0_0() { return cSegmentPTYKeyword_0_0; }
		
		//PLUS
		public RuleCall getPLUSTerminalRuleCall_1() { return cPLUSTerminalRuleCall_1; }
		
		//todo=ID
		public Assignment getTodoAssignment_2() { return cTodoAssignment_2; }
		
		//ID
		public RuleCall getTodoIDTerminalRuleCall_2_0() { return cTodoIDTerminalRuleCall_2_0; }
		
		//lineEnd=QUOTE_AND_NL
		public Assignment getLineEndAssignment_3() { return cLineEndAssignment_3; }
		
		//QUOTE_AND_NL
		public RuleCall getLineEndQUOTE_AND_NLTerminalRuleCall_3_0() { return cLineEndQUOTE_AND_NLTerminalRuleCall_3_0; }
	}
	public class PYTSegmentElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "io.thlaegler.edifact.Edilang.PYTSegment");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cSegmentAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final Keyword cSegmentPYTKeyword_0_0 = (Keyword)cSegmentAssignment_0.eContents().get(0);
		private final RuleCall cPLUSTerminalRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		private final Assignment cTodoAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cTodoIDTerminalRuleCall_2_0 = (RuleCall)cTodoAssignment_2.eContents().get(0);
		private final Assignment cLineEndAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cLineEndQUOTE_AND_NLTerminalRuleCall_3_0 = (RuleCall)cLineEndAssignment_3.eContents().get(0);
		
		////TODO
		//PYTSegment:
		//    segment="PYT"
		//    PLUS
		//    todo=ID
		//    lineEnd=QUOTE_AND_NL
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//segment="PYT"
		//PLUS
		//todo=ID
		//lineEnd=QUOTE_AND_NL
		public Group getGroup() { return cGroup; }
		
		//segment="PYT"
		public Assignment getSegmentAssignment_0() { return cSegmentAssignment_0; }
		
		//"PYT"
		public Keyword getSegmentPYTKeyword_0_0() { return cSegmentPYTKeyword_0_0; }
		
		//PLUS
		public RuleCall getPLUSTerminalRuleCall_1() { return cPLUSTerminalRuleCall_1; }
		
		//todo=ID
		public Assignment getTodoAssignment_2() { return cTodoAssignment_2; }
		
		//ID
		public RuleCall getTodoIDTerminalRuleCall_2_0() { return cTodoIDTerminalRuleCall_2_0; }
		
		//lineEnd=QUOTE_AND_NL
		public Assignment getLineEndAssignment_3() { return cLineEndAssignment_3; }
		
		//QUOTE_AND_NL
		public RuleCall getLineEndQUOTE_AND_NLTerminalRuleCall_3_0() { return cLineEndQUOTE_AND_NLTerminalRuleCall_3_0; }
	}
	public class QRSSegmentElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "io.thlaegler.edifact.Edilang.QRSSegment");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cSegmentAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final Keyword cSegmentQRSKeyword_0_0 = (Keyword)cSegmentAssignment_0.eContents().get(0);
		private final RuleCall cPLUSTerminalRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		private final Assignment cTodoAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cTodoIDTerminalRuleCall_2_0 = (RuleCall)cTodoAssignment_2.eContents().get(0);
		private final Assignment cLineEndAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cLineEndQUOTE_AND_NLTerminalRuleCall_3_0 = (RuleCall)cLineEndAssignment_3.eContents().get(0);
		
		////TODO
		//QRSSegment:
		//    segment="QRS"
		//    PLUS
		//    todo=ID
		//    lineEnd=QUOTE_AND_NL
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//segment="QRS"
		//PLUS
		//todo=ID
		//lineEnd=QUOTE_AND_NL
		public Group getGroup() { return cGroup; }
		
		//segment="QRS"
		public Assignment getSegmentAssignment_0() { return cSegmentAssignment_0; }
		
		//"QRS"
		public Keyword getSegmentQRSKeyword_0_0() { return cSegmentQRSKeyword_0_0; }
		
		//PLUS
		public RuleCall getPLUSTerminalRuleCall_1() { return cPLUSTerminalRuleCall_1; }
		
		//todo=ID
		public Assignment getTodoAssignment_2() { return cTodoAssignment_2; }
		
		//ID
		public RuleCall getTodoIDTerminalRuleCall_2_0() { return cTodoIDTerminalRuleCall_2_0; }
		
		//lineEnd=QUOTE_AND_NL
		public Assignment getLineEndAssignment_3() { return cLineEndAssignment_3; }
		
		//QUOTE_AND_NL
		public RuleCall getLineEndQUOTE_AND_NLTerminalRuleCall_3_0() { return cLineEndQUOTE_AND_NLTerminalRuleCall_3_0; }
	}
	public class QUASegmentElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "io.thlaegler.edifact.Edilang.QUASegment");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cSegmentAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final Keyword cSegmentQUAKeyword_0_0 = (Keyword)cSegmentAssignment_0.eContents().get(0);
		private final RuleCall cPLUSTerminalRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		private final Assignment cTodoAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cTodoIDTerminalRuleCall_2_0 = (RuleCall)cTodoAssignment_2.eContents().get(0);
		private final Assignment cLineEndAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cLineEndQUOTE_AND_NLTerminalRuleCall_3_0 = (RuleCall)cLineEndAssignment_3.eContents().get(0);
		
		////TODO
		//QUASegment:
		//    segment="QUA"
		//    PLUS
		//    todo=ID
		//    lineEnd=QUOTE_AND_NL
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//segment="QUA"
		//PLUS
		//todo=ID
		//lineEnd=QUOTE_AND_NL
		public Group getGroup() { return cGroup; }
		
		//segment="QUA"
		public Assignment getSegmentAssignment_0() { return cSegmentAssignment_0; }
		
		//"QUA"
		public Keyword getSegmentQUAKeyword_0_0() { return cSegmentQUAKeyword_0_0; }
		
		//PLUS
		public RuleCall getPLUSTerminalRuleCall_1() { return cPLUSTerminalRuleCall_1; }
		
		//todo=ID
		public Assignment getTodoAssignment_2() { return cTodoAssignment_2; }
		
		//ID
		public RuleCall getTodoIDTerminalRuleCall_2_0() { return cTodoIDTerminalRuleCall_2_0; }
		
		//lineEnd=QUOTE_AND_NL
		public Assignment getLineEndAssignment_3() { return cLineEndAssignment_3; }
		
		//QUOTE_AND_NL
		public RuleCall getLineEndQUOTE_AND_NLTerminalRuleCall_3_0() { return cLineEndQUOTE_AND_NLTerminalRuleCall_3_0; }
	}
	public class QVRSegmentElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "io.thlaegler.edifact.Edilang.QVRSegment");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cSegmentAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final Keyword cSegmentQVRKeyword_0_0 = (Keyword)cSegmentAssignment_0.eContents().get(0);
		private final RuleCall cPLUSTerminalRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		private final Assignment cTodoAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cTodoIDTerminalRuleCall_2_0 = (RuleCall)cTodoAssignment_2.eContents().get(0);
		private final Assignment cLineEndAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cLineEndQUOTE_AND_NLTerminalRuleCall_3_0 = (RuleCall)cLineEndAssignment_3.eContents().get(0);
		
		////TODO
		//QVRSegment:
		//    segment="QVR"
		//    PLUS
		//    todo=ID
		//    lineEnd=QUOTE_AND_NL
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//segment="QVR"
		//PLUS
		//todo=ID
		//lineEnd=QUOTE_AND_NL
		public Group getGroup() { return cGroup; }
		
		//segment="QVR"
		public Assignment getSegmentAssignment_0() { return cSegmentAssignment_0; }
		
		//"QVR"
		public Keyword getSegmentQVRKeyword_0_0() { return cSegmentQVRKeyword_0_0; }
		
		//PLUS
		public RuleCall getPLUSTerminalRuleCall_1() { return cPLUSTerminalRuleCall_1; }
		
		//todo=ID
		public Assignment getTodoAssignment_2() { return cTodoAssignment_2; }
		
		//ID
		public RuleCall getTodoIDTerminalRuleCall_2_0() { return cTodoIDTerminalRuleCall_2_0; }
		
		//lineEnd=QUOTE_AND_NL
		public Assignment getLineEndAssignment_3() { return cLineEndAssignment_3; }
		
		//QUOTE_AND_NL
		public RuleCall getLineEndQUOTE_AND_NLTerminalRuleCall_3_0() { return cLineEndQUOTE_AND_NLTerminalRuleCall_3_0; }
	}
	public class RCSSegmentElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "io.thlaegler.edifact.Edilang.RCSSegment");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cSegmentAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final Keyword cSegmentRCSKeyword_0_0 = (Keyword)cSegmentAssignment_0.eContents().get(0);
		private final RuleCall cPLUSTerminalRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		private final Assignment cTodoAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cTodoIDTerminalRuleCall_2_0 = (RuleCall)cTodoAssignment_2.eContents().get(0);
		private final Assignment cLineEndAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cLineEndQUOTE_AND_NLTerminalRuleCall_3_0 = (RuleCall)cLineEndAssignment_3.eContents().get(0);
		
		////TODO
		//RCSSegment:
		//    segment="RCS"
		//    PLUS
		//    todo=ID
		//    lineEnd=QUOTE_AND_NL
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//segment="RCS"
		//PLUS
		//todo=ID
		//lineEnd=QUOTE_AND_NL
		public Group getGroup() { return cGroup; }
		
		//segment="RCS"
		public Assignment getSegmentAssignment_0() { return cSegmentAssignment_0; }
		
		//"RCS"
		public Keyword getSegmentRCSKeyword_0_0() { return cSegmentRCSKeyword_0_0; }
		
		//PLUS
		public RuleCall getPLUSTerminalRuleCall_1() { return cPLUSTerminalRuleCall_1; }
		
		//todo=ID
		public Assignment getTodoAssignment_2() { return cTodoAssignment_2; }
		
		//ID
		public RuleCall getTodoIDTerminalRuleCall_2_0() { return cTodoIDTerminalRuleCall_2_0; }
		
		//lineEnd=QUOTE_AND_NL
		public Assignment getLineEndAssignment_3() { return cLineEndAssignment_3; }
		
		//QUOTE_AND_NL
		public RuleCall getLineEndQUOTE_AND_NLTerminalRuleCall_3_0() { return cLineEndQUOTE_AND_NLTerminalRuleCall_3_0; }
	}
	public class RELSegmentElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "io.thlaegler.edifact.Edilang.RELSegment");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cSegmentAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final Keyword cSegmentRELKeyword_0_0 = (Keyword)cSegmentAssignment_0.eContents().get(0);
		private final RuleCall cPLUSTerminalRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		private final Assignment cTodoAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cTodoIDTerminalRuleCall_2_0 = (RuleCall)cTodoAssignment_2.eContents().get(0);
		private final Assignment cLineEndAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cLineEndQUOTE_AND_NLTerminalRuleCall_3_0 = (RuleCall)cLineEndAssignment_3.eContents().get(0);
		
		////TODO
		//RELSegment:
		//    segment="REL"
		//    PLUS
		//    todo=ID
		//    lineEnd=QUOTE_AND_NL
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//segment="REL"
		//PLUS
		//todo=ID
		//lineEnd=QUOTE_AND_NL
		public Group getGroup() { return cGroup; }
		
		//segment="REL"
		public Assignment getSegmentAssignment_0() { return cSegmentAssignment_0; }
		
		//"REL"
		public Keyword getSegmentRELKeyword_0_0() { return cSegmentRELKeyword_0_0; }
		
		//PLUS
		public RuleCall getPLUSTerminalRuleCall_1() { return cPLUSTerminalRuleCall_1; }
		
		//todo=ID
		public Assignment getTodoAssignment_2() { return cTodoAssignment_2; }
		
		//ID
		public RuleCall getTodoIDTerminalRuleCall_2_0() { return cTodoIDTerminalRuleCall_2_0; }
		
		//lineEnd=QUOTE_AND_NL
		public Assignment getLineEndAssignment_3() { return cLineEndAssignment_3; }
		
		//QUOTE_AND_NL
		public RuleCall getLineEndQUOTE_AND_NLTerminalRuleCall_3_0() { return cLineEndQUOTE_AND_NLTerminalRuleCall_3_0; }
	}
	public class RJLSegmentElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "io.thlaegler.edifact.Edilang.RJLSegment");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cSegmentAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final Keyword cSegmentRJLKeyword_0_0 = (Keyword)cSegmentAssignment_0.eContents().get(0);
		private final RuleCall cPLUSTerminalRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		private final Assignment cTodoAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cTodoIDTerminalRuleCall_2_0 = (RuleCall)cTodoAssignment_2.eContents().get(0);
		private final Assignment cLineEndAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cLineEndQUOTE_AND_NLTerminalRuleCall_3_0 = (RuleCall)cLineEndAssignment_3.eContents().get(0);
		
		////TODO
		//RJLSegment:
		//    segment="RJL"
		//    PLUS
		//    todo=ID
		//    lineEnd=QUOTE_AND_NL
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//segment="RJL"
		//PLUS
		//todo=ID
		//lineEnd=QUOTE_AND_NL
		public Group getGroup() { return cGroup; }
		
		//segment="RJL"
		public Assignment getSegmentAssignment_0() { return cSegmentAssignment_0; }
		
		//"RJL"
		public Keyword getSegmentRJLKeyword_0_0() { return cSegmentRJLKeyword_0_0; }
		
		//PLUS
		public RuleCall getPLUSTerminalRuleCall_1() { return cPLUSTerminalRuleCall_1; }
		
		//todo=ID
		public Assignment getTodoAssignment_2() { return cTodoAssignment_2; }
		
		//ID
		public RuleCall getTodoIDTerminalRuleCall_2_0() { return cTodoIDTerminalRuleCall_2_0; }
		
		//lineEnd=QUOTE_AND_NL
		public Assignment getLineEndAssignment_3() { return cLineEndAssignment_3; }
		
		//QUOTE_AND_NL
		public RuleCall getLineEndQUOTE_AND_NLTerminalRuleCall_3_0() { return cLineEndQUOTE_AND_NLTerminalRuleCall_3_0; }
	}
	public class RNGSegmentElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "io.thlaegler.edifact.Edilang.RNGSegment");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cSegmentAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final Keyword cSegmentRNGKeyword_0_0 = (Keyword)cSegmentAssignment_0.eContents().get(0);
		private final RuleCall cPLUSTerminalRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		private final Assignment cTodoAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cTodoIDTerminalRuleCall_2_0 = (RuleCall)cTodoAssignment_2.eContents().get(0);
		private final Assignment cLineEndAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cLineEndQUOTE_AND_NLTerminalRuleCall_3_0 = (RuleCall)cLineEndAssignment_3.eContents().get(0);
		
		////TODO
		//RNGSegment:
		//    segment="RNG"
		//    PLUS
		//    todo=ID
		//    lineEnd=QUOTE_AND_NL
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//segment="RNG"
		//PLUS
		//todo=ID
		//lineEnd=QUOTE_AND_NL
		public Group getGroup() { return cGroup; }
		
		//segment="RNG"
		public Assignment getSegmentAssignment_0() { return cSegmentAssignment_0; }
		
		//"RNG"
		public Keyword getSegmentRNGKeyword_0_0() { return cSegmentRNGKeyword_0_0; }
		
		//PLUS
		public RuleCall getPLUSTerminalRuleCall_1() { return cPLUSTerminalRuleCall_1; }
		
		//todo=ID
		public Assignment getTodoAssignment_2() { return cTodoAssignment_2; }
		
		//ID
		public RuleCall getTodoIDTerminalRuleCall_2_0() { return cTodoIDTerminalRuleCall_2_0; }
		
		//lineEnd=QUOTE_AND_NL
		public Assignment getLineEndAssignment_3() { return cLineEndAssignment_3; }
		
		//QUOTE_AND_NL
		public RuleCall getLineEndQUOTE_AND_NLTerminalRuleCall_3_0() { return cLineEndQUOTE_AND_NLTerminalRuleCall_3_0; }
	}
	public class RODSegmentElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "io.thlaegler.edifact.Edilang.RODSegment");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cSegmentAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final Keyword cSegmentRODKeyword_0_0 = (Keyword)cSegmentAssignment_0.eContents().get(0);
		private final RuleCall cPLUSTerminalRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		private final Assignment cTodoAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cTodoIDTerminalRuleCall_2_0 = (RuleCall)cTodoAssignment_2.eContents().get(0);
		private final Assignment cLineEndAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cLineEndQUOTE_AND_NLTerminalRuleCall_3_0 = (RuleCall)cLineEndAssignment_3.eContents().get(0);
		
		////TODO
		//RODSegment:
		//    segment="ROD"
		//    PLUS
		//    todo=ID
		//    lineEnd=QUOTE_AND_NL
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//segment="ROD"
		//PLUS
		//todo=ID
		//lineEnd=QUOTE_AND_NL
		public Group getGroup() { return cGroup; }
		
		//segment="ROD"
		public Assignment getSegmentAssignment_0() { return cSegmentAssignment_0; }
		
		//"ROD"
		public Keyword getSegmentRODKeyword_0_0() { return cSegmentRODKeyword_0_0; }
		
		//PLUS
		public RuleCall getPLUSTerminalRuleCall_1() { return cPLUSTerminalRuleCall_1; }
		
		//todo=ID
		public Assignment getTodoAssignment_2() { return cTodoAssignment_2; }
		
		//ID
		public RuleCall getTodoIDTerminalRuleCall_2_0() { return cTodoIDTerminalRuleCall_2_0; }
		
		//lineEnd=QUOTE_AND_NL
		public Assignment getLineEndAssignment_3() { return cLineEndAssignment_3; }
		
		//QUOTE_AND_NL
		public RuleCall getLineEndQUOTE_AND_NLTerminalRuleCall_3_0() { return cLineEndQUOTE_AND_NLTerminalRuleCall_3_0; }
	}
	public class RSLSegmentElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "io.thlaegler.edifact.Edilang.RSLSegment");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cSegmentAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final Keyword cSegmentRSLKeyword_0_0 = (Keyword)cSegmentAssignment_0.eContents().get(0);
		private final RuleCall cPLUSTerminalRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		private final Assignment cTodoAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cTodoIDTerminalRuleCall_2_0 = (RuleCall)cTodoAssignment_2.eContents().get(0);
		private final Assignment cLineEndAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cLineEndQUOTE_AND_NLTerminalRuleCall_3_0 = (RuleCall)cLineEndAssignment_3.eContents().get(0);
		
		////TODO
		//RSLSegment:
		//    segment="RSL"
		//    PLUS
		//    todo=ID
		//    lineEnd=QUOTE_AND_NL
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//segment="RSL"
		//PLUS
		//todo=ID
		//lineEnd=QUOTE_AND_NL
		public Group getGroup() { return cGroup; }
		
		//segment="RSL"
		public Assignment getSegmentAssignment_0() { return cSegmentAssignment_0; }
		
		//"RSL"
		public Keyword getSegmentRSLKeyword_0_0() { return cSegmentRSLKeyword_0_0; }
		
		//PLUS
		public RuleCall getPLUSTerminalRuleCall_1() { return cPLUSTerminalRuleCall_1; }
		
		//todo=ID
		public Assignment getTodoAssignment_2() { return cTodoAssignment_2; }
		
		//ID
		public RuleCall getTodoIDTerminalRuleCall_2_0() { return cTodoIDTerminalRuleCall_2_0; }
		
		//lineEnd=QUOTE_AND_NL
		public Assignment getLineEndAssignment_3() { return cLineEndAssignment_3; }
		
		//QUOTE_AND_NL
		public RuleCall getLineEndQUOTE_AND_NLTerminalRuleCall_3_0() { return cLineEndQUOTE_AND_NLTerminalRuleCall_3_0; }
	}
	public class RTESegmentElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "io.thlaegler.edifact.Edilang.RTESegment");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cSegmentAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final Keyword cSegmentRTEKeyword_0_0 = (Keyword)cSegmentAssignment_0.eContents().get(0);
		private final RuleCall cPLUSTerminalRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		private final Assignment cTodoAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cTodoIDTerminalRuleCall_2_0 = (RuleCall)cTodoAssignment_2.eContents().get(0);
		private final Assignment cLineEndAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cLineEndQUOTE_AND_NLTerminalRuleCall_3_0 = (RuleCall)cLineEndAssignment_3.eContents().get(0);
		
		////TODO
		//RTESegment:
		//    segment="RTE"
		//    PLUS
		//    todo=ID
		//    lineEnd=QUOTE_AND_NL
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//segment="RTE"
		//PLUS
		//todo=ID
		//lineEnd=QUOTE_AND_NL
		public Group getGroup() { return cGroup; }
		
		//segment="RTE"
		public Assignment getSegmentAssignment_0() { return cSegmentAssignment_0; }
		
		//"RTE"
		public Keyword getSegmentRTEKeyword_0_0() { return cSegmentRTEKeyword_0_0; }
		
		//PLUS
		public RuleCall getPLUSTerminalRuleCall_1() { return cPLUSTerminalRuleCall_1; }
		
		//todo=ID
		public Assignment getTodoAssignment_2() { return cTodoAssignment_2; }
		
		//ID
		public RuleCall getTodoIDTerminalRuleCall_2_0() { return cTodoIDTerminalRuleCall_2_0; }
		
		//lineEnd=QUOTE_AND_NL
		public Assignment getLineEndAssignment_3() { return cLineEndAssignment_3; }
		
		//QUOTE_AND_NL
		public RuleCall getLineEndQUOTE_AND_NLTerminalRuleCall_3_0() { return cLineEndQUOTE_AND_NLTerminalRuleCall_3_0; }
	}
	public class SALSegmentElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "io.thlaegler.edifact.Edilang.SALSegment");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cSegmentAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final Keyword cSegmentSALKeyword_0_0 = (Keyword)cSegmentAssignment_0.eContents().get(0);
		private final RuleCall cPLUSTerminalRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		private final Assignment cTodoAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cTodoIDTerminalRuleCall_2_0 = (RuleCall)cTodoAssignment_2.eContents().get(0);
		private final Assignment cLineEndAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cLineEndQUOTE_AND_NLTerminalRuleCall_3_0 = (RuleCall)cLineEndAssignment_3.eContents().get(0);
		
		////TODO
		//SALSegment:
		//    segment="SAL"
		//    PLUS
		//    todo=ID
		//    lineEnd=QUOTE_AND_NL
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//segment="SAL"
		//PLUS
		//todo=ID
		//lineEnd=QUOTE_AND_NL
		public Group getGroup() { return cGroup; }
		
		//segment="SAL"
		public Assignment getSegmentAssignment_0() { return cSegmentAssignment_0; }
		
		//"SAL"
		public Keyword getSegmentSALKeyword_0_0() { return cSegmentSALKeyword_0_0; }
		
		//PLUS
		public RuleCall getPLUSTerminalRuleCall_1() { return cPLUSTerminalRuleCall_1; }
		
		//todo=ID
		public Assignment getTodoAssignment_2() { return cTodoAssignment_2; }
		
		//ID
		public RuleCall getTodoIDTerminalRuleCall_2_0() { return cTodoIDTerminalRuleCall_2_0; }
		
		//lineEnd=QUOTE_AND_NL
		public Assignment getLineEndAssignment_3() { return cLineEndAssignment_3; }
		
		//QUOTE_AND_NL
		public RuleCall getLineEndQUOTE_AND_NLTerminalRuleCall_3_0() { return cLineEndQUOTE_AND_NLTerminalRuleCall_3_0; }
	}
	public class SCCSegmentElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "io.thlaegler.edifact.Edilang.SCCSegment");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cSegmentAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final Keyword cSegmentSCCKeyword_0_0 = (Keyword)cSegmentAssignment_0.eContents().get(0);
		private final RuleCall cPLUSTerminalRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		private final Assignment cTodoAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cTodoIDTerminalRuleCall_2_0 = (RuleCall)cTodoAssignment_2.eContents().get(0);
		private final Assignment cLineEndAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cLineEndQUOTE_AND_NLTerminalRuleCall_3_0 = (RuleCall)cLineEndAssignment_3.eContents().get(0);
		
		////TODO
		//SCCSegment:
		//    segment="SCC"
		//    PLUS
		//    todo=ID
		//    lineEnd=QUOTE_AND_NL
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//segment="SCC"
		//PLUS
		//todo=ID
		//lineEnd=QUOTE_AND_NL
		public Group getGroup() { return cGroup; }
		
		//segment="SCC"
		public Assignment getSegmentAssignment_0() { return cSegmentAssignment_0; }
		
		//"SCC"
		public Keyword getSegmentSCCKeyword_0_0() { return cSegmentSCCKeyword_0_0; }
		
		//PLUS
		public RuleCall getPLUSTerminalRuleCall_1() { return cPLUSTerminalRuleCall_1; }
		
		//todo=ID
		public Assignment getTodoAssignment_2() { return cTodoAssignment_2; }
		
		//ID
		public RuleCall getTodoIDTerminalRuleCall_2_0() { return cTodoIDTerminalRuleCall_2_0; }
		
		//lineEnd=QUOTE_AND_NL
		public Assignment getLineEndAssignment_3() { return cLineEndAssignment_3; }
		
		//QUOTE_AND_NL
		public RuleCall getLineEndQUOTE_AND_NLTerminalRuleCall_3_0() { return cLineEndQUOTE_AND_NLTerminalRuleCall_3_0; }
	}
	public class SCDSegmentElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "io.thlaegler.edifact.Edilang.SCDSegment");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cSegmentAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final Keyword cSegmentSCDKeyword_0_0 = (Keyword)cSegmentAssignment_0.eContents().get(0);
		private final RuleCall cPLUSTerminalRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		private final Assignment cTodoAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cTodoIDTerminalRuleCall_2_0 = (RuleCall)cTodoAssignment_2.eContents().get(0);
		private final Assignment cLineEndAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cLineEndQUOTE_AND_NLTerminalRuleCall_3_0 = (RuleCall)cLineEndAssignment_3.eContents().get(0);
		
		////TODO
		//SCDSegment:
		//    segment="SCD"
		//    PLUS
		//    todo=ID
		//    lineEnd=QUOTE_AND_NL
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//segment="SCD"
		//PLUS
		//todo=ID
		//lineEnd=QUOTE_AND_NL
		public Group getGroup() { return cGroup; }
		
		//segment="SCD"
		public Assignment getSegmentAssignment_0() { return cSegmentAssignment_0; }
		
		//"SCD"
		public Keyword getSegmentSCDKeyword_0_0() { return cSegmentSCDKeyword_0_0; }
		
		//PLUS
		public RuleCall getPLUSTerminalRuleCall_1() { return cPLUSTerminalRuleCall_1; }
		
		//todo=ID
		public Assignment getTodoAssignment_2() { return cTodoAssignment_2; }
		
		//ID
		public RuleCall getTodoIDTerminalRuleCall_2_0() { return cTodoIDTerminalRuleCall_2_0; }
		
		//lineEnd=QUOTE_AND_NL
		public Assignment getLineEndAssignment_3() { return cLineEndAssignment_3; }
		
		//QUOTE_AND_NL
		public RuleCall getLineEndQUOTE_AND_NLTerminalRuleCall_3_0() { return cLineEndQUOTE_AND_NLTerminalRuleCall_3_0; }
	}
	public class SEGSegmentElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "io.thlaegler.edifact.Edilang.SEGSegment");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cSegmentAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final Keyword cSegmentSEGKeyword_0_0 = (Keyword)cSegmentAssignment_0.eContents().get(0);
		private final RuleCall cPLUSTerminalRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		private final Assignment cTodoAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cTodoIDTerminalRuleCall_2_0 = (RuleCall)cTodoAssignment_2.eContents().get(0);
		private final Assignment cLineEndAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cLineEndQUOTE_AND_NLTerminalRuleCall_3_0 = (RuleCall)cLineEndAssignment_3.eContents().get(0);
		
		////TODO
		//SEGSegment:
		//    segment="SEG"
		//    PLUS
		//    todo=ID
		//    lineEnd=QUOTE_AND_NL
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//segment="SEG"
		//PLUS
		//todo=ID
		//lineEnd=QUOTE_AND_NL
		public Group getGroup() { return cGroup; }
		
		//segment="SEG"
		public Assignment getSegmentAssignment_0() { return cSegmentAssignment_0; }
		
		//"SEG"
		public Keyword getSegmentSEGKeyword_0_0() { return cSegmentSEGKeyword_0_0; }
		
		//PLUS
		public RuleCall getPLUSTerminalRuleCall_1() { return cPLUSTerminalRuleCall_1; }
		
		//todo=ID
		public Assignment getTodoAssignment_2() { return cTodoAssignment_2; }
		
		//ID
		public RuleCall getTodoIDTerminalRuleCall_2_0() { return cTodoIDTerminalRuleCall_2_0; }
		
		//lineEnd=QUOTE_AND_NL
		public Assignment getLineEndAssignment_3() { return cLineEndAssignment_3; }
		
		//QUOTE_AND_NL
		public RuleCall getLineEndQUOTE_AND_NLTerminalRuleCall_3_0() { return cLineEndQUOTE_AND_NLTerminalRuleCall_3_0; }
	}
	public class SELSegmentElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "io.thlaegler.edifact.Edilang.SELSegment");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cSegmentAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final Keyword cSegmentSELKeyword_0_0 = (Keyword)cSegmentAssignment_0.eContents().get(0);
		private final RuleCall cPLUSTerminalRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		private final Assignment cTodoAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cTodoIDTerminalRuleCall_2_0 = (RuleCall)cTodoAssignment_2.eContents().get(0);
		private final Assignment cLineEndAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cLineEndQUOTE_AND_NLTerminalRuleCall_3_0 = (RuleCall)cLineEndAssignment_3.eContents().get(0);
		
		////TODO
		//SELSegment:
		//    segment="SEL"
		//    PLUS
		//    todo=ID
		//    lineEnd=QUOTE_AND_NL
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//segment="SEL"
		//PLUS
		//todo=ID
		//lineEnd=QUOTE_AND_NL
		public Group getGroup() { return cGroup; }
		
		//segment="SEL"
		public Assignment getSegmentAssignment_0() { return cSegmentAssignment_0; }
		
		//"SEL"
		public Keyword getSegmentSELKeyword_0_0() { return cSegmentSELKeyword_0_0; }
		
		//PLUS
		public RuleCall getPLUSTerminalRuleCall_1() { return cPLUSTerminalRuleCall_1; }
		
		//todo=ID
		public Assignment getTodoAssignment_2() { return cTodoAssignment_2; }
		
		//ID
		public RuleCall getTodoIDTerminalRuleCall_2_0() { return cTodoIDTerminalRuleCall_2_0; }
		
		//lineEnd=QUOTE_AND_NL
		public Assignment getLineEndAssignment_3() { return cLineEndAssignment_3; }
		
		//QUOTE_AND_NL
		public RuleCall getLineEndQUOTE_AND_NLTerminalRuleCall_3_0() { return cLineEndQUOTE_AND_NLTerminalRuleCall_3_0; }
	}
	public class SEQSegmentElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "io.thlaegler.edifact.Edilang.SEQSegment");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cSegmentAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final Keyword cSegmentSEQKeyword_0_0 = (Keyword)cSegmentAssignment_0.eContents().get(0);
		private final RuleCall cPLUSTerminalRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		private final Assignment cTodoAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cTodoIDTerminalRuleCall_2_0 = (RuleCall)cTodoAssignment_2.eContents().get(0);
		private final Assignment cLineEndAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cLineEndQUOTE_AND_NLTerminalRuleCall_3_0 = (RuleCall)cLineEndAssignment_3.eContents().get(0);
		
		////TODO
		//SEQSegment:
		//    segment="SEQ"
		//    PLUS
		//    todo=ID
		//    lineEnd=QUOTE_AND_NL
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//segment="SEQ"
		//PLUS
		//todo=ID
		//lineEnd=QUOTE_AND_NL
		public Group getGroup() { return cGroup; }
		
		//segment="SEQ"
		public Assignment getSegmentAssignment_0() { return cSegmentAssignment_0; }
		
		//"SEQ"
		public Keyword getSegmentSEQKeyword_0_0() { return cSegmentSEQKeyword_0_0; }
		
		//PLUS
		public RuleCall getPLUSTerminalRuleCall_1() { return cPLUSTerminalRuleCall_1; }
		
		//todo=ID
		public Assignment getTodoAssignment_2() { return cTodoAssignment_2; }
		
		//ID
		public RuleCall getTodoIDTerminalRuleCall_2_0() { return cTodoIDTerminalRuleCall_2_0; }
		
		//lineEnd=QUOTE_AND_NL
		public Assignment getLineEndAssignment_3() { return cLineEndAssignment_3; }
		
		//QUOTE_AND_NL
		public RuleCall getLineEndQUOTE_AND_NLTerminalRuleCall_3_0() { return cLineEndQUOTE_AND_NLTerminalRuleCall_3_0; }
	}
	public class SFISegmentElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "io.thlaegler.edifact.Edilang.SFISegment");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cSegmentAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final Keyword cSegmentSFIKeyword_0_0 = (Keyword)cSegmentAssignment_0.eContents().get(0);
		private final RuleCall cPLUSTerminalRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		private final Assignment cTodoAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cTodoIDTerminalRuleCall_2_0 = (RuleCall)cTodoAssignment_2.eContents().get(0);
		private final Assignment cLineEndAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cLineEndQUOTE_AND_NLTerminalRuleCall_3_0 = (RuleCall)cLineEndAssignment_3.eContents().get(0);
		
		////TODO
		//SFISegment:
		//    segment="SFI"
		//    PLUS
		//    todo=ID
		//    lineEnd=QUOTE_AND_NL
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//segment="SFI"
		//PLUS
		//todo=ID
		//lineEnd=QUOTE_AND_NL
		public Group getGroup() { return cGroup; }
		
		//segment="SFI"
		public Assignment getSegmentAssignment_0() { return cSegmentAssignment_0; }
		
		//"SFI"
		public Keyword getSegmentSFIKeyword_0_0() { return cSegmentSFIKeyword_0_0; }
		
		//PLUS
		public RuleCall getPLUSTerminalRuleCall_1() { return cPLUSTerminalRuleCall_1; }
		
		//todo=ID
		public Assignment getTodoAssignment_2() { return cTodoAssignment_2; }
		
		//ID
		public RuleCall getTodoIDTerminalRuleCall_2_0() { return cTodoIDTerminalRuleCall_2_0; }
		
		//lineEnd=QUOTE_AND_NL
		public Assignment getLineEndAssignment_3() { return cLineEndAssignment_3; }
		
		//QUOTE_AND_NL
		public RuleCall getLineEndQUOTE_AND_NLTerminalRuleCall_3_0() { return cLineEndQUOTE_AND_NLTerminalRuleCall_3_0; }
	}
	public class SGPSegmentElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "io.thlaegler.edifact.Edilang.SGPSegment");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cSegmentAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final Keyword cSegmentSGPKeyword_0_0 = (Keyword)cSegmentAssignment_0.eContents().get(0);
		private final RuleCall cPLUSTerminalRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		private final Assignment cTodoAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cTodoIDTerminalRuleCall_2_0 = (RuleCall)cTodoAssignment_2.eContents().get(0);
		private final Assignment cLineEndAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cLineEndQUOTE_AND_NLTerminalRuleCall_3_0 = (RuleCall)cLineEndAssignment_3.eContents().get(0);
		
		////TODO
		//SGPSegment:
		//    segment="SGP"
		//    PLUS
		//    todo=ID
		//    lineEnd=QUOTE_AND_NL
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//segment="SGP"
		//PLUS
		//todo=ID
		//lineEnd=QUOTE_AND_NL
		public Group getGroup() { return cGroup; }
		
		//segment="SGP"
		public Assignment getSegmentAssignment_0() { return cSegmentAssignment_0; }
		
		//"SGP"
		public Keyword getSegmentSGPKeyword_0_0() { return cSegmentSGPKeyword_0_0; }
		
		//PLUS
		public RuleCall getPLUSTerminalRuleCall_1() { return cPLUSTerminalRuleCall_1; }
		
		//todo=ID
		public Assignment getTodoAssignment_2() { return cTodoAssignment_2; }
		
		//ID
		public RuleCall getTodoIDTerminalRuleCall_2_0() { return cTodoIDTerminalRuleCall_2_0; }
		
		//lineEnd=QUOTE_AND_NL
		public Assignment getLineEndAssignment_3() { return cLineEndAssignment_3; }
		
		//QUOTE_AND_NL
		public RuleCall getLineEndQUOTE_AND_NLTerminalRuleCall_3_0() { return cLineEndQUOTE_AND_NLTerminalRuleCall_3_0; }
	}
	public class SGUSegmentElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "io.thlaegler.edifact.Edilang.SGUSegment");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cSegmentAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final Keyword cSegmentSGUKeyword_0_0 = (Keyword)cSegmentAssignment_0.eContents().get(0);
		private final RuleCall cPLUSTerminalRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		private final Assignment cTodoAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cTodoIDTerminalRuleCall_2_0 = (RuleCall)cTodoAssignment_2.eContents().get(0);
		private final Assignment cLineEndAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cLineEndQUOTE_AND_NLTerminalRuleCall_3_0 = (RuleCall)cLineEndAssignment_3.eContents().get(0);
		
		////TODO
		//SGUSegment:
		//    segment="SGU"
		//    PLUS
		//    todo=ID
		//    lineEnd=QUOTE_AND_NL
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//segment="SGU"
		//PLUS
		//todo=ID
		//lineEnd=QUOTE_AND_NL
		public Group getGroup() { return cGroup; }
		
		//segment="SGU"
		public Assignment getSegmentAssignment_0() { return cSegmentAssignment_0; }
		
		//"SGU"
		public Keyword getSegmentSGUKeyword_0_0() { return cSegmentSGUKeyword_0_0; }
		
		//PLUS
		public RuleCall getPLUSTerminalRuleCall_1() { return cPLUSTerminalRuleCall_1; }
		
		//todo=ID
		public Assignment getTodoAssignment_2() { return cTodoAssignment_2; }
		
		//ID
		public RuleCall getTodoIDTerminalRuleCall_2_0() { return cTodoIDTerminalRuleCall_2_0; }
		
		//lineEnd=QUOTE_AND_NL
		public Assignment getLineEndAssignment_3() { return cLineEndAssignment_3; }
		
		//QUOTE_AND_NL
		public RuleCall getLineEndQUOTE_AND_NLTerminalRuleCall_3_0() { return cLineEndQUOTE_AND_NLTerminalRuleCall_3_0; }
	}
	public class SPRSegmentElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "io.thlaegler.edifact.Edilang.SPRSegment");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cSegmentAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final Keyword cSegmentSPRKeyword_0_0 = (Keyword)cSegmentAssignment_0.eContents().get(0);
		private final RuleCall cPLUSTerminalRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		private final Assignment cTodoAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cTodoIDTerminalRuleCall_2_0 = (RuleCall)cTodoAssignment_2.eContents().get(0);
		private final Assignment cLineEndAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cLineEndQUOTE_AND_NLTerminalRuleCall_3_0 = (RuleCall)cLineEndAssignment_3.eContents().get(0);
		
		////TODO
		//SPRSegment:
		//    segment="SPR"
		//    PLUS
		//    todo=ID
		//    lineEnd=QUOTE_AND_NL
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//segment="SPR"
		//PLUS
		//todo=ID
		//lineEnd=QUOTE_AND_NL
		public Group getGroup() { return cGroup; }
		
		//segment="SPR"
		public Assignment getSegmentAssignment_0() { return cSegmentAssignment_0; }
		
		//"SPR"
		public Keyword getSegmentSPRKeyword_0_0() { return cSegmentSPRKeyword_0_0; }
		
		//PLUS
		public RuleCall getPLUSTerminalRuleCall_1() { return cPLUSTerminalRuleCall_1; }
		
		//todo=ID
		public Assignment getTodoAssignment_2() { return cTodoAssignment_2; }
		
		//ID
		public RuleCall getTodoIDTerminalRuleCall_2_0() { return cTodoIDTerminalRuleCall_2_0; }
		
		//lineEnd=QUOTE_AND_NL
		public Assignment getLineEndAssignment_3() { return cLineEndAssignment_3; }
		
		//QUOTE_AND_NL
		public RuleCall getLineEndQUOTE_AND_NLTerminalRuleCall_3_0() { return cLineEndQUOTE_AND_NLTerminalRuleCall_3_0; }
	}
	public class SPSSegmentElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "io.thlaegler.edifact.Edilang.SPSSegment");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cSegmentAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final Keyword cSegmentSPSKeyword_0_0 = (Keyword)cSegmentAssignment_0.eContents().get(0);
		private final RuleCall cPLUSTerminalRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		private final Assignment cTodoAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cTodoIDTerminalRuleCall_2_0 = (RuleCall)cTodoAssignment_2.eContents().get(0);
		private final Assignment cLineEndAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cLineEndQUOTE_AND_NLTerminalRuleCall_3_0 = (RuleCall)cLineEndAssignment_3.eContents().get(0);
		
		////TODO
		//SPSSegment:
		//    segment="SPS"
		//    PLUS
		//    todo=ID
		//    lineEnd=QUOTE_AND_NL
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//segment="SPS"
		//PLUS
		//todo=ID
		//lineEnd=QUOTE_AND_NL
		public Group getGroup() { return cGroup; }
		
		//segment="SPS"
		public Assignment getSegmentAssignment_0() { return cSegmentAssignment_0; }
		
		//"SPS"
		public Keyword getSegmentSPSKeyword_0_0() { return cSegmentSPSKeyword_0_0; }
		
		//PLUS
		public RuleCall getPLUSTerminalRuleCall_1() { return cPLUSTerminalRuleCall_1; }
		
		//todo=ID
		public Assignment getTodoAssignment_2() { return cTodoAssignment_2; }
		
		//ID
		public RuleCall getTodoIDTerminalRuleCall_2_0() { return cTodoIDTerminalRuleCall_2_0; }
		
		//lineEnd=QUOTE_AND_NL
		public Assignment getLineEndAssignment_3() { return cLineEndAssignment_3; }
		
		//QUOTE_AND_NL
		public RuleCall getLineEndQUOTE_AND_NLTerminalRuleCall_3_0() { return cLineEndQUOTE_AND_NLTerminalRuleCall_3_0; }
	}
	public class STASegmentElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "io.thlaegler.edifact.Edilang.STASegment");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cSegmentAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final Keyword cSegmentSTAKeyword_0_0 = (Keyword)cSegmentAssignment_0.eContents().get(0);
		private final RuleCall cPLUSTerminalRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		private final Assignment cTodoAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cTodoIDTerminalRuleCall_2_0 = (RuleCall)cTodoAssignment_2.eContents().get(0);
		private final Assignment cLineEndAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cLineEndQUOTE_AND_NLTerminalRuleCall_3_0 = (RuleCall)cLineEndAssignment_3.eContents().get(0);
		
		////TODO
		//STASegment:
		//    segment="STA"
		//    PLUS
		//    todo=ID
		//    lineEnd=QUOTE_AND_NL
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//segment="STA"
		//PLUS
		//todo=ID
		//lineEnd=QUOTE_AND_NL
		public Group getGroup() { return cGroup; }
		
		//segment="STA"
		public Assignment getSegmentAssignment_0() { return cSegmentAssignment_0; }
		
		//"STA"
		public Keyword getSegmentSTAKeyword_0_0() { return cSegmentSTAKeyword_0_0; }
		
		//PLUS
		public RuleCall getPLUSTerminalRuleCall_1() { return cPLUSTerminalRuleCall_1; }
		
		//todo=ID
		public Assignment getTodoAssignment_2() { return cTodoAssignment_2; }
		
		//ID
		public RuleCall getTodoIDTerminalRuleCall_2_0() { return cTodoIDTerminalRuleCall_2_0; }
		
		//lineEnd=QUOTE_AND_NL
		public Assignment getLineEndAssignment_3() { return cLineEndAssignment_3; }
		
		//QUOTE_AND_NL
		public RuleCall getLineEndQUOTE_AND_NLTerminalRuleCall_3_0() { return cLineEndQUOTE_AND_NLTerminalRuleCall_3_0; }
	}
	public class STCSegmentElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "io.thlaegler.edifact.Edilang.STCSegment");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cSegmentAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final Keyword cSegmentSTCKeyword_0_0 = (Keyword)cSegmentAssignment_0.eContents().get(0);
		private final RuleCall cPLUSTerminalRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		private final Assignment cTodoAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cTodoIDTerminalRuleCall_2_0 = (RuleCall)cTodoAssignment_2.eContents().get(0);
		private final Assignment cLineEndAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cLineEndQUOTE_AND_NLTerminalRuleCall_3_0 = (RuleCall)cLineEndAssignment_3.eContents().get(0);
		
		////TODO
		//STCSegment:
		//    segment="STC"
		//    PLUS
		//    todo=ID
		//    lineEnd=QUOTE_AND_NL
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//segment="STC"
		//PLUS
		//todo=ID
		//lineEnd=QUOTE_AND_NL
		public Group getGroup() { return cGroup; }
		
		//segment="STC"
		public Assignment getSegmentAssignment_0() { return cSegmentAssignment_0; }
		
		//"STC"
		public Keyword getSegmentSTCKeyword_0_0() { return cSegmentSTCKeyword_0_0; }
		
		//PLUS
		public RuleCall getPLUSTerminalRuleCall_1() { return cPLUSTerminalRuleCall_1; }
		
		//todo=ID
		public Assignment getTodoAssignment_2() { return cTodoAssignment_2; }
		
		//ID
		public RuleCall getTodoIDTerminalRuleCall_2_0() { return cTodoIDTerminalRuleCall_2_0; }
		
		//lineEnd=QUOTE_AND_NL
		public Assignment getLineEndAssignment_3() { return cLineEndAssignment_3; }
		
		//QUOTE_AND_NL
		public RuleCall getLineEndQUOTE_AND_NLTerminalRuleCall_3_0() { return cLineEndQUOTE_AND_NLTerminalRuleCall_3_0; }
	}
	public class STGSegmentElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "io.thlaegler.edifact.Edilang.STGSegment");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cSegmentAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final Keyword cSegmentSTGKeyword_0_0 = (Keyword)cSegmentAssignment_0.eContents().get(0);
		private final RuleCall cPLUSTerminalRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		private final Assignment cTodoAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cTodoIDTerminalRuleCall_2_0 = (RuleCall)cTodoAssignment_2.eContents().get(0);
		private final Assignment cLineEndAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cLineEndQUOTE_AND_NLTerminalRuleCall_3_0 = (RuleCall)cLineEndAssignment_3.eContents().get(0);
		
		////TODO
		//STGSegment:
		//    segment="STG"
		//    PLUS
		//    todo=ID
		//    lineEnd=QUOTE_AND_NL
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//segment="STG"
		//PLUS
		//todo=ID
		//lineEnd=QUOTE_AND_NL
		public Group getGroup() { return cGroup; }
		
		//segment="STG"
		public Assignment getSegmentAssignment_0() { return cSegmentAssignment_0; }
		
		//"STG"
		public Keyword getSegmentSTGKeyword_0_0() { return cSegmentSTGKeyword_0_0; }
		
		//PLUS
		public RuleCall getPLUSTerminalRuleCall_1() { return cPLUSTerminalRuleCall_1; }
		
		//todo=ID
		public Assignment getTodoAssignment_2() { return cTodoAssignment_2; }
		
		//ID
		public RuleCall getTodoIDTerminalRuleCall_2_0() { return cTodoIDTerminalRuleCall_2_0; }
		
		//lineEnd=QUOTE_AND_NL
		public Assignment getLineEndAssignment_3() { return cLineEndAssignment_3; }
		
		//QUOTE_AND_NL
		public RuleCall getLineEndQUOTE_AND_NLTerminalRuleCall_3_0() { return cLineEndQUOTE_AND_NLTerminalRuleCall_3_0; }
	}
	public class STSSegmentElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "io.thlaegler.edifact.Edilang.STSSegment");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cSegmentAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final Keyword cSegmentSTSKeyword_0_0 = (Keyword)cSegmentAssignment_0.eContents().get(0);
		private final RuleCall cPLUSTerminalRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		private final Assignment cTodoAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cTodoIDTerminalRuleCall_2_0 = (RuleCall)cTodoAssignment_2.eContents().get(0);
		private final Assignment cLineEndAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cLineEndQUOTE_AND_NLTerminalRuleCall_3_0 = (RuleCall)cLineEndAssignment_3.eContents().get(0);
		
		////TODO
		//STSSegment:
		//    segment="STS"
		//    PLUS
		//    todo=ID
		//    lineEnd=QUOTE_AND_NL
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//segment="STS"
		//PLUS
		//todo=ID
		//lineEnd=QUOTE_AND_NL
		public Group getGroup() { return cGroup; }
		
		//segment="STS"
		public Assignment getSegmentAssignment_0() { return cSegmentAssignment_0; }
		
		//"STS"
		public Keyword getSegmentSTSKeyword_0_0() { return cSegmentSTSKeyword_0_0; }
		
		//PLUS
		public RuleCall getPLUSTerminalRuleCall_1() { return cPLUSTerminalRuleCall_1; }
		
		//todo=ID
		public Assignment getTodoAssignment_2() { return cTodoAssignment_2; }
		
		//ID
		public RuleCall getTodoIDTerminalRuleCall_2_0() { return cTodoIDTerminalRuleCall_2_0; }
		
		//lineEnd=QUOTE_AND_NL
		public Assignment getLineEndAssignment_3() { return cLineEndAssignment_3; }
		
		//QUOTE_AND_NL
		public RuleCall getLineEndQUOTE_AND_NLTerminalRuleCall_3_0() { return cLineEndQUOTE_AND_NLTerminalRuleCall_3_0; }
	}
	public class TCCSegmentElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "io.thlaegler.edifact.Edilang.TCCSegment");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cSegmentAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final Keyword cSegmentTCCKeyword_0_0 = (Keyword)cSegmentAssignment_0.eContents().get(0);
		private final RuleCall cPLUSTerminalRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		private final Assignment cTodoAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cTodoIDTerminalRuleCall_2_0 = (RuleCall)cTodoAssignment_2.eContents().get(0);
		private final Assignment cLineEndAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cLineEndQUOTE_AND_NLTerminalRuleCall_3_0 = (RuleCall)cLineEndAssignment_3.eContents().get(0);
		
		////TODO
		//TCCSegment:
		//    segment="TCC"
		//    PLUS
		//    todo=ID
		//    lineEnd=QUOTE_AND_NL
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//segment="TCC"
		//PLUS
		//todo=ID
		//lineEnd=QUOTE_AND_NL
		public Group getGroup() { return cGroup; }
		
		//segment="TCC"
		public Assignment getSegmentAssignment_0() { return cSegmentAssignment_0; }
		
		//"TCC"
		public Keyword getSegmentTCCKeyword_0_0() { return cSegmentTCCKeyword_0_0; }
		
		//PLUS
		public RuleCall getPLUSTerminalRuleCall_1() { return cPLUSTerminalRuleCall_1; }
		
		//todo=ID
		public Assignment getTodoAssignment_2() { return cTodoAssignment_2; }
		
		//ID
		public RuleCall getTodoIDTerminalRuleCall_2_0() { return cTodoIDTerminalRuleCall_2_0; }
		
		//lineEnd=QUOTE_AND_NL
		public Assignment getLineEndAssignment_3() { return cLineEndAssignment_3; }
		
		//QUOTE_AND_NL
		public RuleCall getLineEndQUOTE_AND_NLTerminalRuleCall_3_0() { return cLineEndQUOTE_AND_NLTerminalRuleCall_3_0; }
	}
	public class TDTSegmentElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "io.thlaegler.edifact.Edilang.TDTSegment");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cSegmentAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final Keyword cSegmentTDTKeyword_0_0 = (Keyword)cSegmentAssignment_0.eContents().get(0);
		private final RuleCall cPLUSTerminalRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		private final Assignment cTodoAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cTodoIDTerminalRuleCall_2_0 = (RuleCall)cTodoAssignment_2.eContents().get(0);
		private final Assignment cLineEndAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cLineEndQUOTE_AND_NLTerminalRuleCall_3_0 = (RuleCall)cLineEndAssignment_3.eContents().get(0);
		
		////TODO
		//TDTSegment:
		//    segment="TDT"
		//    PLUS
		//    todo=ID
		//    lineEnd=QUOTE_AND_NL
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//segment="TDT"
		//PLUS
		//todo=ID
		//lineEnd=QUOTE_AND_NL
		public Group getGroup() { return cGroup; }
		
		//segment="TDT"
		public Assignment getSegmentAssignment_0() { return cSegmentAssignment_0; }
		
		//"TDT"
		public Keyword getSegmentTDTKeyword_0_0() { return cSegmentTDTKeyword_0_0; }
		
		//PLUS
		public RuleCall getPLUSTerminalRuleCall_1() { return cPLUSTerminalRuleCall_1; }
		
		//todo=ID
		public Assignment getTodoAssignment_2() { return cTodoAssignment_2; }
		
		//ID
		public RuleCall getTodoIDTerminalRuleCall_2_0() { return cTodoIDTerminalRuleCall_2_0; }
		
		//lineEnd=QUOTE_AND_NL
		public Assignment getLineEndAssignment_3() { return cLineEndAssignment_3; }
		
		//QUOTE_AND_NL
		public RuleCall getLineEndQUOTE_AND_NLTerminalRuleCall_3_0() { return cLineEndQUOTE_AND_NLTerminalRuleCall_3_0; }
	}
	public class TEMSegmentElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "io.thlaegler.edifact.Edilang.TEMSegment");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cSegmentAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final Keyword cSegmentTEMKeyword_0_0 = (Keyword)cSegmentAssignment_0.eContents().get(0);
		private final RuleCall cPLUSTerminalRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		private final Assignment cTodoAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cTodoIDTerminalRuleCall_2_0 = (RuleCall)cTodoAssignment_2.eContents().get(0);
		private final Assignment cLineEndAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cLineEndQUOTE_AND_NLTerminalRuleCall_3_0 = (RuleCall)cLineEndAssignment_3.eContents().get(0);
		
		////TODO
		//TEMSegment:
		//    segment="TEM"
		//    PLUS
		//    todo=ID
		//    lineEnd=QUOTE_AND_NL
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//segment="TEM"
		//PLUS
		//todo=ID
		//lineEnd=QUOTE_AND_NL
		public Group getGroup() { return cGroup; }
		
		//segment="TEM"
		public Assignment getSegmentAssignment_0() { return cSegmentAssignment_0; }
		
		//"TEM"
		public Keyword getSegmentTEMKeyword_0_0() { return cSegmentTEMKeyword_0_0; }
		
		//PLUS
		public RuleCall getPLUSTerminalRuleCall_1() { return cPLUSTerminalRuleCall_1; }
		
		//todo=ID
		public Assignment getTodoAssignment_2() { return cTodoAssignment_2; }
		
		//ID
		public RuleCall getTodoIDTerminalRuleCall_2_0() { return cTodoIDTerminalRuleCall_2_0; }
		
		//lineEnd=QUOTE_AND_NL
		public Assignment getLineEndAssignment_3() { return cLineEndAssignment_3; }
		
		//QUOTE_AND_NL
		public RuleCall getLineEndQUOTE_AND_NLTerminalRuleCall_3_0() { return cLineEndQUOTE_AND_NLTerminalRuleCall_3_0; }
	}
	public class TMDSegmentElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "io.thlaegler.edifact.Edilang.TMDSegment");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cSegmentAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final Keyword cSegmentTMDKeyword_0_0 = (Keyword)cSegmentAssignment_0.eContents().get(0);
		private final RuleCall cPLUSTerminalRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		private final Assignment cTodoAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cTodoIDTerminalRuleCall_2_0 = (RuleCall)cTodoAssignment_2.eContents().get(0);
		private final Assignment cLineEndAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cLineEndQUOTE_AND_NLTerminalRuleCall_3_0 = (RuleCall)cLineEndAssignment_3.eContents().get(0);
		
		////TODO
		//TMDSegment:
		//    segment="TMD"
		//    PLUS
		//    todo=ID
		//    lineEnd=QUOTE_AND_NL
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//segment="TMD"
		//PLUS
		//todo=ID
		//lineEnd=QUOTE_AND_NL
		public Group getGroup() { return cGroup; }
		
		//segment="TMD"
		public Assignment getSegmentAssignment_0() { return cSegmentAssignment_0; }
		
		//"TMD"
		public Keyword getSegmentTMDKeyword_0_0() { return cSegmentTMDKeyword_0_0; }
		
		//PLUS
		public RuleCall getPLUSTerminalRuleCall_1() { return cPLUSTerminalRuleCall_1; }
		
		//todo=ID
		public Assignment getTodoAssignment_2() { return cTodoAssignment_2; }
		
		//ID
		public RuleCall getTodoIDTerminalRuleCall_2_0() { return cTodoIDTerminalRuleCall_2_0; }
		
		//lineEnd=QUOTE_AND_NL
		public Assignment getLineEndAssignment_3() { return cLineEndAssignment_3; }
		
		//QUOTE_AND_NL
		public RuleCall getLineEndQUOTE_AND_NLTerminalRuleCall_3_0() { return cLineEndQUOTE_AND_NLTerminalRuleCall_3_0; }
	}
	public class TMPSegmentElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "io.thlaegler.edifact.Edilang.TMPSegment");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cSegmentAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final Keyword cSegmentTMPKeyword_0_0 = (Keyword)cSegmentAssignment_0.eContents().get(0);
		private final RuleCall cPLUSTerminalRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		private final Assignment cTodoAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cTodoIDTerminalRuleCall_2_0 = (RuleCall)cTodoAssignment_2.eContents().get(0);
		private final Assignment cLineEndAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cLineEndQUOTE_AND_NLTerminalRuleCall_3_0 = (RuleCall)cLineEndAssignment_3.eContents().get(0);
		
		////TODO
		//TMPSegment:
		//    segment="TMP"
		//    PLUS
		//    todo=ID
		//    lineEnd=QUOTE_AND_NL
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//segment="TMP"
		//PLUS
		//todo=ID
		//lineEnd=QUOTE_AND_NL
		public Group getGroup() { return cGroup; }
		
		//segment="TMP"
		public Assignment getSegmentAssignment_0() { return cSegmentAssignment_0; }
		
		//"TMP"
		public Keyword getSegmentTMPKeyword_0_0() { return cSegmentTMPKeyword_0_0; }
		
		//PLUS
		public RuleCall getPLUSTerminalRuleCall_1() { return cPLUSTerminalRuleCall_1; }
		
		//todo=ID
		public Assignment getTodoAssignment_2() { return cTodoAssignment_2; }
		
		//ID
		public RuleCall getTodoIDTerminalRuleCall_2_0() { return cTodoIDTerminalRuleCall_2_0; }
		
		//lineEnd=QUOTE_AND_NL
		public Assignment getLineEndAssignment_3() { return cLineEndAssignment_3; }
		
		//QUOTE_AND_NL
		public RuleCall getLineEndQUOTE_AND_NLTerminalRuleCall_3_0() { return cLineEndQUOTE_AND_NLTerminalRuleCall_3_0; }
	}
	public class TODSegmentElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "io.thlaegler.edifact.Edilang.TODSegment");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cSegmentAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final Keyword cSegmentTODKeyword_0_0 = (Keyword)cSegmentAssignment_0.eContents().get(0);
		private final RuleCall cPLUSTerminalRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		private final Assignment cTodoAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cTodoIDTerminalRuleCall_2_0 = (RuleCall)cTodoAssignment_2.eContents().get(0);
		private final Assignment cLineEndAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cLineEndQUOTE_AND_NLTerminalRuleCall_3_0 = (RuleCall)cLineEndAssignment_3.eContents().get(0);
		
		////TODO
		//TODSegment:
		//    segment="TOD"
		//    PLUS
		//    todo=ID
		//    lineEnd=QUOTE_AND_NL
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//segment="TOD"
		//PLUS
		//todo=ID
		//lineEnd=QUOTE_AND_NL
		public Group getGroup() { return cGroup; }
		
		//segment="TOD"
		public Assignment getSegmentAssignment_0() { return cSegmentAssignment_0; }
		
		//"TOD"
		public Keyword getSegmentTODKeyword_0_0() { return cSegmentTODKeyword_0_0; }
		
		//PLUS
		public RuleCall getPLUSTerminalRuleCall_1() { return cPLUSTerminalRuleCall_1; }
		
		//todo=ID
		public Assignment getTodoAssignment_2() { return cTodoAssignment_2; }
		
		//ID
		public RuleCall getTodoIDTerminalRuleCall_2_0() { return cTodoIDTerminalRuleCall_2_0; }
		
		//lineEnd=QUOTE_AND_NL
		public Assignment getLineEndAssignment_3() { return cLineEndAssignment_3; }
		
		//QUOTE_AND_NL
		public RuleCall getLineEndQUOTE_AND_NLTerminalRuleCall_3_0() { return cLineEndQUOTE_AND_NLTerminalRuleCall_3_0; }
	}
	public class TPLSegmentElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "io.thlaegler.edifact.Edilang.TPLSegment");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cSegmentAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final Keyword cSegmentTPLKeyword_0_0 = (Keyword)cSegmentAssignment_0.eContents().get(0);
		private final RuleCall cPLUSTerminalRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		private final Assignment cTodoAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cTodoIDTerminalRuleCall_2_0 = (RuleCall)cTodoAssignment_2.eContents().get(0);
		private final Assignment cLineEndAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cLineEndQUOTE_AND_NLTerminalRuleCall_3_0 = (RuleCall)cLineEndAssignment_3.eContents().get(0);
		
		////TODO
		//TPLSegment:
		//    segment="TPL"
		//    PLUS
		//    todo=ID
		//    lineEnd=QUOTE_AND_NL
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//segment="TPL"
		//PLUS
		//todo=ID
		//lineEnd=QUOTE_AND_NL
		public Group getGroup() { return cGroup; }
		
		//segment="TPL"
		public Assignment getSegmentAssignment_0() { return cSegmentAssignment_0; }
		
		//"TPL"
		public Keyword getSegmentTPLKeyword_0_0() { return cSegmentTPLKeyword_0_0; }
		
		//PLUS
		public RuleCall getPLUSTerminalRuleCall_1() { return cPLUSTerminalRuleCall_1; }
		
		//todo=ID
		public Assignment getTodoAssignment_2() { return cTodoAssignment_2; }
		
		//ID
		public RuleCall getTodoIDTerminalRuleCall_2_0() { return cTodoIDTerminalRuleCall_2_0; }
		
		//lineEnd=QUOTE_AND_NL
		public Assignment getLineEndAssignment_3() { return cLineEndAssignment_3; }
		
		//QUOTE_AND_NL
		public RuleCall getLineEndQUOTE_AND_NLTerminalRuleCall_3_0() { return cLineEndQUOTE_AND_NLTerminalRuleCall_3_0; }
	}
	public class TRUSegmentElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "io.thlaegler.edifact.Edilang.TRUSegment");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cSegmentAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final Keyword cSegmentTRUKeyword_0_0 = (Keyword)cSegmentAssignment_0.eContents().get(0);
		private final RuleCall cPLUSTerminalRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		private final Assignment cTodoAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cTodoIDTerminalRuleCall_2_0 = (RuleCall)cTodoAssignment_2.eContents().get(0);
		private final Assignment cLineEndAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cLineEndQUOTE_AND_NLTerminalRuleCall_3_0 = (RuleCall)cLineEndAssignment_3.eContents().get(0);
		
		////TODO
		//TRUSegment:
		//    segment="TRU"
		//    PLUS
		//    todo=ID
		//    lineEnd=QUOTE_AND_NL
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//segment="TRU"
		//PLUS
		//todo=ID
		//lineEnd=QUOTE_AND_NL
		public Group getGroup() { return cGroup; }
		
		//segment="TRU"
		public Assignment getSegmentAssignment_0() { return cSegmentAssignment_0; }
		
		//"TRU"
		public Keyword getSegmentTRUKeyword_0_0() { return cSegmentTRUKeyword_0_0; }
		
		//PLUS
		public RuleCall getPLUSTerminalRuleCall_1() { return cPLUSTerminalRuleCall_1; }
		
		//todo=ID
		public Assignment getTodoAssignment_2() { return cTodoAssignment_2; }
		
		//ID
		public RuleCall getTodoIDTerminalRuleCall_2_0() { return cTodoIDTerminalRuleCall_2_0; }
		
		//lineEnd=QUOTE_AND_NL
		public Assignment getLineEndAssignment_3() { return cLineEndAssignment_3; }
		
		//QUOTE_AND_NL
		public RuleCall getLineEndQUOTE_AND_NLTerminalRuleCall_3_0() { return cLineEndQUOTE_AND_NLTerminalRuleCall_3_0; }
	}
	public class TSRSegmentElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "io.thlaegler.edifact.Edilang.TSRSegment");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cSegmentAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final Keyword cSegmentTSRKeyword_0_0 = (Keyword)cSegmentAssignment_0.eContents().get(0);
		private final RuleCall cPLUSTerminalRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		private final Assignment cTodoAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cTodoIDTerminalRuleCall_2_0 = (RuleCall)cTodoAssignment_2.eContents().get(0);
		private final Assignment cLineEndAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cLineEndQUOTE_AND_NLTerminalRuleCall_3_0 = (RuleCall)cLineEndAssignment_3.eContents().get(0);
		
		////TODO
		//TSRSegment:
		//    segment="TSR"
		//    PLUS
		//    todo=ID
		//    lineEnd=QUOTE_AND_NL
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//segment="TSR"
		//PLUS
		//todo=ID
		//lineEnd=QUOTE_AND_NL
		public Group getGroup() { return cGroup; }
		
		//segment="TSR"
		public Assignment getSegmentAssignment_0() { return cSegmentAssignment_0; }
		
		//"TSR"
		public Keyword getSegmentTSRKeyword_0_0() { return cSegmentTSRKeyword_0_0; }
		
		//PLUS
		public RuleCall getPLUSTerminalRuleCall_1() { return cPLUSTerminalRuleCall_1; }
		
		//todo=ID
		public Assignment getTodoAssignment_2() { return cTodoAssignment_2; }
		
		//ID
		public RuleCall getTodoIDTerminalRuleCall_2_0() { return cTodoIDTerminalRuleCall_2_0; }
		
		//lineEnd=QUOTE_AND_NL
		public Assignment getLineEndAssignment_3() { return cLineEndAssignment_3; }
		
		//QUOTE_AND_NL
		public RuleCall getLineEndQUOTE_AND_NLTerminalRuleCall_3_0() { return cLineEndQUOTE_AND_NLTerminalRuleCall_3_0; }
	}
	public class VLISegmentElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "io.thlaegler.edifact.Edilang.VLISegment");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cSegmentAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final Keyword cSegmentVLIKeyword_0_0 = (Keyword)cSegmentAssignment_0.eContents().get(0);
		private final RuleCall cPLUSTerminalRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		private final Assignment cTodoAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cTodoIDTerminalRuleCall_2_0 = (RuleCall)cTodoAssignment_2.eContents().get(0);
		private final Assignment cLineEndAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cLineEndQUOTE_AND_NLTerminalRuleCall_3_0 = (RuleCall)cLineEndAssignment_3.eContents().get(0);
		
		////TODO
		//VLISegment:
		//    segment="VLI"
		//    PLUS
		//    todo=ID
		//    lineEnd=QUOTE_AND_NL
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//segment="VLI"
		//PLUS
		//todo=ID
		//lineEnd=QUOTE_AND_NL
		public Group getGroup() { return cGroup; }
		
		//segment="VLI"
		public Assignment getSegmentAssignment_0() { return cSegmentAssignment_0; }
		
		//"VLI"
		public Keyword getSegmentVLIKeyword_0_0() { return cSegmentVLIKeyword_0_0; }
		
		//PLUS
		public RuleCall getPLUSTerminalRuleCall_1() { return cPLUSTerminalRuleCall_1; }
		
		//todo=ID
		public Assignment getTodoAssignment_2() { return cTodoAssignment_2; }
		
		//ID
		public RuleCall getTodoIDTerminalRuleCall_2_0() { return cTodoIDTerminalRuleCall_2_0; }
		
		//lineEnd=QUOTE_AND_NL
		public Assignment getLineEndAssignment_3() { return cLineEndAssignment_3; }
		
		//QUOTE_AND_NL
		public RuleCall getLineEndQUOTE_AND_NLTerminalRuleCall_3_0() { return cLineEndQUOTE_AND_NLTerminalRuleCall_3_0; }
	}
	public class MSGSegmentElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "io.thlaegler.edifact.Edilang.MSGSegment");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cSegmentAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final Keyword cSegmentMSGKeyword_0_0 = (Keyword)cSegmentAssignment_0.eContents().get(0);
		private final RuleCall cPLUSTerminalRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		private final Assignment cMessageIdentifierAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cMessageIdentifierMessageIndentifierParserRuleCall_2_0 = (RuleCall)cMessageIdentifierAssignment_2.eContents().get(0);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final RuleCall cPLUSTerminalRuleCall_3_0 = (RuleCall)cGroup_3.eContents().get(0);
		private final Assignment cDesignatedClassCodeAssignment_3_1 = (Assignment)cGroup_3.eContents().get(1);
		private final RuleCall cDesignatedClassCodeIDTerminalRuleCall_3_1_0 = (RuleCall)cDesignatedClassCodeAssignment_3_1.eContents().get(0);
		private final Group cGroup_3_2 = (Group)cGroup_3.eContents().get(2);
		private final RuleCall cPLUSTerminalRuleCall_3_2_0 = (RuleCall)cGroup_3_2.eContents().get(0);
		private final Assignment cMaintenanceOperationCodeAssignment_3_2_1 = (Assignment)cGroup_3_2.eContents().get(1);
		private final RuleCall cMaintenanceOperationCodeIDTerminalRuleCall_3_2_1_0 = (RuleCall)cMaintenanceOperationCodeAssignment_3_2_1.eContents().get(0);
		private final Group cGroup_3_2_2 = (Group)cGroup_3_2.eContents().get(2);
		private final RuleCall cPLUSTerminalRuleCall_3_2_2_0 = (RuleCall)cGroup_3_2_2.eContents().get(0);
		private final Assignment cRelationshipAssignment_3_2_2_1 = (Assignment)cGroup_3_2_2.eContents().get(1);
		private final RuleCall cRelationshipRelationshipParserRuleCall_3_2_2_1_0 = (RuleCall)cRelationshipAssignment_3_2_2_1.eContents().get(0);
		private final Assignment cLineEndAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cLineEndQUOTE_AND_NLTerminalRuleCall_4_0 = (RuleCall)cLineEndAssignment_4.eContents().get(0);
		
		////MSG+1:46'
		//MSGSegment:
		//    segment="MSG"
		//    PLUS
		//    ( messageIdentifier=MessageIndentifier )? // C709
		//    (
		//        PLUS
		//        designatedClassCode=ID // 1507
		//        (
		//            PLUS
		//            maintenanceOperationCode=ID // 4513
		//                (
		//                PLUS
		//                relationship=Relationship // C941
		//            )?
		//        )?
		//    )?
		//    lineEnd=QUOTE_AND_NL
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//segment="MSG"
		//PLUS
		//( messageIdentifier=MessageIndentifier )? // C709
		//(
		//    PLUS
		//    designatedClassCode=ID // 1507
		//    (
		//        PLUS
		//        maintenanceOperationCode=ID // 4513
		//            (
		//            PLUS
		//            relationship=Relationship // C941
		//        )?
		//    )?
		//)?
		//lineEnd=QUOTE_AND_NL
		public Group getGroup() { return cGroup; }
		
		//segment="MSG"
		public Assignment getSegmentAssignment_0() { return cSegmentAssignment_0; }
		
		//"MSG"
		public Keyword getSegmentMSGKeyword_0_0() { return cSegmentMSGKeyword_0_0; }
		
		//PLUS
		public RuleCall getPLUSTerminalRuleCall_1() { return cPLUSTerminalRuleCall_1; }
		
		//( messageIdentifier=MessageIndentifier )?
		public Assignment getMessageIdentifierAssignment_2() { return cMessageIdentifierAssignment_2; }
		
		//MessageIndentifier
		public RuleCall getMessageIdentifierMessageIndentifierParserRuleCall_2_0() { return cMessageIdentifierMessageIndentifierParserRuleCall_2_0; }
		
		//// C709
		//   (
		//       PLUS
		//       designatedClassCode=ID // 1507
		//       (
		//           PLUS
		//           maintenanceOperationCode=ID // 4513
		//               (
		//               PLUS
		//               relationship=Relationship // C941
		//           )?
		//       )?
		//   )?
		public Group getGroup_3() { return cGroup_3; }
		
		//PLUS
		public RuleCall getPLUSTerminalRuleCall_3_0() { return cPLUSTerminalRuleCall_3_0; }
		
		//designatedClassCode=ID
		public Assignment getDesignatedClassCodeAssignment_3_1() { return cDesignatedClassCodeAssignment_3_1; }
		
		//ID
		public RuleCall getDesignatedClassCodeIDTerminalRuleCall_3_1_0() { return cDesignatedClassCodeIDTerminalRuleCall_3_1_0; }
		
		//// 1507
		//       (
		//           PLUS
		//           maintenanceOperationCode=ID // 4513
		//               (
		//               PLUS
		//               relationship=Relationship // C941
		//           )?
		//       )?
		public Group getGroup_3_2() { return cGroup_3_2; }
		
		//PLUS
		public RuleCall getPLUSTerminalRuleCall_3_2_0() { return cPLUSTerminalRuleCall_3_2_0; }
		
		//maintenanceOperationCode=ID
		public Assignment getMaintenanceOperationCodeAssignment_3_2_1() { return cMaintenanceOperationCodeAssignment_3_2_1; }
		
		//ID
		public RuleCall getMaintenanceOperationCodeIDTerminalRuleCall_3_2_1_0() { return cMaintenanceOperationCodeIDTerminalRuleCall_3_2_1_0; }
		
		//// 4513
		//               (
		//               PLUS
		//               relationship=Relationship // C941
		//           )?
		public Group getGroup_3_2_2() { return cGroup_3_2_2; }
		
		//PLUS
		public RuleCall getPLUSTerminalRuleCall_3_2_2_0() { return cPLUSTerminalRuleCall_3_2_2_0; }
		
		//relationship=Relationship
		public Assignment getRelationshipAssignment_3_2_2_1() { return cRelationshipAssignment_3_2_2_1; }
		
		//Relationship
		public RuleCall getRelationshipRelationshipParserRuleCall_3_2_2_1_0() { return cRelationshipRelationshipParserRuleCall_3_2_2_1_0; }
		
		//lineEnd=QUOTE_AND_NL
		public Assignment getLineEndAssignment_4() { return cLineEndAssignment_4; }
		
		//QUOTE_AND_NL
		public RuleCall getLineEndQUOTE_AND_NLTerminalRuleCall_4_0() { return cLineEndQUOTE_AND_NLTerminalRuleCall_4_0; }
	}
	public class ORGSegmentElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "io.thlaegler.edifact.Edilang.ORGSegment");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cSegmentAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final Keyword cSegmentORGKeyword_0_0 = (Keyword)cSegmentAssignment_0.eContents().get(0);
		private final RuleCall cPLUSTerminalRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		private final Assignment cSystemDetail1Assignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cSystemDetail1SystemDetailFunctionParserRuleCall_2_0 = (RuleCall)cSystemDetail1Assignment_2.eContents().get(0);
		private final RuleCall cPLUSTerminalRuleCall_3 = (RuleCall)cGroup.eContents().get(3);
		private final Assignment cOriginatorIdentificationAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cOriginatorIdentificationOriginatorIdentificationFunctionParserRuleCall_4_0 = (RuleCall)cOriginatorIdentificationAssignment_4.eContents().get(0);
		private final RuleCall cPLUSTerminalRuleCall_5 = (RuleCall)cGroup.eContents().get(5);
		private final Assignment cLocationAssignment_6 = (Assignment)cGroup.eContents().get(6);
		private final RuleCall cLocationLocationFunctionParserRuleCall_6_0 = (RuleCall)cLocationAssignment_6.eContents().get(0);
		private final RuleCall cPLUSTerminalRuleCall_7 = (RuleCall)cGroup.eContents().get(7);
		private final Assignment cSystemDetail2Assignment_8 = (Assignment)cGroup.eContents().get(8);
		private final RuleCall cSystemDetail2SystemDetailFunctionParserRuleCall_8_0 = (RuleCall)cSystemDetail2Assignment_8.eContents().get(0);
		private final RuleCall cPLUSTerminalRuleCall_9 = (RuleCall)cGroup.eContents().get(9);
		private final Assignment cOriginatorTypeCodeAssignment_10 = (Assignment)cGroup.eContents().get(10);
		private final RuleCall cOriginatorTypeCodeIDTerminalRuleCall_10_0 = (RuleCall)cOriginatorTypeCodeAssignment_10.eContents().get(0);
		private final RuleCall cPLUSTerminalRuleCall_11 = (RuleCall)cGroup.eContents().get(11);
		private final Assignment cOriginatorAssignment_12 = (Assignment)cGroup.eContents().get(12);
		private final RuleCall cOriginatorOriginatorFunctionParserRuleCall_12_0 = (RuleCall)cOriginatorAssignment_12.eContents().get(0);
		private final RuleCall cPLUSTerminalRuleCall_13 = (RuleCall)cGroup.eContents().get(13);
		private final Assignment cOriginatorsAuthorityRequestCodeAssignment_14 = (Assignment)cGroup.eContents().get(14);
		private final RuleCall cOriginatorsAuthorityRequestCodeIDTerminalRuleCall_14_0 = (RuleCall)cOriginatorsAuthorityRequestCodeAssignment_14.eContents().get(0);
		private final Group cGroup_15 = (Group)cGroup.eContents().get(15);
		private final RuleCall cPLUSTerminalRuleCall_15_0 = (RuleCall)cGroup_15.eContents().get(0);
		private final Assignment cCommunicationNumberAssignment_15_1 = (Assignment)cGroup_15.eContents().get(1);
		private final RuleCall cCommunicationNumberIDTerminalRuleCall_15_1_0 = (RuleCall)cCommunicationNumberAssignment_15_1.eContents().get(0);
		private final Group cGroup_15_2 = (Group)cGroup_15.eContents().get(2);
		private final RuleCall cPLUSTerminalRuleCall_15_2_0 = (RuleCall)cGroup_15_2.eContents().get(0);
		private final Assignment cPartyIdIdentificationAssignment_15_2_1 = (Assignment)cGroup_15_2.eContents().get(1);
		private final RuleCall cPartyIdIdentificationIDTerminalRuleCall_15_2_1_0 = (RuleCall)cPartyIdIdentificationAssignment_15_2_1.eContents().get(0);
		private final Assignment cLineEndAssignment_16 = (Assignment)cGroup.eContents().get(16);
		private final RuleCall cLineEndQUOTE_AND_NLTerminalRuleCall_16_0 = (RuleCall)cLineEndAssignment_16.eContents().get(0);
		
		////ORG+1A:MUC+27213082:ATHGR28CS+ATH++T+GR:EUR:EN+A9996WSSU+04261178+1A'
		////ORG+NZ:AKL:00++AKL+NZ+A+NZ:NZD+PR'
		//ORGSegment:
		//    segment="ORG"
		//    PLUS
		//    ( systemDetail1=SystemDetailFunction )?
		//    PLUS
		//    ( originatorIdentification=OriginatorIdentificationFunction )?
		//    PLUS
		//    ( location=LocationFunction )?
		//    PLUS
		//    ( systemDetail2=SystemDetailFunction )?
		//    PLUS
		//    ( originatorTypeCode=ID )?
		//    PLUS
		//    ( originator=OriginatorFunction )?
		//    PLUS
		//    ( originatorsAuthorityRequestCode=ID )?
		//    (
		//        PLUS
		//        communicationNumber=ID
		//        (
		//            PLUS
		//            partyIdIdentification=ID
		//        )?
		//    )?
		//    lineEnd=QUOTE_AND_NL
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//segment="ORG"
		//PLUS
		//( systemDetail1=SystemDetailFunction )?
		//PLUS
		//( originatorIdentification=OriginatorIdentificationFunction )?
		//PLUS
		//( location=LocationFunction )?
		//PLUS
		//( systemDetail2=SystemDetailFunction )?
		//PLUS
		//( originatorTypeCode=ID )?
		//PLUS
		//( originator=OriginatorFunction )?
		//PLUS
		//( originatorsAuthorityRequestCode=ID )?
		//(
		//    PLUS
		//    communicationNumber=ID
		//    (
		//        PLUS
		//        partyIdIdentification=ID
		//    )?
		//)?
		//lineEnd=QUOTE_AND_NL
		public Group getGroup() { return cGroup; }
		
		//segment="ORG"
		public Assignment getSegmentAssignment_0() { return cSegmentAssignment_0; }
		
		//"ORG"
		public Keyword getSegmentORGKeyword_0_0() { return cSegmentORGKeyword_0_0; }
		
		//PLUS
		public RuleCall getPLUSTerminalRuleCall_1() { return cPLUSTerminalRuleCall_1; }
		
		//( systemDetail1=SystemDetailFunction )?
		public Assignment getSystemDetail1Assignment_2() { return cSystemDetail1Assignment_2; }
		
		//SystemDetailFunction
		public RuleCall getSystemDetail1SystemDetailFunctionParserRuleCall_2_0() { return cSystemDetail1SystemDetailFunctionParserRuleCall_2_0; }
		
		//PLUS
		public RuleCall getPLUSTerminalRuleCall_3() { return cPLUSTerminalRuleCall_3; }
		
		//( originatorIdentification=OriginatorIdentificationFunction )?
		public Assignment getOriginatorIdentificationAssignment_4() { return cOriginatorIdentificationAssignment_4; }
		
		//OriginatorIdentificationFunction
		public RuleCall getOriginatorIdentificationOriginatorIdentificationFunctionParserRuleCall_4_0() { return cOriginatorIdentificationOriginatorIdentificationFunctionParserRuleCall_4_0; }
		
		//PLUS
		public RuleCall getPLUSTerminalRuleCall_5() { return cPLUSTerminalRuleCall_5; }
		
		//( location=LocationFunction )?
		public Assignment getLocationAssignment_6() { return cLocationAssignment_6; }
		
		//LocationFunction
		public RuleCall getLocationLocationFunctionParserRuleCall_6_0() { return cLocationLocationFunctionParserRuleCall_6_0; }
		
		//PLUS
		public RuleCall getPLUSTerminalRuleCall_7() { return cPLUSTerminalRuleCall_7; }
		
		//( systemDetail2=SystemDetailFunction )?
		public Assignment getSystemDetail2Assignment_8() { return cSystemDetail2Assignment_8; }
		
		//SystemDetailFunction
		public RuleCall getSystemDetail2SystemDetailFunctionParserRuleCall_8_0() { return cSystemDetail2SystemDetailFunctionParserRuleCall_8_0; }
		
		//PLUS
		public RuleCall getPLUSTerminalRuleCall_9() { return cPLUSTerminalRuleCall_9; }
		
		//( originatorTypeCode=ID )?
		public Assignment getOriginatorTypeCodeAssignment_10() { return cOriginatorTypeCodeAssignment_10; }
		
		//ID
		public RuleCall getOriginatorTypeCodeIDTerminalRuleCall_10_0() { return cOriginatorTypeCodeIDTerminalRuleCall_10_0; }
		
		//PLUS
		public RuleCall getPLUSTerminalRuleCall_11() { return cPLUSTerminalRuleCall_11; }
		
		//( originator=OriginatorFunction )?
		public Assignment getOriginatorAssignment_12() { return cOriginatorAssignment_12; }
		
		//OriginatorFunction
		public RuleCall getOriginatorOriginatorFunctionParserRuleCall_12_0() { return cOriginatorOriginatorFunctionParserRuleCall_12_0; }
		
		//PLUS
		public RuleCall getPLUSTerminalRuleCall_13() { return cPLUSTerminalRuleCall_13; }
		
		//( originatorsAuthorityRequestCode=ID )?
		public Assignment getOriginatorsAuthorityRequestCodeAssignment_14() { return cOriginatorsAuthorityRequestCodeAssignment_14; }
		
		//ID
		public RuleCall getOriginatorsAuthorityRequestCodeIDTerminalRuleCall_14_0() { return cOriginatorsAuthorityRequestCodeIDTerminalRuleCall_14_0; }
		
		//(
		//    PLUS
		//    communicationNumber=ID
		//    (
		//        PLUS
		//        partyIdIdentification=ID
		//    )?
		//)?
		public Group getGroup_15() { return cGroup_15; }
		
		//PLUS
		public RuleCall getPLUSTerminalRuleCall_15_0() { return cPLUSTerminalRuleCall_15_0; }
		
		//communicationNumber=ID
		public Assignment getCommunicationNumberAssignment_15_1() { return cCommunicationNumberAssignment_15_1; }
		
		//ID
		public RuleCall getCommunicationNumberIDTerminalRuleCall_15_1_0() { return cCommunicationNumberIDTerminalRuleCall_15_1_0; }
		
		//(
		//    PLUS
		//    partyIdIdentification=ID
		//)?
		public Group getGroup_15_2() { return cGroup_15_2; }
		
		//PLUS
		public RuleCall getPLUSTerminalRuleCall_15_2_0() { return cPLUSTerminalRuleCall_15_2_0; }
		
		//partyIdIdentification=ID
		public Assignment getPartyIdIdentificationAssignment_15_2_1() { return cPartyIdIdentificationAssignment_15_2_1; }
		
		//ID
		public RuleCall getPartyIdIdentificationIDTerminalRuleCall_15_2_1_0() { return cPartyIdIdentificationIDTerminalRuleCall_15_2_1_0; }
		
		//lineEnd=QUOTE_AND_NL
		public Assignment getLineEndAssignment_16() { return cLineEndAssignment_16; }
		
		//QUOTE_AND_NL
		public RuleCall getLineEndQUOTE_AND_NLTerminalRuleCall_16_0() { return cLineEndQUOTE_AND_NLTerminalRuleCall_16_0; }
	}
	public class POCSegmentElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "io.thlaegler.edifact.Edilang.POCSegment");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cSegmentAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final Keyword cSegmentPOCKeyword_0_0 = (Keyword)cSegmentAssignment_0.eContents().get(0);
		private final RuleCall cPLUSTerminalRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		private final Assignment cLocationAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cLocationIDTerminalRuleCall_2_0 = (RuleCall)cLocationAssignment_2.eContents().get(0);
		private final RuleCall cPLUSTerminalRuleCall_3 = (RuleCall)cGroup.eContents().get(3);
		private final Assignment cDepartureDateAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cDepartureDateIDTerminalRuleCall_4_0 = (RuleCall)cDepartureDateAssignment_4.eContents().get(0);
		private final Group cGroup_5 = (Group)cGroup.eContents().get(5);
		private final RuleCall cPLUSTerminalRuleCall_5_0 = (RuleCall)cGroup_5.eContents().get(0);
		private final Assignment cDepartureTimeAssignment_5_1 = (Assignment)cGroup_5.eContents().get(1);
		private final RuleCall cDepartureTimeIDTerminalRuleCall_5_1_0 = (RuleCall)cDepartureTimeAssignment_5_1.eContents().get(0);
		private final Assignment cLineEndAssignment_6 = (Assignment)cGroup.eContents().get(6);
		private final RuleCall cLineEndQUOTE_AND_NLTerminalRuleCall_6_0 = (RuleCall)cLineEndAssignment_6.eContents().get(0);
		
		////POC+BNE+220120'
		//POCSegment:
		//    segment="POC"
		//    PLUS
		//    (location=ID)?
		//    PLUS
		//    (departureDate=ID)?
		//    (
		//        PLUS
		//        departureTime=ID
		//    )?
		//    lineEnd=QUOTE_AND_NL
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//segment="POC"
		//PLUS
		//(location=ID)?
		//PLUS
		//(departureDate=ID)?
		//(
		//    PLUS
		//    departureTime=ID
		//)?
		//lineEnd=QUOTE_AND_NL
		public Group getGroup() { return cGroup; }
		
		//segment="POC"
		public Assignment getSegmentAssignment_0() { return cSegmentAssignment_0; }
		
		//"POC"
		public Keyword getSegmentPOCKeyword_0_0() { return cSegmentPOCKeyword_0_0; }
		
		//PLUS
		public RuleCall getPLUSTerminalRuleCall_1() { return cPLUSTerminalRuleCall_1; }
		
		//(location=ID)?
		public Assignment getLocationAssignment_2() { return cLocationAssignment_2; }
		
		//ID
		public RuleCall getLocationIDTerminalRuleCall_2_0() { return cLocationIDTerminalRuleCall_2_0; }
		
		//PLUS
		public RuleCall getPLUSTerminalRuleCall_3() { return cPLUSTerminalRuleCall_3; }
		
		//(departureDate=ID)?
		public Assignment getDepartureDateAssignment_4() { return cDepartureDateAssignment_4; }
		
		//ID
		public RuleCall getDepartureDateIDTerminalRuleCall_4_0() { return cDepartureDateIDTerminalRuleCall_4_0; }
		
		//(
		//    PLUS
		//    departureTime=ID
		//)?
		public Group getGroup_5() { return cGroup_5; }
		
		//PLUS
		public RuleCall getPLUSTerminalRuleCall_5_0() { return cPLUSTerminalRuleCall_5_0; }
		
		//departureTime=ID
		public Assignment getDepartureTimeAssignment_5_1() { return cDepartureTimeAssignment_5_1; }
		
		//ID
		public RuleCall getDepartureTimeIDTerminalRuleCall_5_1_0() { return cDepartureTimeIDTerminalRuleCall_5_1_0; }
		
		//lineEnd=QUOTE_AND_NL
		public Assignment getLineEndAssignment_6() { return cLineEndAssignment_6; }
		
		//QUOTE_AND_NL
		public RuleCall getLineEndQUOTE_AND_NLTerminalRuleCall_6_0() { return cLineEndQUOTE_AND_NLTerminalRuleCall_6_0; }
	}
	public class ODISegmentElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "io.thlaegler.edifact.Edilang.ODISegment");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cSegmentAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final Keyword cSegmentODIKeyword_0_0 = (Keyword)cSegmentAssignment_0.eContents().get(0);
		private final Group cGroup_1 = (Group)cGroup.eContents().get(1);
		private final RuleCall cPLUSTerminalRuleCall_1_0 = (RuleCall)cGroup_1.eContents().get(0);
		private final Assignment cOriginAssignment_1_1 = (Assignment)cGroup_1.eContents().get(1);
		private final RuleCall cOriginIDTerminalRuleCall_1_1_0 = (RuleCall)cOriginAssignment_1_1.eContents().get(0);
		private final RuleCall cPLUSTerminalRuleCall_1_2 = (RuleCall)cGroup_1.eContents().get(2);
		private final Assignment cDestinationAssignment_1_3 = (Assignment)cGroup_1.eContents().get(3);
		private final RuleCall cDestinationIDTerminalRuleCall_1_3_0 = (RuleCall)cDestinationAssignment_1_3.eContents().get(0);
		private final Assignment cLineEndAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cLineEndQUOTE_AND_NLTerminalRuleCall_2_0 = (RuleCall)cLineEndAssignment_2.eContents().get(0);
		
		////ODI+BNE+ZQN'
		//ODISegment:
		//    segment="ODI"
		//    (
		//        PLUS
		//        (origin=ID)?
		//        PLUS
		//        (destination=ID)?
		//    )?
		//    lineEnd=QUOTE_AND_NL
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//segment="ODI"
		//(
		//    PLUS
		//    (origin=ID)?
		//    PLUS
		//    (destination=ID)?
		//)?
		//lineEnd=QUOTE_AND_NL
		public Group getGroup() { return cGroup; }
		
		//segment="ODI"
		public Assignment getSegmentAssignment_0() { return cSegmentAssignment_0; }
		
		//"ODI"
		public Keyword getSegmentODIKeyword_0_0() { return cSegmentODIKeyword_0_0; }
		
		//(
		//    PLUS
		//    (origin=ID)?
		//    PLUS
		//    (destination=ID)?
		//)?
		public Group getGroup_1() { return cGroup_1; }
		
		//PLUS
		public RuleCall getPLUSTerminalRuleCall_1_0() { return cPLUSTerminalRuleCall_1_0; }
		
		//(origin=ID)?
		public Assignment getOriginAssignment_1_1() { return cOriginAssignment_1_1; }
		
		//ID
		public RuleCall getOriginIDTerminalRuleCall_1_1_0() { return cOriginIDTerminalRuleCall_1_1_0; }
		
		//PLUS
		public RuleCall getPLUSTerminalRuleCall_1_2() { return cPLUSTerminalRuleCall_1_2; }
		
		//(destination=ID)?
		public Assignment getDestinationAssignment_1_3() { return cDestinationAssignment_1_3; }
		
		//ID
		public RuleCall getDestinationIDTerminalRuleCall_1_3_0() { return cDestinationIDTerminalRuleCall_1_3_0; }
		
		//lineEnd=QUOTE_AND_NL
		public Assignment getLineEndAssignment_2() { return cLineEndAssignment_2; }
		
		//QUOTE_AND_NL
		public RuleCall getLineEndQUOTE_AND_NLTerminalRuleCall_2_0() { return cLineEndQUOTE_AND_NLTerminalRuleCall_2_0; }
	}
	public class UCISegmentElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "io.thlaegler.edifact.Edilang.UCISegment");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cSegmentAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final Keyword cSegmentUCIKeyword_0_0 = (Keyword)cSegmentAssignment_0.eContents().get(0);
		private final RuleCall cPLUSTerminalRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		private final Assignment cInterchangeControlReferenceAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cInterchangeControlReferenceIDTerminalRuleCall_2_0 = (RuleCall)cInterchangeControlReferenceAssignment_2.eContents().get(0);
		private final RuleCall cPLUSTerminalRuleCall_3 = (RuleCall)cGroup.eContents().get(3);
		private final Assignment cInterchangeSenderAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cInterchangeSenderIDTerminalRuleCall_4_0 = (RuleCall)cInterchangeSenderAssignment_4.eContents().get(0);
		private final RuleCall cPLUSTerminalRuleCall_5 = (RuleCall)cGroup.eContents().get(5);
		private final Assignment cInterchangeRecipientAssignment_6 = (Assignment)cGroup.eContents().get(6);
		private final RuleCall cInterchangeRecipientIDTerminalRuleCall_6_0 = (RuleCall)cInterchangeRecipientAssignment_6.eContents().get(0);
		private final RuleCall cPLUSTerminalRuleCall_7 = (RuleCall)cGroup.eContents().get(7);
		private final Assignment cActionAssignment_8 = (Assignment)cGroup.eContents().get(8);
		private final RuleCall cActionIDTerminalRuleCall_8_0 = (RuleCall)cActionAssignment_8.eContents().get(0);
		private final RuleCall cPLUSTerminalRuleCall_9 = (RuleCall)cGroup.eContents().get(9);
		private final Assignment cSyntaxErrorCodeAssignment_10 = (Assignment)cGroup.eContents().get(10);
		private final RuleCall cSyntaxErrorCodeIDTerminalRuleCall_10_0 = (RuleCall)cSyntaxErrorCodeAssignment_10.eContents().get(0);
		private final RuleCall cPLUSTerminalRuleCall_11 = (RuleCall)cGroup.eContents().get(11);
		private final Assignment cSegmentTagCodeAssignment_12 = (Assignment)cGroup.eContents().get(12);
		private final RuleCall cSegmentTagCodeIDTerminalRuleCall_12_0 = (RuleCall)cSegmentTagCodeAssignment_12.eContents().get(0);
		private final Assignment cLineEndAssignment_13 = (Assignment)cGroup.eContents().get(13);
		private final RuleCall cLineEndQUOTE_AND_NLTerminalRuleCall_13_0 = (RuleCall)cLineEndAssignment_13.eContents().get(0);
		
		////
		//UCISegment:
		//    segment="UCI"
		//    PLUS
		//    ( interchangeControlReference=ID )?
		//    PLUS
		//    ( interchangeSender=ID )?
		//    PLUS
		//    ( interchangeRecipient=ID )?
		//    PLUS
		//    ( action=ID )?
		//    PLUS
		//    ( syntaxErrorCode=ID )?
		//    PLUS
		//    ( segmentTagCode=ID )?
		//    lineEnd=QUOTE_AND_NL
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//segment="UCI"
		//PLUS
		//( interchangeControlReference=ID )?
		//PLUS
		//( interchangeSender=ID )?
		//PLUS
		//( interchangeRecipient=ID )?
		//PLUS
		//( action=ID )?
		//PLUS
		//( syntaxErrorCode=ID )?
		//PLUS
		//( segmentTagCode=ID )?
		//lineEnd=QUOTE_AND_NL
		public Group getGroup() { return cGroup; }
		
		//segment="UCI"
		public Assignment getSegmentAssignment_0() { return cSegmentAssignment_0; }
		
		//"UCI"
		public Keyword getSegmentUCIKeyword_0_0() { return cSegmentUCIKeyword_0_0; }
		
		//PLUS
		public RuleCall getPLUSTerminalRuleCall_1() { return cPLUSTerminalRuleCall_1; }
		
		//( interchangeControlReference=ID )?
		public Assignment getInterchangeControlReferenceAssignment_2() { return cInterchangeControlReferenceAssignment_2; }
		
		//ID
		public RuleCall getInterchangeControlReferenceIDTerminalRuleCall_2_0() { return cInterchangeControlReferenceIDTerminalRuleCall_2_0; }
		
		//PLUS
		public RuleCall getPLUSTerminalRuleCall_3() { return cPLUSTerminalRuleCall_3; }
		
		//( interchangeSender=ID )?
		public Assignment getInterchangeSenderAssignment_4() { return cInterchangeSenderAssignment_4; }
		
		//ID
		public RuleCall getInterchangeSenderIDTerminalRuleCall_4_0() { return cInterchangeSenderIDTerminalRuleCall_4_0; }
		
		//PLUS
		public RuleCall getPLUSTerminalRuleCall_5() { return cPLUSTerminalRuleCall_5; }
		
		//( interchangeRecipient=ID )?
		public Assignment getInterchangeRecipientAssignment_6() { return cInterchangeRecipientAssignment_6; }
		
		//ID
		public RuleCall getInterchangeRecipientIDTerminalRuleCall_6_0() { return cInterchangeRecipientIDTerminalRuleCall_6_0; }
		
		//PLUS
		public RuleCall getPLUSTerminalRuleCall_7() { return cPLUSTerminalRuleCall_7; }
		
		//( action=ID )?
		public Assignment getActionAssignment_8() { return cActionAssignment_8; }
		
		//ID
		public RuleCall getActionIDTerminalRuleCall_8_0() { return cActionIDTerminalRuleCall_8_0; }
		
		//PLUS
		public RuleCall getPLUSTerminalRuleCall_9() { return cPLUSTerminalRuleCall_9; }
		
		//( syntaxErrorCode=ID )?
		public Assignment getSyntaxErrorCodeAssignment_10() { return cSyntaxErrorCodeAssignment_10; }
		
		//ID
		public RuleCall getSyntaxErrorCodeIDTerminalRuleCall_10_0() { return cSyntaxErrorCodeIDTerminalRuleCall_10_0; }
		
		//PLUS
		public RuleCall getPLUSTerminalRuleCall_11() { return cPLUSTerminalRuleCall_11; }
		
		//( segmentTagCode=ID )?
		public Assignment getSegmentTagCodeAssignment_12() { return cSegmentTagCodeAssignment_12; }
		
		//ID
		public RuleCall getSegmentTagCodeIDTerminalRuleCall_12_0() { return cSegmentTagCodeIDTerminalRuleCall_12_0; }
		
		//lineEnd=QUOTE_AND_NL
		public Assignment getLineEndAssignment_13() { return cLineEndAssignment_13; }
		
		//QUOTE_AND_NL
		public RuleCall getLineEndQUOTE_AND_NLTerminalRuleCall_13_0() { return cLineEndQUOTE_AND_NLTerminalRuleCall_13_0; }
	}
	public class PDISegmentElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "io.thlaegler.edifact.Edilang.PDISegment");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cSegmentAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final Keyword cSegmentPDIKeyword_0_0 = (Keyword)cSegmentAssignment_0.eContents().get(0);
		private final RuleCall cPLUSTerminalRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		private final Assignment cProductDetailsQualifierAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cProductDetailsQualifierIDTerminalRuleCall_2_0 = (RuleCall)cProductDetailsQualifierAssignment_2.eContents().get(0);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final RuleCall cPLUSTerminalRuleCall_3_0 = (RuleCall)cGroup_3.eContents().get(0);
		private final Assignment cProductsAssignment_3_1 = (Assignment)cGroup_3.eContents().get(1);
		private final RuleCall cProductsProductFunctionParserRuleCall_3_1_0 = (RuleCall)cProductsAssignment_3_1.eContents().get(0);
		private final Assignment cLineEndAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cLineEndQUOTE_AND_NLTerminalRuleCall_4_0 = (RuleCall)cLineEndAssignment_4.eContents().get(0);
		
		////
		//PDISegment:
		//    segment="PDI"
		//    PLUS
		//    ( productDetailsQualifier=ID )?
		//    (
		//        PLUS
		//        products+=ProductFunction
		//    )*
		//    lineEnd=QUOTE_AND_NL
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//segment="PDI"
		//PLUS
		//( productDetailsQualifier=ID )?
		//(
		//    PLUS
		//    products+=ProductFunction
		//)*
		//lineEnd=QUOTE_AND_NL
		public Group getGroup() { return cGroup; }
		
		//segment="PDI"
		public Assignment getSegmentAssignment_0() { return cSegmentAssignment_0; }
		
		//"PDI"
		public Keyword getSegmentPDIKeyword_0_0() { return cSegmentPDIKeyword_0_0; }
		
		//PLUS
		public RuleCall getPLUSTerminalRuleCall_1() { return cPLUSTerminalRuleCall_1; }
		
		//( productDetailsQualifier=ID )?
		public Assignment getProductDetailsQualifierAssignment_2() { return cProductDetailsQualifierAssignment_2; }
		
		//ID
		public RuleCall getProductDetailsQualifierIDTerminalRuleCall_2_0() { return cProductDetailsQualifierIDTerminalRuleCall_2_0; }
		
		//(
		//    PLUS
		//    products+=ProductFunction
		//)*
		public Group getGroup_3() { return cGroup_3; }
		
		//PLUS
		public RuleCall getPLUSTerminalRuleCall_3_0() { return cPLUSTerminalRuleCall_3_0; }
		
		//products+=ProductFunction
		public Assignment getProductsAssignment_3_1() { return cProductsAssignment_3_1; }
		
		//ProductFunction
		public RuleCall getProductsProductFunctionParserRuleCall_3_1_0() { return cProductsProductFunctionParserRuleCall_3_1_0; }
		
		//lineEnd=QUOTE_AND_NL
		public Assignment getLineEndAssignment_4() { return cLineEndAssignment_4; }
		
		//QUOTE_AND_NL
		public RuleCall getLineEndQUOTE_AND_NLTerminalRuleCall_4_0() { return cLineEndQUOTE_AND_NLTerminalRuleCall_4_0; }
	}
	public class TVLSegmentElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "io.thlaegler.edifact.Edilang.TVLSegment");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cSegmentAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final Keyword cSegmentTVLKeyword_0_0 = (Keyword)cSegmentAssignment_0.eContents().get(0);
		private final RuleCall cPLUSTerminalRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		private final Alternatives cAlternatives_2 = (Alternatives)cGroup.eContents().get(2);
		private final Assignment cDateAndTimeAssignment_2_0 = (Assignment)cAlternatives_2.eContents().get(0);
		private final RuleCall cDateAndTimeDateOnlyFunctionParserRuleCall_2_0_0 = (RuleCall)cDateAndTimeAssignment_2_0.eContents().get(0);
		private final Group cGroup_2_1 = (Group)cAlternatives_2.eContents().get(1);
		private final Assignment cDateAndTimeAssignment_2_1_0 = (Assignment)cGroup_2_1.eContents().get(0);
		private final RuleCall cDateAndTimeDateAndTimeFunctionParserRuleCall_2_1_0_0 = (RuleCall)cDateAndTimeAssignment_2_1_0.eContents().get(0);
		private final Group cGroup_2_1_1 = (Group)cGroup_2_1.eContents().get(1);
		private final RuleCall cCOLONTerminalRuleCall_2_1_1_0 = (RuleCall)cGroup_2_1_1.eContents().get(0);
		private final Assignment cDateAndTimeAssignment_2_1_1_1 = (Assignment)cGroup_2_1_1.eContents().get(1);
		private final RuleCall cDateAndTimeDateAndTimeFunctionParserRuleCall_2_1_1_1_0 = (RuleCall)cDateAndTimeAssignment_2_1_1_1.eContents().get(0);
		private final RuleCall cPLUSTerminalRuleCall_3 = (RuleCall)cGroup.eContents().get(3);
		private final Assignment cOriginCodeAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cOriginCodeIDTerminalRuleCall_4_0 = (RuleCall)cOriginCodeAssignment_4.eContents().get(0);
		private final RuleCall cPLUSTerminalRuleCall_5 = (RuleCall)cGroup.eContents().get(5);
		private final Assignment cDestinationCodeAssignment_6 = (Assignment)cGroup.eContents().get(6);
		private final RuleCall cDestinationCodeIDTerminalRuleCall_6_0 = (RuleCall)cDestinationCodeAssignment_6.eContents().get(0);
		private final RuleCall cPLUSTerminalRuleCall_7 = (RuleCall)cGroup.eContents().get(7);
		private final Assignment cCarrierIdAssignment_8 = (Assignment)cGroup.eContents().get(8);
		private final RuleCall cCarrierIdIDTerminalRuleCall_8_0 = (RuleCall)cCarrierIdAssignment_8.eContents().get(0);
		private final RuleCall cPLUSTerminalRuleCall_9 = (RuleCall)cGroup.eContents().get(9);
		private final Group cGroup_10 = (Group)cGroup.eContents().get(10);
		private final Assignment cProductIdAssignment_10_0 = (Assignment)cGroup_10.eContents().get(0);
		private final RuleCall cProductIdIDTerminalRuleCall_10_0_0 = (RuleCall)cProductIdAssignment_10_0.eContents().get(0);
		private final Group cGroup_10_1 = (Group)cGroup_10.eContents().get(1);
		private final RuleCall cCOLONTerminalRuleCall_10_1_0 = (RuleCall)cGroup_10_1.eContents().get(0);
		private final Assignment cCharacteristicIdAssignment_10_1_1 = (Assignment)cGroup_10_1.eContents().get(1);
		private final RuleCall cCharacteristicIdIDTerminalRuleCall_10_1_1_0 = (RuleCall)cCharacteristicIdAssignment_10_1_1.eContents().get(0);
		private final Group cGroup_10_1_2 = (Group)cGroup_10_1.eContents().get(2);
		private final RuleCall cCOLONTerminalRuleCall_10_1_2_0 = (RuleCall)cGroup_10_1_2.eContents().get(0);
		private final Assignment cProductIdCharacteristicAssignment_10_1_2_1 = (Assignment)cGroup_10_1_2.eContents().get(1);
		private final RuleCall cProductIdCharacteristicIDTerminalRuleCall_10_1_2_1_0 = (RuleCall)cProductIdCharacteristicAssignment_10_1_2_1.eContents().get(0);
		private final Group cGroup_10_1_2_2 = (Group)cGroup_10_1_2.eContents().get(2);
		private final RuleCall cCOLONTerminalRuleCall_10_1_2_2_0 = (RuleCall)cGroup_10_1_2_2.eContents().get(0);
		private final Assignment cDescriptionIdsAssignment_10_1_2_2_1 = (Assignment)cGroup_10_1_2_2.eContents().get(1);
		private final RuleCall cDescriptionIdsIDTerminalRuleCall_10_1_2_2_1_0 = (RuleCall)cDescriptionIdsAssignment_10_1_2_2_1.eContents().get(0);
		private final Group cGroup_11 = (Group)cGroup.eContents().get(11);
		private final RuleCall cPLUSTerminalRuleCall_11_0 = (RuleCall)cGroup_11.eContents().get(0);
		private final Assignment cProductTypeAssignment_11_1 = (Assignment)cGroup_11.eContents().get(1);
		private final RuleCall cProductTypeIDTerminalRuleCall_11_1_0 = (RuleCall)cProductTypeAssignment_11_1.eContents().get(0);
		private final Group cGroup_11_2 = (Group)cGroup_11.eContents().get(2);
		private final RuleCall cPLUSTerminalRuleCall_11_2_0 = (RuleCall)cGroup_11_2.eContents().get(0);
		private final Assignment cLineItemNumberAssignment_11_2_1 = (Assignment)cGroup_11_2.eContents().get(1);
		private final RuleCall cLineItemNumberIDTerminalRuleCall_11_2_1_0 = (RuleCall)cLineItemNumberAssignment_11_2_1.eContents().get(0);
		private final Group cGroup_11_2_2 = (Group)cGroup_11_2.eContents().get(2);
		private final RuleCall cPLUSTerminalRuleCall_11_2_2_0 = (RuleCall)cGroup_11_2_2.eContents().get(0);
		private final Assignment cProcessingIndicatorCodeAssignment_11_2_2_1 = (Assignment)cGroup_11_2_2.eContents().get(1);
		private final RuleCall cProcessingIndicatorCodeIDTerminalRuleCall_11_2_2_1_0 = (RuleCall)cProcessingIndicatorCodeAssignment_11_2_2_1.eContents().get(0);
		private final Assignment cLineEndAssignment_12 = (Assignment)cGroup.eContents().get(12);
		private final RuleCall cLineEndQUOTE_AND_NLTerminalRuleCall_12_0 = (RuleCall)cLineEndAssignment_12.eContents().get(0);
		
		////TVL+230120+CHC+ZQN+NZ+5641+3+2+P"
		//TVLSegment:
		//    segment="TVL"
		//    PLUS
		//    (
		//        (
		//            dateAndTime+=DateOnlyFunction
		////            (
		////                COLON
		////                dateAndTime+=DateOnly
		////            )*
		//        )
		//        |
		//        (
		//            dateAndTime+=DateAndTimeFunction
		//            (
		//                COLON
		//                dateAndTime+=DateAndTimeFunction
		//            )*
		//        )
		//    )
		//    PLUS
		//    (originCode=ID)?
		//    PLUS
		//    (destinationCode=ID)?
		//    PLUS
		//    (carrierId=ID)?
		//    PLUS
		//    (
		//        productId=ID
		//        (
		//            COLON
		//            characteristicId=ID
		//            (
		//                COLON
		//                productIdCharacteristic=ID
		//                (
		//                    COLON
		//                    descriptionIds+=ID
		//                )*
		//            )?
		//        )?
		//    )?
		//    (
		//        PLUS
		//        productType=ID
		//        (
		//            PLUS
		//            lineItemNumber=ID
		//            (
		//                PLUS
		//                processingIndicatorCode=ID
		//            )?
		//        )?
		//    )?
		//    lineEnd=QUOTE_AND_NL
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//    segment="TVL"
		//    PLUS
		//    (
		//        (
		//            dateAndTime+=DateOnlyFunction
		////            (
		////                COLON
		////                dateAndTime+=DateOnly
		////            )*
		//        )
		//        |
		//        (
		//            dateAndTime+=DateAndTimeFunction
		//            (
		//                COLON
		//                dateAndTime+=DateAndTimeFunction
		//            )*
		//        )
		//    )
		//    PLUS
		//    (originCode=ID)?
		//    PLUS
		//    (destinationCode=ID)?
		//    PLUS
		//    (carrierId=ID)?
		//    PLUS
		//    (
		//        productId=ID
		//        (
		//            COLON
		//            characteristicId=ID
		//            (
		//                COLON
		//                productIdCharacteristic=ID
		//                (
		//                    COLON
		//                    descriptionIds+=ID
		//                )*
		//            )?
		//        )?
		//    )?
		//    (
		//        PLUS
		//        productType=ID
		//        (
		//            PLUS
		//            lineItemNumber=ID
		//            (
		//                PLUS
		//                processingIndicatorCode=ID
		//            )?
		//        )?
		//    )?
		//    lineEnd=QUOTE_AND_NL
		public Group getGroup() { return cGroup; }
		
		//segment="TVL"
		public Assignment getSegmentAssignment_0() { return cSegmentAssignment_0; }
		
		//"TVL"
		public Keyword getSegmentTVLKeyword_0_0() { return cSegmentTVLKeyword_0_0; }
		
		//PLUS
		public RuleCall getPLUSTerminalRuleCall_1() { return cPLUSTerminalRuleCall_1; }
		
		//    (
		//        (
		//            dateAndTime+=DateOnlyFunction
		////            (
		////                COLON
		////                dateAndTime+=DateOnly
		////            )*
		//        )
		//        |
		//        (
		//            dateAndTime+=DateAndTimeFunction
		//            (
		//                COLON
		//                dateAndTime+=DateAndTimeFunction
		//            )*
		//        )
		//    )
		public Alternatives getAlternatives_2() { return cAlternatives_2; }
		
		//        (
		//            dateAndTime+=DateOnlyFunction
		////            (
		////                COLON
		////                dateAndTime+=DateOnly
		////            )*
		//        )
		public Assignment getDateAndTimeAssignment_2_0() { return cDateAndTimeAssignment_2_0; }
		
		//DateOnlyFunction
		public RuleCall getDateAndTimeDateOnlyFunctionParserRuleCall_2_0_0() { return cDateAndTimeDateOnlyFunctionParserRuleCall_2_0_0; }
		
		//(
		//    dateAndTime+=DateAndTimeFunction
		//    (
		//        COLON
		//        dateAndTime+=DateAndTimeFunction
		//    )*
		//)
		public Group getGroup_2_1() { return cGroup_2_1; }
		
		//dateAndTime+=DateAndTimeFunction
		public Assignment getDateAndTimeAssignment_2_1_0() { return cDateAndTimeAssignment_2_1_0; }
		
		//DateAndTimeFunction
		public RuleCall getDateAndTimeDateAndTimeFunctionParserRuleCall_2_1_0_0() { return cDateAndTimeDateAndTimeFunctionParserRuleCall_2_1_0_0; }
		
		//(
		//    COLON
		//    dateAndTime+=DateAndTimeFunction
		//)*
		public Group getGroup_2_1_1() { return cGroup_2_1_1; }
		
		//COLON
		public RuleCall getCOLONTerminalRuleCall_2_1_1_0() { return cCOLONTerminalRuleCall_2_1_1_0; }
		
		//dateAndTime+=DateAndTimeFunction
		public Assignment getDateAndTimeAssignment_2_1_1_1() { return cDateAndTimeAssignment_2_1_1_1; }
		
		//DateAndTimeFunction
		public RuleCall getDateAndTimeDateAndTimeFunctionParserRuleCall_2_1_1_1_0() { return cDateAndTimeDateAndTimeFunctionParserRuleCall_2_1_1_1_0; }
		
		//PLUS
		public RuleCall getPLUSTerminalRuleCall_3() { return cPLUSTerminalRuleCall_3; }
		
		//(originCode=ID)?
		public Assignment getOriginCodeAssignment_4() { return cOriginCodeAssignment_4; }
		
		//ID
		public RuleCall getOriginCodeIDTerminalRuleCall_4_0() { return cOriginCodeIDTerminalRuleCall_4_0; }
		
		//PLUS
		public RuleCall getPLUSTerminalRuleCall_5() { return cPLUSTerminalRuleCall_5; }
		
		//(destinationCode=ID)?
		public Assignment getDestinationCodeAssignment_6() { return cDestinationCodeAssignment_6; }
		
		//ID
		public RuleCall getDestinationCodeIDTerminalRuleCall_6_0() { return cDestinationCodeIDTerminalRuleCall_6_0; }
		
		//PLUS
		public RuleCall getPLUSTerminalRuleCall_7() { return cPLUSTerminalRuleCall_7; }
		
		//(carrierId=ID)?
		public Assignment getCarrierIdAssignment_8() { return cCarrierIdAssignment_8; }
		
		//ID
		public RuleCall getCarrierIdIDTerminalRuleCall_8_0() { return cCarrierIdIDTerminalRuleCall_8_0; }
		
		//PLUS
		public RuleCall getPLUSTerminalRuleCall_9() { return cPLUSTerminalRuleCall_9; }
		
		//(
		//    productId=ID
		//    (
		//        COLON
		//        characteristicId=ID
		//        (
		//            COLON
		//            productIdCharacteristic=ID
		//            (
		//                COLON
		//                descriptionIds+=ID
		//            )*
		//        )?
		//    )?
		//)?
		public Group getGroup_10() { return cGroup_10; }
		
		//productId=ID
		public Assignment getProductIdAssignment_10_0() { return cProductIdAssignment_10_0; }
		
		//ID
		public RuleCall getProductIdIDTerminalRuleCall_10_0_0() { return cProductIdIDTerminalRuleCall_10_0_0; }
		
		//(
		//    COLON
		//    characteristicId=ID
		//    (
		//        COLON
		//        productIdCharacteristic=ID
		//        (
		//            COLON
		//            descriptionIds+=ID
		//        )*
		//    )?
		//)?
		public Group getGroup_10_1() { return cGroup_10_1; }
		
		//COLON
		public RuleCall getCOLONTerminalRuleCall_10_1_0() { return cCOLONTerminalRuleCall_10_1_0; }
		
		//characteristicId=ID
		public Assignment getCharacteristicIdAssignment_10_1_1() { return cCharacteristicIdAssignment_10_1_1; }
		
		//ID
		public RuleCall getCharacteristicIdIDTerminalRuleCall_10_1_1_0() { return cCharacteristicIdIDTerminalRuleCall_10_1_1_0; }
		
		//(
		//    COLON
		//    productIdCharacteristic=ID
		//    (
		//        COLON
		//        descriptionIds+=ID
		//    )*
		//)?
		public Group getGroup_10_1_2() { return cGroup_10_1_2; }
		
		//COLON
		public RuleCall getCOLONTerminalRuleCall_10_1_2_0() { return cCOLONTerminalRuleCall_10_1_2_0; }
		
		//productIdCharacteristic=ID
		public Assignment getProductIdCharacteristicAssignment_10_1_2_1() { return cProductIdCharacteristicAssignment_10_1_2_1; }
		
		//ID
		public RuleCall getProductIdCharacteristicIDTerminalRuleCall_10_1_2_1_0() { return cProductIdCharacteristicIDTerminalRuleCall_10_1_2_1_0; }
		
		//(
		//    COLON
		//    descriptionIds+=ID
		//)*
		public Group getGroup_10_1_2_2() { return cGroup_10_1_2_2; }
		
		//COLON
		public RuleCall getCOLONTerminalRuleCall_10_1_2_2_0() { return cCOLONTerminalRuleCall_10_1_2_2_0; }
		
		//descriptionIds+=ID
		public Assignment getDescriptionIdsAssignment_10_1_2_2_1() { return cDescriptionIdsAssignment_10_1_2_2_1; }
		
		//ID
		public RuleCall getDescriptionIdsIDTerminalRuleCall_10_1_2_2_1_0() { return cDescriptionIdsIDTerminalRuleCall_10_1_2_2_1_0; }
		
		//(
		//    PLUS
		//    productType=ID
		//    (
		//        PLUS
		//        lineItemNumber=ID
		//        (
		//            PLUS
		//            processingIndicatorCode=ID
		//        )?
		//    )?
		//)?
		public Group getGroup_11() { return cGroup_11; }
		
		//PLUS
		public RuleCall getPLUSTerminalRuleCall_11_0() { return cPLUSTerminalRuleCall_11_0; }
		
		//productType=ID
		public Assignment getProductTypeAssignment_11_1() { return cProductTypeAssignment_11_1; }
		
		//ID
		public RuleCall getProductTypeIDTerminalRuleCall_11_1_0() { return cProductTypeIDTerminalRuleCall_11_1_0; }
		
		//(
		//    PLUS
		//    lineItemNumber=ID
		//    (
		//        PLUS
		//        processingIndicatorCode=ID
		//    )?
		//)?
		public Group getGroup_11_2() { return cGroup_11_2; }
		
		//PLUS
		public RuleCall getPLUSTerminalRuleCall_11_2_0() { return cPLUSTerminalRuleCall_11_2_0; }
		
		//lineItemNumber=ID
		public Assignment getLineItemNumberAssignment_11_2_1() { return cLineItemNumberAssignment_11_2_1; }
		
		//ID
		public RuleCall getLineItemNumberIDTerminalRuleCall_11_2_1_0() { return cLineItemNumberIDTerminalRuleCall_11_2_1_0; }
		
		//(
		//    PLUS
		//    processingIndicatorCode=ID
		//)?
		public Group getGroup_11_2_2() { return cGroup_11_2_2; }
		
		//PLUS
		public RuleCall getPLUSTerminalRuleCall_11_2_2_0() { return cPLUSTerminalRuleCall_11_2_2_0; }
		
		//processingIndicatorCode=ID
		public Assignment getProcessingIndicatorCodeAssignment_11_2_2_1() { return cProcessingIndicatorCodeAssignment_11_2_2_1; }
		
		//ID
		public RuleCall getProcessingIndicatorCodeIDTerminalRuleCall_11_2_2_1_0() { return cProcessingIndicatorCodeIDTerminalRuleCall_11_2_2_1_0; }
		
		//lineEnd=QUOTE_AND_NL
		public Assignment getLineEndAssignment_12() { return cLineEndAssignment_12; }
		
		//QUOTE_AND_NL
		public RuleCall getLineEndQUOTE_AND_NLTerminalRuleCall_12_0() { return cLineEndQUOTE_AND_NLTerminalRuleCall_12_0; }
	}
	public class RPISegmentElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "io.thlaegler.edifact.Edilang.RPISegment");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cSegmentAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final Keyword cSegmentRPIKeyword_0_0 = (Keyword)cSegmentAssignment_0.eContents().get(0);
		private final RuleCall cPLUSTerminalRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		private final Assignment cNumberOfPaxAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cNumberOfPaxIDTerminalRuleCall_2_0 = (RuleCall)cNumberOfPaxAssignment_2.eContents().get(0);
		private final RuleCall cPLUSTerminalRuleCall_3 = (RuleCall)cGroup.eContents().get(3);
		private final Assignment cStatusAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cStatusIDTerminalRuleCall_4_0 = (RuleCall)cStatusAssignment_4.eContents().get(0);
		private final Assignment cLineEndAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final RuleCall cLineEndQUOTE_AND_NLTerminalRuleCall_5_0 = (RuleCall)cLineEndAssignment_5.eContents().get(0);
		
		////RPI+1+SS'
		//RPISegment:
		//    segment="RPI"
		//    PLUS
		//    (numberOfPax=ID)?
		//    PLUS
		//    (status=ID)?
		//    lineEnd=QUOTE_AND_NL
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//segment="RPI"
		//PLUS
		//(numberOfPax=ID)?
		//PLUS
		//(status=ID)?
		//lineEnd=QUOTE_AND_NL
		public Group getGroup() { return cGroup; }
		
		//segment="RPI"
		public Assignment getSegmentAssignment_0() { return cSegmentAssignment_0; }
		
		//"RPI"
		public Keyword getSegmentRPIKeyword_0_0() { return cSegmentRPIKeyword_0_0; }
		
		//PLUS
		public RuleCall getPLUSTerminalRuleCall_1() { return cPLUSTerminalRuleCall_1; }
		
		//(numberOfPax=ID)?
		public Assignment getNumberOfPaxAssignment_2() { return cNumberOfPaxAssignment_2; }
		
		//ID
		public RuleCall getNumberOfPaxIDTerminalRuleCall_2_0() { return cNumberOfPaxIDTerminalRuleCall_2_0; }
		
		//PLUS
		public RuleCall getPLUSTerminalRuleCall_3() { return cPLUSTerminalRuleCall_3; }
		
		//(status=ID)?
		public Assignment getStatusAssignment_4() { return cStatusAssignment_4; }
		
		//ID
		public RuleCall getStatusIDTerminalRuleCall_4_0() { return cStatusIDTerminalRuleCall_4_0; }
		
		//lineEnd=QUOTE_AND_NL
		public Assignment getLineEndAssignment_5() { return cLineEndAssignment_5; }
		
		//QUOTE_AND_NL
		public RuleCall getLineEndQUOTE_AND_NLTerminalRuleCall_5_0() { return cLineEndQUOTE_AND_NLTerminalRuleCall_5_0; }
	}
	public class MOASegmentElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "io.thlaegler.edifact.Edilang.MOASegment");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cSegmentAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final Keyword cSegmentMOAKeyword_0_0 = (Keyword)cSegmentAssignment_0.eContents().get(0);
		private final RuleCall cPLUSTerminalRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		private final Assignment cMonetaryAmountTypeCodeQualifierAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cMonetaryAmountTypeCodeQualifierIDTerminalRuleCall_2_0 = (RuleCall)cMonetaryAmountTypeCodeQualifierAssignment_2.eContents().get(0);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final RuleCall cCOLONTerminalRuleCall_3_0 = (RuleCall)cGroup_3.eContents().get(0);
		private final Assignment cMonetaryAmountAssignment_3_1 = (Assignment)cGroup_3.eContents().get(1);
		private final RuleCall cMonetaryAmountIDTerminalRuleCall_3_1_0 = (RuleCall)cMonetaryAmountAssignment_3_1.eContents().get(0);
		private final Group cGroup_3_2 = (Group)cGroup_3.eContents().get(2);
		private final RuleCall cCOLONTerminalRuleCall_3_2_0 = (RuleCall)cGroup_3_2.eContents().get(0);
		private final Assignment cCurrencyIdentificationCodeAssignment_3_2_1 = (Assignment)cGroup_3_2.eContents().get(1);
		private final RuleCall cCurrencyIdentificationCodeIDTerminalRuleCall_3_2_1_0 = (RuleCall)cCurrencyIdentificationCodeAssignment_3_2_1.eContents().get(0);
		private final Group cGroup_3_2_2 = (Group)cGroup_3_2.eContents().get(2);
		private final RuleCall cCOLONTerminalRuleCall_3_2_2_0 = (RuleCall)cGroup_3_2_2.eContents().get(0);
		private final Assignment cCurrencyTypeCodeQualifierAssignment_3_2_2_1 = (Assignment)cGroup_3_2_2.eContents().get(1);
		private final RuleCall cCurrencyTypeCodeQualifierIDTerminalRuleCall_3_2_2_1_0 = (RuleCall)cCurrencyTypeCodeQualifierAssignment_3_2_2_1.eContents().get(0);
		private final Group cGroup_3_2_2_2 = (Group)cGroup_3_2_2.eContents().get(2);
		private final RuleCall cCOLONTerminalRuleCall_3_2_2_2_0 = (RuleCall)cGroup_3_2_2_2.eContents().get(0);
		private final Assignment cStatusDescriptionCodeAssignment_3_2_2_2_1 = (Assignment)cGroup_3_2_2_2.eContents().get(1);
		private final RuleCall cStatusDescriptionCodeIDTerminalRuleCall_3_2_2_2_1_0 = (RuleCall)cStatusDescriptionCodeAssignment_3_2_2_2_1.eContents().get(0);
		private final Assignment cLineEndAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cLineEndQUOTE_AND_NLTerminalRuleCall_4_0 = (RuleCall)cLineEndAssignment_4.eContents().get(0);
		
		////MOA+203:1960.29'
		//MOASegment:
		//    segment="MOA"
		//    PLUS
		//    monetaryAmountTypeCodeQualifier=ID // 5025
		//    (
		//        COLON
		//        monetaryAmount=ID // 5004
		//        (
		//            COLON
		//            currencyIdentificationCode=ID // 6345
		//            (
		//                COLON
		//                currencyTypeCodeQualifier=ID // 6343
		//                (
		//                    COLON
		//                    statusDescriptionCode=ID // 4405
		//                )?
		//            )?
		//        )?
		//    )?
		//    lineEnd=QUOTE_AND_NL
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//segment="MOA"
		//PLUS
		//monetaryAmountTypeCodeQualifier=ID // 5025
		//(
		//    COLON
		//    monetaryAmount=ID // 5004
		//    (
		//        COLON
		//        currencyIdentificationCode=ID // 6345
		//        (
		//            COLON
		//            currencyTypeCodeQualifier=ID // 6343
		//            (
		//                COLON
		//                statusDescriptionCode=ID // 4405
		//            )?
		//        )?
		//    )?
		//)?
		//lineEnd=QUOTE_AND_NL
		public Group getGroup() { return cGroup; }
		
		//segment="MOA"
		public Assignment getSegmentAssignment_0() { return cSegmentAssignment_0; }
		
		//"MOA"
		public Keyword getSegmentMOAKeyword_0_0() { return cSegmentMOAKeyword_0_0; }
		
		//PLUS
		public RuleCall getPLUSTerminalRuleCall_1() { return cPLUSTerminalRuleCall_1; }
		
		//monetaryAmountTypeCodeQualifier=ID
		public Assignment getMonetaryAmountTypeCodeQualifierAssignment_2() { return cMonetaryAmountTypeCodeQualifierAssignment_2; }
		
		//ID
		public RuleCall getMonetaryAmountTypeCodeQualifierIDTerminalRuleCall_2_0() { return cMonetaryAmountTypeCodeQualifierIDTerminalRuleCall_2_0; }
		
		//// 5025
		//   (
		//       COLON
		//       monetaryAmount=ID // 5004
		//       (
		//           COLON
		//           currencyIdentificationCode=ID // 6345
		//           (
		//               COLON
		//               currencyTypeCodeQualifier=ID // 6343
		//               (
		//                   COLON
		//                   statusDescriptionCode=ID // 4405
		//               )?
		//           )?
		//       )?
		//   )?
		public Group getGroup_3() { return cGroup_3; }
		
		//COLON
		public RuleCall getCOLONTerminalRuleCall_3_0() { return cCOLONTerminalRuleCall_3_0; }
		
		//monetaryAmount=ID
		public Assignment getMonetaryAmountAssignment_3_1() { return cMonetaryAmountAssignment_3_1; }
		
		//ID
		public RuleCall getMonetaryAmountIDTerminalRuleCall_3_1_0() { return cMonetaryAmountIDTerminalRuleCall_3_1_0; }
		
		//// 5004
		//       (
		//           COLON
		//           currencyIdentificationCode=ID // 6345
		//           (
		//               COLON
		//               currencyTypeCodeQualifier=ID // 6343
		//               (
		//                   COLON
		//                   statusDescriptionCode=ID // 4405
		//               )?
		//           )?
		//       )?
		public Group getGroup_3_2() { return cGroup_3_2; }
		
		//COLON
		public RuleCall getCOLONTerminalRuleCall_3_2_0() { return cCOLONTerminalRuleCall_3_2_0; }
		
		//currencyIdentificationCode=ID
		public Assignment getCurrencyIdentificationCodeAssignment_3_2_1() { return cCurrencyIdentificationCodeAssignment_3_2_1; }
		
		//ID
		public RuleCall getCurrencyIdentificationCodeIDTerminalRuleCall_3_2_1_0() { return cCurrencyIdentificationCodeIDTerminalRuleCall_3_2_1_0; }
		
		//// 6345
		//           (
		//               COLON
		//               currencyTypeCodeQualifier=ID // 6343
		//               (
		//                   COLON
		//                   statusDescriptionCode=ID // 4405
		//               )?
		//           )?
		public Group getGroup_3_2_2() { return cGroup_3_2_2; }
		
		//COLON
		public RuleCall getCOLONTerminalRuleCall_3_2_2_0() { return cCOLONTerminalRuleCall_3_2_2_0; }
		
		//currencyTypeCodeQualifier=ID
		public Assignment getCurrencyTypeCodeQualifierAssignment_3_2_2_1() { return cCurrencyTypeCodeQualifierAssignment_3_2_2_1; }
		
		//ID
		public RuleCall getCurrencyTypeCodeQualifierIDTerminalRuleCall_3_2_2_1_0() { return cCurrencyTypeCodeQualifierIDTerminalRuleCall_3_2_2_1_0; }
		
		//// 6343
		//               (
		//                   COLON
		//                   statusDescriptionCode=ID // 4405
		//               )?
		public Group getGroup_3_2_2_2() { return cGroup_3_2_2_2; }
		
		//COLON
		public RuleCall getCOLONTerminalRuleCall_3_2_2_2_0() { return cCOLONTerminalRuleCall_3_2_2_2_0; }
		
		//statusDescriptionCode=ID
		public Assignment getStatusDescriptionCodeAssignment_3_2_2_2_1() { return cStatusDescriptionCodeAssignment_3_2_2_2_1; }
		
		//ID
		public RuleCall getStatusDescriptionCodeIDTerminalRuleCall_3_2_2_2_1_0() { return cStatusDescriptionCodeIDTerminalRuleCall_3_2_2_2_1_0; }
		
		//lineEnd=QUOTE_AND_NL
		public Assignment getLineEndAssignment_4() { return cLineEndAssignment_4; }
		
		//QUOTE_AND_NL
		public RuleCall getLineEndQUOTE_AND_NLTerminalRuleCall_4_0() { return cLineEndQUOTE_AND_NLTerminalRuleCall_4_0; }
	}
	public class LINSegmentElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "io.thlaegler.edifact.Edilang.LINSegment");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cSegmentAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final Keyword cSegmentLINKeyword_0_0 = (Keyword)cSegmentAssignment_0.eContents().get(0);
		private final RuleCall cPLUSTerminalRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		private final Assignment cLineItemIdentifierAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cLineItemIdentifierIDTerminalRuleCall_2_0 = (RuleCall)cLineItemIdentifierAssignment_2.eContents().get(0);
		private final RuleCall cPLUSTerminalRuleCall_3 = (RuleCall)cGroup.eContents().get(3);
		private final Assignment cActionRequestAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cActionRequestIDTerminalRuleCall_4_0 = (RuleCall)cActionRequestAssignment_4.eContents().get(0);
		private final RuleCall cPLUSTerminalRuleCall_5 = (RuleCall)cGroup.eContents().get(5);
		private final Group cGroup_6 = (Group)cGroup.eContents().get(6);
		private final Assignment cItemNumberIdentificationAssignment_6_0 = (Assignment)cGroup_6.eContents().get(0);
		private final RuleCall cItemNumberIdentificationItemNumberIdentificationParserRuleCall_6_0_0 = (RuleCall)cItemNumberIdentificationAssignment_6_0.eContents().get(0);
		private final Group cGroup_6_1 = (Group)cGroup_6.eContents().get(1);
		private final RuleCall cPLUSTerminalRuleCall_6_1_0 = (RuleCall)cGroup_6_1.eContents().get(0);
		private final Assignment cSublineInformationAssignment_6_1_1 = (Assignment)cGroup_6_1.eContents().get(1);
		private final RuleCall cSublineInformationSublineInformationParserRuleCall_6_1_1_0 = (RuleCall)cSublineInformationAssignment_6_1_1.eContents().get(0);
		private final Group cGroup_6_1_2 = (Group)cGroup_6_1.eContents().get(2);
		private final RuleCall cPLUSTerminalRuleCall_6_1_2_0 = (RuleCall)cGroup_6_1_2.eContents().get(0);
		private final Assignment cConfigurationLevelNumberAssignment_6_1_2_1 = (Assignment)cGroup_6_1_2.eContents().get(1);
		private final RuleCall cConfigurationLevelNumberIDTerminalRuleCall_6_1_2_1_0 = (RuleCall)cConfigurationLevelNumberAssignment_6_1_2_1.eContents().get(0);
		private final Group cGroup_6_1_2_2 = (Group)cGroup_6_1_2.eContents().get(2);
		private final RuleCall cPLUSTerminalRuleCall_6_1_2_2_0 = (RuleCall)cGroup_6_1_2_2.eContents().get(0);
		private final Assignment cConfigurationOperationCodeAssignment_6_1_2_2_1 = (Assignment)cGroup_6_1_2_2.eContents().get(1);
		private final RuleCall cConfigurationOperationCodeIDTerminalRuleCall_6_1_2_2_1_0 = (RuleCall)cConfigurationOperationCodeAssignment_6_1_2_2_1.eContents().get(0);
		private final Assignment cLineEndAssignment_7 = (Assignment)cGroup.eContents().get(7);
		private final RuleCall cLineEndQUOTE_AND_NLTerminalRuleCall_7_0 = (RuleCall)cLineEndAssignment_7.eContents().get(0);
		
		////LIN+++090346642:IN'
		//LINSegment:
		//    segment="LIN"
		//    PLUS
		//    ( lineItemIdentifier=ID )? // 1082
		//    PLUS
		//    ( actionRequest=ID )? // 1229
		//    PLUS
		//    (
		//        itemNumberIdentification=ItemNumberIdentification // C212
		//        (
		//            PLUS
		//            sublineInformation=SublineInformation // C829
		//            (
		//                PLUS
		//                configurationLevelNumber=ID // 1222
		//                (
		//                    PLUS
		//                    configurationOperationCode=ID // 7083
		//                )?
		//            )?
		//        )?
		//    )?
		//    lineEnd=QUOTE_AND_NL
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//segment="LIN"
		//PLUS
		//( lineItemIdentifier=ID )? // 1082
		//PLUS
		//( actionRequest=ID )? // 1229
		//PLUS
		//(
		//    itemNumberIdentification=ItemNumberIdentification // C212
		//    (
		//        PLUS
		//        sublineInformation=SublineInformation // C829
		//        (
		//            PLUS
		//            configurationLevelNumber=ID // 1222
		//            (
		//                PLUS
		//                configurationOperationCode=ID // 7083
		//            )?
		//        )?
		//    )?
		//)?
		//lineEnd=QUOTE_AND_NL
		public Group getGroup() { return cGroup; }
		
		//segment="LIN"
		public Assignment getSegmentAssignment_0() { return cSegmentAssignment_0; }
		
		//"LIN"
		public Keyword getSegmentLINKeyword_0_0() { return cSegmentLINKeyword_0_0; }
		
		//PLUS
		public RuleCall getPLUSTerminalRuleCall_1() { return cPLUSTerminalRuleCall_1; }
		
		//( lineItemIdentifier=ID )?
		public Assignment getLineItemIdentifierAssignment_2() { return cLineItemIdentifierAssignment_2; }
		
		//ID
		public RuleCall getLineItemIdentifierIDTerminalRuleCall_2_0() { return cLineItemIdentifierIDTerminalRuleCall_2_0; }
		
		//// 1082
		//   PLUS
		public RuleCall getPLUSTerminalRuleCall_3() { return cPLUSTerminalRuleCall_3; }
		
		//( actionRequest=ID )?
		public Assignment getActionRequestAssignment_4() { return cActionRequestAssignment_4; }
		
		//ID
		public RuleCall getActionRequestIDTerminalRuleCall_4_0() { return cActionRequestIDTerminalRuleCall_4_0; }
		
		//// 1229
		//   PLUS
		public RuleCall getPLUSTerminalRuleCall_5() { return cPLUSTerminalRuleCall_5; }
		
		//(
		//    itemNumberIdentification=ItemNumberIdentification // C212
		//    (
		//        PLUS
		//        sublineInformation=SublineInformation // C829
		//        (
		//            PLUS
		//            configurationLevelNumber=ID // 1222
		//            (
		//                PLUS
		//                configurationOperationCode=ID // 7083
		//            )?
		//        )?
		//    )?
		//)?
		public Group getGroup_6() { return cGroup_6; }
		
		//itemNumberIdentification=ItemNumberIdentification
		public Assignment getItemNumberIdentificationAssignment_6_0() { return cItemNumberIdentificationAssignment_6_0; }
		
		//ItemNumberIdentification
		public RuleCall getItemNumberIdentificationItemNumberIdentificationParserRuleCall_6_0_0() { return cItemNumberIdentificationItemNumberIdentificationParserRuleCall_6_0_0; }
		
		//// C212
		//       (
		//           PLUS
		//           sublineInformation=SublineInformation // C829
		//           (
		//               PLUS
		//               configurationLevelNumber=ID // 1222
		//               (
		//                   PLUS
		//                   configurationOperationCode=ID // 7083
		//               )?
		//           )?
		//       )?
		public Group getGroup_6_1() { return cGroup_6_1; }
		
		//PLUS
		public RuleCall getPLUSTerminalRuleCall_6_1_0() { return cPLUSTerminalRuleCall_6_1_0; }
		
		//sublineInformation=SublineInformation
		public Assignment getSublineInformationAssignment_6_1_1() { return cSublineInformationAssignment_6_1_1; }
		
		//SublineInformation
		public RuleCall getSublineInformationSublineInformationParserRuleCall_6_1_1_0() { return cSublineInformationSublineInformationParserRuleCall_6_1_1_0; }
		
		//// C829
		//           (
		//               PLUS
		//               configurationLevelNumber=ID // 1222
		//               (
		//                   PLUS
		//                   configurationOperationCode=ID // 7083
		//               )?
		//           )?
		public Group getGroup_6_1_2() { return cGroup_6_1_2; }
		
		//PLUS
		public RuleCall getPLUSTerminalRuleCall_6_1_2_0() { return cPLUSTerminalRuleCall_6_1_2_0; }
		
		//configurationLevelNumber=ID
		public Assignment getConfigurationLevelNumberAssignment_6_1_2_1() { return cConfigurationLevelNumberAssignment_6_1_2_1; }
		
		//ID
		public RuleCall getConfigurationLevelNumberIDTerminalRuleCall_6_1_2_1_0() { return cConfigurationLevelNumberIDTerminalRuleCall_6_1_2_1_0; }
		
		//// 1222
		//               (
		//                   PLUS
		//                   configurationOperationCode=ID // 7083
		//               )?
		public Group getGroup_6_1_2_2() { return cGroup_6_1_2_2; }
		
		//PLUS
		public RuleCall getPLUSTerminalRuleCall_6_1_2_2_0() { return cPLUSTerminalRuleCall_6_1_2_2_0; }
		
		//configurationOperationCode=ID
		public Assignment getConfigurationOperationCodeAssignment_6_1_2_2_1() { return cConfigurationOperationCodeAssignment_6_1_2_2_1; }
		
		//ID
		public RuleCall getConfigurationOperationCodeIDTerminalRuleCall_6_1_2_2_1_0() { return cConfigurationOperationCodeIDTerminalRuleCall_6_1_2_2_1_0; }
		
		//lineEnd=QUOTE_AND_NL
		public Assignment getLineEndAssignment_7() { return cLineEndAssignment_7; }
		
		//QUOTE_AND_NL
		public RuleCall getLineEndQUOTE_AND_NLTerminalRuleCall_7_0() { return cLineEndQUOTE_AND_NLTerminalRuleCall_7_0; }
	}
	public class PRISegmentElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "io.thlaegler.edifact.Edilang.PRISegment");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cSegmentAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final Keyword cSegmentPRIKeyword_0_0 = (Keyword)cSegmentAssignment_0.eContents().get(0);
		private final RuleCall cPLUSTerminalRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		private final Assignment cSubAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cSubPriceInformationParserRuleCall_2_0 = (RuleCall)cSubAssignment_2.eContents().get(0);
		private final Assignment cLineEndAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cLineEndQUOTE_AND_NLTerminalRuleCall_3_0 = (RuleCall)cLineEndAssignment_3.eContents().get(0);
		
		////PRI+AAA:3630.1724::NTP:100:C62'
		//PRISegment:
		//    segment="PRI"
		//    PLUS
		//    sub=PriceInformation
		//    lineEnd=QUOTE_AND_NL
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//segment="PRI"
		//PLUS
		//sub=PriceInformation
		//lineEnd=QUOTE_AND_NL
		public Group getGroup() { return cGroup; }
		
		//segment="PRI"
		public Assignment getSegmentAssignment_0() { return cSegmentAssignment_0; }
		
		//"PRI"
		public Keyword getSegmentPRIKeyword_0_0() { return cSegmentPRIKeyword_0_0; }
		
		//PLUS
		public RuleCall getPLUSTerminalRuleCall_1() { return cPLUSTerminalRuleCall_1; }
		
		//sub=PriceInformation
		public Assignment getSubAssignment_2() { return cSubAssignment_2; }
		
		//PriceInformation
		public RuleCall getSubPriceInformationParserRuleCall_2_0() { return cSubPriceInformationParserRuleCall_2_0; }
		
		//lineEnd=QUOTE_AND_NL
		public Assignment getLineEndAssignment_3() { return cLineEndAssignment_3; }
		
		//QUOTE_AND_NL
		public RuleCall getLineEndQUOTE_AND_NLTerminalRuleCall_3_0() { return cLineEndQUOTE_AND_NLTerminalRuleCall_3_0; }
	}
	public class QTYSegmentElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "io.thlaegler.edifact.Edilang.QTYSegment");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cSegmentAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final Keyword cSegmentQTYKeyword_0_0 = (Keyword)cSegmentAssignment_0.eContents().get(0);
		private final Group cGroup_1 = (Group)cGroup.eContents().get(1);
		private final RuleCall cPLUSTerminalRuleCall_1_0 = (RuleCall)cGroup_1.eContents().get(0);
		private final Assignment cQuantityDetailsAssignment_1_1 = (Assignment)cGroup_1.eContents().get(1);
		private final RuleCall cQuantityDetailsQuantityDetailParserRuleCall_1_1_0 = (RuleCall)cQuantityDetailsAssignment_1_1.eContents().get(0);
		private final Assignment cLineEndAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cLineEndQUOTE_AND_NLTerminalRuleCall_2_0 = (RuleCall)cLineEndAssignment_2.eContents().get(0);
		
		////QTY+12:54:PCE'
		//QTYSegment:
		//    segment="QTY"
		//    (
		//        PLUS
		//        quantityDetails+=QuantityDetail // C186
		//    )*
		//    lineEnd=QUOTE_AND_NL
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//segment="QTY"
		//(
		//    PLUS
		//    quantityDetails+=QuantityDetail // C186
		//)*
		//lineEnd=QUOTE_AND_NL
		public Group getGroup() { return cGroup; }
		
		//segment="QTY"
		public Assignment getSegmentAssignment_0() { return cSegmentAssignment_0; }
		
		//"QTY"
		public Keyword getSegmentQTYKeyword_0_0() { return cSegmentQTYKeyword_0_0; }
		
		//(
		//    PLUS
		//    quantityDetails+=QuantityDetail // C186
		//)*
		public Group getGroup_1() { return cGroup_1; }
		
		//PLUS
		public RuleCall getPLUSTerminalRuleCall_1_0() { return cPLUSTerminalRuleCall_1_0; }
		
		//quantityDetails+=QuantityDetail
		public Assignment getQuantityDetailsAssignment_1_1() { return cQuantityDetailsAssignment_1_1; }
		
		//QuantityDetail
		public RuleCall getQuantityDetailsQuantityDetailParserRuleCall_1_1_0() { return cQuantityDetailsQuantityDetailParserRuleCall_1_1_0; }
		
		//lineEnd=QUOTE_AND_NL
		public Assignment getLineEndAssignment_2() { return cLineEndAssignment_2; }
		
		//QUOTE_AND_NL
		public RuleCall getLineEndQUOTE_AND_NLTerminalRuleCall_2_0() { return cLineEndQUOTE_AND_NLTerminalRuleCall_2_0; }
	}
	public class CUXSegmentElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "io.thlaegler.edifact.Edilang.CUXSegment");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cSegmentAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final Keyword cSegmentCUXKeyword_0_0 = (Keyword)cSegmentAssignment_0.eContents().get(0);
		private final RuleCall cPLUSTerminalRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		private final Assignment cCurrencyDetails1Assignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cCurrencyDetails1CurrencyDetailParserRuleCall_2_0 = (RuleCall)cCurrencyDetails1Assignment_2.eContents().get(0);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final RuleCall cPLUSTerminalRuleCall_3_0 = (RuleCall)cGroup_3.eContents().get(0);
		private final Assignment cCurrencyDetails2Assignment_3_1 = (Assignment)cGroup_3.eContents().get(1);
		private final RuleCall cCurrencyDetails2CurrencyDetailParserRuleCall_3_1_0 = (RuleCall)cCurrencyDetails2Assignment_3_1.eContents().get(0);
		private final Group cGroup_3_2 = (Group)cGroup_3.eContents().get(2);
		private final RuleCall cPLUSTerminalRuleCall_3_2_0 = (RuleCall)cGroup_3_2.eContents().get(0);
		private final Assignment cCurrencyExchangeRateAssignment_3_2_1 = (Assignment)cGroup_3_2.eContents().get(1);
		private final RuleCall cCurrencyExchangeRateIDTerminalRuleCall_3_2_1_0 = (RuleCall)cCurrencyExchangeRateAssignment_3_2_1.eContents().get(0);
		private final Group cGroup_3_2_2 = (Group)cGroup_3_2.eContents().get(2);
		private final RuleCall cPLUSTerminalRuleCall_3_2_2_0 = (RuleCall)cGroup_3_2_2.eContents().get(0);
		private final Assignment cExchangeRateCurrencyMarketIdentifierAssignment_3_2_2_1 = (Assignment)cGroup_3_2_2.eContents().get(1);
		private final RuleCall cExchangeRateCurrencyMarketIdentifierIDTerminalRuleCall_3_2_2_1_0 = (RuleCall)cExchangeRateCurrencyMarketIdentifierAssignment_3_2_2_1.eContents().get(0);
		private final Assignment cLineEndAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cLineEndQUOTE_AND_NLTerminalRuleCall_4_0 = (RuleCall)cLineEndAssignment_4.eContents().get(0);
		
		////CUX+2:EUR'
		//CUXSegment:
		//    segment="CUX"
		//    PLUS
		//    currencyDetails1=CurrencyDetail
		//    (
		//        PLUS
		//        currencyDetails2=CurrencyDetail
		//        (
		//            PLUS
		//            currencyExchangeRate=ID
		//            (
		//                PLUS
		//                exchangeRateCurrencyMarketIdentifier=ID
		//            )?
		//        )?
		//    )?
		//    lineEnd=QUOTE_AND_NL
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//segment="CUX"
		//PLUS
		//currencyDetails1=CurrencyDetail
		//(
		//    PLUS
		//    currencyDetails2=CurrencyDetail
		//    (
		//        PLUS
		//        currencyExchangeRate=ID
		//        (
		//            PLUS
		//            exchangeRateCurrencyMarketIdentifier=ID
		//        )?
		//    )?
		//)?
		//lineEnd=QUOTE_AND_NL
		public Group getGroup() { return cGroup; }
		
		//segment="CUX"
		public Assignment getSegmentAssignment_0() { return cSegmentAssignment_0; }
		
		//"CUX"
		public Keyword getSegmentCUXKeyword_0_0() { return cSegmentCUXKeyword_0_0; }
		
		//PLUS
		public RuleCall getPLUSTerminalRuleCall_1() { return cPLUSTerminalRuleCall_1; }
		
		//currencyDetails1=CurrencyDetail
		public Assignment getCurrencyDetails1Assignment_2() { return cCurrencyDetails1Assignment_2; }
		
		//CurrencyDetail
		public RuleCall getCurrencyDetails1CurrencyDetailParserRuleCall_2_0() { return cCurrencyDetails1CurrencyDetailParserRuleCall_2_0; }
		
		//(
		//    PLUS
		//    currencyDetails2=CurrencyDetail
		//    (
		//        PLUS
		//        currencyExchangeRate=ID
		//        (
		//            PLUS
		//            exchangeRateCurrencyMarketIdentifier=ID
		//        )?
		//    )?
		//)?
		public Group getGroup_3() { return cGroup_3; }
		
		//PLUS
		public RuleCall getPLUSTerminalRuleCall_3_0() { return cPLUSTerminalRuleCall_3_0; }
		
		//currencyDetails2=CurrencyDetail
		public Assignment getCurrencyDetails2Assignment_3_1() { return cCurrencyDetails2Assignment_3_1; }
		
		//CurrencyDetail
		public RuleCall getCurrencyDetails2CurrencyDetailParserRuleCall_3_1_0() { return cCurrencyDetails2CurrencyDetailParserRuleCall_3_1_0; }
		
		//(
		//    PLUS
		//    currencyExchangeRate=ID
		//    (
		//        PLUS
		//        exchangeRateCurrencyMarketIdentifier=ID
		//    )?
		//)?
		public Group getGroup_3_2() { return cGroup_3_2; }
		
		//PLUS
		public RuleCall getPLUSTerminalRuleCall_3_2_0() { return cPLUSTerminalRuleCall_3_2_0; }
		
		//currencyExchangeRate=ID
		public Assignment getCurrencyExchangeRateAssignment_3_2_1() { return cCurrencyExchangeRateAssignment_3_2_1; }
		
		//ID
		public RuleCall getCurrencyExchangeRateIDTerminalRuleCall_3_2_1_0() { return cCurrencyExchangeRateIDTerminalRuleCall_3_2_1_0; }
		
		//(
		//    PLUS
		//    exchangeRateCurrencyMarketIdentifier=ID
		//)?
		public Group getGroup_3_2_2() { return cGroup_3_2_2; }
		
		//PLUS
		public RuleCall getPLUSTerminalRuleCall_3_2_2_0() { return cPLUSTerminalRuleCall_3_2_2_0; }
		
		//exchangeRateCurrencyMarketIdentifier=ID
		public Assignment getExchangeRateCurrencyMarketIdentifierAssignment_3_2_2_1() { return cExchangeRateCurrencyMarketIdentifierAssignment_3_2_2_1; }
		
		//ID
		public RuleCall getExchangeRateCurrencyMarketIdentifierIDTerminalRuleCall_3_2_2_1_0() { return cExchangeRateCurrencyMarketIdentifierIDTerminalRuleCall_3_2_2_1_0; }
		
		//lineEnd=QUOTE_AND_NL
		public Assignment getLineEndAssignment_4() { return cLineEndAssignment_4; }
		
		//QUOTE_AND_NL
		public RuleCall getLineEndQUOTE_AND_NLTerminalRuleCall_4_0() { return cLineEndQUOTE_AND_NLTerminalRuleCall_4_0; }
	}
	public class TAXSegmentElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "io.thlaegler.edifact.Edilang.TAXSegment");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cSegmentAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final Keyword cSegmentTAXKeyword_0_0 = (Keyword)cSegmentAssignment_0.eContents().get(0);
		private final RuleCall cPLUSTerminalRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		private final Assignment cTaxFunctionCodeQualifierAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cTaxFunctionCodeQualifierIDTerminalRuleCall_2_0 = (RuleCall)cTaxFunctionCodeQualifierAssignment_2.eContents().get(0);
		private final RuleCall cPLUSTerminalRuleCall_3 = (RuleCall)cGroup.eContents().get(3);
		private final Assignment cTaxTypeAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cTaxTypeTaxTypeParserRuleCall_4_0 = (RuleCall)cTaxTypeAssignment_4.eContents().get(0);
		private final Group cGroup_5 = (Group)cGroup.eContents().get(5);
		private final RuleCall cPLUSTerminalRuleCall_5_0 = (RuleCall)cGroup_5.eContents().get(0);
		private final Assignment cTaxAccountDetailAssignment_5_1 = (Assignment)cGroup_5.eContents().get(1);
		private final RuleCall cTaxAccountDetailTaxAccountDetailParserRuleCall_5_1_0 = (RuleCall)cTaxAccountDetailAssignment_5_1.eContents().get(0);
		private final Group cGroup_5_2 = (Group)cGroup_5.eContents().get(2);
		private final RuleCall cPLUSTerminalRuleCall_5_2_0 = (RuleCall)cGroup_5_2.eContents().get(0);
		private final Assignment cTaxAssessmentBasicValueAssignment_5_2_1 = (Assignment)cGroup_5_2.eContents().get(1);
		private final RuleCall cTaxAssessmentBasicValueIDTerminalRuleCall_5_2_1_0 = (RuleCall)cTaxAssessmentBasicValueAssignment_5_2_1.eContents().get(0);
		private final Group cGroup_5_2_2 = (Group)cGroup_5_2.eContents().get(2);
		private final RuleCall cPLUSTerminalRuleCall_5_2_2_0 = (RuleCall)cGroup_5_2_2.eContents().get(0);
		private final Assignment cTaxDetailAssignment_5_2_2_1 = (Assignment)cGroup_5_2_2.eContents().get(1);
		private final RuleCall cTaxDetailTaxDetailParserRuleCall_5_2_2_1_0 = (RuleCall)cTaxDetailAssignment_5_2_2_1.eContents().get(0);
		private final Group cGroup_5_2_2_2 = (Group)cGroup_5_2_2.eContents().get(2);
		private final RuleCall cPLUSTerminalRuleCall_5_2_2_2_0 = (RuleCall)cGroup_5_2_2_2.eContents().get(0);
		private final Assignment cTaxCategoryCodeAssignment_5_2_2_2_1 = (Assignment)cGroup_5_2_2_2.eContents().get(1);
		private final RuleCall cTaxCategoryCodeIDTerminalRuleCall_5_2_2_2_1_0 = (RuleCall)cTaxCategoryCodeAssignment_5_2_2_2_1.eContents().get(0);
		private final Group cGroup_5_2_2_2_2 = (Group)cGroup_5_2_2_2.eContents().get(2);
		private final RuleCall cPLUSTerminalRuleCall_5_2_2_2_2_0 = (RuleCall)cGroup_5_2_2_2_2.eContents().get(0);
		private final Assignment cPartyTaxIdentifierAssignment_5_2_2_2_2_1 = (Assignment)cGroup_5_2_2_2_2.eContents().get(1);
		private final RuleCall cPartyTaxIdentifierIDTerminalRuleCall_5_2_2_2_2_1_0 = (RuleCall)cPartyTaxIdentifierAssignment_5_2_2_2_2_1.eContents().get(0);
		private final Group cGroup_5_2_2_2_2_2 = (Group)cGroup_5_2_2_2_2.eContents().get(2);
		private final RuleCall cPLUSTerminalRuleCall_5_2_2_2_2_2_0 = (RuleCall)cGroup_5_2_2_2_2_2.eContents().get(0);
		private final Assignment cCalculationSequenceCodeAssignment_5_2_2_2_2_2_1 = (Assignment)cGroup_5_2_2_2_2_2.eContents().get(1);
		private final RuleCall cCalculationSequenceCodeIDTerminalRuleCall_5_2_2_2_2_2_1_0 = (RuleCall)cCalculationSequenceCodeAssignment_5_2_2_2_2_2_1.eContents().get(0);
		private final Assignment cLineEndAssignment_6 = (Assignment)cGroup.eContents().get(6);
		private final RuleCall cLineEndQUOTE_AND_NLTerminalRuleCall_6_0 = (RuleCall)cLineEndAssignment_6.eContents().get(0);
		
		////TAX+7+VAT'
		//TAXSegment:
		//    segment="TAX"
		//    PLUS
		//    taxFunctionCodeQualifier=ID // 5283
		//    PLUS
		//    taxType=TaxType // C241
		//    (
		//        PLUS
		//        ( taxAccountDetail=TaxAccountDetail )? // C533
		//        (
		//            PLUS
		//            ( taxAssessmentBasicValue=ID )? // 5286
		//            (
		//                PLUS
		//                ( taxDetail=TaxDetail )? // C243
		//                (
		//                    PLUS
		//                    ( taxCategoryCode=ID )? // 5305
		//                    (
		//                        PLUS
		//                        ( partyTaxIdentifier=ID )? // 3446
		//                        (
		//                            PLUS
		//                            ( calculationSequenceCode=ID )? // 1227
		//                        )?
		//                    )?
		//                )?
		//            )?
		//        )?
		//    )?
		//    lineEnd=QUOTE_AND_NL
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//segment="TAX"
		//PLUS
		//taxFunctionCodeQualifier=ID // 5283
		//PLUS
		//taxType=TaxType // C241
		//(
		//    PLUS
		//    ( taxAccountDetail=TaxAccountDetail )? // C533
		//    (
		//        PLUS
		//        ( taxAssessmentBasicValue=ID )? // 5286
		//        (
		//            PLUS
		//            ( taxDetail=TaxDetail )? // C243
		//            (
		//                PLUS
		//                ( taxCategoryCode=ID )? // 5305
		//                (
		//                    PLUS
		//                    ( partyTaxIdentifier=ID )? // 3446
		//                    (
		//                        PLUS
		//                        ( calculationSequenceCode=ID )? // 1227
		//                    )?
		//                )?
		//            )?
		//        )?
		//    )?
		//)?
		//lineEnd=QUOTE_AND_NL
		public Group getGroup() { return cGroup; }
		
		//segment="TAX"
		public Assignment getSegmentAssignment_0() { return cSegmentAssignment_0; }
		
		//"TAX"
		public Keyword getSegmentTAXKeyword_0_0() { return cSegmentTAXKeyword_0_0; }
		
		//PLUS
		public RuleCall getPLUSTerminalRuleCall_1() { return cPLUSTerminalRuleCall_1; }
		
		//taxFunctionCodeQualifier=ID
		public Assignment getTaxFunctionCodeQualifierAssignment_2() { return cTaxFunctionCodeQualifierAssignment_2; }
		
		//ID
		public RuleCall getTaxFunctionCodeQualifierIDTerminalRuleCall_2_0() { return cTaxFunctionCodeQualifierIDTerminalRuleCall_2_0; }
		
		//// 5283
		//   PLUS
		public RuleCall getPLUSTerminalRuleCall_3() { return cPLUSTerminalRuleCall_3; }
		
		//taxType=TaxType
		public Assignment getTaxTypeAssignment_4() { return cTaxTypeAssignment_4; }
		
		//TaxType
		public RuleCall getTaxTypeTaxTypeParserRuleCall_4_0() { return cTaxTypeTaxTypeParserRuleCall_4_0; }
		
		//// C241
		//   (
		//       PLUS
		//       ( taxAccountDetail=TaxAccountDetail )? // C533
		//       (
		//           PLUS
		//           ( taxAssessmentBasicValue=ID )? // 5286
		//           (
		//               PLUS
		//               ( taxDetail=TaxDetail )? // C243
		//               (
		//                   PLUS
		//                   ( taxCategoryCode=ID )? // 5305
		//                   (
		//                       PLUS
		//                       ( partyTaxIdentifier=ID )? // 3446
		//                       (
		//                           PLUS
		//                           ( calculationSequenceCode=ID )? // 1227
		//                       )?
		//                   )?
		//               )?
		//           )?
		//       )?
		//   )?
		public Group getGroup_5() { return cGroup_5; }
		
		//PLUS
		public RuleCall getPLUSTerminalRuleCall_5_0() { return cPLUSTerminalRuleCall_5_0; }
		
		//( taxAccountDetail=TaxAccountDetail )?
		public Assignment getTaxAccountDetailAssignment_5_1() { return cTaxAccountDetailAssignment_5_1; }
		
		//TaxAccountDetail
		public RuleCall getTaxAccountDetailTaxAccountDetailParserRuleCall_5_1_0() { return cTaxAccountDetailTaxAccountDetailParserRuleCall_5_1_0; }
		
		//// C533
		//       (
		//           PLUS
		//           ( taxAssessmentBasicValue=ID )? // 5286
		//           (
		//               PLUS
		//               ( taxDetail=TaxDetail )? // C243
		//               (
		//                   PLUS
		//                   ( taxCategoryCode=ID )? // 5305
		//                   (
		//                       PLUS
		//                       ( partyTaxIdentifier=ID )? // 3446
		//                       (
		//                           PLUS
		//                           ( calculationSequenceCode=ID )? // 1227
		//                       )?
		//                   )?
		//               )?
		//           )?
		//       )?
		public Group getGroup_5_2() { return cGroup_5_2; }
		
		//PLUS
		public RuleCall getPLUSTerminalRuleCall_5_2_0() { return cPLUSTerminalRuleCall_5_2_0; }
		
		//( taxAssessmentBasicValue=ID )?
		public Assignment getTaxAssessmentBasicValueAssignment_5_2_1() { return cTaxAssessmentBasicValueAssignment_5_2_1; }
		
		//ID
		public RuleCall getTaxAssessmentBasicValueIDTerminalRuleCall_5_2_1_0() { return cTaxAssessmentBasicValueIDTerminalRuleCall_5_2_1_0; }
		
		//// 5286
		//           (
		//               PLUS
		//               ( taxDetail=TaxDetail )? // C243
		//               (
		//                   PLUS
		//                   ( taxCategoryCode=ID )? // 5305
		//                   (
		//                       PLUS
		//                       ( partyTaxIdentifier=ID )? // 3446
		//                       (
		//                           PLUS
		//                           ( calculationSequenceCode=ID )? // 1227
		//                       )?
		//                   )?
		//               )?
		//           )?
		public Group getGroup_5_2_2() { return cGroup_5_2_2; }
		
		//PLUS
		public RuleCall getPLUSTerminalRuleCall_5_2_2_0() { return cPLUSTerminalRuleCall_5_2_2_0; }
		
		//( taxDetail=TaxDetail )?
		public Assignment getTaxDetailAssignment_5_2_2_1() { return cTaxDetailAssignment_5_2_2_1; }
		
		//TaxDetail
		public RuleCall getTaxDetailTaxDetailParserRuleCall_5_2_2_1_0() { return cTaxDetailTaxDetailParserRuleCall_5_2_2_1_0; }
		
		//// C243
		//               (
		//                   PLUS
		//                   ( taxCategoryCode=ID )? // 5305
		//                   (
		//                       PLUS
		//                       ( partyTaxIdentifier=ID )? // 3446
		//                       (
		//                           PLUS
		//                           ( calculationSequenceCode=ID )? // 1227
		//                       )?
		//                   )?
		//               )?
		public Group getGroup_5_2_2_2() { return cGroup_5_2_2_2; }
		
		//PLUS
		public RuleCall getPLUSTerminalRuleCall_5_2_2_2_0() { return cPLUSTerminalRuleCall_5_2_2_2_0; }
		
		//( taxCategoryCode=ID )?
		public Assignment getTaxCategoryCodeAssignment_5_2_2_2_1() { return cTaxCategoryCodeAssignment_5_2_2_2_1; }
		
		//ID
		public RuleCall getTaxCategoryCodeIDTerminalRuleCall_5_2_2_2_1_0() { return cTaxCategoryCodeIDTerminalRuleCall_5_2_2_2_1_0; }
		
		//// 5305
		//                   (
		//                       PLUS
		//                       ( partyTaxIdentifier=ID )? // 3446
		//                       (
		//                           PLUS
		//                           ( calculationSequenceCode=ID )? // 1227
		//                       )?
		//                   )?
		public Group getGroup_5_2_2_2_2() { return cGroup_5_2_2_2_2; }
		
		//PLUS
		public RuleCall getPLUSTerminalRuleCall_5_2_2_2_2_0() { return cPLUSTerminalRuleCall_5_2_2_2_2_0; }
		
		//( partyTaxIdentifier=ID )?
		public Assignment getPartyTaxIdentifierAssignment_5_2_2_2_2_1() { return cPartyTaxIdentifierAssignment_5_2_2_2_2_1; }
		
		//ID
		public RuleCall getPartyTaxIdentifierIDTerminalRuleCall_5_2_2_2_2_1_0() { return cPartyTaxIdentifierIDTerminalRuleCall_5_2_2_2_2_1_0; }
		
		//// 3446
		//                       (
		//                           PLUS
		//                           ( calculationSequenceCode=ID )? // 1227
		//                       )?
		public Group getGroup_5_2_2_2_2_2() { return cGroup_5_2_2_2_2_2; }
		
		//PLUS
		public RuleCall getPLUSTerminalRuleCall_5_2_2_2_2_2_0() { return cPLUSTerminalRuleCall_5_2_2_2_2_2_0; }
		
		//( calculationSequenceCode=ID )?
		public Assignment getCalculationSequenceCodeAssignment_5_2_2_2_2_2_1() { return cCalculationSequenceCodeAssignment_5_2_2_2_2_2_1; }
		
		//ID
		public RuleCall getCalculationSequenceCodeIDTerminalRuleCall_5_2_2_2_2_2_1_0() { return cCalculationSequenceCodeIDTerminalRuleCall_5_2_2_2_2_2_1_0; }
		
		//lineEnd=QUOTE_AND_NL
		public Assignment getLineEndAssignment_6() { return cLineEndAssignment_6; }
		
		//QUOTE_AND_NL
		public RuleCall getLineEndQUOTE_AND_NLTerminalRuleCall_6_0() { return cLineEndQUOTE_AND_NLTerminalRuleCall_6_0; }
	}
	public class RFFSegmentElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "io.thlaegler.edifact.Edilang.RFFSegment");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cSegmentAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final Keyword cSegmentRFFKeyword_0_0 = (Keyword)cSegmentAssignment_0.eContents().get(0);
		private final RuleCall cPLUSTerminalRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		private final Assignment cRff1Assignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cRff1IDTerminalRuleCall_2_0 = (RuleCall)cRff1Assignment_2.eContents().get(0);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final RuleCall cCOLONTerminalRuleCall_3_0 = (RuleCall)cGroup_3.eContents().get(0);
		private final Assignment cRff2Assignment_3_1 = (Assignment)cGroup_3.eContents().get(1);
		private final RuleCall cRff2IDTerminalRuleCall_3_1_0 = (RuleCall)cRff2Assignment_3_1.eContents().get(0);
		private final Assignment cLineEndAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cLineEndQUOTE_AND_NLTerminalRuleCall_4_0 = (RuleCall)cLineEndAssignment_4.eContents().get(0);
		
		////RFF+VA:382324067'
		//RFFSegment:
		//    segment="RFF"
		//    PLUS
		//    rff1=ID
		//    (
		//        COLON
		//        rff2=ID
		//    )?
		//    lineEnd=QUOTE_AND_NL
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//segment="RFF"
		//PLUS
		//rff1=ID
		//(
		//    COLON
		//    rff2=ID
		//)?
		//lineEnd=QUOTE_AND_NL
		public Group getGroup() { return cGroup; }
		
		//segment="RFF"
		public Assignment getSegmentAssignment_0() { return cSegmentAssignment_0; }
		
		//"RFF"
		public Keyword getSegmentRFFKeyword_0_0() { return cSegmentRFFKeyword_0_0; }
		
		//PLUS
		public RuleCall getPLUSTerminalRuleCall_1() { return cPLUSTerminalRuleCall_1; }
		
		//rff1=ID
		public Assignment getRff1Assignment_2() { return cRff1Assignment_2; }
		
		//ID
		public RuleCall getRff1IDTerminalRuleCall_2_0() { return cRff1IDTerminalRuleCall_2_0; }
		
		//(
		//    COLON
		//    rff2=ID
		//)?
		public Group getGroup_3() { return cGroup_3; }
		
		//COLON
		public RuleCall getCOLONTerminalRuleCall_3_0() { return cCOLONTerminalRuleCall_3_0; }
		
		//rff2=ID
		public Assignment getRff2Assignment_3_1() { return cRff2Assignment_3_1; }
		
		//ID
		public RuleCall getRff2IDTerminalRuleCall_3_1_0() { return cRff2IDTerminalRuleCall_3_1_0; }
		
		//lineEnd=QUOTE_AND_NL
		public Assignment getLineEndAssignment_4() { return cLineEndAssignment_4; }
		
		//QUOTE_AND_NL
		public RuleCall getLineEndQUOTE_AND_NLTerminalRuleCall_4_0() { return cLineEndQUOTE_AND_NLTerminalRuleCall_4_0; }
	}
	public class NADSegmentElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "io.thlaegler.edifact.Edilang.NADSegment");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cSegmentAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final Keyword cSegmentNADKeyword_0_0 = (Keyword)cSegmentAssignment_0.eContents().get(0);
		private final RuleCall cPLUSTerminalRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		private final Assignment cPartyFunctionCodeQualifierAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cPartyFunctionCodeQualifierIDTerminalRuleCall_2_0 = (RuleCall)cPartyFunctionCodeQualifierAssignment_2.eContents().get(0);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final RuleCall cPLUSTerminalRuleCall_3_0 = (RuleCall)cGroup_3.eContents().get(0);
		private final Assignment cPartyIdentificationDetailsAssignment_3_1 = (Assignment)cGroup_3.eContents().get(1);
		private final RuleCall cPartyIdentificationDetailsPartyIdentificationDetailParserRuleCall_3_1_0 = (RuleCall)cPartyIdentificationDetailsAssignment_3_1.eContents().get(0);
		private final Group cGroup_3_2 = (Group)cGroup_3.eContents().get(2);
		private final RuleCall cPLUSTerminalRuleCall_3_2_0 = (RuleCall)cGroup_3_2.eContents().get(0);
		private final Assignment cNameAndAddressAssignment_3_2_1 = (Assignment)cGroup_3_2.eContents().get(1);
		private final RuleCall cNameAndAddressNameAndAddressParserRuleCall_3_2_1_0 = (RuleCall)cNameAndAddressAssignment_3_2_1.eContents().get(0);
		private final Group cGroup_3_2_2 = (Group)cGroup_3_2.eContents().get(2);
		private final RuleCall cPLUSTerminalRuleCall_3_2_2_0 = (RuleCall)cGroup_3_2_2.eContents().get(0);
		private final Assignment cPartyNameAssignment_3_2_2_1 = (Assignment)cGroup_3_2_2.eContents().get(1);
		private final RuleCall cPartyNamePartyNameParserRuleCall_3_2_2_1_0 = (RuleCall)cPartyNameAssignment_3_2_2_1.eContents().get(0);
		private final Group cGroup_3_2_2_2 = (Group)cGroup_3_2_2.eContents().get(2);
		private final RuleCall cPLUSTerminalRuleCall_3_2_2_2_0 = (RuleCall)cGroup_3_2_2_2.eContents().get(0);
		private final Assignment cStreetAssignment_3_2_2_2_1 = (Assignment)cGroup_3_2_2_2.eContents().get(1);
		private final RuleCall cStreetStreetParserRuleCall_3_2_2_2_1_0 = (RuleCall)cStreetAssignment_3_2_2_2_1.eContents().get(0);
		private final Group cGroup_3_2_2_2_2 = (Group)cGroup_3_2_2_2.eContents().get(2);
		private final RuleCall cPLUSTerminalRuleCall_3_2_2_2_2_0 = (RuleCall)cGroup_3_2_2_2_2.eContents().get(0);
		private final Assignment cCityNameAssignment_3_2_2_2_2_1 = (Assignment)cGroup_3_2_2_2_2.eContents().get(1);
		private final RuleCall cCityNameIDTerminalRuleCall_3_2_2_2_2_1_0 = (RuleCall)cCityNameAssignment_3_2_2_2_2_1.eContents().get(0);
		private final Group cGroup_3_2_2_2_2_2 = (Group)cGroup_3_2_2_2_2.eContents().get(2);
		private final RuleCall cPLUSTerminalRuleCall_3_2_2_2_2_2_0 = (RuleCall)cGroup_3_2_2_2_2_2.eContents().get(0);
		private final Assignment cCountrySubEntityDetailsAssignment_3_2_2_2_2_2_1 = (Assignment)cGroup_3_2_2_2_2_2.eContents().get(1);
		private final RuleCall cCountrySubEntityDetailsCountrySubEntityDetailParserRuleCall_3_2_2_2_2_2_1_0 = (RuleCall)cCountrySubEntityDetailsAssignment_3_2_2_2_2_2_1.eContents().get(0);
		private final Group cGroup_3_2_2_2_2_2_2 = (Group)cGroup_3_2_2_2_2_2.eContents().get(2);
		private final RuleCall cPLUSTerminalRuleCall_3_2_2_2_2_2_2_0 = (RuleCall)cGroup_3_2_2_2_2_2_2.eContents().get(0);
		private final Assignment cPostalIdentificationCodeAssignment_3_2_2_2_2_2_2_1 = (Assignment)cGroup_3_2_2_2_2_2_2.eContents().get(1);
		private final RuleCall cPostalIdentificationCodeIDTerminalRuleCall_3_2_2_2_2_2_2_1_0 = (RuleCall)cPostalIdentificationCodeAssignment_3_2_2_2_2_2_2_1.eContents().get(0);
		private final Group cGroup_3_2_2_2_2_2_2_2 = (Group)cGroup_3_2_2_2_2_2_2.eContents().get(2);
		private final RuleCall cPLUSTerminalRuleCall_3_2_2_2_2_2_2_2_0 = (RuleCall)cGroup_3_2_2_2_2_2_2_2.eContents().get(0);
		private final Assignment cCountryNameCodeAssignment_3_2_2_2_2_2_2_2_1 = (Assignment)cGroup_3_2_2_2_2_2_2_2.eContents().get(1);
		private final RuleCall cCountryNameCodeIDTerminalRuleCall_3_2_2_2_2_2_2_2_1_0 = (RuleCall)cCountryNameCodeAssignment_3_2_2_2_2_2_2_2_1.eContents().get(0);
		private final Assignment cLineEndAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cLineEndQUOTE_AND_NLTerminalRuleCall_4_0 = (RuleCall)cLineEndAssignment_4.eContents().get(0);
		
		////NAD+BT+VAUXHALL MOTORS LTD::91'
		//NADSegment:
		//    segment="NAD"
		//    PLUS
		//    partyFunctionCodeQualifier=ID
		//    (
		//        PLUS
		//        partyIdentificationDetails=PartyIdentificationDetail // C082
		//        (
		//            PLUS
		//            nameAndAddress=NameAndAddress // C058
		//            (
		//                PLUS
		//                partyName=PartyName // C080
		//                (
		//                    PLUS
		//                    street=Street // C059
		//                    (
		//                        PLUS
		//                        cityName=ID // 3164
		//                        (
		//                            PLUS
		//                            countrySubEntityDetails=CountrySubEntityDetail // C819
		//                            (
		//                                PLUS
		//                                postalIdentificationCode=ID // 3251
		//                                (
		//                                    PLUS
		//                                    countryNameCode=ID // 3207
		//                                )?
		//                            )?
		//                        )?
		//                    )?
		//                )?
		//            )?
		//        )?
		//    )?
		//    lineEnd=QUOTE_AND_NL
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//segment="NAD"
		//PLUS
		//partyFunctionCodeQualifier=ID
		//(
		//    PLUS
		//    partyIdentificationDetails=PartyIdentificationDetail // C082
		//    (
		//        PLUS
		//        nameAndAddress=NameAndAddress // C058
		//        (
		//            PLUS
		//            partyName=PartyName // C080
		//            (
		//                PLUS
		//                street=Street // C059
		//                (
		//                    PLUS
		//                    cityName=ID // 3164
		//                    (
		//                        PLUS
		//                        countrySubEntityDetails=CountrySubEntityDetail // C819
		//                        (
		//                            PLUS
		//                            postalIdentificationCode=ID // 3251
		//                            (
		//                                PLUS
		//                                countryNameCode=ID // 3207
		//                            )?
		//                        )?
		//                    )?
		//                )?
		//            )?
		//        )?
		//    )?
		//)?
		//lineEnd=QUOTE_AND_NL
		public Group getGroup() { return cGroup; }
		
		//segment="NAD"
		public Assignment getSegmentAssignment_0() { return cSegmentAssignment_0; }
		
		//"NAD"
		public Keyword getSegmentNADKeyword_0_0() { return cSegmentNADKeyword_0_0; }
		
		//PLUS
		public RuleCall getPLUSTerminalRuleCall_1() { return cPLUSTerminalRuleCall_1; }
		
		//partyFunctionCodeQualifier=ID
		public Assignment getPartyFunctionCodeQualifierAssignment_2() { return cPartyFunctionCodeQualifierAssignment_2; }
		
		//ID
		public RuleCall getPartyFunctionCodeQualifierIDTerminalRuleCall_2_0() { return cPartyFunctionCodeQualifierIDTerminalRuleCall_2_0; }
		
		//(
		//    PLUS
		//    partyIdentificationDetails=PartyIdentificationDetail // C082
		//    (
		//        PLUS
		//        nameAndAddress=NameAndAddress // C058
		//        (
		//            PLUS
		//            partyName=PartyName // C080
		//            (
		//                PLUS
		//                street=Street // C059
		//                (
		//                    PLUS
		//                    cityName=ID // 3164
		//                    (
		//                        PLUS
		//                        countrySubEntityDetails=CountrySubEntityDetail // C819
		//                        (
		//                            PLUS
		//                            postalIdentificationCode=ID // 3251
		//                            (
		//                                PLUS
		//                                countryNameCode=ID // 3207
		//                            )?
		//                        )?
		//                    )?
		//                )?
		//            )?
		//        )?
		//    )?
		//)?
		public Group getGroup_3() { return cGroup_3; }
		
		//PLUS
		public RuleCall getPLUSTerminalRuleCall_3_0() { return cPLUSTerminalRuleCall_3_0; }
		
		//partyIdentificationDetails=PartyIdentificationDetail
		public Assignment getPartyIdentificationDetailsAssignment_3_1() { return cPartyIdentificationDetailsAssignment_3_1; }
		
		//PartyIdentificationDetail
		public RuleCall getPartyIdentificationDetailsPartyIdentificationDetailParserRuleCall_3_1_0() { return cPartyIdentificationDetailsPartyIdentificationDetailParserRuleCall_3_1_0; }
		
		//// C082
		//       (
		//           PLUS
		//           nameAndAddress=NameAndAddress // C058
		//           (
		//               PLUS
		//               partyName=PartyName // C080
		//               (
		//                   PLUS
		//                   street=Street // C059
		//                   (
		//                       PLUS
		//                       cityName=ID // 3164
		//                       (
		//                           PLUS
		//                           countrySubEntityDetails=CountrySubEntityDetail // C819
		//                           (
		//                               PLUS
		//                               postalIdentificationCode=ID // 3251
		//                               (
		//                                   PLUS
		//                                   countryNameCode=ID // 3207
		//                               )?
		//                           )?
		//                       )?
		//                   )?
		//               )?
		//           )?
		//       )?
		public Group getGroup_3_2() { return cGroup_3_2; }
		
		//PLUS
		public RuleCall getPLUSTerminalRuleCall_3_2_0() { return cPLUSTerminalRuleCall_3_2_0; }
		
		//nameAndAddress=NameAndAddress
		public Assignment getNameAndAddressAssignment_3_2_1() { return cNameAndAddressAssignment_3_2_1; }
		
		//NameAndAddress
		public RuleCall getNameAndAddressNameAndAddressParserRuleCall_3_2_1_0() { return cNameAndAddressNameAndAddressParserRuleCall_3_2_1_0; }
		
		//// C058
		//           (
		//               PLUS
		//               partyName=PartyName // C080
		//               (
		//                   PLUS
		//                   street=Street // C059
		//                   (
		//                       PLUS
		//                       cityName=ID // 3164
		//                       (
		//                           PLUS
		//                           countrySubEntityDetails=CountrySubEntityDetail // C819
		//                           (
		//                               PLUS
		//                               postalIdentificationCode=ID // 3251
		//                               (
		//                                   PLUS
		//                                   countryNameCode=ID // 3207
		//                               )?
		//                           )?
		//                       )?
		//                   )?
		//               )?
		//           )?
		public Group getGroup_3_2_2() { return cGroup_3_2_2; }
		
		//PLUS
		public RuleCall getPLUSTerminalRuleCall_3_2_2_0() { return cPLUSTerminalRuleCall_3_2_2_0; }
		
		//partyName=PartyName
		public Assignment getPartyNameAssignment_3_2_2_1() { return cPartyNameAssignment_3_2_2_1; }
		
		//PartyName
		public RuleCall getPartyNamePartyNameParserRuleCall_3_2_2_1_0() { return cPartyNamePartyNameParserRuleCall_3_2_2_1_0; }
		
		//// C080
		//               (
		//                   PLUS
		//                   street=Street // C059
		//                   (
		//                       PLUS
		//                       cityName=ID // 3164
		//                       (
		//                           PLUS
		//                           countrySubEntityDetails=CountrySubEntityDetail // C819
		//                           (
		//                               PLUS
		//                               postalIdentificationCode=ID // 3251
		//                               (
		//                                   PLUS
		//                                   countryNameCode=ID // 3207
		//                               )?
		//                           )?
		//                       )?
		//                   )?
		//               )?
		public Group getGroup_3_2_2_2() { return cGroup_3_2_2_2; }
		
		//PLUS
		public RuleCall getPLUSTerminalRuleCall_3_2_2_2_0() { return cPLUSTerminalRuleCall_3_2_2_2_0; }
		
		//street=Street
		public Assignment getStreetAssignment_3_2_2_2_1() { return cStreetAssignment_3_2_2_2_1; }
		
		//Street
		public RuleCall getStreetStreetParserRuleCall_3_2_2_2_1_0() { return cStreetStreetParserRuleCall_3_2_2_2_1_0; }
		
		//// C059
		//                   (
		//                       PLUS
		//                       cityName=ID // 3164
		//                       (
		//                           PLUS
		//                           countrySubEntityDetails=CountrySubEntityDetail // C819
		//                           (
		//                               PLUS
		//                               postalIdentificationCode=ID // 3251
		//                               (
		//                                   PLUS
		//                                   countryNameCode=ID // 3207
		//                               )?
		//                           )?
		//                       )?
		//                   )?
		public Group getGroup_3_2_2_2_2() { return cGroup_3_2_2_2_2; }
		
		//PLUS
		public RuleCall getPLUSTerminalRuleCall_3_2_2_2_2_0() { return cPLUSTerminalRuleCall_3_2_2_2_2_0; }
		
		//cityName=ID
		public Assignment getCityNameAssignment_3_2_2_2_2_1() { return cCityNameAssignment_3_2_2_2_2_1; }
		
		//ID
		public RuleCall getCityNameIDTerminalRuleCall_3_2_2_2_2_1_0() { return cCityNameIDTerminalRuleCall_3_2_2_2_2_1_0; }
		
		//// 3164
		//                       (
		//                           PLUS
		//                           countrySubEntityDetails=CountrySubEntityDetail // C819
		//                           (
		//                               PLUS
		//                               postalIdentificationCode=ID // 3251
		//                               (
		//                                   PLUS
		//                                   countryNameCode=ID // 3207
		//                               )?
		//                           )?
		//                       )?
		public Group getGroup_3_2_2_2_2_2() { return cGroup_3_2_2_2_2_2; }
		
		//PLUS
		public RuleCall getPLUSTerminalRuleCall_3_2_2_2_2_2_0() { return cPLUSTerminalRuleCall_3_2_2_2_2_2_0; }
		
		//countrySubEntityDetails=CountrySubEntityDetail
		public Assignment getCountrySubEntityDetailsAssignment_3_2_2_2_2_2_1() { return cCountrySubEntityDetailsAssignment_3_2_2_2_2_2_1; }
		
		//CountrySubEntityDetail
		public RuleCall getCountrySubEntityDetailsCountrySubEntityDetailParserRuleCall_3_2_2_2_2_2_1_0() { return cCountrySubEntityDetailsCountrySubEntityDetailParserRuleCall_3_2_2_2_2_2_1_0; }
		
		//// C819
		//                           (
		//                               PLUS
		//                               postalIdentificationCode=ID // 3251
		//                               (
		//                                   PLUS
		//                                   countryNameCode=ID // 3207
		//                               )?
		//                           )?
		public Group getGroup_3_2_2_2_2_2_2() { return cGroup_3_2_2_2_2_2_2; }
		
		//PLUS
		public RuleCall getPLUSTerminalRuleCall_3_2_2_2_2_2_2_0() { return cPLUSTerminalRuleCall_3_2_2_2_2_2_2_0; }
		
		//postalIdentificationCode=ID
		public Assignment getPostalIdentificationCodeAssignment_3_2_2_2_2_2_2_1() { return cPostalIdentificationCodeAssignment_3_2_2_2_2_2_2_1; }
		
		//ID
		public RuleCall getPostalIdentificationCodeIDTerminalRuleCall_3_2_2_2_2_2_2_1_0() { return cPostalIdentificationCodeIDTerminalRuleCall_3_2_2_2_2_2_2_1_0; }
		
		//// 3251
		//                               (
		//                                   PLUS
		//                                   countryNameCode=ID // 3207
		//                               )?
		public Group getGroup_3_2_2_2_2_2_2_2() { return cGroup_3_2_2_2_2_2_2_2; }
		
		//PLUS
		public RuleCall getPLUSTerminalRuleCall_3_2_2_2_2_2_2_2_0() { return cPLUSTerminalRuleCall_3_2_2_2_2_2_2_2_0; }
		
		//countryNameCode=ID
		public Assignment getCountryNameCodeAssignment_3_2_2_2_2_2_2_2_1() { return cCountryNameCodeAssignment_3_2_2_2_2_2_2_2_1; }
		
		//ID
		public RuleCall getCountryNameCodeIDTerminalRuleCall_3_2_2_2_2_2_2_2_1_0() { return cCountryNameCodeIDTerminalRuleCall_3_2_2_2_2_2_2_2_1_0; }
		
		//lineEnd=QUOTE_AND_NL
		public Assignment getLineEndAssignment_4() { return cLineEndAssignment_4; }
		
		//QUOTE_AND_NL
		public RuleCall getLineEndQUOTE_AND_NLTerminalRuleCall_4_0() { return cLineEndQUOTE_AND_NLTerminalRuleCall_4_0; }
	}
	public class DTMSegmentElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "io.thlaegler.edifact.Edilang.DTMSegment");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cSegmentAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final Keyword cSegmentDTMKeyword_0_0 = (Keyword)cSegmentAssignment_0.eContents().get(0);
		private final Group cGroup_1 = (Group)cGroup.eContents().get(1);
		private final RuleCall cPLUSTerminalRuleCall_1_0 = (RuleCall)cGroup_1.eContents().get(0);
		private final Assignment cDateTimePeriodsAssignment_1_1 = (Assignment)cGroup_1.eContents().get(1);
		private final RuleCall cDateTimePeriodsDateTimePeriodParserRuleCall_1_1_0 = (RuleCall)cDateTimePeriodsAssignment_1_1.eContents().get(0);
		private final Assignment cLineEndAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cLineEndQUOTE_AND_NLTerminalRuleCall_2_0 = (RuleCall)cLineEndAssignment_2.eContents().get(0);
		
		////DTM+137:199910060000:102'
		//DTMSegment:
		//    segment="DTM"
		//    (
		//        PLUS
		//        dateTimePeriods+=DateTimePeriod
		//    )*
		//    lineEnd=QUOTE_AND_NL
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//segment="DTM"
		//(
		//    PLUS
		//    dateTimePeriods+=DateTimePeriod
		//)*
		//lineEnd=QUOTE_AND_NL
		public Group getGroup() { return cGroup; }
		
		//segment="DTM"
		public Assignment getSegmentAssignment_0() { return cSegmentAssignment_0; }
		
		//"DTM"
		public Keyword getSegmentDTMKeyword_0_0() { return cSegmentDTMKeyword_0_0; }
		
		//(
		//    PLUS
		//    dateTimePeriods+=DateTimePeriod
		//)*
		public Group getGroup_1() { return cGroup_1; }
		
		//PLUS
		public RuleCall getPLUSTerminalRuleCall_1_0() { return cPLUSTerminalRuleCall_1_0; }
		
		//dateTimePeriods+=DateTimePeriod
		public Assignment getDateTimePeriodsAssignment_1_1() { return cDateTimePeriodsAssignment_1_1; }
		
		//DateTimePeriod
		public RuleCall getDateTimePeriodsDateTimePeriodParserRuleCall_1_1_0() { return cDateTimePeriodsDateTimePeriodParserRuleCall_1_1_0; }
		
		//lineEnd=QUOTE_AND_NL
		public Assignment getLineEndAssignment_2() { return cLineEndAssignment_2; }
		
		//QUOTE_AND_NL
		public RuleCall getLineEndQUOTE_AND_NLTerminalRuleCall_2_0() { return cLineEndQUOTE_AND_NLTerminalRuleCall_2_0; }
	}
	public class BGMSegmentElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "io.thlaegler.edifact.Edilang.BGMSegment");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cSegmentAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final Keyword cSegmentBGMKeyword_0_0 = (Keyword)cSegmentAssignment_0.eContents().get(0);
		private final RuleCall cPLUSTerminalRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		private final Assignment cDocumentMessageNameAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cDocumentMessageNameDocumentMessageParserRuleCall_2_0 = (RuleCall)cDocumentMessageNameAssignment_2.eContents().get(0);
		private final RuleCall cPLUSTerminalRuleCall_3 = (RuleCall)cGroup.eContents().get(3);
		private final Assignment cDocumentMessageIdentificationAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cDocumentMessageIdentificationDocumentMessageIdentificationParserRuleCall_4_0 = (RuleCall)cDocumentMessageIdentificationAssignment_4.eContents().get(0);
		private final RuleCall cPLUSTerminalRuleCall_5 = (RuleCall)cGroup.eContents().get(5);
		private final Assignment cMessageFunctionCodeAssignment_6 = (Assignment)cGroup.eContents().get(6);
		private final RuleCall cMessageFunctionCodeIDTerminalRuleCall_6_0 = (RuleCall)cMessageFunctionCodeAssignment_6.eContents().get(0);
		private final Group cGroup_7 = (Group)cGroup.eContents().get(7);
		private final RuleCall cPLUSTerminalRuleCall_7_0 = (RuleCall)cGroup_7.eContents().get(0);
		private final Assignment cResponseTypeCodeAssignment_7_1 = (Assignment)cGroup_7.eContents().get(1);
		private final RuleCall cResponseTypeCodeIDTerminalRuleCall_7_1_0 = (RuleCall)cResponseTypeCodeAssignment_7_1.eContents().get(0);
		private final Assignment cLineEndAssignment_8 = (Assignment)cGroup.eContents().get(8);
		private final RuleCall cLineEndQUOTE_AND_NLTerminalRuleCall_8_0 = (RuleCall)cLineEndAssignment_8.eContents().get(0);
		
		////BGM+381+1060113800026+9'
		//BGMSegment:
		//    segment="BGM"
		//    PLUS
		//    ( documentMessageName=DocumentMessage )?
		//    PLUS
		//    ( documentMessageIdentification=DocumentMessageIdentification )?
		//    PLUS
		//    ( messageFunctionCode=ID )?
		//    (
		//        PLUS
		//        responseTypeCode=ID
		//    )?
		//    lineEnd=QUOTE_AND_NL
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//segment="BGM"
		//PLUS
		//( documentMessageName=DocumentMessage )?
		//PLUS
		//( documentMessageIdentification=DocumentMessageIdentification )?
		//PLUS
		//( messageFunctionCode=ID )?
		//(
		//    PLUS
		//    responseTypeCode=ID
		//)?
		//lineEnd=QUOTE_AND_NL
		public Group getGroup() { return cGroup; }
		
		//segment="BGM"
		public Assignment getSegmentAssignment_0() { return cSegmentAssignment_0; }
		
		//"BGM"
		public Keyword getSegmentBGMKeyword_0_0() { return cSegmentBGMKeyword_0_0; }
		
		//PLUS
		public RuleCall getPLUSTerminalRuleCall_1() { return cPLUSTerminalRuleCall_1; }
		
		//( documentMessageName=DocumentMessage )?
		public Assignment getDocumentMessageNameAssignment_2() { return cDocumentMessageNameAssignment_2; }
		
		//DocumentMessage
		public RuleCall getDocumentMessageNameDocumentMessageParserRuleCall_2_0() { return cDocumentMessageNameDocumentMessageParserRuleCall_2_0; }
		
		//PLUS
		public RuleCall getPLUSTerminalRuleCall_3() { return cPLUSTerminalRuleCall_3; }
		
		//( documentMessageIdentification=DocumentMessageIdentification )?
		public Assignment getDocumentMessageIdentificationAssignment_4() { return cDocumentMessageIdentificationAssignment_4; }
		
		//DocumentMessageIdentification
		public RuleCall getDocumentMessageIdentificationDocumentMessageIdentificationParserRuleCall_4_0() { return cDocumentMessageIdentificationDocumentMessageIdentificationParserRuleCall_4_0; }
		
		//PLUS
		public RuleCall getPLUSTerminalRuleCall_5() { return cPLUSTerminalRuleCall_5; }
		
		//( messageFunctionCode=ID )?
		public Assignment getMessageFunctionCodeAssignment_6() { return cMessageFunctionCodeAssignment_6; }
		
		//ID
		public RuleCall getMessageFunctionCodeIDTerminalRuleCall_6_0() { return cMessageFunctionCodeIDTerminalRuleCall_6_0; }
		
		//(
		//    PLUS
		//    responseTypeCode=ID
		//)?
		public Group getGroup_7() { return cGroup_7; }
		
		//PLUS
		public RuleCall getPLUSTerminalRuleCall_7_0() { return cPLUSTerminalRuleCall_7_0; }
		
		//responseTypeCode=ID
		public Assignment getResponseTypeCodeAssignment_7_1() { return cResponseTypeCodeAssignment_7_1; }
		
		//ID
		public RuleCall getResponseTypeCodeIDTerminalRuleCall_7_1_0() { return cResponseTypeCodeIDTerminalRuleCall_7_1_0; }
		
		//lineEnd=QUOTE_AND_NL
		public Assignment getLineEndAssignment_8() { return cLineEndAssignment_8; }
		
		//QUOTE_AND_NL
		public RuleCall getLineEndQUOTE_AND_NLTerminalRuleCall_8_0() { return cLineEndQUOTE_AND_NLTerminalRuleCall_8_0; }
	}
	public class PATSegmentElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "io.thlaegler.edifact.Edilang.PATSegment");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cSegmentAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final Keyword cSegmentPATKeyword_0_0 = (Keyword)cSegmentAssignment_0.eContents().get(0);
		private final RuleCall cPLUSTerminalRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		private final Assignment cSegmentCountAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cSegmentCountIDTerminalRuleCall_2_0 = (RuleCall)cSegmentCountAssignment_2.eContents().get(0);
		private final Assignment cLineEndAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cLineEndQUOTE_AND_NLTerminalRuleCall_3_0 = (RuleCall)cLineEndAssignment_3.eContents().get(0);
		
		////PAT+1'
		//PATSegment:
		//    segment="PAT"
		//    PLUS
		//    segmentCount=ID
		//    lineEnd=QUOTE_AND_NL
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//segment="PAT"
		//PLUS
		//segmentCount=ID
		//lineEnd=QUOTE_AND_NL
		public Group getGroup() { return cGroup; }
		
		//segment="PAT"
		public Assignment getSegmentAssignment_0() { return cSegmentAssignment_0; }
		
		//"PAT"
		public Keyword getSegmentPATKeyword_0_0() { return cSegmentPATKeyword_0_0; }
		
		//PLUS
		public RuleCall getPLUSTerminalRuleCall_1() { return cPLUSTerminalRuleCall_1; }
		
		//segmentCount=ID
		public Assignment getSegmentCountAssignment_2() { return cSegmentCountAssignment_2; }
		
		//ID
		public RuleCall getSegmentCountIDTerminalRuleCall_2_0() { return cSegmentCountIDTerminalRuleCall_2_0; }
		
		//lineEnd=QUOTE_AND_NL
		public Assignment getLineEndAssignment_3() { return cLineEndAssignment_3; }
		
		//QUOTE_AND_NL
		public RuleCall getLineEndQUOTE_AND_NLTerminalRuleCall_3_0() { return cLineEndQUOTE_AND_NLTerminalRuleCall_3_0; }
	}
	public class FTXSegmentElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "io.thlaegler.edifact.Edilang.FTXSegment");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cSegmentAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final Keyword cSegmentFTXKeyword_0_0 = (Keyword)cSegmentAssignment_0.eContents().get(0);
		private final RuleCall cPLUSTerminalRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		private final Assignment cTodo1Assignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cTodo1IDTerminalRuleCall_2_0 = (RuleCall)cTodo1Assignment_2.eContents().get(0);
		private final RuleCall cPLUSTerminalRuleCall_3 = (RuleCall)cGroup.eContents().get(3);
		private final Assignment cTodo2Assignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cTodo2IDTerminalRuleCall_4_0 = (RuleCall)cTodo2Assignment_4.eContents().get(0);
		private final RuleCall cPLUSTerminalRuleCall_5 = (RuleCall)cGroup.eContents().get(5);
		private final Assignment cTodo3Assignment_6 = (Assignment)cGroup.eContents().get(6);
		private final RuleCall cTodo3IDTerminalRuleCall_6_0 = (RuleCall)cTodo3Assignment_6.eContents().get(0);
		private final RuleCall cPLUSTerminalRuleCall_7 = (RuleCall)cGroup.eContents().get(7);
		private final Assignment cTodo4Assignment_8 = (Assignment)cGroup.eContents().get(8);
		private final RuleCall cTodo4IDTerminalRuleCall_8_0 = (RuleCall)cTodo4Assignment_8.eContents().get(0);
		private final Assignment cLineEndAssignment_9 = (Assignment)cGroup.eContents().get(9);
		private final RuleCall cLineEndQUOTE_AND_NLTerminalRuleCall_9_0 = (RuleCall)cLineEndAssignment_9.eContents().get(0);
		
		////FTX+AFM+1++XPath 2.0 Programmer?'s Reference'
		//FTXSegment:
		//    segment="FTX"
		//    PLUS
		//    ( todo1=ID )?
		//    PLUS
		//    ( todo2=ID )?
		//    PLUS
		//    ( todo3=ID )?
		//    PLUS
		//    ( todo4=ID )?
		//    lineEnd=QUOTE_AND_NL
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//segment="FTX"
		//PLUS
		//( todo1=ID )?
		//PLUS
		//( todo2=ID )?
		//PLUS
		//( todo3=ID )?
		//PLUS
		//( todo4=ID )?
		//lineEnd=QUOTE_AND_NL
		public Group getGroup() { return cGroup; }
		
		//segment="FTX"
		public Assignment getSegmentAssignment_0() { return cSegmentAssignment_0; }
		
		//"FTX"
		public Keyword getSegmentFTXKeyword_0_0() { return cSegmentFTXKeyword_0_0; }
		
		//PLUS
		public RuleCall getPLUSTerminalRuleCall_1() { return cPLUSTerminalRuleCall_1; }
		
		//( todo1=ID )?
		public Assignment getTodo1Assignment_2() { return cTodo1Assignment_2; }
		
		//ID
		public RuleCall getTodo1IDTerminalRuleCall_2_0() { return cTodo1IDTerminalRuleCall_2_0; }
		
		//PLUS
		public RuleCall getPLUSTerminalRuleCall_3() { return cPLUSTerminalRuleCall_3; }
		
		//( todo2=ID )?
		public Assignment getTodo2Assignment_4() { return cTodo2Assignment_4; }
		
		//ID
		public RuleCall getTodo2IDTerminalRuleCall_4_0() { return cTodo2IDTerminalRuleCall_4_0; }
		
		//PLUS
		public RuleCall getPLUSTerminalRuleCall_5() { return cPLUSTerminalRuleCall_5; }
		
		//( todo3=ID )?
		public Assignment getTodo3Assignment_6() { return cTodo3Assignment_6; }
		
		//ID
		public RuleCall getTodo3IDTerminalRuleCall_6_0() { return cTodo3IDTerminalRuleCall_6_0; }
		
		//PLUS
		public RuleCall getPLUSTerminalRuleCall_7() { return cPLUSTerminalRuleCall_7; }
		
		//( todo4=ID )?
		public Assignment getTodo4Assignment_8() { return cTodo4Assignment_8; }
		
		//ID
		public RuleCall getTodo4IDTerminalRuleCall_8_0() { return cTodo4IDTerminalRuleCall_8_0; }
		
		//lineEnd=QUOTE_AND_NL
		public Assignment getLineEndAssignment_9() { return cLineEndAssignment_9; }
		
		//QUOTE_AND_NL
		public RuleCall getLineEndQUOTE_AND_NLTerminalRuleCall_9_0() { return cLineEndQUOTE_AND_NLTerminalRuleCall_9_0; }
	}
	public class ERCSegmentElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "io.thlaegler.edifact.Edilang.ERCSegment");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cSegmentAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final Keyword cSegmentERCKeyword_0_0 = (Keyword)cSegmentAssignment_0.eContents().get(0);
		private final Group cGroup_1 = (Group)cGroup.eContents().get(1);
		private final RuleCall cPLUSTerminalRuleCall_1_0 = (RuleCall)cGroup_1.eContents().get(0);
		private final Assignment cApplicationErrorDetailsAssignment_1_1 = (Assignment)cGroup_1.eContents().get(1);
		private final RuleCall cApplicationErrorDetailsApplicationErrorDetailParserRuleCall_1_1_0 = (RuleCall)cApplicationErrorDetailsAssignment_1_1.eContents().get(0);
		private final Assignment cLineEndAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cLineEndQUOTE_AND_NLTerminalRuleCall_2_0 = (RuleCall)cLineEndAssignment_2.eContents().get(0);
		
		//ERCSegment:
		//    segment="ERC"
		//    (
		//        PLUS
		//        applicationErrorDetails+=ApplicationErrorDetail
		//    )*
		//    lineEnd=QUOTE_AND_NL
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//segment="ERC"
		//(
		//    PLUS
		//    applicationErrorDetails+=ApplicationErrorDetail
		//)*
		//lineEnd=QUOTE_AND_NL
		public Group getGroup() { return cGroup; }
		
		//segment="ERC"
		public Assignment getSegmentAssignment_0() { return cSegmentAssignment_0; }
		
		//"ERC"
		public Keyword getSegmentERCKeyword_0_0() { return cSegmentERCKeyword_0_0; }
		
		//(
		//    PLUS
		//    applicationErrorDetails+=ApplicationErrorDetail
		//)*
		public Group getGroup_1() { return cGroup_1; }
		
		//PLUS
		public RuleCall getPLUSTerminalRuleCall_1_0() { return cPLUSTerminalRuleCall_1_0; }
		
		//applicationErrorDetails+=ApplicationErrorDetail
		public Assignment getApplicationErrorDetailsAssignment_1_1() { return cApplicationErrorDetailsAssignment_1_1; }
		
		//ApplicationErrorDetail
		public RuleCall getApplicationErrorDetailsApplicationErrorDetailParserRuleCall_1_1_0() { return cApplicationErrorDetailsApplicationErrorDetailParserRuleCall_1_1_0; }
		
		//lineEnd=QUOTE_AND_NL
		public Assignment getLineEndAssignment_2() { return cLineEndAssignment_2; }
		
		//QUOTE_AND_NL
		public RuleCall getLineEndQUOTE_AND_NLTerminalRuleCall_2_0() { return cLineEndQUOTE_AND_NLTerminalRuleCall_2_0; }
	}
	public class CNTSegmentElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "io.thlaegler.edifact.Edilang.CNTSegment");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cSegmentAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final Keyword cSegmentCNTKeyword_0_0 = (Keyword)cSegmentAssignment_0.eContents().get(0);
		private final RuleCall cPLUSTerminalRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		private final Group cGroup_2 = (Group)cGroup.eContents().get(2);
		private final Assignment cTodo1Assignment_2_0 = (Assignment)cGroup_2.eContents().get(0);
		private final RuleCall cTodo1IDTerminalRuleCall_2_0_0 = (RuleCall)cTodo1Assignment_2_0.eContents().get(0);
		private final RuleCall cCOLONTerminalRuleCall_2_1 = (RuleCall)cGroup_2.eContents().get(1);
		private final Assignment cTodo2Assignment_2_2 = (Assignment)cGroup_2.eContents().get(2);
		private final RuleCall cTodo2IDTerminalRuleCall_2_2_0 = (RuleCall)cTodo2Assignment_2_2.eContents().get(0);
		private final Assignment cLineEndAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cLineEndQUOTE_AND_NLTerminalRuleCall_3_0 = (RuleCall)cLineEndAssignment_3.eContents().get(0);
		
		////CNT+2:4'
		//CNTSegment:
		//    segment="CNT"
		//    PLUS
		//    (
		//        ( todo1=ID )?
		//        COLON
		//        ( todo2=ID )?
		//    )?
		//    lineEnd=QUOTE_AND_NL
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//segment="CNT"
		//PLUS
		//(
		//    ( todo1=ID )?
		//    COLON
		//    ( todo2=ID )?
		//)?
		//lineEnd=QUOTE_AND_NL
		public Group getGroup() { return cGroup; }
		
		//segment="CNT"
		public Assignment getSegmentAssignment_0() { return cSegmentAssignment_0; }
		
		//"CNT"
		public Keyword getSegmentCNTKeyword_0_0() { return cSegmentCNTKeyword_0_0; }
		
		//PLUS
		public RuleCall getPLUSTerminalRuleCall_1() { return cPLUSTerminalRuleCall_1; }
		
		//(
		//    ( todo1=ID )?
		//    COLON
		//    ( todo2=ID )?
		//)?
		public Group getGroup_2() { return cGroup_2; }
		
		//( todo1=ID )?
		public Assignment getTodo1Assignment_2_0() { return cTodo1Assignment_2_0; }
		
		//ID
		public RuleCall getTodo1IDTerminalRuleCall_2_0_0() { return cTodo1IDTerminalRuleCall_2_0_0; }
		
		//COLON
		public RuleCall getCOLONTerminalRuleCall_2_1() { return cCOLONTerminalRuleCall_2_1; }
		
		//( todo2=ID )?
		public Assignment getTodo2Assignment_2_2() { return cTodo2Assignment_2_2; }
		
		//ID
		public RuleCall getTodo2IDTerminalRuleCall_2_2_0() { return cTodo2IDTerminalRuleCall_2_2_0; }
		
		//lineEnd=QUOTE_AND_NL
		public Assignment getLineEndAssignment_3() { return cLineEndAssignment_3; }
		
		//QUOTE_AND_NL
		public RuleCall getLineEndQUOTE_AND_NLTerminalRuleCall_3_0() { return cLineEndQUOTE_AND_NLTerminalRuleCall_3_0; }
	}
	public class CTASegmentElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "io.thlaegler.edifact.Edilang.CTASegment");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cSegmentAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final Keyword cSegmentCTAKeyword_0_0 = (Keyword)cSegmentAssignment_0.eContents().get(0);
		private final RuleCall cPLUSTerminalRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		private final Assignment cTodoAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cTodoIDTerminalRuleCall_2_0 = (RuleCall)cTodoAssignment_2.eContents().get(0);
		private final Assignment cLineEndAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cLineEndQUOTE_AND_NLTerminalRuleCall_3_0 = (RuleCall)cLineEndAssignment_3.eContents().get(0);
		
		//CTASegment:
		//    segment="CTA"
		//    PLUS
		//    ( todo=ID )?
		//    lineEnd=QUOTE_AND_NL
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//segment="CTA"
		//PLUS
		//( todo=ID )?
		//lineEnd=QUOTE_AND_NL
		public Group getGroup() { return cGroup; }
		
		//segment="CTA"
		public Assignment getSegmentAssignment_0() { return cSegmentAssignment_0; }
		
		//"CTA"
		public Keyword getSegmentCTAKeyword_0_0() { return cSegmentCTAKeyword_0_0; }
		
		//PLUS
		public RuleCall getPLUSTerminalRuleCall_1() { return cPLUSTerminalRuleCall_1; }
		
		//( todo=ID )?
		public Assignment getTodoAssignment_2() { return cTodoAssignment_2; }
		
		//ID
		public RuleCall getTodoIDTerminalRuleCall_2_0() { return cTodoIDTerminalRuleCall_2_0; }
		
		//lineEnd=QUOTE_AND_NL
		public Assignment getLineEndAssignment_3() { return cLineEndAssignment_3; }
		
		//QUOTE_AND_NL
		public RuleCall getLineEndQUOTE_AND_NLTerminalRuleCall_3_0() { return cLineEndQUOTE_AND_NLTerminalRuleCall_3_0; }
	}
	public class PCISegmentElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "io.thlaegler.edifact.Edilang.PCISegment");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cSegmentAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final Keyword cSegmentPCIKeyword_0_0 = (Keyword)cSegmentAssignment_0.eContents().get(0);
		private final RuleCall cPLUSTerminalRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		private final Assignment cTodoAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cTodoIDTerminalRuleCall_2_0 = (RuleCall)cTodoAssignment_2.eContents().get(0);
		private final Assignment cLineEndAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cLineEndQUOTE_AND_NLTerminalRuleCall_3_0 = (RuleCall)cLineEndAssignment_3.eContents().get(0);
		
		//PCISegment:
		//    segment="PCI"
		//    PLUS
		//    ( todo=ID )?
		//    lineEnd=QUOTE_AND_NL
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//segment="PCI"
		//PLUS
		//( todo=ID )?
		//lineEnd=QUOTE_AND_NL
		public Group getGroup() { return cGroup; }
		
		//segment="PCI"
		public Assignment getSegmentAssignment_0() { return cSegmentAssignment_0; }
		
		//"PCI"
		public Keyword getSegmentPCIKeyword_0_0() { return cSegmentPCIKeyword_0_0; }
		
		//PLUS
		public RuleCall getPLUSTerminalRuleCall_1() { return cPLUSTerminalRuleCall_1; }
		
		//( todo=ID )?
		public Assignment getTodoAssignment_2() { return cTodoAssignment_2; }
		
		//ID
		public RuleCall getTodoIDTerminalRuleCall_2_0() { return cTodoIDTerminalRuleCall_2_0; }
		
		//lineEnd=QUOTE_AND_NL
		public Assignment getLineEndAssignment_3() { return cLineEndAssignment_3; }
		
		//QUOTE_AND_NL
		public RuleCall getLineEndQUOTE_AND_NLTerminalRuleCall_3_0() { return cLineEndQUOTE_AND_NLTerminalRuleCall_3_0; }
	}
	public class UNSSegmentElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "io.thlaegler.edifact.Edilang.UNSSegment");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cSegmentAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final Keyword cSegmentUNSKeyword_0_0 = (Keyword)cSegmentAssignment_0.eContents().get(0);
		private final RuleCall cPLUSTerminalRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		private final Assignment cSegmentCountAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cSegmentCountIDTerminalRuleCall_2_0 = (RuleCall)cSegmentCountAssignment_2.eContents().get(0);
		private final Assignment cLineEndAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cLineEndQUOTE_AND_NLTerminalRuleCall_3_0 = (RuleCall)cLineEndAssignment_3.eContents().get(0);
		
		////UNS+S'
		//UNSSegment:
		//    segment="UNS"
		//    PLUS
		//    segmentCount=ID
		//    lineEnd=QUOTE_AND_NL
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//segment="UNS"
		//PLUS
		//segmentCount=ID
		//lineEnd=QUOTE_AND_NL
		public Group getGroup() { return cGroup; }
		
		//segment="UNS"
		public Assignment getSegmentAssignment_0() { return cSegmentAssignment_0; }
		
		//"UNS"
		public Keyword getSegmentUNSKeyword_0_0() { return cSegmentUNSKeyword_0_0; }
		
		//PLUS
		public RuleCall getPLUSTerminalRuleCall_1() { return cPLUSTerminalRuleCall_1; }
		
		//segmentCount=ID
		public Assignment getSegmentCountAssignment_2() { return cSegmentCountAssignment_2; }
		
		//ID
		public RuleCall getSegmentCountIDTerminalRuleCall_2_0() { return cSegmentCountIDTerminalRuleCall_2_0; }
		
		//lineEnd=QUOTE_AND_NL
		public Assignment getLineEndAssignment_3() { return cLineEndAssignment_3; }
		
		//QUOTE_AND_NL
		public RuleCall getLineEndQUOTE_AND_NLTerminalRuleCall_3_0() { return cLineEndQUOTE_AND_NLTerminalRuleCall_3_0; }
	}
	public class UNTSegmentElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "io.thlaegler.edifact.Edilang.UNTSegment");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cSegmentAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final Keyword cSegmentUNTKeyword_0_0 = (Keyword)cSegmentAssignment_0.eContents().get(0);
		private final RuleCall cPLUSTerminalRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		private final Assignment cSegmentCountAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cSegmentCountIDTerminalRuleCall_2_0 = (RuleCall)cSegmentCountAssignment_2.eContents().get(0);
		private final RuleCall cPLUSTerminalRuleCall_3 = (RuleCall)cGroup.eContents().get(3);
		private final Assignment cMessageReferenceNumberAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cMessageReferenceNumberIDTerminalRuleCall_4_0 = (RuleCall)cMessageReferenceNumberAssignment_4.eContents().get(0);
		private final Assignment cLineEndAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final RuleCall cLineEndQUOTE_AND_NLTerminalRuleCall_5_0 = (RuleCall)cLineEndAssignment_5.eContents().get(0);
		
		////UNT+9+1'
		//UNTSegment:
		//    segment="UNT"
		//    PLUS
		//    ( segmentCount=ID )?
		//    PLUS
		//    ( messageReferenceNumber=ID )?
		//    lineEnd=QUOTE_AND_NL
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//segment="UNT"
		//PLUS
		//( segmentCount=ID )?
		//PLUS
		//( messageReferenceNumber=ID )?
		//lineEnd=QUOTE_AND_NL
		public Group getGroup() { return cGroup; }
		
		//segment="UNT"
		public Assignment getSegmentAssignment_0() { return cSegmentAssignment_0; }
		
		//"UNT"
		public Keyword getSegmentUNTKeyword_0_0() { return cSegmentUNTKeyword_0_0; }
		
		//PLUS
		public RuleCall getPLUSTerminalRuleCall_1() { return cPLUSTerminalRuleCall_1; }
		
		//( segmentCount=ID )?
		public Assignment getSegmentCountAssignment_2() { return cSegmentCountAssignment_2; }
		
		//ID
		public RuleCall getSegmentCountIDTerminalRuleCall_2_0() { return cSegmentCountIDTerminalRuleCall_2_0; }
		
		//PLUS
		public RuleCall getPLUSTerminalRuleCall_3() { return cPLUSTerminalRuleCall_3; }
		
		//( messageReferenceNumber=ID )?
		public Assignment getMessageReferenceNumberAssignment_4() { return cMessageReferenceNumberAssignment_4; }
		
		//ID
		public RuleCall getMessageReferenceNumberIDTerminalRuleCall_4_0() { return cMessageReferenceNumberIDTerminalRuleCall_4_0; }
		
		//lineEnd=QUOTE_AND_NL
		public Assignment getLineEndAssignment_5() { return cLineEndAssignment_5; }
		
		//QUOTE_AND_NL
		public RuleCall getLineEndQUOTE_AND_NLTerminalRuleCall_5_0() { return cLineEndQUOTE_AND_NLTerminalRuleCall_5_0; }
	}
	public class UNZSegmentElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "io.thlaegler.edifact.Edilang.UNZSegment");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cSegmentAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final Keyword cSegmentUNZKeyword_0_0 = (Keyword)cSegmentAssignment_0.eContents().get(0);
		private final RuleCall cPLUSTerminalRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		private final Assignment cInterchangeControlCountAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cInterchangeControlCountIDTerminalRuleCall_2_0 = (RuleCall)cInterchangeControlCountAssignment_2.eContents().get(0);
		private final RuleCall cPLUSTerminalRuleCall_3 = (RuleCall)cGroup.eContents().get(3);
		private final Assignment cInterchangeControlRefAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cInterchangeControlRefIDTerminalRuleCall_4_0 = (RuleCall)cInterchangeControlRefAssignment_4.eContents().get(0);
		private final Assignment cLineEndAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final RuleCall cLineEndQUOTE_AND_NLTerminalRuleCall_5_0 = (RuleCall)cLineEndAssignment_5.eContents().get(0);
		
		////UNZ+1+039I42XXTK0001'
		//UNZSegment:
		//    segment="UNZ"
		//    PLUS
		//    ( interchangeControlCount=ID )?
		//    PLUS
		//    ( interchangeControlRef=ID )?
		//    lineEnd=QUOTE_AND_NL
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//segment="UNZ"
		//PLUS
		//( interchangeControlCount=ID )?
		//PLUS
		//( interchangeControlRef=ID )?
		//lineEnd=QUOTE_AND_NL
		public Group getGroup() { return cGroup; }
		
		//segment="UNZ"
		public Assignment getSegmentAssignment_0() { return cSegmentAssignment_0; }
		
		//"UNZ"
		public Keyword getSegmentUNZKeyword_0_0() { return cSegmentUNZKeyword_0_0; }
		
		//PLUS
		public RuleCall getPLUSTerminalRuleCall_1() { return cPLUSTerminalRuleCall_1; }
		
		//( interchangeControlCount=ID )?
		public Assignment getInterchangeControlCountAssignment_2() { return cInterchangeControlCountAssignment_2; }
		
		//ID
		public RuleCall getInterchangeControlCountIDTerminalRuleCall_2_0() { return cInterchangeControlCountIDTerminalRuleCall_2_0; }
		
		//PLUS
		public RuleCall getPLUSTerminalRuleCall_3() { return cPLUSTerminalRuleCall_3; }
		
		//( interchangeControlRef=ID )?
		public Assignment getInterchangeControlRefAssignment_4() { return cInterchangeControlRefAssignment_4; }
		
		//ID
		public RuleCall getInterchangeControlRefIDTerminalRuleCall_4_0() { return cInterchangeControlRefIDTerminalRuleCall_4_0; }
		
		//lineEnd=QUOTE_AND_NL
		public Assignment getLineEndAssignment_5() { return cLineEndAssignment_5; }
		
		//QUOTE_AND_NL
		public RuleCall getLineEndQUOTE_AND_NLTerminalRuleCall_5_0() { return cLineEndQUOTE_AND_NLTerminalRuleCall_5_0; }
	}
	public class AbstractEdiFunctionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "io.thlaegler.edifact.Edilang.AbstractEdiFunction");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cUNBHeaderParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cPriceInformationParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		private final RuleCall cMessageBodyFunctionParserRuleCall_2 = (RuleCall)cAlternatives.eContents().get(2);
		private final RuleCall cMessageIndentifierParserRuleCall_3 = (RuleCall)cAlternatives.eContents().get(3);
		private final RuleCall cRelationshipParserRuleCall_4 = (RuleCall)cAlternatives.eContents().get(4);
		private final RuleCall cProductFunctionParserRuleCall_5 = (RuleCall)cAlternatives.eContents().get(5);
		private final RuleCall cItemNumberIdentificationParserRuleCall_6 = (RuleCall)cAlternatives.eContents().get(6);
		private final RuleCall cSublineInformationParserRuleCall_7 = (RuleCall)cAlternatives.eContents().get(7);
		private final RuleCall cQuantityDetailParserRuleCall_8 = (RuleCall)cAlternatives.eContents().get(8);
		private final RuleCall cStreetParserRuleCall_9 = (RuleCall)cAlternatives.eContents().get(9);
		private final RuleCall cCountrySubEntityDetailParserRuleCall_10 = (RuleCall)cAlternatives.eContents().get(10);
		private final RuleCall cPartyNameParserRuleCall_11 = (RuleCall)cAlternatives.eContents().get(11);
		private final RuleCall cNameAndAddressParserRuleCall_12 = (RuleCall)cAlternatives.eContents().get(12);
		private final RuleCall cApplicationErrorDetailParserRuleCall_13 = (RuleCall)cAlternatives.eContents().get(13);
		private final RuleCall cSystemDetailFunctionParserRuleCall_14 = (RuleCall)cAlternatives.eContents().get(14);
		private final RuleCall cTaxDetailParserRuleCall_15 = (RuleCall)cAlternatives.eContents().get(15);
		private final RuleCall cTaxAccountDetailParserRuleCall_16 = (RuleCall)cAlternatives.eContents().get(16);
		private final RuleCall cTaxTypeParserRuleCall_17 = (RuleCall)cAlternatives.eContents().get(17);
		private final RuleCall cCurrencyDetailParserRuleCall_18 = (RuleCall)cAlternatives.eContents().get(18);
		private final RuleCall cDocumentMessageIdentificationParserRuleCall_19 = (RuleCall)cAlternatives.eContents().get(19);
		private final RuleCall cDocumentMessageParserRuleCall_20 = (RuleCall)cAlternatives.eContents().get(20);
		private final RuleCall cOriginatorFunctionParserRuleCall_21 = (RuleCall)cAlternatives.eContents().get(21);
		private final RuleCall cOriginatorIdentificationFunctionParserRuleCall_22 = (RuleCall)cAlternatives.eContents().get(22);
		private final RuleCall cLocationFunctionParserRuleCall_23 = (RuleCall)cAlternatives.eContents().get(23);
		private final RuleCall cInterchangerFunctionParserRuleCall_24 = (RuleCall)cAlternatives.eContents().get(24);
		private final RuleCall cDateOnlyFunctionParserRuleCall_25 = (RuleCall)cAlternatives.eContents().get(25);
		private final RuleCall cDateAndTimeFunctionParserRuleCall_26 = (RuleCall)cAlternatives.eContents().get(26);
		private final RuleCall cDateTimePeriodParserRuleCall_27 = (RuleCall)cAlternatives.eContents().get(27);
		
		//// EDIFACT Functions
		//AbstractEdiFunction:
		//    UNBHeader |
		//    PriceInformation |
		//    MessageBodyFunction |
		//    MessageIndentifier |
		//    Relationship |
		//    ProductFunction |
		//    ItemNumberIdentification |
		//    SublineInformation |
		//    QuantityDetail |
		//    Street |
		//    CountrySubEntityDetail |
		//    PartyName |
		//    NameAndAddress |
		//    ApplicationErrorDetail |
		//    SystemDetailFunction |
		//    TaxDetail |
		//    TaxAccountDetail |
		//    TaxType |
		//    CurrencyDetail |
		//    DocumentMessageIdentification |
		//    DocumentMessage |
		//    OriginatorFunction |
		//    OriginatorIdentificationFunction |
		//    LocationFunction |
		//    InterchangerFunction |
		//    DateOnlyFunction |
		//    DateAndTimeFunction |
		//    DateTimePeriod
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//UNBHeader |
		//PriceInformation |
		//MessageBodyFunction |
		//MessageIndentifier |
		//Relationship |
		//ProductFunction |
		//ItemNumberIdentification |
		//SublineInformation |
		//QuantityDetail |
		//Street |
		//CountrySubEntityDetail |
		//PartyName |
		//NameAndAddress |
		//ApplicationErrorDetail |
		//SystemDetailFunction |
		//TaxDetail |
		//TaxAccountDetail |
		//TaxType |
		//CurrencyDetail |
		//DocumentMessageIdentification |
		//DocumentMessage |
		//OriginatorFunction |
		//OriginatorIdentificationFunction |
		//LocationFunction |
		//InterchangerFunction |
		//DateOnlyFunction |
		//DateAndTimeFunction |
		//DateTimePeriod
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//UNBHeader
		public RuleCall getUNBHeaderParserRuleCall_0() { return cUNBHeaderParserRuleCall_0; }
		
		//PriceInformation
		public RuleCall getPriceInformationParserRuleCall_1() { return cPriceInformationParserRuleCall_1; }
		
		//MessageBodyFunction
		public RuleCall getMessageBodyFunctionParserRuleCall_2() { return cMessageBodyFunctionParserRuleCall_2; }
		
		//MessageIndentifier
		public RuleCall getMessageIndentifierParserRuleCall_3() { return cMessageIndentifierParserRuleCall_3; }
		
		//Relationship
		public RuleCall getRelationshipParserRuleCall_4() { return cRelationshipParserRuleCall_4; }
		
		//ProductFunction
		public RuleCall getProductFunctionParserRuleCall_5() { return cProductFunctionParserRuleCall_5; }
		
		//ItemNumberIdentification
		public RuleCall getItemNumberIdentificationParserRuleCall_6() { return cItemNumberIdentificationParserRuleCall_6; }
		
		//SublineInformation
		public RuleCall getSublineInformationParserRuleCall_7() { return cSublineInformationParserRuleCall_7; }
		
		//QuantityDetail
		public RuleCall getQuantityDetailParserRuleCall_8() { return cQuantityDetailParserRuleCall_8; }
		
		//Street
		public RuleCall getStreetParserRuleCall_9() { return cStreetParserRuleCall_9; }
		
		//CountrySubEntityDetail
		public RuleCall getCountrySubEntityDetailParserRuleCall_10() { return cCountrySubEntityDetailParserRuleCall_10; }
		
		//PartyName
		public RuleCall getPartyNameParserRuleCall_11() { return cPartyNameParserRuleCall_11; }
		
		//NameAndAddress
		public RuleCall getNameAndAddressParserRuleCall_12() { return cNameAndAddressParserRuleCall_12; }
		
		//ApplicationErrorDetail
		public RuleCall getApplicationErrorDetailParserRuleCall_13() { return cApplicationErrorDetailParserRuleCall_13; }
		
		//SystemDetailFunction
		public RuleCall getSystemDetailFunctionParserRuleCall_14() { return cSystemDetailFunctionParserRuleCall_14; }
		
		//TaxDetail
		public RuleCall getTaxDetailParserRuleCall_15() { return cTaxDetailParserRuleCall_15; }
		
		//TaxAccountDetail
		public RuleCall getTaxAccountDetailParserRuleCall_16() { return cTaxAccountDetailParserRuleCall_16; }
		
		//TaxType
		public RuleCall getTaxTypeParserRuleCall_17() { return cTaxTypeParserRuleCall_17; }
		
		//CurrencyDetail
		public RuleCall getCurrencyDetailParserRuleCall_18() { return cCurrencyDetailParserRuleCall_18; }
		
		//DocumentMessageIdentification
		public RuleCall getDocumentMessageIdentificationParserRuleCall_19() { return cDocumentMessageIdentificationParserRuleCall_19; }
		
		//DocumentMessage
		public RuleCall getDocumentMessageParserRuleCall_20() { return cDocumentMessageParserRuleCall_20; }
		
		//OriginatorFunction
		public RuleCall getOriginatorFunctionParserRuleCall_21() { return cOriginatorFunctionParserRuleCall_21; }
		
		//OriginatorIdentificationFunction
		public RuleCall getOriginatorIdentificationFunctionParserRuleCall_22() { return cOriginatorIdentificationFunctionParserRuleCall_22; }
		
		//LocationFunction
		public RuleCall getLocationFunctionParserRuleCall_23() { return cLocationFunctionParserRuleCall_23; }
		
		//InterchangerFunction
		public RuleCall getInterchangerFunctionParserRuleCall_24() { return cInterchangerFunctionParserRuleCall_24; }
		
		//DateOnlyFunction
		public RuleCall getDateOnlyFunctionParserRuleCall_25() { return cDateOnlyFunctionParserRuleCall_25; }
		
		//DateAndTimeFunction
		public RuleCall getDateAndTimeFunctionParserRuleCall_26() { return cDateAndTimeFunctionParserRuleCall_26; }
		
		//DateTimePeriod
		public RuleCall getDateTimePeriodParserRuleCall_27() { return cDateTimePeriodParserRuleCall_27; }
	}
	public class UNBHeaderElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "io.thlaegler.edifact.Edilang.UNBHeader");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cUNBHeaderAction_0 = (Action)cGroup.eContents().get(0);
		private final Assignment cSyntaxAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cSyntaxIDTerminalRuleCall_1_0 = (RuleCall)cSyntaxAssignment_1.eContents().get(0);
		private final RuleCall cCOLONTerminalRuleCall_2 = (RuleCall)cGroup.eContents().get(2);
		private final Assignment cNum1Assignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cNum1IDTerminalRuleCall_3_0 = (RuleCall)cNum1Assignment_3.eContents().get(0);
		
		//UNBHeader:
		//    {UNBHeader}
		//    ( syntax=ID )?
		//    COLON
		//    ( num1=ID )?
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//{UNBHeader}
		//( syntax=ID )?
		//COLON
		//( num1=ID )?
		public Group getGroup() { return cGroup; }
		
		//{UNBHeader}
		public Action getUNBHeaderAction_0() { return cUNBHeaderAction_0; }
		
		//( syntax=ID )?
		public Assignment getSyntaxAssignment_1() { return cSyntaxAssignment_1; }
		
		//ID
		public RuleCall getSyntaxIDTerminalRuleCall_1_0() { return cSyntaxIDTerminalRuleCall_1_0; }
		
		//COLON
		public RuleCall getCOLONTerminalRuleCall_2() { return cCOLONTerminalRuleCall_2; }
		
		//( num1=ID )?
		public Assignment getNum1Assignment_3() { return cNum1Assignment_3; }
		
		//ID
		public RuleCall getNum1IDTerminalRuleCall_3_0() { return cNum1IDTerminalRuleCall_3_0; }
	}
	public class PriceInformationElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "io.thlaegler.edifact.Edilang.PriceInformation");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cPriceCodeQualifierAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cPriceCodeQualifierIDTerminalRuleCall_0_0 = (RuleCall)cPriceCodeQualifierAssignment_0.eContents().get(0);
		private final RuleCall cCOLONTerminalRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		private final Assignment cPriceAmountAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cPriceAmountIDTerminalRuleCall_2_0 = (RuleCall)cPriceAmountAssignment_2.eContents().get(0);
		private final RuleCall cCOLONTerminalRuleCall_3 = (RuleCall)cGroup.eContents().get(3);
		private final Assignment cPriceTypeCodeAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cPriceTypeCodeIDTerminalRuleCall_4_0 = (RuleCall)cPriceTypeCodeAssignment_4.eContents().get(0);
		private final RuleCall cCOLONTerminalRuleCall_5 = (RuleCall)cGroup.eContents().get(5);
		private final Assignment cPriceSpecificationCodeAssignment_6 = (Assignment)cGroup.eContents().get(6);
		private final RuleCall cPriceSpecificationCodeIDTerminalRuleCall_6_0 = (RuleCall)cPriceSpecificationCodeAssignment_6.eContents().get(0);
		private final RuleCall cCOLONTerminalRuleCall_7 = (RuleCall)cGroup.eContents().get(7);
		private final Assignment cUnitPriceBasisValueAssignment_8 = (Assignment)cGroup.eContents().get(8);
		private final RuleCall cUnitPriceBasisValueIDTerminalRuleCall_8_0 = (RuleCall)cUnitPriceBasisValueAssignment_8.eContents().get(0);
		private final RuleCall cCOLONTerminalRuleCall_9 = (RuleCall)cGroup.eContents().get(9);
		private final Assignment cMeasurementUnitCodeAssignment_10 = (Assignment)cGroup.eContents().get(10);
		private final RuleCall cMeasurementUnitCodeIDTerminalRuleCall_10_0 = (RuleCall)cMeasurementUnitCodeAssignment_10.eContents().get(0);
		
		//PriceInformation: // C509
		//    priceCodeQualifier=ID // 5125
		//    COLON
		//    ( priceAmount=ID )? // 5118
		//    COLON
		//    ( priceTypeCode=ID )? // 5375
		//    COLON
		//    ( priceSpecificationCode=ID )? // 5287
		//    COLON
		//    ( unitPriceBasisValue=ID )? // 5284
		//    COLON
		//    ( measurementUnitCode=ID )? // 6411
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//// C509
		//   priceCodeQualifier=ID // 5125
		//   COLON
		//   ( priceAmount=ID )? // 5118
		//   COLON
		//   ( priceTypeCode=ID )? // 5375
		//   COLON
		//   ( priceSpecificationCode=ID )? // 5287
		//   COLON
		//   ( unitPriceBasisValue=ID )? // 5284
		//   COLON
		//   ( measurementUnitCode=ID )?
		public Group getGroup() { return cGroup; }
		
		//// C509
		//   priceCodeQualifier=ID
		public Assignment getPriceCodeQualifierAssignment_0() { return cPriceCodeQualifierAssignment_0; }
		
		//ID
		public RuleCall getPriceCodeQualifierIDTerminalRuleCall_0_0() { return cPriceCodeQualifierIDTerminalRuleCall_0_0; }
		
		//// 5125
		//   COLON
		public RuleCall getCOLONTerminalRuleCall_1() { return cCOLONTerminalRuleCall_1; }
		
		//( priceAmount=ID )?
		public Assignment getPriceAmountAssignment_2() { return cPriceAmountAssignment_2; }
		
		//ID
		public RuleCall getPriceAmountIDTerminalRuleCall_2_0() { return cPriceAmountIDTerminalRuleCall_2_0; }
		
		//// 5118
		//   COLON
		public RuleCall getCOLONTerminalRuleCall_3() { return cCOLONTerminalRuleCall_3; }
		
		//( priceTypeCode=ID )?
		public Assignment getPriceTypeCodeAssignment_4() { return cPriceTypeCodeAssignment_4; }
		
		//ID
		public RuleCall getPriceTypeCodeIDTerminalRuleCall_4_0() { return cPriceTypeCodeIDTerminalRuleCall_4_0; }
		
		//// 5375
		//   COLON
		public RuleCall getCOLONTerminalRuleCall_5() { return cCOLONTerminalRuleCall_5; }
		
		//( priceSpecificationCode=ID )?
		public Assignment getPriceSpecificationCodeAssignment_6() { return cPriceSpecificationCodeAssignment_6; }
		
		//ID
		public RuleCall getPriceSpecificationCodeIDTerminalRuleCall_6_0() { return cPriceSpecificationCodeIDTerminalRuleCall_6_0; }
		
		//// 5287
		//   COLON
		public RuleCall getCOLONTerminalRuleCall_7() { return cCOLONTerminalRuleCall_7; }
		
		//( unitPriceBasisValue=ID )?
		public Assignment getUnitPriceBasisValueAssignment_8() { return cUnitPriceBasisValueAssignment_8; }
		
		//ID
		public RuleCall getUnitPriceBasisValueIDTerminalRuleCall_8_0() { return cUnitPriceBasisValueIDTerminalRuleCall_8_0; }
		
		//// 5284
		//   COLON
		public RuleCall getCOLONTerminalRuleCall_9() { return cCOLONTerminalRuleCall_9; }
		
		//( measurementUnitCode=ID )?
		public Assignment getMeasurementUnitCodeAssignment_10() { return cMeasurementUnitCodeAssignment_10; }
		
		//ID
		public RuleCall getMeasurementUnitCodeIDTerminalRuleCall_10_0() { return cMeasurementUnitCodeIDTerminalRuleCall_10_0; }
	}
	public class MessageBodyFunctionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "io.thlaegler.edifact.Edilang.MessageBodyFunction");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cTypeAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cTypeIDTerminalRuleCall_0_0 = (RuleCall)cTypeAssignment_0.eContents().get(0);
		private final RuleCall cCOLONTerminalRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		private final Assignment cVersionAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cVersionIDTerminalRuleCall_2_0 = (RuleCall)cVersionAssignment_2.eContents().get(0);
		private final RuleCall cCOLONTerminalRuleCall_3 = (RuleCall)cGroup.eContents().get(3);
		private final Assignment cReleaseAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cReleaseIDTerminalRuleCall_4_0 = (RuleCall)cReleaseAssignment_4.eContents().get(0);
		private final RuleCall cCOLONTerminalRuleCall_5 = (RuleCall)cGroup.eContents().get(5);
		private final Assignment cControllingAgencyAssignment_6 = (Assignment)cGroup.eContents().get(6);
		private final RuleCall cControllingAgencyIDTerminalRuleCall_6_0 = (RuleCall)cControllingAgencyAssignment_6.eContents().get(0);
		private final Group cGroup_7 = (Group)cGroup.eContents().get(7);
		private final RuleCall cCOLONTerminalRuleCall_7_0 = (RuleCall)cGroup_7.eContents().get(0);
		private final Assignment cMoreAssignment_7_1 = (Assignment)cGroup_7.eContents().get(1);
		private final RuleCall cMoreIDTerminalRuleCall_7_1_0 = (RuleCall)cMoreAssignment_7_1.eContents().get(0);
		
		//MessageBodyFunction:
		//    type=ID
		//    COLON
		//    ( version=ID )?
		//    COLON
		//    ( release=ID )?
		//    COLON
		//    ( controllingAgency=ID )?
		//    (
		//        COLON
		//        more=ID
		//    )?
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//type=ID
		//COLON
		//( version=ID )?
		//COLON
		//( release=ID )?
		//COLON
		//( controllingAgency=ID )?
		//(
		//    COLON
		//    more=ID
		//)?
		public Group getGroup() { return cGroup; }
		
		//type=ID
		public Assignment getTypeAssignment_0() { return cTypeAssignment_0; }
		
		//ID
		public RuleCall getTypeIDTerminalRuleCall_0_0() { return cTypeIDTerminalRuleCall_0_0; }
		
		//COLON
		public RuleCall getCOLONTerminalRuleCall_1() { return cCOLONTerminalRuleCall_1; }
		
		//( version=ID )?
		public Assignment getVersionAssignment_2() { return cVersionAssignment_2; }
		
		//ID
		public RuleCall getVersionIDTerminalRuleCall_2_0() { return cVersionIDTerminalRuleCall_2_0; }
		
		//COLON
		public RuleCall getCOLONTerminalRuleCall_3() { return cCOLONTerminalRuleCall_3; }
		
		//( release=ID )?
		public Assignment getReleaseAssignment_4() { return cReleaseAssignment_4; }
		
		//ID
		public RuleCall getReleaseIDTerminalRuleCall_4_0() { return cReleaseIDTerminalRuleCall_4_0; }
		
		//COLON
		public RuleCall getCOLONTerminalRuleCall_5() { return cCOLONTerminalRuleCall_5; }
		
		//( controllingAgency=ID )?
		public Assignment getControllingAgencyAssignment_6() { return cControllingAgencyAssignment_6; }
		
		//ID
		public RuleCall getControllingAgencyIDTerminalRuleCall_6_0() { return cControllingAgencyIDTerminalRuleCall_6_0; }
		
		//(
		//    COLON
		//    more=ID
		//)?
		public Group getGroup_7() { return cGroup_7; }
		
		//COLON
		public RuleCall getCOLONTerminalRuleCall_7_0() { return cCOLONTerminalRuleCall_7_0; }
		
		//more=ID
		public Assignment getMoreAssignment_7_1() { return cMoreAssignment_7_1; }
		
		//ID
		public RuleCall getMoreIDTerminalRuleCall_7_1_0() { return cMoreIDTerminalRuleCall_7_1_0; }
	}
	public class MessageIndentifierElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "io.thlaegler.edifact.Edilang.MessageIndentifier");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cMessageTypeCodeAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cMessageTypeCodeIDTerminalRuleCall_0_0 = (RuleCall)cMessageTypeCodeAssignment_0.eContents().get(0);
		private final RuleCall cCOLONTerminalRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		private final Assignment cVersionIdentifierAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cVersionIdentifierIDTerminalRuleCall_2_0 = (RuleCall)cVersionIdentifierAssignment_2.eContents().get(0);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final RuleCall cCOLONTerminalRuleCall_3_0 = (RuleCall)cGroup_3.eContents().get(0);
		private final Assignment cReleaseIdentifierAssignment_3_1 = (Assignment)cGroup_3.eContents().get(1);
		private final RuleCall cReleaseIdentifierIDTerminalRuleCall_3_1_0 = (RuleCall)cReleaseIdentifierAssignment_3_1.eContents().get(0);
		private final Group cGroup_3_2 = (Group)cGroup_3.eContents().get(2);
		private final RuleCall cCOLONTerminalRuleCall_3_2_0 = (RuleCall)cGroup_3_2.eContents().get(0);
		private final Assignment cControllingAgencyIdentifierAssignment_3_2_1 = (Assignment)cGroup_3_2.eContents().get(1);
		private final RuleCall cControllingAgencyIdentifierIDTerminalRuleCall_3_2_1_0 = (RuleCall)cControllingAgencyIdentifierAssignment_3_2_1.eContents().get(0);
		private final Group cGroup_3_2_2 = (Group)cGroup_3_2.eContents().get(2);
		private final RuleCall cCOLONTerminalRuleCall_3_2_2_0 = (RuleCall)cGroup_3_2_2.eContents().get(0);
		private final Assignment cMessageImplementationIdentificationCodeAssignment_3_2_2_1 = (Assignment)cGroup_3_2_2.eContents().get(1);
		private final RuleCall cMessageImplementationIdentificationCodeIDTerminalRuleCall_3_2_2_1_0 = (RuleCall)cMessageImplementationIdentificationCodeAssignment_3_2_2_1.eContents().get(0);
		private final Group cGroup_3_2_2_2 = (Group)cGroup_3_2_2.eContents().get(2);
		private final RuleCall cCOLONTerminalRuleCall_3_2_2_2_0 = (RuleCall)cGroup_3_2_2_2.eContents().get(0);
		private final Assignment cRevisionIdentifierAssignment_3_2_2_2_1 = (Assignment)cGroup_3_2_2_2.eContents().get(1);
		private final RuleCall cRevisionIdentifierIDTerminalRuleCall_3_2_2_2_1_0 = (RuleCall)cRevisionIdentifierAssignment_3_2_2_2_1.eContents().get(0);
		private final Group cGroup_3_2_2_2_2 = (Group)cGroup_3_2_2_2.eContents().get(2);
		private final RuleCall cCOLONTerminalRuleCall_3_2_2_2_2_0 = (RuleCall)cGroup_3_2_2_2_2.eContents().get(0);
		private final Assignment cDocumentStatusCodeAssignment_3_2_2_2_2_1 = (Assignment)cGroup_3_2_2_2_2.eContents().get(1);
		private final RuleCall cDocumentStatusCodeIDTerminalRuleCall_3_2_2_2_2_1_0 = (RuleCall)cDocumentStatusCodeAssignment_3_2_2_2_2_1.eContents().get(0);
		
		//MessageIndentifier: // C709
		//    ( messageTypeCode=ID )? // 1475
		//    COLON
		//    versionIdentifier=ID // 1056
		//    (
		//        COLON
		//        releaseIdentifier=ID // 1058
		//        (
		//            COLON
		//            controllingAgencyIdentifier=ID // 1476
		//            (
		//                COLON
		//                messageImplementationIdentificationCode=ID // 1523
		//                (
		//                    COLON
		//                    revisionIdentifier=ID // 1060
		//                    (
		//                        COLON
		//                        documentStatusCode=ID // 1373
		//                    )?
		//                )?
		//            )?
		//        )?
		//    )?
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//// C709
		//   ( messageTypeCode=ID )? // 1475
		//   COLON
		//   versionIdentifier=ID // 1056
		//   (
		//       COLON
		//       releaseIdentifier=ID // 1058
		//       (
		//           COLON
		//           controllingAgencyIdentifier=ID // 1476
		//           (
		//               COLON
		//               messageImplementationIdentificationCode=ID // 1523
		//               (
		//                   COLON
		//                   revisionIdentifier=ID // 1060
		//                   (
		//                       COLON
		//                       documentStatusCode=ID // 1373
		//                   )?
		//               )?
		//           )?
		//       )?
		//   )?
		public Group getGroup() { return cGroup; }
		
		//// C709
		//   ( messageTypeCode=ID )?
		public Assignment getMessageTypeCodeAssignment_0() { return cMessageTypeCodeAssignment_0; }
		
		//ID
		public RuleCall getMessageTypeCodeIDTerminalRuleCall_0_0() { return cMessageTypeCodeIDTerminalRuleCall_0_0; }
		
		//// 1475
		//   COLON
		public RuleCall getCOLONTerminalRuleCall_1() { return cCOLONTerminalRuleCall_1; }
		
		//versionIdentifier=ID
		public Assignment getVersionIdentifierAssignment_2() { return cVersionIdentifierAssignment_2; }
		
		//ID
		public RuleCall getVersionIdentifierIDTerminalRuleCall_2_0() { return cVersionIdentifierIDTerminalRuleCall_2_0; }
		
		//// 1056
		//   (
		//       COLON
		//       releaseIdentifier=ID // 1058
		//       (
		//           COLON
		//           controllingAgencyIdentifier=ID // 1476
		//           (
		//               COLON
		//               messageImplementationIdentificationCode=ID // 1523
		//               (
		//                   COLON
		//                   revisionIdentifier=ID // 1060
		//                   (
		//                       COLON
		//                       documentStatusCode=ID // 1373
		//                   )?
		//               )?
		//           )?
		//       )?
		//   )?
		public Group getGroup_3() { return cGroup_3; }
		
		//COLON
		public RuleCall getCOLONTerminalRuleCall_3_0() { return cCOLONTerminalRuleCall_3_0; }
		
		//releaseIdentifier=ID
		public Assignment getReleaseIdentifierAssignment_3_1() { return cReleaseIdentifierAssignment_3_1; }
		
		//ID
		public RuleCall getReleaseIdentifierIDTerminalRuleCall_3_1_0() { return cReleaseIdentifierIDTerminalRuleCall_3_1_0; }
		
		//// 1058
		//       (
		//           COLON
		//           controllingAgencyIdentifier=ID // 1476
		//           (
		//               COLON
		//               messageImplementationIdentificationCode=ID // 1523
		//               (
		//                   COLON
		//                   revisionIdentifier=ID // 1060
		//                   (
		//                       COLON
		//                       documentStatusCode=ID // 1373
		//                   )?
		//               )?
		//           )?
		//       )?
		public Group getGroup_3_2() { return cGroup_3_2; }
		
		//COLON
		public RuleCall getCOLONTerminalRuleCall_3_2_0() { return cCOLONTerminalRuleCall_3_2_0; }
		
		//controllingAgencyIdentifier=ID
		public Assignment getControllingAgencyIdentifierAssignment_3_2_1() { return cControllingAgencyIdentifierAssignment_3_2_1; }
		
		//ID
		public RuleCall getControllingAgencyIdentifierIDTerminalRuleCall_3_2_1_0() { return cControllingAgencyIdentifierIDTerminalRuleCall_3_2_1_0; }
		
		//// 1476
		//           (
		//               COLON
		//               messageImplementationIdentificationCode=ID // 1523
		//               (
		//                   COLON
		//                   revisionIdentifier=ID // 1060
		//                   (
		//                       COLON
		//                       documentStatusCode=ID // 1373
		//                   )?
		//               )?
		//           )?
		public Group getGroup_3_2_2() { return cGroup_3_2_2; }
		
		//COLON
		public RuleCall getCOLONTerminalRuleCall_3_2_2_0() { return cCOLONTerminalRuleCall_3_2_2_0; }
		
		//messageImplementationIdentificationCode=ID
		public Assignment getMessageImplementationIdentificationCodeAssignment_3_2_2_1() { return cMessageImplementationIdentificationCodeAssignment_3_2_2_1; }
		
		//ID
		public RuleCall getMessageImplementationIdentificationCodeIDTerminalRuleCall_3_2_2_1_0() { return cMessageImplementationIdentificationCodeIDTerminalRuleCall_3_2_2_1_0; }
		
		//// 1523
		//               (
		//                   COLON
		//                   revisionIdentifier=ID // 1060
		//                   (
		//                       COLON
		//                       documentStatusCode=ID // 1373
		//                   )?
		//               )?
		public Group getGroup_3_2_2_2() { return cGroup_3_2_2_2; }
		
		//COLON
		public RuleCall getCOLONTerminalRuleCall_3_2_2_2_0() { return cCOLONTerminalRuleCall_3_2_2_2_0; }
		
		//revisionIdentifier=ID
		public Assignment getRevisionIdentifierAssignment_3_2_2_2_1() { return cRevisionIdentifierAssignment_3_2_2_2_1; }
		
		//ID
		public RuleCall getRevisionIdentifierIDTerminalRuleCall_3_2_2_2_1_0() { return cRevisionIdentifierIDTerminalRuleCall_3_2_2_2_1_0; }
		
		//// 1060
		//                   (
		//                       COLON
		//                       documentStatusCode=ID // 1373
		//                   )?
		public Group getGroup_3_2_2_2_2() { return cGroup_3_2_2_2_2; }
		
		//COLON
		public RuleCall getCOLONTerminalRuleCall_3_2_2_2_2_0() { return cCOLONTerminalRuleCall_3_2_2_2_2_0; }
		
		//documentStatusCode=ID
		public Assignment getDocumentStatusCodeAssignment_3_2_2_2_2_1() { return cDocumentStatusCodeAssignment_3_2_2_2_2_1; }
		
		//ID
		public RuleCall getDocumentStatusCodeIDTerminalRuleCall_3_2_2_2_2_1_0() { return cDocumentStatusCodeIDTerminalRuleCall_3_2_2_2_2_1_0; }
	}
	public class RelationshipElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "io.thlaegler.edifact.Edilang.Relationship");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cRelationshipDescriptionCodeAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cRelationshipDescriptionCodeIDTerminalRuleCall_0_0 = (RuleCall)cRelationshipDescriptionCodeAssignment_0.eContents().get(0);
		private final RuleCall cCOLONTerminalRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		private final Assignment cCodeListIdentificationCodeAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cCodeListIdentificationCodeIDTerminalRuleCall_2_0 = (RuleCall)cCodeListIdentificationCodeAssignment_2.eContents().get(0);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final RuleCall cCOLONTerminalRuleCall_3_0 = (RuleCall)cGroup_3.eContents().get(0);
		private final Assignment cCodeListResponsibleAgencyAssignment_3_1 = (Assignment)cGroup_3.eContents().get(1);
		private final RuleCall cCodeListResponsibleAgencyIDTerminalRuleCall_3_1_0 = (RuleCall)cCodeListResponsibleAgencyAssignment_3_1.eContents().get(0);
		private final Group cGroup_3_2 = (Group)cGroup_3.eContents().get(2);
		private final RuleCall cCOLONTerminalRuleCall_3_2_0 = (RuleCall)cGroup_3_2.eContents().get(0);
		private final Assignment cRelationshipDescriptionAssignment_3_2_1 = (Assignment)cGroup_3_2.eContents().get(1);
		private final RuleCall cRelationshipDescriptionIDTerminalRuleCall_3_2_1_0 = (RuleCall)cRelationshipDescriptionAssignment_3_2_1.eContents().get(0);
		
		//Relationship: // C941
		//    ( relationshipDescriptionCode=ID )? // 9143
		//    COLON
		//    codeListIdentificationCode=ID // 1131
		//    (
		//        COLON
		//        codeListResponsibleAgency=ID // 3055
		//        (
		//            COLON
		//            relationshipDescription=ID // 9142
		//        )?
		//    )?
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//// C941
		//   ( relationshipDescriptionCode=ID )? // 9143
		//   COLON
		//   codeListIdentificationCode=ID // 1131
		//   (
		//       COLON
		//       codeListResponsibleAgency=ID // 3055
		//       (
		//           COLON
		//           relationshipDescription=ID // 9142
		//       )?
		//   )?
		public Group getGroup() { return cGroup; }
		
		//// C941
		//   ( relationshipDescriptionCode=ID )?
		public Assignment getRelationshipDescriptionCodeAssignment_0() { return cRelationshipDescriptionCodeAssignment_0; }
		
		//ID
		public RuleCall getRelationshipDescriptionCodeIDTerminalRuleCall_0_0() { return cRelationshipDescriptionCodeIDTerminalRuleCall_0_0; }
		
		//// 9143
		//   COLON
		public RuleCall getCOLONTerminalRuleCall_1() { return cCOLONTerminalRuleCall_1; }
		
		//codeListIdentificationCode=ID
		public Assignment getCodeListIdentificationCodeAssignment_2() { return cCodeListIdentificationCodeAssignment_2; }
		
		//ID
		public RuleCall getCodeListIdentificationCodeIDTerminalRuleCall_2_0() { return cCodeListIdentificationCodeIDTerminalRuleCall_2_0; }
		
		//// 1131
		//   (
		//       COLON
		//       codeListResponsibleAgency=ID // 3055
		//       (
		//           COLON
		//           relationshipDescription=ID // 9142
		//       )?
		//   )?
		public Group getGroup_3() { return cGroup_3; }
		
		//COLON
		public RuleCall getCOLONTerminalRuleCall_3_0() { return cCOLONTerminalRuleCall_3_0; }
		
		//codeListResponsibleAgency=ID
		public Assignment getCodeListResponsibleAgencyAssignment_3_1() { return cCodeListResponsibleAgencyAssignment_3_1; }
		
		//ID
		public RuleCall getCodeListResponsibleAgencyIDTerminalRuleCall_3_1_0() { return cCodeListResponsibleAgencyIDTerminalRuleCall_3_1_0; }
		
		//// 3055
		//       (
		//           COLON
		//           relationshipDescription=ID // 9142
		//       )?
		public Group getGroup_3_2() { return cGroup_3_2; }
		
		//COLON
		public RuleCall getCOLONTerminalRuleCall_3_2_0() { return cCOLONTerminalRuleCall_3_2_0; }
		
		//relationshipDescription=ID
		public Assignment getRelationshipDescriptionAssignment_3_2_1() { return cRelationshipDescriptionAssignment_3_2_1; }
		
		//ID
		public RuleCall getRelationshipDescriptionIDTerminalRuleCall_3_2_1_0() { return cRelationshipDescriptionIDTerminalRuleCall_3_2_1_0; }
	}
	public class ProductFunctionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "io.thlaegler.edifact.Edilang.ProductFunction");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cBookingClassAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cBookingClassIDTerminalRuleCall_0_0 = (RuleCall)cBookingClassAssignment_0.eContents().get(0);
		private final Group cGroup_1 = (Group)cGroup.eContents().get(1);
		private final RuleCall cCOLONTerminalRuleCall_1_0 = (RuleCall)cGroup_1.eContents().get(0);
		private final Assignment cAvailAssignment_1_1 = (Assignment)cGroup_1.eContents().get(1);
		private final RuleCall cAvailIDTerminalRuleCall_1_1_0 = (RuleCall)cAvailAssignment_1_1.eContents().get(0);
		
		//ProductFunction:
		//    bookingClass=ID
		//    (
		//        COLON
		//        avail=ID
		//    )?
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//bookingClass=ID
		//(
		//    COLON
		//    avail=ID
		//)?
		public Group getGroup() { return cGroup; }
		
		//bookingClass=ID
		public Assignment getBookingClassAssignment_0() { return cBookingClassAssignment_0; }
		
		//ID
		public RuleCall getBookingClassIDTerminalRuleCall_0_0() { return cBookingClassIDTerminalRuleCall_0_0; }
		
		//(
		//    COLON
		//    avail=ID
		//)?
		public Group getGroup_1() { return cGroup_1; }
		
		//COLON
		public RuleCall getCOLONTerminalRuleCall_1_0() { return cCOLONTerminalRuleCall_1_0; }
		
		//avail=ID
		public Assignment getAvailAssignment_1_1() { return cAvailAssignment_1_1; }
		
		//ID
		public RuleCall getAvailIDTerminalRuleCall_1_1_0() { return cAvailIDTerminalRuleCall_1_1_0; }
	}
	public class ItemNumberIdentificationElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "io.thlaegler.edifact.Edilang.ItemNumberIdentification");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cItemIdentifierAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cItemIdentifierIDTerminalRuleCall_0_0 = (RuleCall)cItemIdentifierAssignment_0.eContents().get(0);
		private final RuleCall cCOLONTerminalRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		private final Assignment cItemTypeIdentificationCodeAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cItemTypeIdentificationCodeIDTerminalRuleCall_2_0 = (RuleCall)cItemTypeIdentificationCodeAssignment_2.eContents().get(0);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final RuleCall cCOLONTerminalRuleCall_3_0 = (RuleCall)cGroup_3.eContents().get(0);
		private final Assignment cCodeListIdentificationCodeAssignment_3_1 = (Assignment)cGroup_3.eContents().get(1);
		private final RuleCall cCodeListIdentificationCodeIDTerminalRuleCall_3_1_0 = (RuleCall)cCodeListIdentificationCodeAssignment_3_1.eContents().get(0);
		private final Group cGroup_3_2 = (Group)cGroup_3.eContents().get(2);
		private final RuleCall cCOLONTerminalRuleCall_3_2_0 = (RuleCall)cGroup_3_2.eContents().get(0);
		private final Assignment cCodeListResponsibleAgencyCodeAssignment_3_2_1 = (Assignment)cGroup_3_2.eContents().get(1);
		private final RuleCall cCodeListResponsibleAgencyCodeIDTerminalRuleCall_3_2_1_0 = (RuleCall)cCodeListResponsibleAgencyCodeAssignment_3_2_1.eContents().get(0);
		
		//ItemNumberIdentification:
		//    itemIdentifier=ID // 7140
		//    COLON
		//    itemTypeIdentificationCode=ID // 7143
		//    (
		//        COLON
		//        codeListIdentificationCode=ID // 1131
		//        (
		//            COLON
		//            codeListResponsibleAgencyCode=ID // 3055
		//        )?
		//    )?
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//itemIdentifier=ID // 7140
		//COLON
		//itemTypeIdentificationCode=ID // 7143
		//(
		//    COLON
		//    codeListIdentificationCode=ID // 1131
		//    (
		//        COLON
		//        codeListResponsibleAgencyCode=ID // 3055
		//    )?
		//)?
		public Group getGroup() { return cGroup; }
		
		//itemIdentifier=ID
		public Assignment getItemIdentifierAssignment_0() { return cItemIdentifierAssignment_0; }
		
		//ID
		public RuleCall getItemIdentifierIDTerminalRuleCall_0_0() { return cItemIdentifierIDTerminalRuleCall_0_0; }
		
		//// 7140
		//   COLON
		public RuleCall getCOLONTerminalRuleCall_1() { return cCOLONTerminalRuleCall_1; }
		
		//itemTypeIdentificationCode=ID
		public Assignment getItemTypeIdentificationCodeAssignment_2() { return cItemTypeIdentificationCodeAssignment_2; }
		
		//ID
		public RuleCall getItemTypeIdentificationCodeIDTerminalRuleCall_2_0() { return cItemTypeIdentificationCodeIDTerminalRuleCall_2_0; }
		
		//// 7143
		//   (
		//       COLON
		//       codeListIdentificationCode=ID // 1131
		//       (
		//           COLON
		//           codeListResponsibleAgencyCode=ID // 3055
		//       )?
		//   )?
		public Group getGroup_3() { return cGroup_3; }
		
		//COLON
		public RuleCall getCOLONTerminalRuleCall_3_0() { return cCOLONTerminalRuleCall_3_0; }
		
		//codeListIdentificationCode=ID
		public Assignment getCodeListIdentificationCodeAssignment_3_1() { return cCodeListIdentificationCodeAssignment_3_1; }
		
		//ID
		public RuleCall getCodeListIdentificationCodeIDTerminalRuleCall_3_1_0() { return cCodeListIdentificationCodeIDTerminalRuleCall_3_1_0; }
		
		//// 1131
		//       (
		//           COLON
		//           codeListResponsibleAgencyCode=ID // 3055
		//       )?
		public Group getGroup_3_2() { return cGroup_3_2; }
		
		//COLON
		public RuleCall getCOLONTerminalRuleCall_3_2_0() { return cCOLONTerminalRuleCall_3_2_0; }
		
		//codeListResponsibleAgencyCode=ID
		public Assignment getCodeListResponsibleAgencyCodeAssignment_3_2_1() { return cCodeListResponsibleAgencyCodeAssignment_3_2_1; }
		
		//ID
		public RuleCall getCodeListResponsibleAgencyCodeIDTerminalRuleCall_3_2_1_0() { return cCodeListResponsibleAgencyCodeIDTerminalRuleCall_3_2_1_0; }
	}
	public class SublineInformationElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "io.thlaegler.edifact.Edilang.SublineInformation");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cSublineIndicatorCodeAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cSublineIndicatorCodeIDTerminalRuleCall_0_0 = (RuleCall)cSublineIndicatorCodeAssignment_0.eContents().get(0);
		private final Group cGroup_1 = (Group)cGroup.eContents().get(1);
		private final RuleCall cCOLONTerminalRuleCall_1_0 = (RuleCall)cGroup_1.eContents().get(0);
		private final Assignment cLineItemIdentifierAssignment_1_1 = (Assignment)cGroup_1.eContents().get(1);
		private final RuleCall cLineItemIdentifierIDTerminalRuleCall_1_1_0 = (RuleCall)cLineItemIdentifierAssignment_1_1.eContents().get(0);
		
		//SublineInformation:
		//    sublineIndicatorCode=ID // 5495
		//    (
		//        COLON
		//        lineItemIdentifier=ID // 1082
		//    )?
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//sublineIndicatorCode=ID // 5495
		//(
		//    COLON
		//    lineItemIdentifier=ID // 1082
		//)?
		public Group getGroup() { return cGroup; }
		
		//sublineIndicatorCode=ID
		public Assignment getSublineIndicatorCodeAssignment_0() { return cSublineIndicatorCodeAssignment_0; }
		
		//ID
		public RuleCall getSublineIndicatorCodeIDTerminalRuleCall_0_0() { return cSublineIndicatorCodeIDTerminalRuleCall_0_0; }
		
		//// 5495
		//   (
		//       COLON
		//       lineItemIdentifier=ID // 1082
		//   )?
		public Group getGroup_1() { return cGroup_1; }
		
		//COLON
		public RuleCall getCOLONTerminalRuleCall_1_0() { return cCOLONTerminalRuleCall_1_0; }
		
		//lineItemIdentifier=ID
		public Assignment getLineItemIdentifierAssignment_1_1() { return cLineItemIdentifierAssignment_1_1; }
		
		//ID
		public RuleCall getLineItemIdentifierIDTerminalRuleCall_1_1_0() { return cLineItemIdentifierIDTerminalRuleCall_1_1_0; }
	}
	public class QuantityDetailElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "io.thlaegler.edifact.Edilang.QuantityDetail");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cQuantityTypeCodeQualifierAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cQuantityTypeCodeQualifierIDTerminalRuleCall_0_0 = (RuleCall)cQuantityTypeCodeQualifierAssignment_0.eContents().get(0);
		private final Group cGroup_1 = (Group)cGroup.eContents().get(1);
		private final RuleCall cCOLONTerminalRuleCall_1_0 = (RuleCall)cGroup_1.eContents().get(0);
		private final Assignment cQuantityAssignment_1_1 = (Assignment)cGroup_1.eContents().get(1);
		private final RuleCall cQuantityIDTerminalRuleCall_1_1_0 = (RuleCall)cQuantityAssignment_1_1.eContents().get(0);
		private final Group cGroup_1_2 = (Group)cGroup_1.eContents().get(2);
		private final RuleCall cCOLONTerminalRuleCall_1_2_0 = (RuleCall)cGroup_1_2.eContents().get(0);
		private final Assignment cMeasurementUnitCodeAssignment_1_2_1 = (Assignment)cGroup_1_2.eContents().get(1);
		private final RuleCall cMeasurementUnitCodeIDTerminalRuleCall_1_2_1_0 = (RuleCall)cMeasurementUnitCodeAssignment_1_2_1.eContents().get(0);
		
		//QuantityDetail: // C186
		//    quantityTypeCodeQualifier=ID // 6063
		//    (
		//        COLON
		//        quantity=ID // 6060
		//        (
		//            COLON
		//            measurementUnitCode=ID // 6411
		//        )?
		//    )?
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//// C186
		//   quantityTypeCodeQualifier=ID // 6063
		//   (
		//       COLON
		//       quantity=ID // 6060
		//       (
		//           COLON
		//           measurementUnitCode=ID // 6411
		//       )?
		//   )?
		public Group getGroup() { return cGroup; }
		
		//// C186
		//   quantityTypeCodeQualifier=ID
		public Assignment getQuantityTypeCodeQualifierAssignment_0() { return cQuantityTypeCodeQualifierAssignment_0; }
		
		//ID
		public RuleCall getQuantityTypeCodeQualifierIDTerminalRuleCall_0_0() { return cQuantityTypeCodeQualifierIDTerminalRuleCall_0_0; }
		
		//// 6063
		//   (
		//       COLON
		//       quantity=ID // 6060
		//       (
		//           COLON
		//           measurementUnitCode=ID // 6411
		//       )?
		//   )?
		public Group getGroup_1() { return cGroup_1; }
		
		//COLON
		public RuleCall getCOLONTerminalRuleCall_1_0() { return cCOLONTerminalRuleCall_1_0; }
		
		//quantity=ID
		public Assignment getQuantityAssignment_1_1() { return cQuantityAssignment_1_1; }
		
		//ID
		public RuleCall getQuantityIDTerminalRuleCall_1_1_0() { return cQuantityIDTerminalRuleCall_1_1_0; }
		
		//// 6060
		//       (
		//           COLON
		//           measurementUnitCode=ID // 6411
		//       )?
		public Group getGroup_1_2() { return cGroup_1_2; }
		
		//COLON
		public RuleCall getCOLONTerminalRuleCall_1_2_0() { return cCOLONTerminalRuleCall_1_2_0; }
		
		//measurementUnitCode=ID
		public Assignment getMeasurementUnitCodeAssignment_1_2_1() { return cMeasurementUnitCodeAssignment_1_2_1; }
		
		//ID
		public RuleCall getMeasurementUnitCodeIDTerminalRuleCall_1_2_1_0() { return cMeasurementUnitCodeIDTerminalRuleCall_1_2_1_0; }
	}
	public class StreetElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "io.thlaegler.edifact.Edilang.Street");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cStreetAndNumberAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cStreetAndNumberIDTerminalRuleCall_0_0 = (RuleCall)cStreetAndNumberAssignment_0.eContents().get(0);
		private final Group cGroup_1 = (Group)cGroup.eContents().get(1);
		private final RuleCall cCOLONTerminalRuleCall_1_0 = (RuleCall)cGroup_1.eContents().get(0);
		private final Assignment cStreetAndNumberAssignment_1_1 = (Assignment)cGroup_1.eContents().get(1);
		private final RuleCall cStreetAndNumberIDTerminalRuleCall_1_1_0 = (RuleCall)cStreetAndNumberAssignment_1_1.eContents().get(0);
		private final Group cGroup_1_2 = (Group)cGroup_1.eContents().get(2);
		private final RuleCall cCOLONTerminalRuleCall_1_2_0 = (RuleCall)cGroup_1_2.eContents().get(0);
		private final Assignment cStreetAndNumberAssignment_1_2_1 = (Assignment)cGroup_1_2.eContents().get(1);
		private final RuleCall cStreetAndNumberIDTerminalRuleCall_1_2_1_0 = (RuleCall)cStreetAndNumberAssignment_1_2_1.eContents().get(0);
		private final Group cGroup_1_2_2 = (Group)cGroup_1_2.eContents().get(2);
		private final RuleCall cCOLONTerminalRuleCall_1_2_2_0 = (RuleCall)cGroup_1_2_2.eContents().get(0);
		private final Assignment cStreetAndNumberAssignment_1_2_2_1 = (Assignment)cGroup_1_2_2.eContents().get(1);
		private final RuleCall cStreetAndNumberIDTerminalRuleCall_1_2_2_1_0 = (RuleCall)cStreetAndNumberAssignment_1_2_2_1.eContents().get(0);
		private final Group cGroup_1_2_2_2 = (Group)cGroup_1_2_2.eContents().get(2);
		private final RuleCall cCOLONTerminalRuleCall_1_2_2_2_0 = (RuleCall)cGroup_1_2_2_2.eContents().get(0);
		private final Assignment cStreetAndNumberAssignment_1_2_2_2_1 = (Assignment)cGroup_1_2_2_2.eContents().get(1);
		private final RuleCall cStreetAndNumberIDTerminalRuleCall_1_2_2_2_1_0 = (RuleCall)cStreetAndNumberAssignment_1_2_2_2_1.eContents().get(0);
		
		//Street: // C059
		//    streetAndNumber+=ID // 3042
		//    (
		//        COLON
		//        streetAndNumber+=ID // 3042
		//        (
		//            COLON
		//            streetAndNumber+=ID // 3042
		//            (
		//                COLON
		//                streetAndNumber+=ID // 3042
		//                (
		//                    COLON
		//                    streetAndNumber+=ID // 3042
		//                )?
		//            )?
		//        )?
		//    )?
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//// C059
		//   streetAndNumber+=ID // 3042
		//   (
		//       COLON
		//       streetAndNumber+=ID // 3042
		//       (
		//           COLON
		//           streetAndNumber+=ID // 3042
		//           (
		//               COLON
		//               streetAndNumber+=ID // 3042
		//               (
		//                   COLON
		//                   streetAndNumber+=ID // 3042
		//               )?
		//           )?
		//       )?
		//   )?
		public Group getGroup() { return cGroup; }
		
		//// C059
		//   streetAndNumber+=ID
		public Assignment getStreetAndNumberAssignment_0() { return cStreetAndNumberAssignment_0; }
		
		//ID
		public RuleCall getStreetAndNumberIDTerminalRuleCall_0_0() { return cStreetAndNumberIDTerminalRuleCall_0_0; }
		
		//// 3042
		//   (
		//       COLON
		//       streetAndNumber+=ID // 3042
		//       (
		//           COLON
		//           streetAndNumber+=ID // 3042
		//           (
		//               COLON
		//               streetAndNumber+=ID // 3042
		//               (
		//                   COLON
		//                   streetAndNumber+=ID // 3042
		//               )?
		//           )?
		//       )?
		//   )?
		public Group getGroup_1() { return cGroup_1; }
		
		//COLON
		public RuleCall getCOLONTerminalRuleCall_1_0() { return cCOLONTerminalRuleCall_1_0; }
		
		//streetAndNumber+=ID
		public Assignment getStreetAndNumberAssignment_1_1() { return cStreetAndNumberAssignment_1_1; }
		
		//ID
		public RuleCall getStreetAndNumberIDTerminalRuleCall_1_1_0() { return cStreetAndNumberIDTerminalRuleCall_1_1_0; }
		
		//// 3042
		//       (
		//           COLON
		//           streetAndNumber+=ID // 3042
		//           (
		//               COLON
		//               streetAndNumber+=ID // 3042
		//               (
		//                   COLON
		//                   streetAndNumber+=ID // 3042
		//               )?
		//           )?
		//       )?
		public Group getGroup_1_2() { return cGroup_1_2; }
		
		//COLON
		public RuleCall getCOLONTerminalRuleCall_1_2_0() { return cCOLONTerminalRuleCall_1_2_0; }
		
		//streetAndNumber+=ID
		public Assignment getStreetAndNumberAssignment_1_2_1() { return cStreetAndNumberAssignment_1_2_1; }
		
		//ID
		public RuleCall getStreetAndNumberIDTerminalRuleCall_1_2_1_0() { return cStreetAndNumberIDTerminalRuleCall_1_2_1_0; }
		
		//// 3042
		//           (
		//               COLON
		//               streetAndNumber+=ID // 3042
		//               (
		//                   COLON
		//                   streetAndNumber+=ID // 3042
		//               )?
		//           )?
		public Group getGroup_1_2_2() { return cGroup_1_2_2; }
		
		//COLON
		public RuleCall getCOLONTerminalRuleCall_1_2_2_0() { return cCOLONTerminalRuleCall_1_2_2_0; }
		
		//streetAndNumber+=ID
		public Assignment getStreetAndNumberAssignment_1_2_2_1() { return cStreetAndNumberAssignment_1_2_2_1; }
		
		//ID
		public RuleCall getStreetAndNumberIDTerminalRuleCall_1_2_2_1_0() { return cStreetAndNumberIDTerminalRuleCall_1_2_2_1_0; }
		
		//// 3042
		//               (
		//                   COLON
		//                   streetAndNumber+=ID // 3042
		//               )?
		public Group getGroup_1_2_2_2() { return cGroup_1_2_2_2; }
		
		//COLON
		public RuleCall getCOLONTerminalRuleCall_1_2_2_2_0() { return cCOLONTerminalRuleCall_1_2_2_2_0; }
		
		//streetAndNumber+=ID
		public Assignment getStreetAndNumberAssignment_1_2_2_2_1() { return cStreetAndNumberAssignment_1_2_2_2_1; }
		
		//ID
		public RuleCall getStreetAndNumberIDTerminalRuleCall_1_2_2_2_1_0() { return cStreetAndNumberIDTerminalRuleCall_1_2_2_2_1_0; }
	}
	public class CountrySubEntityDetailElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "io.thlaegler.edifact.Edilang.CountrySubEntityDetail");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cCountrySubEntityNameCodeAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cCountrySubEntityNameCodeIDTerminalRuleCall_0_0 = (RuleCall)cCountrySubEntityNameCodeAssignment_0.eContents().get(0);
		private final Group cGroup_1 = (Group)cGroup.eContents().get(1);
		private final RuleCall cCOLONTerminalRuleCall_1_0 = (RuleCall)cGroup_1.eContents().get(0);
		private final Assignment cCodeListIdentificationCodeAssignment_1_1 = (Assignment)cGroup_1.eContents().get(1);
		private final RuleCall cCodeListIdentificationCodeIDTerminalRuleCall_1_1_0 = (RuleCall)cCodeListIdentificationCodeAssignment_1_1.eContents().get(0);
		private final Group cGroup_1_2 = (Group)cGroup_1.eContents().get(2);
		private final RuleCall cCOLONTerminalRuleCall_1_2_0 = (RuleCall)cGroup_1_2.eContents().get(0);
		private final Assignment cCodeListResponsibleAgencyCodeAssignment_1_2_1 = (Assignment)cGroup_1_2.eContents().get(1);
		private final RuleCall cCodeListResponsibleAgencyCodeIDTerminalRuleCall_1_2_1_0 = (RuleCall)cCodeListResponsibleAgencyCodeAssignment_1_2_1.eContents().get(0);
		private final Group cGroup_1_2_2 = (Group)cGroup_1_2.eContents().get(2);
		private final RuleCall cCOLONTerminalRuleCall_1_2_2_0 = (RuleCall)cGroup_1_2_2.eContents().get(0);
		private final Assignment cCountrySubEntityNameAssignment_1_2_2_1 = (Assignment)cGroup_1_2_2.eContents().get(1);
		private final RuleCall cCountrySubEntityNameIDTerminalRuleCall_1_2_2_1_0 = (RuleCall)cCountrySubEntityNameAssignment_1_2_2_1.eContents().get(0);
		
		//CountrySubEntityDetail: // C819
		//    countrySubEntityNameCode+=ID // 3229
		//    (
		//        COLON
		//        codeListIdentificationCode+=ID // 1131
		//        (
		//            COLON
		//            codeListResponsibleAgencyCode+=ID // 3055
		//            (
		//                COLON
		//                countrySubEntityName+=ID // 3228
		//            )?
		//        )?
		//    )?
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//// C819
		//   countrySubEntityNameCode+=ID // 3229
		//   (
		//       COLON
		//       codeListIdentificationCode+=ID // 1131
		//       (
		//           COLON
		//           codeListResponsibleAgencyCode+=ID // 3055
		//           (
		//               COLON
		//               countrySubEntityName+=ID // 3228
		//           )?
		//       )?
		//   )?
		public Group getGroup() { return cGroup; }
		
		//// C819
		//   countrySubEntityNameCode+=ID
		public Assignment getCountrySubEntityNameCodeAssignment_0() { return cCountrySubEntityNameCodeAssignment_0; }
		
		//ID
		public RuleCall getCountrySubEntityNameCodeIDTerminalRuleCall_0_0() { return cCountrySubEntityNameCodeIDTerminalRuleCall_0_0; }
		
		//// 3229
		//   (
		//       COLON
		//       codeListIdentificationCode+=ID // 1131
		//       (
		//           COLON
		//           codeListResponsibleAgencyCode+=ID // 3055
		//           (
		//               COLON
		//               countrySubEntityName+=ID // 3228
		//           )?
		//       )?
		//   )?
		public Group getGroup_1() { return cGroup_1; }
		
		//COLON
		public RuleCall getCOLONTerminalRuleCall_1_0() { return cCOLONTerminalRuleCall_1_0; }
		
		//codeListIdentificationCode+=ID
		public Assignment getCodeListIdentificationCodeAssignment_1_1() { return cCodeListIdentificationCodeAssignment_1_1; }
		
		//ID
		public RuleCall getCodeListIdentificationCodeIDTerminalRuleCall_1_1_0() { return cCodeListIdentificationCodeIDTerminalRuleCall_1_1_0; }
		
		//// 1131
		//       (
		//           COLON
		//           codeListResponsibleAgencyCode+=ID // 3055
		//           (
		//               COLON
		//               countrySubEntityName+=ID // 3228
		//           )?
		//       )?
		public Group getGroup_1_2() { return cGroup_1_2; }
		
		//COLON
		public RuleCall getCOLONTerminalRuleCall_1_2_0() { return cCOLONTerminalRuleCall_1_2_0; }
		
		//codeListResponsibleAgencyCode+=ID
		public Assignment getCodeListResponsibleAgencyCodeAssignment_1_2_1() { return cCodeListResponsibleAgencyCodeAssignment_1_2_1; }
		
		//ID
		public RuleCall getCodeListResponsibleAgencyCodeIDTerminalRuleCall_1_2_1_0() { return cCodeListResponsibleAgencyCodeIDTerminalRuleCall_1_2_1_0; }
		
		//// 3055
		//           (
		//               COLON
		//               countrySubEntityName+=ID // 3228
		//           )?
		public Group getGroup_1_2_2() { return cGroup_1_2_2; }
		
		//COLON
		public RuleCall getCOLONTerminalRuleCall_1_2_2_0() { return cCOLONTerminalRuleCall_1_2_2_0; }
		
		//countrySubEntityName+=ID
		public Assignment getCountrySubEntityNameAssignment_1_2_2_1() { return cCountrySubEntityNameAssignment_1_2_2_1; }
		
		//ID
		public RuleCall getCountrySubEntityNameIDTerminalRuleCall_1_2_2_1_0() { return cCountrySubEntityNameIDTerminalRuleCall_1_2_2_1_0; }
	}
	public class PartyNameElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "io.thlaegler.edifact.Edilang.PartyName");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cPartyNameAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cPartyNameIDTerminalRuleCall_0_0 = (RuleCall)cPartyNameAssignment_0.eContents().get(0);
		private final Group cGroup_1 = (Group)cGroup.eContents().get(1);
		private final RuleCall cCOLONTerminalRuleCall_1_0 = (RuleCall)cGroup_1.eContents().get(0);
		private final Assignment cPartyNameAssignment_1_1 = (Assignment)cGroup_1.eContents().get(1);
		private final RuleCall cPartyNameIDTerminalRuleCall_1_1_0 = (RuleCall)cPartyNameAssignment_1_1.eContents().get(0);
		private final Group cGroup_1_2 = (Group)cGroup_1.eContents().get(2);
		private final RuleCall cCOLONTerminalRuleCall_1_2_0 = (RuleCall)cGroup_1_2.eContents().get(0);
		private final Assignment cPartyNameAssignment_1_2_1 = (Assignment)cGroup_1_2.eContents().get(1);
		private final RuleCall cPartyNameIDTerminalRuleCall_1_2_1_0 = (RuleCall)cPartyNameAssignment_1_2_1.eContents().get(0);
		private final Group cGroup_1_2_2 = (Group)cGroup_1_2.eContents().get(2);
		private final RuleCall cCOLONTerminalRuleCall_1_2_2_0 = (RuleCall)cGroup_1_2_2.eContents().get(0);
		private final Assignment cPartyNameAssignment_1_2_2_1 = (Assignment)cGroup_1_2_2.eContents().get(1);
		private final RuleCall cPartyNameIDTerminalRuleCall_1_2_2_1_0 = (RuleCall)cPartyNameAssignment_1_2_2_1.eContents().get(0);
		private final Group cGroup_1_2_2_2 = (Group)cGroup_1_2_2.eContents().get(2);
		private final RuleCall cCOLONTerminalRuleCall_1_2_2_2_0 = (RuleCall)cGroup_1_2_2_2.eContents().get(0);
		private final Assignment cPartyNameAssignment_1_2_2_2_1 = (Assignment)cGroup_1_2_2_2.eContents().get(1);
		private final RuleCall cPartyNameIDTerminalRuleCall_1_2_2_2_1_0 = (RuleCall)cPartyNameAssignment_1_2_2_2_1.eContents().get(0);
		
		//PartyName: // C080
		//    partyName+=ID // 3036
		//    (
		//        COLON
		//        partyName+=ID // 3036
		//        (
		//            COLON
		//            partyName+=ID // 3036
		//            (
		//                COLON
		//                partyName+=ID // 3036
		//                (
		//                    COLON
		//                    partyName+=ID // 3036
		//                )?
		//            )?
		//        )?
		//    )?
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//// C080
		//   partyName+=ID // 3036
		//   (
		//       COLON
		//       partyName+=ID // 3036
		//       (
		//           COLON
		//           partyName+=ID // 3036
		//           (
		//               COLON
		//               partyName+=ID // 3036
		//               (
		//                   COLON
		//                   partyName+=ID // 3036
		//               )?
		//           )?
		//       )?
		//   )?
		public Group getGroup() { return cGroup; }
		
		//// C080
		//   partyName+=ID
		public Assignment getPartyNameAssignment_0() { return cPartyNameAssignment_0; }
		
		//ID
		public RuleCall getPartyNameIDTerminalRuleCall_0_0() { return cPartyNameIDTerminalRuleCall_0_0; }
		
		//// 3036
		//   (
		//       COLON
		//       partyName+=ID // 3036
		//       (
		//           COLON
		//           partyName+=ID // 3036
		//           (
		//               COLON
		//               partyName+=ID // 3036
		//               (
		//                   COLON
		//                   partyName+=ID // 3036
		//               )?
		//           )?
		//       )?
		//   )?
		public Group getGroup_1() { return cGroup_1; }
		
		//COLON
		public RuleCall getCOLONTerminalRuleCall_1_0() { return cCOLONTerminalRuleCall_1_0; }
		
		//partyName+=ID
		public Assignment getPartyNameAssignment_1_1() { return cPartyNameAssignment_1_1; }
		
		//ID
		public RuleCall getPartyNameIDTerminalRuleCall_1_1_0() { return cPartyNameIDTerminalRuleCall_1_1_0; }
		
		//// 3036
		//       (
		//           COLON
		//           partyName+=ID // 3036
		//           (
		//               COLON
		//               partyName+=ID // 3036
		//               (
		//                   COLON
		//                   partyName+=ID // 3036
		//               )?
		//           )?
		//       )?
		public Group getGroup_1_2() { return cGroup_1_2; }
		
		//COLON
		public RuleCall getCOLONTerminalRuleCall_1_2_0() { return cCOLONTerminalRuleCall_1_2_0; }
		
		//partyName+=ID
		public Assignment getPartyNameAssignment_1_2_1() { return cPartyNameAssignment_1_2_1; }
		
		//ID
		public RuleCall getPartyNameIDTerminalRuleCall_1_2_1_0() { return cPartyNameIDTerminalRuleCall_1_2_1_0; }
		
		//// 3036
		//           (
		//               COLON
		//               partyName+=ID // 3036
		//               (
		//                   COLON
		//                   partyName+=ID // 3036
		//               )?
		//           )?
		public Group getGroup_1_2_2() { return cGroup_1_2_2; }
		
		//COLON
		public RuleCall getCOLONTerminalRuleCall_1_2_2_0() { return cCOLONTerminalRuleCall_1_2_2_0; }
		
		//partyName+=ID
		public Assignment getPartyNameAssignment_1_2_2_1() { return cPartyNameAssignment_1_2_2_1; }
		
		//ID
		public RuleCall getPartyNameIDTerminalRuleCall_1_2_2_1_0() { return cPartyNameIDTerminalRuleCall_1_2_2_1_0; }
		
		//// 3036
		//               (
		//                   COLON
		//                   partyName+=ID // 3036
		//               )?
		public Group getGroup_1_2_2_2() { return cGroup_1_2_2_2; }
		
		//COLON
		public RuleCall getCOLONTerminalRuleCall_1_2_2_2_0() { return cCOLONTerminalRuleCall_1_2_2_2_0; }
		
		//partyName+=ID
		public Assignment getPartyNameAssignment_1_2_2_2_1() { return cPartyNameAssignment_1_2_2_2_1; }
		
		//ID
		public RuleCall getPartyNameIDTerminalRuleCall_1_2_2_2_1_0() { return cPartyNameIDTerminalRuleCall_1_2_2_2_1_0; }
	}
	public class NameAndAddressElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "io.thlaegler.edifact.Edilang.NameAndAddress");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cNameAndAddressAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cNameAndAddressIDTerminalRuleCall_0_0 = (RuleCall)cNameAndAddressAssignment_0.eContents().get(0);
		private final Group cGroup_1 = (Group)cGroup.eContents().get(1);
		private final RuleCall cCOLONTerminalRuleCall_1_0 = (RuleCall)cGroup_1.eContents().get(0);
		private final Assignment cNameAndAddressAssignment_1_1 = (Assignment)cGroup_1.eContents().get(1);
		private final RuleCall cNameAndAddressIDTerminalRuleCall_1_1_0 = (RuleCall)cNameAndAddressAssignment_1_1.eContents().get(0);
		private final Group cGroup_1_2 = (Group)cGroup_1.eContents().get(2);
		private final RuleCall cCOLONTerminalRuleCall_1_2_0 = (RuleCall)cGroup_1_2.eContents().get(0);
		private final Assignment cNameAndAddressAssignment_1_2_1 = (Assignment)cGroup_1_2.eContents().get(1);
		private final RuleCall cNameAndAddressIDTerminalRuleCall_1_2_1_0 = (RuleCall)cNameAndAddressAssignment_1_2_1.eContents().get(0);
		private final Group cGroup_1_2_2 = (Group)cGroup_1_2.eContents().get(2);
		private final RuleCall cCOLONTerminalRuleCall_1_2_2_0 = (RuleCall)cGroup_1_2_2.eContents().get(0);
		private final Assignment cNameAndAddressAssignment_1_2_2_1 = (Assignment)cGroup_1_2_2.eContents().get(1);
		private final RuleCall cNameAndAddressIDTerminalRuleCall_1_2_2_1_0 = (RuleCall)cNameAndAddressAssignment_1_2_2_1.eContents().get(0);
		private final Group cGroup_1_2_2_2 = (Group)cGroup_1_2_2.eContents().get(2);
		private final RuleCall cCOLONTerminalRuleCall_1_2_2_2_0 = (RuleCall)cGroup_1_2_2_2.eContents().get(0);
		private final Assignment cNameAndAddressAssignment_1_2_2_2_1 = (Assignment)cGroup_1_2_2_2.eContents().get(1);
		private final RuleCall cNameAndAddressIDTerminalRuleCall_1_2_2_2_1_0 = (RuleCall)cNameAndAddressAssignment_1_2_2_2_1.eContents().get(0);
		
		//NameAndAddress: // C058
		//    nameAndAddress+=ID // 3124
		//    (
		//        COLON
		//        nameAndAddress+=ID // 3124
		//        (
		//            COLON
		//            nameAndAddress+=ID // 3124
		//            (
		//                COLON
		//                nameAndAddress+=ID // 3124
		//                (
		//                    COLON
		//                    nameAndAddress+=ID // 3124
		//                )?
		//            )?
		//        )?
		//    )?
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//// C058
		//   nameAndAddress+=ID // 3124
		//   (
		//       COLON
		//       nameAndAddress+=ID // 3124
		//       (
		//           COLON
		//           nameAndAddress+=ID // 3124
		//           (
		//               COLON
		//               nameAndAddress+=ID // 3124
		//               (
		//                   COLON
		//                   nameAndAddress+=ID // 3124
		//               )?
		//           )?
		//       )?
		//   )?
		public Group getGroup() { return cGroup; }
		
		//// C058
		//   nameAndAddress+=ID
		public Assignment getNameAndAddressAssignment_0() { return cNameAndAddressAssignment_0; }
		
		//ID
		public RuleCall getNameAndAddressIDTerminalRuleCall_0_0() { return cNameAndAddressIDTerminalRuleCall_0_0; }
		
		//// 3124
		//   (
		//       COLON
		//       nameAndAddress+=ID // 3124
		//       (
		//           COLON
		//           nameAndAddress+=ID // 3124
		//           (
		//               COLON
		//               nameAndAddress+=ID // 3124
		//               (
		//                   COLON
		//                   nameAndAddress+=ID // 3124
		//               )?
		//           )?
		//       )?
		//   )?
		public Group getGroup_1() { return cGroup_1; }
		
		//COLON
		public RuleCall getCOLONTerminalRuleCall_1_0() { return cCOLONTerminalRuleCall_1_0; }
		
		//nameAndAddress+=ID
		public Assignment getNameAndAddressAssignment_1_1() { return cNameAndAddressAssignment_1_1; }
		
		//ID
		public RuleCall getNameAndAddressIDTerminalRuleCall_1_1_0() { return cNameAndAddressIDTerminalRuleCall_1_1_0; }
		
		//// 3124
		//       (
		//           COLON
		//           nameAndAddress+=ID // 3124
		//           (
		//               COLON
		//               nameAndAddress+=ID // 3124
		//               (
		//                   COLON
		//                   nameAndAddress+=ID // 3124
		//               )?
		//           )?
		//       )?
		public Group getGroup_1_2() { return cGroup_1_2; }
		
		//COLON
		public RuleCall getCOLONTerminalRuleCall_1_2_0() { return cCOLONTerminalRuleCall_1_2_0; }
		
		//nameAndAddress+=ID
		public Assignment getNameAndAddressAssignment_1_2_1() { return cNameAndAddressAssignment_1_2_1; }
		
		//ID
		public RuleCall getNameAndAddressIDTerminalRuleCall_1_2_1_0() { return cNameAndAddressIDTerminalRuleCall_1_2_1_0; }
		
		//// 3124
		//           (
		//               COLON
		//               nameAndAddress+=ID // 3124
		//               (
		//                   COLON
		//                   nameAndAddress+=ID // 3124
		//               )?
		//           )?
		public Group getGroup_1_2_2() { return cGroup_1_2_2; }
		
		//COLON
		public RuleCall getCOLONTerminalRuleCall_1_2_2_0() { return cCOLONTerminalRuleCall_1_2_2_0; }
		
		//nameAndAddress+=ID
		public Assignment getNameAndAddressAssignment_1_2_2_1() { return cNameAndAddressAssignment_1_2_2_1; }
		
		//ID
		public RuleCall getNameAndAddressIDTerminalRuleCall_1_2_2_1_0() { return cNameAndAddressIDTerminalRuleCall_1_2_2_1_0; }
		
		//// 3124
		//               (
		//                   COLON
		//                   nameAndAddress+=ID // 3124
		//               )?
		public Group getGroup_1_2_2_2() { return cGroup_1_2_2_2; }
		
		//COLON
		public RuleCall getCOLONTerminalRuleCall_1_2_2_2_0() { return cCOLONTerminalRuleCall_1_2_2_2_0; }
		
		//nameAndAddress+=ID
		public Assignment getNameAndAddressAssignment_1_2_2_2_1() { return cNameAndAddressAssignment_1_2_2_2_1; }
		
		//ID
		public RuleCall getNameAndAddressIDTerminalRuleCall_1_2_2_2_1_0() { return cNameAndAddressIDTerminalRuleCall_1_2_2_2_1_0; }
	}
	public class PartyIdentificationDetailElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "io.thlaegler.edifact.Edilang.PartyIdentificationDetail");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cPartyIdentifierAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cPartyIdentifierIDTerminalRuleCall_0_0 = (RuleCall)cPartyIdentifierAssignment_0.eContents().get(0);
		private final Group cGroup_1 = (Group)cGroup.eContents().get(1);
		private final RuleCall cCOLONTerminalRuleCall_1_0 = (RuleCall)cGroup_1.eContents().get(0);
		private final Assignment cCodeListIdentificationCodeAssignment_1_1 = (Assignment)cGroup_1.eContents().get(1);
		private final RuleCall cCodeListIdentificationCodeIDTerminalRuleCall_1_1_0 = (RuleCall)cCodeListIdentificationCodeAssignment_1_1.eContents().get(0);
		private final Group cGroup_1_2 = (Group)cGroup_1.eContents().get(2);
		private final RuleCall cCOLONTerminalRuleCall_1_2_0 = (RuleCall)cGroup_1_2.eContents().get(0);
		private final Assignment cCodeListResponsibleAgencyCodeAssignment_1_2_1 = (Assignment)cGroup_1_2.eContents().get(1);
		private final RuleCall cCodeListResponsibleAgencyCodeIDTerminalRuleCall_1_2_1_0 = (RuleCall)cCodeListResponsibleAgencyCodeAssignment_1_2_1.eContents().get(0);
		
		//PartyIdentificationDetail:
		//    partyIdentifier=ID // 3039
		//    (
		//        COLON
		//        ( codeListIdentificationCode=ID )? // 1331
		//        (
		//            COLON
		//            codeListResponsibleAgencyCode=ID // 3055
		//        )?
		//    )?
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//partyIdentifier=ID // 3039
		//(
		//    COLON
		//    ( codeListIdentificationCode=ID )? // 1331
		//    (
		//        COLON
		//        codeListResponsibleAgencyCode=ID // 3055
		//    )?
		//)?
		public Group getGroup() { return cGroup; }
		
		//partyIdentifier=ID
		public Assignment getPartyIdentifierAssignment_0() { return cPartyIdentifierAssignment_0; }
		
		//ID
		public RuleCall getPartyIdentifierIDTerminalRuleCall_0_0() { return cPartyIdentifierIDTerminalRuleCall_0_0; }
		
		//// 3039
		//   (
		//       COLON
		//       ( codeListIdentificationCode=ID )? // 1331
		//       (
		//           COLON
		//           codeListResponsibleAgencyCode=ID // 3055
		//       )?
		//   )?
		public Group getGroup_1() { return cGroup_1; }
		
		//COLON
		public RuleCall getCOLONTerminalRuleCall_1_0() { return cCOLONTerminalRuleCall_1_0; }
		
		//( codeListIdentificationCode=ID )?
		public Assignment getCodeListIdentificationCodeAssignment_1_1() { return cCodeListIdentificationCodeAssignment_1_1; }
		
		//ID
		public RuleCall getCodeListIdentificationCodeIDTerminalRuleCall_1_1_0() { return cCodeListIdentificationCodeIDTerminalRuleCall_1_1_0; }
		
		//// 1331
		//       (
		//           COLON
		//           codeListResponsibleAgencyCode=ID // 3055
		//       )?
		public Group getGroup_1_2() { return cGroup_1_2; }
		
		//COLON
		public RuleCall getCOLONTerminalRuleCall_1_2_0() { return cCOLONTerminalRuleCall_1_2_0; }
		
		//codeListResponsibleAgencyCode=ID
		public Assignment getCodeListResponsibleAgencyCodeAssignment_1_2_1() { return cCodeListResponsibleAgencyCodeAssignment_1_2_1; }
		
		//ID
		public RuleCall getCodeListResponsibleAgencyCodeIDTerminalRuleCall_1_2_1_0() { return cCodeListResponsibleAgencyCodeIDTerminalRuleCall_1_2_1_0; }
	}
	public class ApplicationErrorDetailElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "io.thlaegler.edifact.Edilang.ApplicationErrorDetail");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cApplictionErrorCodeAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cApplictionErrorCodeIDTerminalRuleCall_0_0 = (RuleCall)cApplictionErrorCodeAssignment_0.eContents().get(0);
		private final Group cGroup_1 = (Group)cGroup.eContents().get(1);
		private final RuleCall cCOLONTerminalRuleCall_1_0 = (RuleCall)cGroup_1.eContents().get(0);
		private final Assignment cCodeListIdentificationCodeAssignment_1_1 = (Assignment)cGroup_1.eContents().get(1);
		private final RuleCall cCodeListIdentificationCodeIDTerminalRuleCall_1_1_0 = (RuleCall)cCodeListIdentificationCodeAssignment_1_1.eContents().get(0);
		private final Group cGroup_1_2 = (Group)cGroup_1.eContents().get(2);
		private final RuleCall cCOLONTerminalRuleCall_1_2_0 = (RuleCall)cGroup_1_2.eContents().get(0);
		private final Assignment cCodeListResponsibleAgencyCodeAssignment_1_2_1 = (Assignment)cGroup_1_2.eContents().get(1);
		private final RuleCall cCodeListResponsibleAgencyCodeIDTerminalRuleCall_1_2_1_0 = (RuleCall)cCodeListResponsibleAgencyCodeAssignment_1_2_1.eContents().get(0);
		
		//ApplicationErrorDetail: // C901
		//    applictionErrorCode=ID // 9321
		//    (
		//        COLON
		//        codeListIdentificationCode=ID // 1331
		//        (
		//            COLON
		//            codeListResponsibleAgencyCode=ID // 3055
		//        )?
		//    )?
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//// C901
		//   applictionErrorCode=ID // 9321
		//   (
		//       COLON
		//       codeListIdentificationCode=ID // 1331
		//       (
		//           COLON
		//           codeListResponsibleAgencyCode=ID // 3055
		//       )?
		//   )?
		public Group getGroup() { return cGroup; }
		
		//// C901
		//   applictionErrorCode=ID
		public Assignment getApplictionErrorCodeAssignment_0() { return cApplictionErrorCodeAssignment_0; }
		
		//ID
		public RuleCall getApplictionErrorCodeIDTerminalRuleCall_0_0() { return cApplictionErrorCodeIDTerminalRuleCall_0_0; }
		
		//// 9321
		//   (
		//       COLON
		//       codeListIdentificationCode=ID // 1331
		//       (
		//           COLON
		//           codeListResponsibleAgencyCode=ID // 3055
		//       )?
		//   )?
		public Group getGroup_1() { return cGroup_1; }
		
		//COLON
		public RuleCall getCOLONTerminalRuleCall_1_0() { return cCOLONTerminalRuleCall_1_0; }
		
		//codeListIdentificationCode=ID
		public Assignment getCodeListIdentificationCodeAssignment_1_1() { return cCodeListIdentificationCodeAssignment_1_1; }
		
		//ID
		public RuleCall getCodeListIdentificationCodeIDTerminalRuleCall_1_1_0() { return cCodeListIdentificationCodeIDTerminalRuleCall_1_1_0; }
		
		//// 1331
		//       (
		//           COLON
		//           codeListResponsibleAgencyCode=ID // 3055
		//       )?
		public Group getGroup_1_2() { return cGroup_1_2; }
		
		//COLON
		public RuleCall getCOLONTerminalRuleCall_1_2_0() { return cCOLONTerminalRuleCall_1_2_0; }
		
		//codeListResponsibleAgencyCode=ID
		public Assignment getCodeListResponsibleAgencyCodeAssignment_1_2_1() { return cCodeListResponsibleAgencyCodeAssignment_1_2_1; }
		
		//ID
		public RuleCall getCodeListResponsibleAgencyCodeIDTerminalRuleCall_1_2_1_0() { return cCodeListResponsibleAgencyCodeIDTerminalRuleCall_1_2_1_0; }
	}
	public class SystemDetailFunctionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "io.thlaegler.edifact.Edilang.SystemDetailFunction");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cCompanyIdentificationAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cCompanyIdentificationIDTerminalRuleCall_0_0 = (RuleCall)cCompanyIdentificationAssignment_0.eContents().get(0);
		private final Group cGroup_1 = (Group)cGroup.eContents().get(1);
		private final RuleCall cCOLONTerminalRuleCall_1_0 = (RuleCall)cGroup_1.eContents().get(0);
		private final Assignment cLocationCodeAssignment_1_1 = (Assignment)cGroup_1.eContents().get(1);
		private final RuleCall cLocationCodeIDTerminalRuleCall_1_1_0 = (RuleCall)cLocationCodeAssignment_1_1.eContents().get(0);
		private final Group cGroup_1_2 = (Group)cGroup_1.eContents().get(2);
		private final RuleCall cCOLONTerminalRuleCall_1_2_0 = (RuleCall)cGroup_1_2.eContents().get(0);
		private final Assignment cLocationNameAssignment_1_2_1 = (Assignment)cGroup_1_2.eContents().get(1);
		private final RuleCall cLocationNameIDTerminalRuleCall_1_2_1_0 = (RuleCall)cLocationNameAssignment_1_2_1.eContents().get(0);
		
		//SystemDetailFunction:
		//    companyIdentification=ID
		//    (
		//        COLON
		//        locationCode=ID
		//        (
		//            COLON
		//            locationName=ID
		//        )?
		//    )?
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//companyIdentification=ID
		//(
		//    COLON
		//    locationCode=ID
		//    (
		//        COLON
		//        locationName=ID
		//    )?
		//)?
		public Group getGroup() { return cGroup; }
		
		//companyIdentification=ID
		public Assignment getCompanyIdentificationAssignment_0() { return cCompanyIdentificationAssignment_0; }
		
		//ID
		public RuleCall getCompanyIdentificationIDTerminalRuleCall_0_0() { return cCompanyIdentificationIDTerminalRuleCall_0_0; }
		
		//(
		//    COLON
		//    locationCode=ID
		//    (
		//        COLON
		//        locationName=ID
		//    )?
		//)?
		public Group getGroup_1() { return cGroup_1; }
		
		//COLON
		public RuleCall getCOLONTerminalRuleCall_1_0() { return cCOLONTerminalRuleCall_1_0; }
		
		//locationCode=ID
		public Assignment getLocationCodeAssignment_1_1() { return cLocationCodeAssignment_1_1; }
		
		//ID
		public RuleCall getLocationCodeIDTerminalRuleCall_1_1_0() { return cLocationCodeIDTerminalRuleCall_1_1_0; }
		
		//(
		//    COLON
		//    locationName=ID
		//)?
		public Group getGroup_1_2() { return cGroup_1_2; }
		
		//COLON
		public RuleCall getCOLONTerminalRuleCall_1_2_0() { return cCOLONTerminalRuleCall_1_2_0; }
		
		//locationName=ID
		public Assignment getLocationNameAssignment_1_2_1() { return cLocationNameAssignment_1_2_1; }
		
		//ID
		public RuleCall getLocationNameIDTerminalRuleCall_1_2_1_0() { return cLocationNameIDTerminalRuleCall_1_2_1_0; }
	}
	public class TaxDetailElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "io.thlaegler.edifact.Edilang.TaxDetail");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cTaxRateDescriptionCodeAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cTaxRateDescriptionCodeIDTerminalRuleCall_0_0 = (RuleCall)cTaxRateDescriptionCodeAssignment_0.eContents().get(0);
		private final RuleCall cCOLONTerminalRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		private final Assignment cCodeListIdentificationCode1Assignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cCodeListIdentificationCode1IDTerminalRuleCall_2_0 = (RuleCall)cCodeListIdentificationCode1Assignment_2.eContents().get(0);
		private final RuleCall cCOLONTerminalRuleCall_3 = (RuleCall)cGroup.eContents().get(3);
		private final Assignment cCodeListResponsibleAgencyCode1Assignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cCodeListResponsibleAgencyCode1IDTerminalRuleCall_4_0 = (RuleCall)cCodeListResponsibleAgencyCode1Assignment_4.eContents().get(0);
		private final Group cGroup_5 = (Group)cGroup.eContents().get(5);
		private final RuleCall cCOLONTerminalRuleCall_5_0 = (RuleCall)cGroup_5.eContents().get(0);
		private final Assignment cTaxRateDescriptionAssignment_5_1 = (Assignment)cGroup_5.eContents().get(1);
		private final RuleCall cTaxRateDescriptionIDTerminalRuleCall_5_1_0 = (RuleCall)cTaxRateDescriptionAssignment_5_1.eContents().get(0);
		private final Group cGroup_5_2 = (Group)cGroup_5.eContents().get(2);
		private final RuleCall cCOLONTerminalRuleCall_5_2_0 = (RuleCall)cGroup_5_2.eContents().get(0);
		private final Assignment cTaxRateBasisCodeAssignment_5_2_1 = (Assignment)cGroup_5_2.eContents().get(1);
		private final RuleCall cTaxRateBasisCodeIDTerminalRuleCall_5_2_1_0 = (RuleCall)cTaxRateBasisCodeAssignment_5_2_1.eContents().get(0);
		private final Group cGroup_5_2_2 = (Group)cGroup_5_2.eContents().get(2);
		private final RuleCall cCOLONTerminalRuleCall_5_2_2_0 = (RuleCall)cGroup_5_2_2.eContents().get(0);
		private final Assignment cCodeListIdentificationCode2Assignment_5_2_2_1 = (Assignment)cGroup_5_2_2.eContents().get(1);
		private final RuleCall cCodeListIdentificationCode2IDTerminalRuleCall_5_2_2_1_0 = (RuleCall)cCodeListIdentificationCode2Assignment_5_2_2_1.eContents().get(0);
		private final Group cGroup_5_2_2_2 = (Group)cGroup_5_2_2.eContents().get(2);
		private final RuleCall cCOLONTerminalRuleCall_5_2_2_2_0 = (RuleCall)cGroup_5_2_2_2.eContents().get(0);
		private final Assignment cCodeListResponsibleAgencyCode2Assignment_5_2_2_2_1 = (Assignment)cGroup_5_2_2_2.eContents().get(1);
		private final RuleCall cCodeListResponsibleAgencyCode2IDTerminalRuleCall_5_2_2_2_1_0 = (RuleCall)cCodeListResponsibleAgencyCode2Assignment_5_2_2_2_1.eContents().get(0);
		
		//TaxDetail: // C243
		//    ( taxRateDescriptionCode=ID )? // 5279
		//    COLON
		//    ( codeListIdentificationCode1=ID )? // 1131
		//    COLON
		//    ( codeListResponsibleAgencyCode1=ID )? // 3055
		//    (
		//        COLON
		//        taxRateDescription=ID // 5278
		//        (
		//            COLON
		//            taxRateBasisCode=ID // 5273
		//            (
		//                COLON
		//                codeListIdentificationCode2=ID // 1131
		//                (
		//                    COLON
		//                    codeListResponsibleAgencyCode2=ID // 3055
		//                )?
		//            )?
		//        )?
		//    )?
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//// C243
		//   ( taxRateDescriptionCode=ID )? // 5279
		//   COLON
		//   ( codeListIdentificationCode1=ID )? // 1131
		//   COLON
		//   ( codeListResponsibleAgencyCode1=ID )? // 3055
		//   (
		//       COLON
		//       taxRateDescription=ID // 5278
		//       (
		//           COLON
		//           taxRateBasisCode=ID // 5273
		//           (
		//               COLON
		//               codeListIdentificationCode2=ID // 1131
		//               (
		//                   COLON
		//                   codeListResponsibleAgencyCode2=ID // 3055
		//               )?
		//           )?
		//       )?
		//   )?
		public Group getGroup() { return cGroup; }
		
		//// C243
		//   ( taxRateDescriptionCode=ID )?
		public Assignment getTaxRateDescriptionCodeAssignment_0() { return cTaxRateDescriptionCodeAssignment_0; }
		
		//ID
		public RuleCall getTaxRateDescriptionCodeIDTerminalRuleCall_0_0() { return cTaxRateDescriptionCodeIDTerminalRuleCall_0_0; }
		
		//// 5279
		//   COLON
		public RuleCall getCOLONTerminalRuleCall_1() { return cCOLONTerminalRuleCall_1; }
		
		//( codeListIdentificationCode1=ID )?
		public Assignment getCodeListIdentificationCode1Assignment_2() { return cCodeListIdentificationCode1Assignment_2; }
		
		//ID
		public RuleCall getCodeListIdentificationCode1IDTerminalRuleCall_2_0() { return cCodeListIdentificationCode1IDTerminalRuleCall_2_0; }
		
		//// 1131
		//   COLON
		public RuleCall getCOLONTerminalRuleCall_3() { return cCOLONTerminalRuleCall_3; }
		
		//( codeListResponsibleAgencyCode1=ID )?
		public Assignment getCodeListResponsibleAgencyCode1Assignment_4() { return cCodeListResponsibleAgencyCode1Assignment_4; }
		
		//ID
		public RuleCall getCodeListResponsibleAgencyCode1IDTerminalRuleCall_4_0() { return cCodeListResponsibleAgencyCode1IDTerminalRuleCall_4_0; }
		
		//// 3055
		//   (
		//       COLON
		//       taxRateDescription=ID // 5278
		//       (
		//           COLON
		//           taxRateBasisCode=ID // 5273
		//           (
		//               COLON
		//               codeListIdentificationCode2=ID // 1131
		//               (
		//                   COLON
		//                   codeListResponsibleAgencyCode2=ID // 3055
		//               )?
		//           )?
		//       )?
		//   )?
		public Group getGroup_5() { return cGroup_5; }
		
		//COLON
		public RuleCall getCOLONTerminalRuleCall_5_0() { return cCOLONTerminalRuleCall_5_0; }
		
		//taxRateDescription=ID
		public Assignment getTaxRateDescriptionAssignment_5_1() { return cTaxRateDescriptionAssignment_5_1; }
		
		//ID
		public RuleCall getTaxRateDescriptionIDTerminalRuleCall_5_1_0() { return cTaxRateDescriptionIDTerminalRuleCall_5_1_0; }
		
		//// 5278
		//       (
		//           COLON
		//           taxRateBasisCode=ID // 5273
		//           (
		//               COLON
		//               codeListIdentificationCode2=ID // 1131
		//               (
		//                   COLON
		//                   codeListResponsibleAgencyCode2=ID // 3055
		//               )?
		//           )?
		//       )?
		public Group getGroup_5_2() { return cGroup_5_2; }
		
		//COLON
		public RuleCall getCOLONTerminalRuleCall_5_2_0() { return cCOLONTerminalRuleCall_5_2_0; }
		
		//taxRateBasisCode=ID
		public Assignment getTaxRateBasisCodeAssignment_5_2_1() { return cTaxRateBasisCodeAssignment_5_2_1; }
		
		//ID
		public RuleCall getTaxRateBasisCodeIDTerminalRuleCall_5_2_1_0() { return cTaxRateBasisCodeIDTerminalRuleCall_5_2_1_0; }
		
		//// 5273
		//           (
		//               COLON
		//               codeListIdentificationCode2=ID // 1131
		//               (
		//                   COLON
		//                   codeListResponsibleAgencyCode2=ID // 3055
		//               )?
		//           )?
		public Group getGroup_5_2_2() { return cGroup_5_2_2; }
		
		//COLON
		public RuleCall getCOLONTerminalRuleCall_5_2_2_0() { return cCOLONTerminalRuleCall_5_2_2_0; }
		
		//codeListIdentificationCode2=ID
		public Assignment getCodeListIdentificationCode2Assignment_5_2_2_1() { return cCodeListIdentificationCode2Assignment_5_2_2_1; }
		
		//ID
		public RuleCall getCodeListIdentificationCode2IDTerminalRuleCall_5_2_2_1_0() { return cCodeListIdentificationCode2IDTerminalRuleCall_5_2_2_1_0; }
		
		//// 1131
		//               (
		//                   COLON
		//                   codeListResponsibleAgencyCode2=ID // 3055
		//               )?
		public Group getGroup_5_2_2_2() { return cGroup_5_2_2_2; }
		
		//COLON
		public RuleCall getCOLONTerminalRuleCall_5_2_2_2_0() { return cCOLONTerminalRuleCall_5_2_2_2_0; }
		
		//codeListResponsibleAgencyCode2=ID
		public Assignment getCodeListResponsibleAgencyCode2Assignment_5_2_2_2_1() { return cCodeListResponsibleAgencyCode2Assignment_5_2_2_2_1; }
		
		//ID
		public RuleCall getCodeListResponsibleAgencyCode2IDTerminalRuleCall_5_2_2_2_1_0() { return cCodeListResponsibleAgencyCode2IDTerminalRuleCall_5_2_2_2_1_0; }
	}
	public class TaxAccountDetailElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "io.thlaegler.edifact.Edilang.TaxAccountDetail");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cTaxAccountCodeAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cTaxAccountCodeIDTerminalRuleCall_0_0 = (RuleCall)cTaxAccountCodeAssignment_0.eContents().get(0);
		private final Group cGroup_1 = (Group)cGroup.eContents().get(1);
		private final RuleCall cCOLONTerminalRuleCall_1_0 = (RuleCall)cGroup_1.eContents().get(0);
		private final Assignment cCodeListIdentificationCodeAssignment_1_1 = (Assignment)cGroup_1.eContents().get(1);
		private final RuleCall cCodeListIdentificationCodeIDTerminalRuleCall_1_1_0 = (RuleCall)cCodeListIdentificationCodeAssignment_1_1.eContents().get(0);
		private final Group cGroup_1_2 = (Group)cGroup_1.eContents().get(2);
		private final RuleCall cCOLONTerminalRuleCall_1_2_0 = (RuleCall)cGroup_1_2.eContents().get(0);
		private final Assignment cCodeListResponsibleAgencyCodeAssignment_1_2_1 = (Assignment)cGroup_1_2.eContents().get(1);
		private final RuleCall cCodeListResponsibleAgencyCodeIDTerminalRuleCall_1_2_1_0 = (RuleCall)cCodeListResponsibleAgencyCodeAssignment_1_2_1.eContents().get(0);
		
		//TaxAccountDetail: // C533
		//    taxAccountCode=ID // 5289
		//    (
		//        COLON
		//        codeListIdentificationCode=ID // 1131
		//        (
		//            COLON
		//            codeListResponsibleAgencyCode=ID // 3055
		//        )?
		//    )?
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//// C533
		//   taxAccountCode=ID // 5289
		//   (
		//       COLON
		//       codeListIdentificationCode=ID // 1131
		//       (
		//           COLON
		//           codeListResponsibleAgencyCode=ID // 3055
		//       )?
		//   )?
		public Group getGroup() { return cGroup; }
		
		//// C533
		//   taxAccountCode=ID
		public Assignment getTaxAccountCodeAssignment_0() { return cTaxAccountCodeAssignment_0; }
		
		//ID
		public RuleCall getTaxAccountCodeIDTerminalRuleCall_0_0() { return cTaxAccountCodeIDTerminalRuleCall_0_0; }
		
		//// 5289
		//   (
		//       COLON
		//       codeListIdentificationCode=ID // 1131
		//       (
		//           COLON
		//           codeListResponsibleAgencyCode=ID // 3055
		//       )?
		//   )?
		public Group getGroup_1() { return cGroup_1; }
		
		//COLON
		public RuleCall getCOLONTerminalRuleCall_1_0() { return cCOLONTerminalRuleCall_1_0; }
		
		//codeListIdentificationCode=ID
		public Assignment getCodeListIdentificationCodeAssignment_1_1() { return cCodeListIdentificationCodeAssignment_1_1; }
		
		//ID
		public RuleCall getCodeListIdentificationCodeIDTerminalRuleCall_1_1_0() { return cCodeListIdentificationCodeIDTerminalRuleCall_1_1_0; }
		
		//// 1131
		//       (
		//           COLON
		//           codeListResponsibleAgencyCode=ID // 3055
		//       )?
		public Group getGroup_1_2() { return cGroup_1_2; }
		
		//COLON
		public RuleCall getCOLONTerminalRuleCall_1_2_0() { return cCOLONTerminalRuleCall_1_2_0; }
		
		//codeListResponsibleAgencyCode=ID
		public Assignment getCodeListResponsibleAgencyCodeAssignment_1_2_1() { return cCodeListResponsibleAgencyCodeAssignment_1_2_1; }
		
		//ID
		public RuleCall getCodeListResponsibleAgencyCodeIDTerminalRuleCall_1_2_1_0() { return cCodeListResponsibleAgencyCodeIDTerminalRuleCall_1_2_1_0; }
	}
	public class TaxTypeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "io.thlaegler.edifact.Edilang.TaxType");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cTaxTypeNameCodeAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cTaxTypeNameCodeIDTerminalRuleCall_0_0 = (RuleCall)cTaxTypeNameCodeAssignment_0.eContents().get(0);
		private final Group cGroup_1 = (Group)cGroup.eContents().get(1);
		private final RuleCall cCOLONTerminalRuleCall_1_0 = (RuleCall)cGroup_1.eContents().get(0);
		private final Assignment cCodeListIdentificationCodeAssignment_1_1 = (Assignment)cGroup_1.eContents().get(1);
		private final RuleCall cCodeListIdentificationCodeIDTerminalRuleCall_1_1_0 = (RuleCall)cCodeListIdentificationCodeAssignment_1_1.eContents().get(0);
		private final Group cGroup_1_2 = (Group)cGroup_1.eContents().get(2);
		private final RuleCall cCOLONTerminalRuleCall_1_2_0 = (RuleCall)cGroup_1_2.eContents().get(0);
		private final Assignment cCodeListResponsibleAgencyCodeAssignment_1_2_1 = (Assignment)cGroup_1_2.eContents().get(1);
		private final RuleCall cCodeListResponsibleAgencyCodeIDTerminalRuleCall_1_2_1_0 = (RuleCall)cCodeListResponsibleAgencyCodeAssignment_1_2_1.eContents().get(0);
		private final Group cGroup_1_2_2 = (Group)cGroup_1_2.eContents().get(2);
		private final RuleCall cCOLONTerminalRuleCall_1_2_2_0 = (RuleCall)cGroup_1_2_2.eContents().get(0);
		private final Assignment cTaxTypeNameAssignment_1_2_2_1 = (Assignment)cGroup_1_2_2.eContents().get(1);
		private final RuleCall cTaxTypeNameIDTerminalRuleCall_1_2_2_1_0 = (RuleCall)cTaxTypeNameAssignment_1_2_2_1.eContents().get(0);
		
		//TaxType: // C241
		//    taxTypeNameCode=ID // 5153
		//    (
		//        COLON
		//        codeListIdentificationCode=ID // 1131
		//        (
		//            COLON
		//            codeListResponsibleAgencyCode=ID // 3055
		//            (
		//                COLON
		//                taxTypeName=ID // 5152
		//            )?
		//        )?
		//    )?
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//// C241
		//   taxTypeNameCode=ID // 5153
		//   (
		//       COLON
		//       codeListIdentificationCode=ID // 1131
		//       (
		//           COLON
		//           codeListResponsibleAgencyCode=ID // 3055
		//           (
		//               COLON
		//               taxTypeName=ID // 5152
		//           )?
		//       )?
		//   )?
		public Group getGroup() { return cGroup; }
		
		//// C241
		//   taxTypeNameCode=ID
		public Assignment getTaxTypeNameCodeAssignment_0() { return cTaxTypeNameCodeAssignment_0; }
		
		//ID
		public RuleCall getTaxTypeNameCodeIDTerminalRuleCall_0_0() { return cTaxTypeNameCodeIDTerminalRuleCall_0_0; }
		
		//// 5153
		//   (
		//       COLON
		//       codeListIdentificationCode=ID // 1131
		//       (
		//           COLON
		//           codeListResponsibleAgencyCode=ID // 3055
		//           (
		//               COLON
		//               taxTypeName=ID // 5152
		//           )?
		//       )?
		//   )?
		public Group getGroup_1() { return cGroup_1; }
		
		//COLON
		public RuleCall getCOLONTerminalRuleCall_1_0() { return cCOLONTerminalRuleCall_1_0; }
		
		//codeListIdentificationCode=ID
		public Assignment getCodeListIdentificationCodeAssignment_1_1() { return cCodeListIdentificationCodeAssignment_1_1; }
		
		//ID
		public RuleCall getCodeListIdentificationCodeIDTerminalRuleCall_1_1_0() { return cCodeListIdentificationCodeIDTerminalRuleCall_1_1_0; }
		
		//// 1131
		//       (
		//           COLON
		//           codeListResponsibleAgencyCode=ID // 3055
		//           (
		//               COLON
		//               taxTypeName=ID // 5152
		//           )?
		//       )?
		public Group getGroup_1_2() { return cGroup_1_2; }
		
		//COLON
		public RuleCall getCOLONTerminalRuleCall_1_2_0() { return cCOLONTerminalRuleCall_1_2_0; }
		
		//codeListResponsibleAgencyCode=ID
		public Assignment getCodeListResponsibleAgencyCodeAssignment_1_2_1() { return cCodeListResponsibleAgencyCodeAssignment_1_2_1; }
		
		//ID
		public RuleCall getCodeListResponsibleAgencyCodeIDTerminalRuleCall_1_2_1_0() { return cCodeListResponsibleAgencyCodeIDTerminalRuleCall_1_2_1_0; }
		
		//// 3055
		//           (
		//               COLON
		//               taxTypeName=ID // 5152
		//           )?
		public Group getGroup_1_2_2() { return cGroup_1_2_2; }
		
		//COLON
		public RuleCall getCOLONTerminalRuleCall_1_2_2_0() { return cCOLONTerminalRuleCall_1_2_2_0; }
		
		//taxTypeName=ID
		public Assignment getTaxTypeNameAssignment_1_2_2_1() { return cTaxTypeNameAssignment_1_2_2_1; }
		
		//ID
		public RuleCall getTaxTypeNameIDTerminalRuleCall_1_2_2_1_0() { return cTaxTypeNameIDTerminalRuleCall_1_2_2_1_0; }
	}
	public class CurrencyDetailElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "io.thlaegler.edifact.Edilang.CurrencyDetail");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cCurrencyUsageCodeQualifierAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cCurrencyUsageCodeQualifierIDTerminalRuleCall_0_0 = (RuleCall)cCurrencyUsageCodeQualifierAssignment_0.eContents().get(0);
		private final Group cGroup_1 = (Group)cGroup.eContents().get(1);
		private final RuleCall cCOLONTerminalRuleCall_1_0 = (RuleCall)cGroup_1.eContents().get(0);
		private final Assignment cCurrencyIdentificationCodeAssignment_1_1 = (Assignment)cGroup_1.eContents().get(1);
		private final RuleCall cCurrencyIdentificationCodeIDTerminalRuleCall_1_1_0 = (RuleCall)cCurrencyIdentificationCodeAssignment_1_1.eContents().get(0);
		private final Group cGroup_1_2 = (Group)cGroup_1.eContents().get(2);
		private final RuleCall cCOLONTerminalRuleCall_1_2_0 = (RuleCall)cGroup_1_2.eContents().get(0);
		private final Assignment cCurrencyTypeCodeQualifierAssignment_1_2_1 = (Assignment)cGroup_1_2.eContents().get(1);
		private final RuleCall cCurrencyTypeCodeQualifierIDTerminalRuleCall_1_2_1_0 = (RuleCall)cCurrencyTypeCodeQualifierAssignment_1_2_1.eContents().get(0);
		private final Group cGroup_1_2_2 = (Group)cGroup_1_2.eContents().get(2);
		private final RuleCall cCOLONTerminalRuleCall_1_2_2_0 = (RuleCall)cGroup_1_2_2.eContents().get(0);
		private final Assignment cCurrencyRateValueAssignment_1_2_2_1 = (Assignment)cGroup_1_2_2.eContents().get(1);
		private final RuleCall cCurrencyRateValueIDTerminalRuleCall_1_2_2_1_0 = (RuleCall)cCurrencyRateValueAssignment_1_2_2_1.eContents().get(0);
		
		//CurrencyDetail: // C504
		//    currencyUsageCodeQualifier=ID // 6347
		//    (
		//        COLON
		//        currencyIdentificationCode=ID // 6345
		//        (
		//            COLON
		//            currencyTypeCodeQualifier=ID // 6343
		//            (
		//                COLON
		//                currencyRateValue=ID // 6348
		//            )?
		//        )?
		//    )?
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//// C504
		//   currencyUsageCodeQualifier=ID // 6347
		//   (
		//       COLON
		//       currencyIdentificationCode=ID // 6345
		//       (
		//           COLON
		//           currencyTypeCodeQualifier=ID // 6343
		//           (
		//               COLON
		//               currencyRateValue=ID // 6348
		//           )?
		//       )?
		//   )?
		public Group getGroup() { return cGroup; }
		
		//// C504
		//   currencyUsageCodeQualifier=ID
		public Assignment getCurrencyUsageCodeQualifierAssignment_0() { return cCurrencyUsageCodeQualifierAssignment_0; }
		
		//ID
		public RuleCall getCurrencyUsageCodeQualifierIDTerminalRuleCall_0_0() { return cCurrencyUsageCodeQualifierIDTerminalRuleCall_0_0; }
		
		//// 6347
		//   (
		//       COLON
		//       currencyIdentificationCode=ID // 6345
		//       (
		//           COLON
		//           currencyTypeCodeQualifier=ID // 6343
		//           (
		//               COLON
		//               currencyRateValue=ID // 6348
		//           )?
		//       )?
		//   )?
		public Group getGroup_1() { return cGroup_1; }
		
		//COLON
		public RuleCall getCOLONTerminalRuleCall_1_0() { return cCOLONTerminalRuleCall_1_0; }
		
		//currencyIdentificationCode=ID
		public Assignment getCurrencyIdentificationCodeAssignment_1_1() { return cCurrencyIdentificationCodeAssignment_1_1; }
		
		//ID
		public RuleCall getCurrencyIdentificationCodeIDTerminalRuleCall_1_1_0() { return cCurrencyIdentificationCodeIDTerminalRuleCall_1_1_0; }
		
		//// 6345
		//       (
		//           COLON
		//           currencyTypeCodeQualifier=ID // 6343
		//           (
		//               COLON
		//               currencyRateValue=ID // 6348
		//           )?
		//       )?
		public Group getGroup_1_2() { return cGroup_1_2; }
		
		//COLON
		public RuleCall getCOLONTerminalRuleCall_1_2_0() { return cCOLONTerminalRuleCall_1_2_0; }
		
		//currencyTypeCodeQualifier=ID
		public Assignment getCurrencyTypeCodeQualifierAssignment_1_2_1() { return cCurrencyTypeCodeQualifierAssignment_1_2_1; }
		
		//ID
		public RuleCall getCurrencyTypeCodeQualifierIDTerminalRuleCall_1_2_1_0() { return cCurrencyTypeCodeQualifierIDTerminalRuleCall_1_2_1_0; }
		
		//// 6343
		//           (
		//               COLON
		//               currencyRateValue=ID // 6348
		//           )?
		public Group getGroup_1_2_2() { return cGroup_1_2_2; }
		
		//COLON
		public RuleCall getCOLONTerminalRuleCall_1_2_2_0() { return cCOLONTerminalRuleCall_1_2_2_0; }
		
		//currencyRateValue=ID
		public Assignment getCurrencyRateValueAssignment_1_2_2_1() { return cCurrencyRateValueAssignment_1_2_2_1; }
		
		//ID
		public RuleCall getCurrencyRateValueIDTerminalRuleCall_1_2_2_1_0() { return cCurrencyRateValueIDTerminalRuleCall_1_2_2_1_0; }
	}
	public class DocumentMessageIdentificationElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "io.thlaegler.edifact.Edilang.DocumentMessageIdentification");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cDocumentIdentifierAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cDocumentIdentifierIDTerminalRuleCall_0_0 = (RuleCall)cDocumentIdentifierAssignment_0.eContents().get(0);
		private final Group cGroup_1 = (Group)cGroup.eContents().get(1);
		private final RuleCall cCOLONTerminalRuleCall_1_0 = (RuleCall)cGroup_1.eContents().get(0);
		private final Assignment cVersionIdentifierAssignment_1_1 = (Assignment)cGroup_1.eContents().get(1);
		private final RuleCall cVersionIdentifierIDTerminalRuleCall_1_1_0 = (RuleCall)cVersionIdentifierAssignment_1_1.eContents().get(0);
		private final Group cGroup_1_2 = (Group)cGroup_1.eContents().get(2);
		private final RuleCall cCOLONTerminalRuleCall_1_2_0 = (RuleCall)cGroup_1_2.eContents().get(0);
		private final Assignment cRevisionIdentifierAssignment_1_2_1 = (Assignment)cGroup_1_2.eContents().get(1);
		private final RuleCall cRevisionIdentifierIDTerminalRuleCall_1_2_1_0 = (RuleCall)cRevisionIdentifierAssignment_1_2_1.eContents().get(0);
		
		//DocumentMessageIdentification: // C106
		//    documentIdentifier=ID // 1004
		//    (
		//        COLON
		//        versionIdentifier=ID // 1056
		//        (
		//            COLON
		//            revisionIdentifier=ID // 1060
		//        )?
		//    )?
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//// C106
		//   documentIdentifier=ID // 1004
		//   (
		//       COLON
		//       versionIdentifier=ID // 1056
		//       (
		//           COLON
		//           revisionIdentifier=ID // 1060
		//       )?
		//   )?
		public Group getGroup() { return cGroup; }
		
		//// C106
		//   documentIdentifier=ID
		public Assignment getDocumentIdentifierAssignment_0() { return cDocumentIdentifierAssignment_0; }
		
		//ID
		public RuleCall getDocumentIdentifierIDTerminalRuleCall_0_0() { return cDocumentIdentifierIDTerminalRuleCall_0_0; }
		
		//// 1004
		//   (
		//       COLON
		//       versionIdentifier=ID // 1056
		//       (
		//           COLON
		//           revisionIdentifier=ID // 1060
		//       )?
		//   )?
		public Group getGroup_1() { return cGroup_1; }
		
		//COLON
		public RuleCall getCOLONTerminalRuleCall_1_0() { return cCOLONTerminalRuleCall_1_0; }
		
		//versionIdentifier=ID
		public Assignment getVersionIdentifierAssignment_1_1() { return cVersionIdentifierAssignment_1_1; }
		
		//ID
		public RuleCall getVersionIdentifierIDTerminalRuleCall_1_1_0() { return cVersionIdentifierIDTerminalRuleCall_1_1_0; }
		
		//// 1056
		//       (
		//           COLON
		//           revisionIdentifier=ID // 1060
		//       )?
		public Group getGroup_1_2() { return cGroup_1_2; }
		
		//COLON
		public RuleCall getCOLONTerminalRuleCall_1_2_0() { return cCOLONTerminalRuleCall_1_2_0; }
		
		//revisionIdentifier=ID
		public Assignment getRevisionIdentifierAssignment_1_2_1() { return cRevisionIdentifierAssignment_1_2_1; }
		
		//ID
		public RuleCall getRevisionIdentifierIDTerminalRuleCall_1_2_1_0() { return cRevisionIdentifierIDTerminalRuleCall_1_2_1_0; }
	}
	public class DocumentMessageElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "io.thlaegler.edifact.Edilang.DocumentMessage");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cDocumentNameCodeAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cDocumentNameCodeIDTerminalRuleCall_0_0 = (RuleCall)cDocumentNameCodeAssignment_0.eContents().get(0);
		private final Group cGroup_1 = (Group)cGroup.eContents().get(1);
		private final RuleCall cCOLONTerminalRuleCall_1_0 = (RuleCall)cGroup_1.eContents().get(0);
		private final Assignment cCodeListIdentificationCodeAssignment_1_1 = (Assignment)cGroup_1.eContents().get(1);
		private final RuleCall cCodeListIdentificationCodeIDTerminalRuleCall_1_1_0 = (RuleCall)cCodeListIdentificationCodeAssignment_1_1.eContents().get(0);
		private final Group cGroup_1_2 = (Group)cGroup_1.eContents().get(2);
		private final RuleCall cCOLONTerminalRuleCall_1_2_0 = (RuleCall)cGroup_1_2.eContents().get(0);
		private final Assignment cCodeListResponsibleAgencyCodeAssignment_1_2_1 = (Assignment)cGroup_1_2.eContents().get(1);
		private final RuleCall cCodeListResponsibleAgencyCodeIDTerminalRuleCall_1_2_1_0 = (RuleCall)cCodeListResponsibleAgencyCodeAssignment_1_2_1.eContents().get(0);
		private final Group cGroup_1_2_2 = (Group)cGroup_1_2.eContents().get(2);
		private final RuleCall cCOLONTerminalRuleCall_1_2_2_0 = (RuleCall)cGroup_1_2_2.eContents().get(0);
		private final Assignment cDocumentNameAssignment_1_2_2_1 = (Assignment)cGroup_1_2_2.eContents().get(1);
		private final RuleCall cDocumentNameIDTerminalRuleCall_1_2_2_1_0 = (RuleCall)cDocumentNameAssignment_1_2_2_1.eContents().get(0);
		
		//DocumentMessage: // C002
		//    documentNameCode=ID // 1001
		//    (
		//        COLON
		//        codeListIdentificationCode=ID // 1131
		//        (
		//            COLON
		//            codeListResponsibleAgencyCode=ID // 3055
		//            (
		//                COLON
		//                documentName=ID // 1000
		//            )?
		//        )?
		//    )?
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//// C002
		//   documentNameCode=ID // 1001
		//   (
		//       COLON
		//       codeListIdentificationCode=ID // 1131
		//       (
		//           COLON
		//           codeListResponsibleAgencyCode=ID // 3055
		//           (
		//               COLON
		//               documentName=ID // 1000
		//           )?
		//       )?
		//   )?
		public Group getGroup() { return cGroup; }
		
		//// C002
		//   documentNameCode=ID
		public Assignment getDocumentNameCodeAssignment_0() { return cDocumentNameCodeAssignment_0; }
		
		//ID
		public RuleCall getDocumentNameCodeIDTerminalRuleCall_0_0() { return cDocumentNameCodeIDTerminalRuleCall_0_0; }
		
		//// 1001
		//   (
		//       COLON
		//       codeListIdentificationCode=ID // 1131
		//       (
		//           COLON
		//           codeListResponsibleAgencyCode=ID // 3055
		//           (
		//               COLON
		//               documentName=ID // 1000
		//           )?
		//       )?
		//   )?
		public Group getGroup_1() { return cGroup_1; }
		
		//COLON
		public RuleCall getCOLONTerminalRuleCall_1_0() { return cCOLONTerminalRuleCall_1_0; }
		
		//codeListIdentificationCode=ID
		public Assignment getCodeListIdentificationCodeAssignment_1_1() { return cCodeListIdentificationCodeAssignment_1_1; }
		
		//ID
		public RuleCall getCodeListIdentificationCodeIDTerminalRuleCall_1_1_0() { return cCodeListIdentificationCodeIDTerminalRuleCall_1_1_0; }
		
		//// 1131
		//       (
		//           COLON
		//           codeListResponsibleAgencyCode=ID // 3055
		//           (
		//               COLON
		//               documentName=ID // 1000
		//           )?
		//       )?
		public Group getGroup_1_2() { return cGroup_1_2; }
		
		//COLON
		public RuleCall getCOLONTerminalRuleCall_1_2_0() { return cCOLONTerminalRuleCall_1_2_0; }
		
		//codeListResponsibleAgencyCode=ID
		public Assignment getCodeListResponsibleAgencyCodeAssignment_1_2_1() { return cCodeListResponsibleAgencyCodeAssignment_1_2_1; }
		
		//ID
		public RuleCall getCodeListResponsibleAgencyCodeIDTerminalRuleCall_1_2_1_0() { return cCodeListResponsibleAgencyCodeIDTerminalRuleCall_1_2_1_0; }
		
		//// 3055
		//           (
		//               COLON
		//               documentName=ID // 1000
		//           )?
		public Group getGroup_1_2_2() { return cGroup_1_2_2; }
		
		//COLON
		public RuleCall getCOLONTerminalRuleCall_1_2_2_0() { return cCOLONTerminalRuleCall_1_2_2_0; }
		
		//documentName=ID
		public Assignment getDocumentNameAssignment_1_2_2_1() { return cDocumentNameAssignment_1_2_2_1; }
		
		//ID
		public RuleCall getDocumentNameIDTerminalRuleCall_1_2_2_1_0() { return cDocumentNameIDTerminalRuleCall_1_2_2_1_0; }
	}
	public class OriginatorFunctionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "io.thlaegler.edifact.Edilang.OriginatorFunction");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cCountryCodeAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cCountryCodeIDTerminalRuleCall_0_0 = (RuleCall)cCountryCodeAssignment_0.eContents().get(0);
		private final Group cGroup_1 = (Group)cGroup.eContents().get(1);
		private final RuleCall cCOLONTerminalRuleCall_1_0 = (RuleCall)cGroup_1.eContents().get(0);
		private final Assignment cCurrencyCodeAssignment_1_1 = (Assignment)cGroup_1.eContents().get(1);
		private final RuleCall cCurrencyCodeIDTerminalRuleCall_1_1_0 = (RuleCall)cCurrencyCodeAssignment_1_1.eContents().get(0);
		private final Group cGroup_1_2 = (Group)cGroup_1.eContents().get(2);
		private final RuleCall cCOLONTerminalRuleCall_1_2_0 = (RuleCall)cGroup_1_2.eContents().get(0);
		private final Assignment cLanguageCodeAssignment_1_2_1 = (Assignment)cGroup_1_2.eContents().get(1);
		private final RuleCall cLanguageCodeIDTerminalRuleCall_1_2_1_0 = (RuleCall)cLanguageCodeAssignment_1_2_1.eContents().get(0);
		
		//OriginatorFunction:
		//    countryCode=ID
		//    (
		//        COLON
		//        currencyCode=ID
		//        (
		//            COLON
		//            languageCode=ID
		//        )?
		//    )?
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//countryCode=ID
		//(
		//    COLON
		//    currencyCode=ID
		//    (
		//        COLON
		//        languageCode=ID
		//    )?
		//)?
		public Group getGroup() { return cGroup; }
		
		//countryCode=ID
		public Assignment getCountryCodeAssignment_0() { return cCountryCodeAssignment_0; }
		
		//ID
		public RuleCall getCountryCodeIDTerminalRuleCall_0_0() { return cCountryCodeIDTerminalRuleCall_0_0; }
		
		//(
		//    COLON
		//    currencyCode=ID
		//    (
		//        COLON
		//        languageCode=ID
		//    )?
		//)?
		public Group getGroup_1() { return cGroup_1; }
		
		//COLON
		public RuleCall getCOLONTerminalRuleCall_1_0() { return cCOLONTerminalRuleCall_1_0; }
		
		//currencyCode=ID
		public Assignment getCurrencyCodeAssignment_1_1() { return cCurrencyCodeAssignment_1_1; }
		
		//ID
		public RuleCall getCurrencyCodeIDTerminalRuleCall_1_1_0() { return cCurrencyCodeIDTerminalRuleCall_1_1_0; }
		
		//(
		//    COLON
		//    languageCode=ID
		//)?
		public Group getGroup_1_2() { return cGroup_1_2; }
		
		//COLON
		public RuleCall getCOLONTerminalRuleCall_1_2_0() { return cCOLONTerminalRuleCall_1_2_0; }
		
		//languageCode=ID
		public Assignment getLanguageCodeAssignment_1_2_1() { return cLanguageCodeAssignment_1_2_1; }
		
		//ID
		public RuleCall getLanguageCodeIDTerminalRuleCall_1_2_1_0() { return cLanguageCodeIDTerminalRuleCall_1_2_1_0; }
	}
	public class OriginatorIdentificationFunctionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "io.thlaegler.edifact.Edilang.OriginatorIdentificationFunction");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cTravelAgentIdAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cTravelAgentIdIDTerminalRuleCall_0_0 = (RuleCall)cTravelAgentIdAssignment_0.eContents().get(0);
		private final Group cGroup_1 = (Group)cGroup.eContents().get(1);
		private final RuleCall cCOLONTerminalRuleCall_1_0 = (RuleCall)cGroup_1.eContents().get(0);
		private final Assignment cInHouseId1Assignment_1_1 = (Assignment)cGroup_1.eContents().get(1);
		private final RuleCall cInHouseId1IDTerminalRuleCall_1_1_0 = (RuleCall)cInHouseId1Assignment_1_1.eContents().get(0);
		private final Group cGroup_1_2 = (Group)cGroup_1.eContents().get(2);
		private final RuleCall cCOLONTerminalRuleCall_1_2_0 = (RuleCall)cGroup_1_2.eContents().get(0);
		private final Assignment cInHouseId2Assignment_1_2_1 = (Assignment)cGroup_1_2.eContents().get(1);
		private final RuleCall cInHouseId2IDTerminalRuleCall_1_2_1_0 = (RuleCall)cInHouseId2Assignment_1_2_1.eContents().get(0);
		
		//OriginatorIdentificationFunction:
		//    travelAgentId=ID
		//    (
		//        COLON
		//        inHouseId1=ID?
		//        (
		//            COLON
		//            inHouseId2=ID
		//        )?
		//    )?
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//travelAgentId=ID
		//(
		//    COLON
		//    inHouseId1=ID?
		//    (
		//        COLON
		//        inHouseId2=ID
		//    )?
		//)?
		public Group getGroup() { return cGroup; }
		
		//travelAgentId=ID
		public Assignment getTravelAgentIdAssignment_0() { return cTravelAgentIdAssignment_0; }
		
		//ID
		public RuleCall getTravelAgentIdIDTerminalRuleCall_0_0() { return cTravelAgentIdIDTerminalRuleCall_0_0; }
		
		//(
		//    COLON
		//    inHouseId1=ID?
		//    (
		//        COLON
		//        inHouseId2=ID
		//    )?
		//)?
		public Group getGroup_1() { return cGroup_1; }
		
		//COLON
		public RuleCall getCOLONTerminalRuleCall_1_0() { return cCOLONTerminalRuleCall_1_0; }
		
		//inHouseId1=ID?
		public Assignment getInHouseId1Assignment_1_1() { return cInHouseId1Assignment_1_1; }
		
		//ID
		public RuleCall getInHouseId1IDTerminalRuleCall_1_1_0() { return cInHouseId1IDTerminalRuleCall_1_1_0; }
		
		//(
		//    COLON
		//    inHouseId2=ID
		//)?
		public Group getGroup_1_2() { return cGroup_1_2; }
		
		//COLON
		public RuleCall getCOLONTerminalRuleCall_1_2_0() { return cCOLONTerminalRuleCall_1_2_0; }
		
		//inHouseId2=ID
		public Assignment getInHouseId2Assignment_1_2_1() { return cInHouseId2Assignment_1_2_1; }
		
		//ID
		public RuleCall getInHouseId2IDTerminalRuleCall_1_2_1_0() { return cInHouseId2IDTerminalRuleCall_1_2_1_0; }
	}
	public class LocationFunctionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "io.thlaegler.edifact.Edilang.LocationFunction");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cLocationIdAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cLocationIdIDTerminalRuleCall_0_0 = (RuleCall)cLocationIdAssignment_0.eContents().get(0);
		private final Group cGroup_1 = (Group)cGroup.eContents().get(1);
		private final RuleCall cCOLONTerminalRuleCall_1_0 = (RuleCall)cGroup_1.eContents().get(0);
		private final Assignment cLocationNameAssignment_1_1 = (Assignment)cGroup_1.eContents().get(1);
		private final RuleCall cLocationNameIDTerminalRuleCall_1_1_0 = (RuleCall)cLocationNameAssignment_1_1.eContents().get(0);
		
		//LocationFunction:
		//    locationId=ID
		//    (
		//        COLON
		//        locationName=ID
		//    )?
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//locationId=ID
		//(
		//    COLON
		//    locationName=ID
		//)?
		public Group getGroup() { return cGroup; }
		
		//locationId=ID
		public Assignment getLocationIdAssignment_0() { return cLocationIdAssignment_0; }
		
		//ID
		public RuleCall getLocationIdIDTerminalRuleCall_0_0() { return cLocationIdIDTerminalRuleCall_0_0; }
		
		//(
		//    COLON
		//    locationName=ID
		//)?
		public Group getGroup_1() { return cGroup_1; }
		
		//COLON
		public RuleCall getCOLONTerminalRuleCall_1_0() { return cCOLONTerminalRuleCall_1_0; }
		
		//locationName=ID
		public Assignment getLocationNameAssignment_1_1() { return cLocationNameAssignment_1_1; }
		
		//ID
		public RuleCall getLocationNameIDTerminalRuleCall_1_1_0() { return cLocationNameIDTerminalRuleCall_1_1_0; }
	}
	public class InterchangerFunctionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "io.thlaegler.edifact.Edilang.InterchangerFunction");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cInterchangeAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cInterchangeIDTerminalRuleCall_0_0 = (RuleCall)cInterchangeAssignment_0.eContents().get(0);
		private final Group cGroup_1 = (Group)cGroup.eContents().get(1);
		private final RuleCall cCOLONTerminalRuleCall_1_0 = (RuleCall)cGroup_1.eContents().get(0);
		private final Assignment cInterchange2Assignment_1_1 = (Assignment)cGroup_1.eContents().get(1);
		private final RuleCall cInterchange2IDTerminalRuleCall_1_1_0 = (RuleCall)cInterchange2Assignment_1_1.eContents().get(0);
		
		//InterchangerFunction:
		//    interchange=ID
		//    (
		//        COLON
		//        interchange2=ID
		//    )?
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//interchange=ID
		//(
		//    COLON
		//    interchange2=ID
		//)?
		public Group getGroup() { return cGroup; }
		
		//interchange=ID
		public Assignment getInterchangeAssignment_0() { return cInterchangeAssignment_0; }
		
		//ID
		public RuleCall getInterchangeIDTerminalRuleCall_0_0() { return cInterchangeIDTerminalRuleCall_0_0; }
		
		//(
		//    COLON
		//    interchange2=ID
		//)?
		public Group getGroup_1() { return cGroup_1; }
		
		//COLON
		public RuleCall getCOLONTerminalRuleCall_1_0() { return cCOLONTerminalRuleCall_1_0; }
		
		//interchange2=ID
		public Assignment getInterchange2Assignment_1_1() { return cInterchange2Assignment_1_1; }
		
		//ID
		public RuleCall getInterchange2IDTerminalRuleCall_1_1_0() { return cInterchange2IDTerminalRuleCall_1_1_0; }
	}
	public class DateOnlyFunctionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "io.thlaegler.edifact.Edilang.DateOnlyFunction");
		private final Assignment cDate6Assignment = (Assignment)rule.eContents().get(1);
		private final RuleCall cDate6IDTerminalRuleCall_0 = (RuleCall)cDate6Assignment.eContents().get(0);
		
		//DateOnlyFunction:
		//    date6=ID
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//date6=ID
		public Assignment getDate6Assignment() { return cDate6Assignment; }
		
		//ID
		public RuleCall getDate6IDTerminalRuleCall_0() { return cDate6IDTerminalRuleCall_0; }
	}
	public class DateAndTimeFunctionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "io.thlaegler.edifact.Edilang.DateAndTimeFunction");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cDate6Assignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cDate6IDTerminalRuleCall_0_0 = (RuleCall)cDate6Assignment_0.eContents().get(0);
		private final RuleCall cCOLONTerminalRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		private final Assignment cTime4Assignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cTime4IDTerminalRuleCall_2_0 = (RuleCall)cTime4Assignment_2.eContents().get(0);
		
		//DateAndTimeFunction:
		//    date6=ID
		//    COLON
		//    time4=ID
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//date6=ID
		//COLON
		//time4=ID
		public Group getGroup() { return cGroup; }
		
		//date6=ID
		public Assignment getDate6Assignment_0() { return cDate6Assignment_0; }
		
		//ID
		public RuleCall getDate6IDTerminalRuleCall_0_0() { return cDate6IDTerminalRuleCall_0_0; }
		
		//COLON
		public RuleCall getCOLONTerminalRuleCall_1() { return cCOLONTerminalRuleCall_1; }
		
		//time4=ID
		public Assignment getTime4Assignment_2() { return cTime4Assignment_2; }
		
		//ID
		public RuleCall getTime4IDTerminalRuleCall_2_0() { return cTime4IDTerminalRuleCall_2_0; }
	}
	public class DateTimePeriodElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "io.thlaegler.edifact.Edilang.DateTimePeriod");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cDateTimePeriodFunctionCodeQualifierAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cDateTimePeriodFunctionCodeQualifierIDTerminalRuleCall_0_0 = (RuleCall)cDateTimePeriodFunctionCodeQualifierAssignment_0.eContents().get(0);
		private final Group cGroup_1 = (Group)cGroup.eContents().get(1);
		private final RuleCall cCOLONTerminalRuleCall_1_0 = (RuleCall)cGroup_1.eContents().get(0);
		private final Assignment cDateTimePeriodValueAssignment_1_1 = (Assignment)cGroup_1.eContents().get(1);
		private final RuleCall cDateTimePeriodValueIDTerminalRuleCall_1_1_0 = (RuleCall)cDateTimePeriodValueAssignment_1_1.eContents().get(0);
		private final Group cGroup_1_2 = (Group)cGroup_1.eContents().get(2);
		private final RuleCall cCOLONTerminalRuleCall_1_2_0 = (RuleCall)cGroup_1_2.eContents().get(0);
		private final Assignment cDateTimePeriodFormatCodeAssignment_1_2_1 = (Assignment)cGroup_1_2.eContents().get(1);
		private final RuleCall cDateTimePeriodFormatCodeIDTerminalRuleCall_1_2_1_0 = (RuleCall)cDateTimePeriodFormatCodeAssignment_1_2_1.eContents().get(0);
		
		//DateTimePeriod:
		//    dateTimePeriodFunctionCodeQualifier=ID
		//    (
		//        COLON
		//        dateTimePeriodValue=ID
		//        (
		//            COLON
		//            dateTimePeriodFormatCode=ID
		//        )?
		//    )?
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//dateTimePeriodFunctionCodeQualifier=ID
		//(
		//    COLON
		//    dateTimePeriodValue=ID
		//    (
		//        COLON
		//        dateTimePeriodFormatCode=ID
		//    )?
		//)?
		public Group getGroup() { return cGroup; }
		
		//dateTimePeriodFunctionCodeQualifier=ID
		public Assignment getDateTimePeriodFunctionCodeQualifierAssignment_0() { return cDateTimePeriodFunctionCodeQualifierAssignment_0; }
		
		//ID
		public RuleCall getDateTimePeriodFunctionCodeQualifierIDTerminalRuleCall_0_0() { return cDateTimePeriodFunctionCodeQualifierIDTerminalRuleCall_0_0; }
		
		//(
		//    COLON
		//    dateTimePeriodValue=ID
		//    (
		//        COLON
		//        dateTimePeriodFormatCode=ID
		//    )?
		//)?
		public Group getGroup_1() { return cGroup_1; }
		
		//COLON
		public RuleCall getCOLONTerminalRuleCall_1_0() { return cCOLONTerminalRuleCall_1_0; }
		
		//dateTimePeriodValue=ID
		public Assignment getDateTimePeriodValueAssignment_1_1() { return cDateTimePeriodValueAssignment_1_1; }
		
		//ID
		public RuleCall getDateTimePeriodValueIDTerminalRuleCall_1_1_0() { return cDateTimePeriodValueIDTerminalRuleCall_1_1_0; }
		
		//(
		//    COLON
		//    dateTimePeriodFormatCode=ID
		//)?
		public Group getGroup_1_2() { return cGroup_1_2; }
		
		//COLON
		public RuleCall getCOLONTerminalRuleCall_1_2_0() { return cCOLONTerminalRuleCall_1_2_0; }
		
		//dateTimePeriodFormatCode=ID
		public Assignment getDateTimePeriodFormatCodeAssignment_1_2_1() { return cDateTimePeriodFormatCodeAssignment_1_2_1; }
		
		//ID
		public RuleCall getDateTimePeriodFormatCodeIDTerminalRuleCall_1_2_1_0() { return cDateTimePeriodFormatCodeIDTerminalRuleCall_1_2_1_0; }
	}
	
	
	private final EdiModelElements pEdiModel;
	private final AbstractEdiSegmentElements pAbstractEdiSegment;
	private final UNASegmentElements pUNASegment;
	private final UNBSegmentElements pUNBSegment;
	private final UNHSegmentElements pUNHSegment;
	private final ADRSegmentElements pADRSegment;
	private final AGRSegmentElements pAGRSegment;
	private final AJTSegmentElements pAJTSegment;
	private final ALCSegmentElements pALCSegment;
	private final ALISegmentElements pALISegment;
	private final APPSegmentElements pAPPSegment;
	private final APRSegmentElements pAPRSegment;
	private final ARDSegmentElements pARDSegment;
	private final ARRSegmentElements pARRSegment;
	private final ASISegmentElements pASISegment;
	private final ATTSegmentElements pATTSegment;
	private final AUTSegmentElements pAUTSegment;
	private final BASSegmentElements pBASSegment;
	private final BIISegmentElements pBIISegment;
	private final BUSSegmentElements pBUSSegment;
	private final CAVSegmentElements pCAVSegment;
	private final CCDSegmentElements pCCDSegment;
	private final CCISegmentElements pCCISegment;
	private final CDISegmentElements pCDISegment;
	private final CDSSegmentElements pCDSSegment;
	private final CDVSegmentElements pCDVSegment;
	private final CEDSegmentElements pCEDSegment;
	private final CINSegmentElements pCINSegment;
	private final CLASegmentElements pCLASegment;
	private final CLISegmentElements pCLISegment;
	private final CMPSegmentElements pCMPSegment;
	private final CNISegmentElements pCNISegment;
	private final CODSegmentElements pCODSegment;
	private final COMSegmentElements pCOMSegment;
	private final COTSegmentElements pCOTSegment;
	private final CPISegmentElements pCPISegment;
	private final CPSSegmentElements pCPSSegment;
	private final CPTSegmentElements pCPTSegment;
	private final CSTSegmentElements pCSTSegment;
	private final DAMSegmentElements pDAMSegment;
	private final DFNSegmentElements pDFNSegment;
	private final DGSSegmentElements pDGSSegment;
	private final DIISegmentElements pDIISegment;
	private final DIMSegmentElements pDIMSegment;
	private final DLISegmentElements pDLISegment;
	private final DLMSegmentElements pDLMSegment;
	private final DMSSegmentElements pDMSSegment;
	private final DOCSegmentElements pDOCSegment;
	private final DRDSegmentElements pDRDSegment;
	private final DSGSegmentElements pDSGSegment;
	private final DSISegmentElements pDSISegment;
	private final EDTSegmentElements pEDTSegment;
	private final EFISegmentElements pEFISegment;
	private final ELMSegmentElements pELMSegment;
	private final ELUSegmentElements pELUSegment;
	private final ELVSegmentElements pELVSegment;
	private final EMPSegmentElements pEMPSegment;
	private final EQASegmentElements pEQASegment;
	private final EQDSegmentElements pEQDSegment;
	private final EQNSegmentElements pEQNSegment;
	private final ERPSegmentElements pERPSegment;
	private final EVESegmentElements pEVESegment;
	private final EVTSegmentElements pEVTSegment;
	private final FCASegmentElements pFCASegment;
	private final FIISegmentElements pFIISegment;
	private final FNSSegmentElements pFNSSegment;
	private final FNTSegmentElements pFNTSegment;
	private final FORSegmentElements pFORSegment;
	private final FSQSegmentElements pFSQSegment;
	private final GDSSegmentElements pGDSSegment;
	private final GEISegmentElements pGEISegment;
	private final GIDSegmentElements pGIDSegment;
	private final GINSegmentElements pGINSegment;
	private final GIRSegmentElements pGIRSegment;
	private final GISSegmentElements pGISSegment;
	private final GORSegmentElements pGORSegment;
	private final GRUSegmentElements pGRUSegment;
	private final HANSegmentElements pHANSegment;
	private final HYNSegmentElements pHYNSegment;
	private final ICDSegmentElements pICDSegment;
	private final IDESegmentElements pIDESegment;
	private final IFDSegmentElements pIFDSegment;
	private final IHCSegmentElements pIHCSegment;
	private final IMDSegmentElements pIMDSegment;
	private final INDSegmentElements pINDSegment;
	private final INPSegmentElements pINPSegment;
	private final INVSegmentElements pINVSegment;
	private final IRQSegmentElements pIRQSegment;
	private final LANSegmentElements pLANSegment;
	private final LOCSegmentElements pLOCSegment;
	private final MEASegmentElements pMEASegment;
	private final MEMSegmentElements pMEMSegment;
	private final MKSSegmentElements pMKSSegment;
	private final NATSegmentElements pNATSegment;
	private final PACSegmentElements pPACSegment;
	private final PAISegmentElements pPAISegment;
	private final PASSegmentElements pPASSegment;
	private final PCCSegmentElements pPCCSegment;
	private final PCDSegmentElements pPCDSegment;
	private final PERSegmentElements pPERSegment;
	private final PGISegmentElements pPGISegment;
	private final PIASegmentElements pPIASegment;
	private final PNASegmentElements pPNASegment;
	private final PRCSegmentElements pPRCSegment;
	private final PRVSegmentElements pPRVSegment;
	private final PSDSegmentElements pPSDSegment;
	private final PTYSegmentElements pPTYSegment;
	private final PYTSegmentElements pPYTSegment;
	private final QRSSegmentElements pQRSSegment;
	private final QUASegmentElements pQUASegment;
	private final QVRSegmentElements pQVRSegment;
	private final RCSSegmentElements pRCSSegment;
	private final RELSegmentElements pRELSegment;
	private final RJLSegmentElements pRJLSegment;
	private final RNGSegmentElements pRNGSegment;
	private final RODSegmentElements pRODSegment;
	private final RSLSegmentElements pRSLSegment;
	private final RTESegmentElements pRTESegment;
	private final SALSegmentElements pSALSegment;
	private final SCCSegmentElements pSCCSegment;
	private final SCDSegmentElements pSCDSegment;
	private final SEGSegmentElements pSEGSegment;
	private final SELSegmentElements pSELSegment;
	private final SEQSegmentElements pSEQSegment;
	private final SFISegmentElements pSFISegment;
	private final SGPSegmentElements pSGPSegment;
	private final SGUSegmentElements pSGUSegment;
	private final SPRSegmentElements pSPRSegment;
	private final SPSSegmentElements pSPSSegment;
	private final STASegmentElements pSTASegment;
	private final STCSegmentElements pSTCSegment;
	private final STGSegmentElements pSTGSegment;
	private final STSSegmentElements pSTSSegment;
	private final TCCSegmentElements pTCCSegment;
	private final TDTSegmentElements pTDTSegment;
	private final TEMSegmentElements pTEMSegment;
	private final TMDSegmentElements pTMDSegment;
	private final TMPSegmentElements pTMPSegment;
	private final TODSegmentElements pTODSegment;
	private final TPLSegmentElements pTPLSegment;
	private final TRUSegmentElements pTRUSegment;
	private final TSRSegmentElements pTSRSegment;
	private final VLISegmentElements pVLISegment;
	private final MSGSegmentElements pMSGSegment;
	private final ORGSegmentElements pORGSegment;
	private final POCSegmentElements pPOCSegment;
	private final ODISegmentElements pODISegment;
	private final UCISegmentElements pUCISegment;
	private final PDISegmentElements pPDISegment;
	private final TVLSegmentElements pTVLSegment;
	private final RPISegmentElements pRPISegment;
	private final MOASegmentElements pMOASegment;
	private final LINSegmentElements pLINSegment;
	private final PRISegmentElements pPRISegment;
	private final QTYSegmentElements pQTYSegment;
	private final CUXSegmentElements pCUXSegment;
	private final TAXSegmentElements pTAXSegment;
	private final RFFSegmentElements pRFFSegment;
	private final NADSegmentElements pNADSegment;
	private final DTMSegmentElements pDTMSegment;
	private final BGMSegmentElements pBGMSegment;
	private final PATSegmentElements pPATSegment;
	private final FTXSegmentElements pFTXSegment;
	private final ERCSegmentElements pERCSegment;
	private final CNTSegmentElements pCNTSegment;
	private final CTASegmentElements pCTASegment;
	private final PCISegmentElements pPCISegment;
	private final UNSSegmentElements pUNSSegment;
	private final UNTSegmentElements pUNTSegment;
	private final UNZSegmentElements pUNZSegment;
	private final AbstractEdiFunctionElements pAbstractEdiFunction;
	private final UNBHeaderElements pUNBHeader;
	private final PriceInformationElements pPriceInformation;
	private final MessageBodyFunctionElements pMessageBodyFunction;
	private final MessageIndentifierElements pMessageIndentifier;
	private final RelationshipElements pRelationship;
	private final ProductFunctionElements pProductFunction;
	private final ItemNumberIdentificationElements pItemNumberIdentification;
	private final SublineInformationElements pSublineInformation;
	private final QuantityDetailElements pQuantityDetail;
	private final StreetElements pStreet;
	private final CountrySubEntityDetailElements pCountrySubEntityDetail;
	private final PartyNameElements pPartyName;
	private final NameAndAddressElements pNameAndAddress;
	private final PartyIdentificationDetailElements pPartyIdentificationDetail;
	private final ApplicationErrorDetailElements pApplicationErrorDetail;
	private final SystemDetailFunctionElements pSystemDetailFunction;
	private final TaxDetailElements pTaxDetail;
	private final TaxAccountDetailElements pTaxAccountDetail;
	private final TaxTypeElements pTaxType;
	private final CurrencyDetailElements pCurrencyDetail;
	private final DocumentMessageIdentificationElements pDocumentMessageIdentification;
	private final DocumentMessageElements pDocumentMessage;
	private final OriginatorFunctionElements pOriginatorFunction;
	private final OriginatorIdentificationFunctionElements pOriginatorIdentificationFunction;
	private final LocationFunctionElements pLocationFunction;
	private final InterchangerFunctionElements pInterchangerFunction;
	private final DateOnlyFunctionElements pDateOnlyFunction;
	private final DateAndTimeFunctionElements pDateAndTimeFunction;
	private final DateTimePeriodElements pDateTimePeriod;
	private final TerminalRule tQUOTE_AND_NL;
	private final TerminalRule tPLUS;
	private final TerminalRule tCOLON;
	private final TerminalRule tINT;
	private final TerminalRule tID;
	private final TerminalRule tSTRING;
	private final TerminalRule tWS;
	
	private final Grammar grammar;
	
	private final TerminalsGrammarAccess gaTerminals;

	@Inject
	public EdilangGrammarAccess(GrammarProvider grammarProvider,
			TerminalsGrammarAccess gaTerminals) {
		this.grammar = internalFindGrammar(grammarProvider);
		this.gaTerminals = gaTerminals;
		this.pEdiModel = new EdiModelElements();
		this.pAbstractEdiSegment = new AbstractEdiSegmentElements();
		this.pUNASegment = new UNASegmentElements();
		this.pUNBSegment = new UNBSegmentElements();
		this.pUNHSegment = new UNHSegmentElements();
		this.pADRSegment = new ADRSegmentElements();
		this.pAGRSegment = new AGRSegmentElements();
		this.pAJTSegment = new AJTSegmentElements();
		this.pALCSegment = new ALCSegmentElements();
		this.pALISegment = new ALISegmentElements();
		this.pAPPSegment = new APPSegmentElements();
		this.pAPRSegment = new APRSegmentElements();
		this.pARDSegment = new ARDSegmentElements();
		this.pARRSegment = new ARRSegmentElements();
		this.pASISegment = new ASISegmentElements();
		this.pATTSegment = new ATTSegmentElements();
		this.pAUTSegment = new AUTSegmentElements();
		this.pBASSegment = new BASSegmentElements();
		this.pBIISegment = new BIISegmentElements();
		this.pBUSSegment = new BUSSegmentElements();
		this.pCAVSegment = new CAVSegmentElements();
		this.pCCDSegment = new CCDSegmentElements();
		this.pCCISegment = new CCISegmentElements();
		this.pCDISegment = new CDISegmentElements();
		this.pCDSSegment = new CDSSegmentElements();
		this.pCDVSegment = new CDVSegmentElements();
		this.pCEDSegment = new CEDSegmentElements();
		this.pCINSegment = new CINSegmentElements();
		this.pCLASegment = new CLASegmentElements();
		this.pCLISegment = new CLISegmentElements();
		this.pCMPSegment = new CMPSegmentElements();
		this.pCNISegment = new CNISegmentElements();
		this.pCODSegment = new CODSegmentElements();
		this.pCOMSegment = new COMSegmentElements();
		this.pCOTSegment = new COTSegmentElements();
		this.pCPISegment = new CPISegmentElements();
		this.pCPSSegment = new CPSSegmentElements();
		this.pCPTSegment = new CPTSegmentElements();
		this.pCSTSegment = new CSTSegmentElements();
		this.pDAMSegment = new DAMSegmentElements();
		this.pDFNSegment = new DFNSegmentElements();
		this.pDGSSegment = new DGSSegmentElements();
		this.pDIISegment = new DIISegmentElements();
		this.pDIMSegment = new DIMSegmentElements();
		this.pDLISegment = new DLISegmentElements();
		this.pDLMSegment = new DLMSegmentElements();
		this.pDMSSegment = new DMSSegmentElements();
		this.pDOCSegment = new DOCSegmentElements();
		this.pDRDSegment = new DRDSegmentElements();
		this.pDSGSegment = new DSGSegmentElements();
		this.pDSISegment = new DSISegmentElements();
		this.pEDTSegment = new EDTSegmentElements();
		this.pEFISegment = new EFISegmentElements();
		this.pELMSegment = new ELMSegmentElements();
		this.pELUSegment = new ELUSegmentElements();
		this.pELVSegment = new ELVSegmentElements();
		this.pEMPSegment = new EMPSegmentElements();
		this.pEQASegment = new EQASegmentElements();
		this.pEQDSegment = new EQDSegmentElements();
		this.pEQNSegment = new EQNSegmentElements();
		this.pERPSegment = new ERPSegmentElements();
		this.pEVESegment = new EVESegmentElements();
		this.pEVTSegment = new EVTSegmentElements();
		this.pFCASegment = new FCASegmentElements();
		this.pFIISegment = new FIISegmentElements();
		this.pFNSSegment = new FNSSegmentElements();
		this.pFNTSegment = new FNTSegmentElements();
		this.pFORSegment = new FORSegmentElements();
		this.pFSQSegment = new FSQSegmentElements();
		this.pGDSSegment = new GDSSegmentElements();
		this.pGEISegment = new GEISegmentElements();
		this.pGIDSegment = new GIDSegmentElements();
		this.pGINSegment = new GINSegmentElements();
		this.pGIRSegment = new GIRSegmentElements();
		this.pGISSegment = new GISSegmentElements();
		this.pGORSegment = new GORSegmentElements();
		this.pGRUSegment = new GRUSegmentElements();
		this.pHANSegment = new HANSegmentElements();
		this.pHYNSegment = new HYNSegmentElements();
		this.pICDSegment = new ICDSegmentElements();
		this.pIDESegment = new IDESegmentElements();
		this.pIFDSegment = new IFDSegmentElements();
		this.pIHCSegment = new IHCSegmentElements();
		this.pIMDSegment = new IMDSegmentElements();
		this.pINDSegment = new INDSegmentElements();
		this.pINPSegment = new INPSegmentElements();
		this.pINVSegment = new INVSegmentElements();
		this.pIRQSegment = new IRQSegmentElements();
		this.pLANSegment = new LANSegmentElements();
		this.pLOCSegment = new LOCSegmentElements();
		this.pMEASegment = new MEASegmentElements();
		this.pMEMSegment = new MEMSegmentElements();
		this.pMKSSegment = new MKSSegmentElements();
		this.pNATSegment = new NATSegmentElements();
		this.pPACSegment = new PACSegmentElements();
		this.pPAISegment = new PAISegmentElements();
		this.pPASSegment = new PASSegmentElements();
		this.pPCCSegment = new PCCSegmentElements();
		this.pPCDSegment = new PCDSegmentElements();
		this.pPERSegment = new PERSegmentElements();
		this.pPGISegment = new PGISegmentElements();
		this.pPIASegment = new PIASegmentElements();
		this.pPNASegment = new PNASegmentElements();
		this.pPRCSegment = new PRCSegmentElements();
		this.pPRVSegment = new PRVSegmentElements();
		this.pPSDSegment = new PSDSegmentElements();
		this.pPTYSegment = new PTYSegmentElements();
		this.pPYTSegment = new PYTSegmentElements();
		this.pQRSSegment = new QRSSegmentElements();
		this.pQUASegment = new QUASegmentElements();
		this.pQVRSegment = new QVRSegmentElements();
		this.pRCSSegment = new RCSSegmentElements();
		this.pRELSegment = new RELSegmentElements();
		this.pRJLSegment = new RJLSegmentElements();
		this.pRNGSegment = new RNGSegmentElements();
		this.pRODSegment = new RODSegmentElements();
		this.pRSLSegment = new RSLSegmentElements();
		this.pRTESegment = new RTESegmentElements();
		this.pSALSegment = new SALSegmentElements();
		this.pSCCSegment = new SCCSegmentElements();
		this.pSCDSegment = new SCDSegmentElements();
		this.pSEGSegment = new SEGSegmentElements();
		this.pSELSegment = new SELSegmentElements();
		this.pSEQSegment = new SEQSegmentElements();
		this.pSFISegment = new SFISegmentElements();
		this.pSGPSegment = new SGPSegmentElements();
		this.pSGUSegment = new SGUSegmentElements();
		this.pSPRSegment = new SPRSegmentElements();
		this.pSPSSegment = new SPSSegmentElements();
		this.pSTASegment = new STASegmentElements();
		this.pSTCSegment = new STCSegmentElements();
		this.pSTGSegment = new STGSegmentElements();
		this.pSTSSegment = new STSSegmentElements();
		this.pTCCSegment = new TCCSegmentElements();
		this.pTDTSegment = new TDTSegmentElements();
		this.pTEMSegment = new TEMSegmentElements();
		this.pTMDSegment = new TMDSegmentElements();
		this.pTMPSegment = new TMPSegmentElements();
		this.pTODSegment = new TODSegmentElements();
		this.pTPLSegment = new TPLSegmentElements();
		this.pTRUSegment = new TRUSegmentElements();
		this.pTSRSegment = new TSRSegmentElements();
		this.pVLISegment = new VLISegmentElements();
		this.pMSGSegment = new MSGSegmentElements();
		this.pORGSegment = new ORGSegmentElements();
		this.pPOCSegment = new POCSegmentElements();
		this.pODISegment = new ODISegmentElements();
		this.pUCISegment = new UCISegmentElements();
		this.pPDISegment = new PDISegmentElements();
		this.pTVLSegment = new TVLSegmentElements();
		this.pRPISegment = new RPISegmentElements();
		this.pMOASegment = new MOASegmentElements();
		this.pLINSegment = new LINSegmentElements();
		this.pPRISegment = new PRISegmentElements();
		this.pQTYSegment = new QTYSegmentElements();
		this.pCUXSegment = new CUXSegmentElements();
		this.pTAXSegment = new TAXSegmentElements();
		this.pRFFSegment = new RFFSegmentElements();
		this.pNADSegment = new NADSegmentElements();
		this.pDTMSegment = new DTMSegmentElements();
		this.pBGMSegment = new BGMSegmentElements();
		this.pPATSegment = new PATSegmentElements();
		this.pFTXSegment = new FTXSegmentElements();
		this.pERCSegment = new ERCSegmentElements();
		this.pCNTSegment = new CNTSegmentElements();
		this.pCTASegment = new CTASegmentElements();
		this.pPCISegment = new PCISegmentElements();
		this.pUNSSegment = new UNSSegmentElements();
		this.pUNTSegment = new UNTSegmentElements();
		this.pUNZSegment = new UNZSegmentElements();
		this.pAbstractEdiFunction = new AbstractEdiFunctionElements();
		this.pUNBHeader = new UNBHeaderElements();
		this.pPriceInformation = new PriceInformationElements();
		this.pMessageBodyFunction = new MessageBodyFunctionElements();
		this.pMessageIndentifier = new MessageIndentifierElements();
		this.pRelationship = new RelationshipElements();
		this.pProductFunction = new ProductFunctionElements();
		this.pItemNumberIdentification = new ItemNumberIdentificationElements();
		this.pSublineInformation = new SublineInformationElements();
		this.pQuantityDetail = new QuantityDetailElements();
		this.pStreet = new StreetElements();
		this.pCountrySubEntityDetail = new CountrySubEntityDetailElements();
		this.pPartyName = new PartyNameElements();
		this.pNameAndAddress = new NameAndAddressElements();
		this.pPartyIdentificationDetail = new PartyIdentificationDetailElements();
		this.pApplicationErrorDetail = new ApplicationErrorDetailElements();
		this.pSystemDetailFunction = new SystemDetailFunctionElements();
		this.pTaxDetail = new TaxDetailElements();
		this.pTaxAccountDetail = new TaxAccountDetailElements();
		this.pTaxType = new TaxTypeElements();
		this.pCurrencyDetail = new CurrencyDetailElements();
		this.pDocumentMessageIdentification = new DocumentMessageIdentificationElements();
		this.pDocumentMessage = new DocumentMessageElements();
		this.pOriginatorFunction = new OriginatorFunctionElements();
		this.pOriginatorIdentificationFunction = new OriginatorIdentificationFunctionElements();
		this.pLocationFunction = new LocationFunctionElements();
		this.pInterchangerFunction = new InterchangerFunctionElements();
		this.pDateOnlyFunction = new DateOnlyFunctionElements();
		this.pDateAndTimeFunction = new DateAndTimeFunctionElements();
		this.pDateTimePeriod = new DateTimePeriodElements();
		this.tQUOTE_AND_NL = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "io.thlaegler.edifact.Edilang.QUOTE_AND_NL");
		this.tPLUS = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "io.thlaegler.edifact.Edilang.PLUS");
		this.tCOLON = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "io.thlaegler.edifact.Edilang.COLON");
		this.tINT = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "io.thlaegler.edifact.Edilang.INT");
		this.tID = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "io.thlaegler.edifact.Edilang.ID");
		this.tSTRING = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "io.thlaegler.edifact.Edilang.STRING");
		this.tWS = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "io.thlaegler.edifact.Edilang.WS");
	}
	
	protected Grammar internalFindGrammar(GrammarProvider grammarProvider) {
		Grammar grammar = grammarProvider.getGrammar(this);
		while (grammar != null) {
			if ("io.thlaegler.edifact.Edilang".equals(grammar.getName())) {
				return grammar;
			}
			List<Grammar> grammars = grammar.getUsedGrammars();
			if (!grammars.isEmpty()) {
				grammar = grammars.iterator().next();
			} else {
				return null;
			}
		}
		return grammar;
	}
	
	@Override
	public Grammar getGrammar() {
		return grammar;
	}
	
	
	public TerminalsGrammarAccess getTerminalsGrammarAccess() {
		return gaTerminals;
	}

	
	//EdiModel:
	//    segments+=AbstractEdiSegment*;
	public EdiModelElements getEdiModelAccess() {
		return pEdiModel;
	}
	
	public ParserRule getEdiModelRule() {
		return getEdiModelAccess().getRule();
	}
	
	//AbstractEdiSegment:
	//    UNASegment | // Header UNA
	//    UNBSegment | // Header for trailer UNZ
	//    UNHSegment | // Header for trailer UNT
	//    ADRSegment | // Address
	//    AGRSegment | // Agreement identification
	//    AJTSegment | // Adjustment details
	//    ALCSegment | // Allowance or charge
	//    ALISegment | // Additional information
	//    APPSegment | // Applicability
	//    APRSegment | // Additional price information
	//    ARDSegment | // Monetary amount function
	//    ARRSegment | // Array information
	//    ASISegment | // Array structure identification
	//    ATTSegment | // Attribute
	//    AUTSegment | // Authentication result
	//    BASSegment | // Basis
	//    BGMSegment | // Beginning of message
	//    BIISegment | // Structure identification
	//    BUSSegment | // Business function
	//    CAVSegment | // Characteristic value
	//    CCDSegment | // Credit cover details
	//    CCISegment | // Characteristic/class id
	//    CDISegment | // Physical or logical state
	//    CDSSegment | // Code set identification
	//    CDVSegment | // Code value definition
	//    CEDSegment | // Computer environment details
	//    CINSegment | // Clinical information
	//    CLASegment | // Clause identification
	//    CLISegment | // Clinical intervention
	//    CMPSegment | // Composite data element identification
	//    CNISegment | // Consignment information
	//    CNTSegment | // Control total
	//    CODSegment | // Component details
	//    COMSegment | // Communication contact
	//    COTSegment | // Contribution details
	//    CPISegment | // Charge payment instructions
	//    CPSSegment | // Consignment packing sequence
	//    CPTSegment | // Account identification
	//    CSTSegment | // Customs status of goods
	//    CTASegment | // Contact information
	//    CUXSegment | // Currencies
	//    DAMSegment | // Damage
	//    DFNSegment | // Definition function
	//    DGSSegment | // Dangerous goods
	//    DIISegment | // Directory identification
	//    DIMSegment | // Dimensions
	//    DLISegment | // Document line identification
	//    DLMSegment | // Delivery limitations
	//    DMSSegment | // Document/message summary
	//    DOCSegment | // Document/message details
	//    DRDSegment | // Data representation details
	//    DSGSegment | // Dosage administration
	//    DSISegment | // Data set identification
	//    DTMSegment | // Date/time/period
	//    EDTSegment | // Editing details
	//    EFISegment | // External file link identification
	//    ELMSegment | // Simple data element details
	//    ELUSegment | // Data element usage details
	//    ELVSegment | // Element value definition
	//    EMPSegment | // Employment details
	//    EQASegment | // Attached equipment
	//    EQDSegment | // Equipment details
	//    EQNSegment | // Number of units
	//    ERPSegment | // Error point details
	//    ERCSegment | // Application error information
	//    EVESegment | // Event
	//    EVTSegment | // Event
	//    FCASegment | // Financial charges allocation
	//    FIISegment | // Financial institution information
	//    FNSSegment | // Footnote set
	//    FNTSegment | // Footnote
	//    FORSegment | // Formula
	//    FSQSegment | // Formula sequence
	//    FTXSegment | // Free text
	//    GDSSegment | // Nature of cargo
	//    GEISegment | // Processing information
	//    GIDSegment | // Goods item details
	//    GINSegment | // Goods identity number
	//    GIRSegment | // Related identification numbers
	//    GISSegment | // General indicator
	//    GORSegment | // Governmental requirements
	//    GRUSegment | // Segment group usage details
	//    HANSegment | // Handling instructions
	//    HYNSegment | // Hierarchy information
	//    ICDSegment | // Insurance cover description
	//    IDESegment | // Identity
	//    IFDSegment | // Information detail
	//    IHCSegment | // Person characteristic
	//    IMDSegment | // Item description
	//    INDSegment | // Index details
	//    INPSegment | // Parties and instruction
	//    INVSegment | // Inventory management related details
	//    IRQSegment | // Information required
	//    LANSegment | // Language
	//    LINSegment | // Line item
	//    LOCSegment | // Place/location identification
	//    MEASegment | // Measurements
	//    MEMSegment | // Membership details
	//    MKSSegment | // Market/sales channel information
	//    MOASegment | // Monetary amount
	//    MSGSegment | // Message type identification
	//    NADSegment | // Name and address
	//    NATSegment | // Nationality
	//    ODISegment | // Origin/destination
	//    ORGSegment | // Organisation
	//    PACSegment | // Package
	//    PAISegment | // Payment instructions
	//    PASSegment | // Attendance
	//    PATSegment | // Payment terms basis
	//    PCCSegment | // Premium calculation component details
	//    PCDSegment | // Percentage details
	//    PCISegment | // Package identification
	//    PDISegment | // Person demographic information
	//    PERSegment | // Period related details
	//    PGISegment | // Product group information
	//    PIASegment | // Additional product id
	//    PNASegment | // Party identification
	//    POCSegment | // Purpose of conveyance call
	//    PRCSegment | // Process identification
	//    PRISegment | // Price details
	//    PRVSegment | // Proviso details
	//    PSDSegment | // Physical sample description
	//    PTYSegment | // Priority
	//    PYTSegment | // Payment terms
	//    QRSSegment | // Query and response
	//    QTYSegment | // Quantity
	//    QUASegment | // Qualification
	//    QVRSegment | // Quantity variances
	//    RCSSegment | // Requirements and conditions
	//    RELSegment | // Relationship
	//    RFFSegment | // Reference
	//    RJLSegment | // Accounting journal identification
	//    RNGSegment | // Range details
	//    RODSegment | // Risk object type
	//    RPISegment | // ?
	//    RSLSegment | // Result
	//    RTESegment | // Rate details
	//    SALSegment | // Remuneration type identification
	//    SCCSegment | // Scheduling conditions
	//    SCDSegment | // Structure component definition
	//    SEGSegment | // Segment identification
	//    SELSegment | // Seal number
	//    SEQSegment | // Sequence details
	//    SFISegment | // Safety information
	//    SGPSegment | // Split goods placement
	//    SGUSegment | // Segment usage details
	//    SPRSegment | // Organisation classification details
	//    SPSSegment | // Sampling parameters for summary statistics
	//    STASegment | // Statistics
	//    STCSegment | // Statistical concept
	//    STGSegment | // Stages
	//    STSSegment | // Status
	//    TAXSegment | // Duty/tax/fee details
	//    TCCSegment | // Transport charge/rate calculations
	//    TDTSegment | // Details of transport
	//    TEMSegment | // Test method
	//    TMDSegment | // Transport movement details
	//    TMPSegment | // Temperature
	//    TODSegment | // Terms of delivery or transport
	//    TPLSegment | // Transport placement
	//    TRUSegment | // Technical rules
	//    TSRSegment | // Transport service requirements
	//    TVLSegment | // Travel itinerary
	//    UCISegment | // ?
	//    VLISegment | // Value list identification
	//    UNSSegment | // Trailer UNS
	//    UNZSegment | // Trailer for header UNB
	//    UNTSegment // Trailer for header UNH
	//;
	public AbstractEdiSegmentElements getAbstractEdiSegmentAccess() {
		return pAbstractEdiSegment;
	}
	
	public ParserRule getAbstractEdiSegmentRule() {
		return getAbstractEdiSegmentAccess().getRule();
	}
	
	//UNASegment:
	//    segment="UNA"
	//    COLON
	//    PLUS
	//    ".?"
	//    lineEnd=QUOTE_AND_NL
	//;
	public UNASegmentElements getUNASegmentAccess() {
		return pUNASegment;
	}
	
	public ParserRule getUNASegmentRule() {
		return getUNASegmentAccess().getRule();
	}
	
	////UNB+IATB:1+1APPC+NZ0AV+200120:2136+039I42XXTK0001+++O'
	//UNBSegment:
	//    segment="UNB"
	//    PLUS
	//    ( header=UNBHeader )?
	//    PLUS
	//    ( interchangeSender=InterchangerFunction )?
	//    PLUS
	//    ( interchangeRecipient=InterchangerFunction )?
	//    PLUS
	//    ( dateAndTime+=DateAndTimeFunction )?
	//    PLUS
	//    ( interchangeControlSenderRef=ID )?
	//    (
	//        PLUS
	//        ( interchangeControlRecipientRef=ID )?
	//        (
	//            PLUS
	//            ( fse=ID )?
	//            (
	//                PLUS
	//                ( assiciationCode=ID )?
	//            )?
	//        )?
	//    )?
	//    lineEnd=QUOTE_AND_NL
	//;
	public UNBSegmentElements getUNBSegmentAccess() {
		return pUNBSegment;
	}
	
	public ParserRule getUNBSegmentRule() {
		return getUNBSegmentAccess().getRule();
	}
	
	////UNH+1+PAOREQ:96:2:IA+00012432090782'
	//UNHSegment:
	//    segment="UNH"
	//    PLUS
	//    messageReferenceNumber=ID
	//    PLUS
	//    message=MessageBodyFunction
	//    (
	//        PLUS
	//        commonAccessReference=ID
	//    )?
	//    lineEnd=QUOTE_AND_NL
	//;
	public UNHSegmentElements getUNHSegmentAccess() {
		return pUNHSegment;
	}
	
	public ParserRule getUNHSegmentRule() {
		return getUNHSegmentAccess().getRule();
	}
	
	////TODO
	//ADRSegment:
	//    segment="ADR"
	//    PLUS
	//    todo=ID
	//    lineEnd=QUOTE_AND_NL
	//;
	public ADRSegmentElements getADRSegmentAccess() {
		return pADRSegment;
	}
	
	public ParserRule getADRSegmentRule() {
		return getADRSegmentAccess().getRule();
	}
	
	////TODO
	//AGRSegment:
	//    segment="AGR"
	//    PLUS
	//    todo=ID
	//    lineEnd=QUOTE_AND_NL
	//;
	public AGRSegmentElements getAGRSegmentAccess() {
		return pAGRSegment;
	}
	
	public ParserRule getAGRSegmentRule() {
		return getAGRSegmentAccess().getRule();
	}
	
	////TODO
	//AJTSegment:
	//    segment="AJT"
	//    PLUS
	//    todo=ID
	//    lineEnd=QUOTE_AND_NL
	//;
	public AJTSegmentElements getAJTSegmentAccess() {
		return pAJTSegment;
	}
	
	public ParserRule getAJTSegmentRule() {
		return getAJTSegmentAccess().getRule();
	}
	
	////TODO
	//ALCSegment:
	//    segment="ALC"
	//    PLUS
	//    todo=ID
	//    lineEnd=QUOTE_AND_NL
	//;
	public ALCSegmentElements getALCSegmentAccess() {
		return pALCSegment;
	}
	
	public ParserRule getALCSegmentRule() {
		return getALCSegmentAccess().getRule();
	}
	
	////TODO
	//ALISegment:
	//    segment="ALI"
	//    PLUS
	//    todo=ID
	//    lineEnd=QUOTE_AND_NL
	//;
	public ALISegmentElements getALISegmentAccess() {
		return pALISegment;
	}
	
	public ParserRule getALISegmentRule() {
		return getALISegmentAccess().getRule();
	}
	
	////TODO
	//APPSegment:
	//    segment="APP"
	//    PLUS
	//    todo=ID
	//    lineEnd=QUOTE_AND_NL
	//;
	public APPSegmentElements getAPPSegmentAccess() {
		return pAPPSegment;
	}
	
	public ParserRule getAPPSegmentRule() {
		return getAPPSegmentAccess().getRule();
	}
	
	////TODO
	//APRSegment:
	//    segment="APR"
	//    PLUS
	//    todo=ID
	//    lineEnd=QUOTE_AND_NL
	//;
	public APRSegmentElements getAPRSegmentAccess() {
		return pAPRSegment;
	}
	
	public ParserRule getAPRSegmentRule() {
		return getAPRSegmentAccess().getRule();
	}
	
	////TODO
	//ARDSegment:
	//    segment="ARD"
	//    PLUS
	//    todo=ID
	//    lineEnd=QUOTE_AND_NL
	//;
	public ARDSegmentElements getARDSegmentAccess() {
		return pARDSegment;
	}
	
	public ParserRule getARDSegmentRule() {
		return getARDSegmentAccess().getRule();
	}
	
	////TODO
	//ARRSegment:
	//    segment="ARR"
	//    PLUS
	//    todo=ID
	//    lineEnd=QUOTE_AND_NL
	//;
	public ARRSegmentElements getARRSegmentAccess() {
		return pARRSegment;
	}
	
	public ParserRule getARRSegmentRule() {
		return getARRSegmentAccess().getRule();
	}
	
	////TODO
	//ASISegment:
	//    segment="ASI"
	//    PLUS
	//    todo=ID
	//    lineEnd=QUOTE_AND_NL
	//;
	public ASISegmentElements getASISegmentAccess() {
		return pASISegment;
	}
	
	public ParserRule getASISegmentRule() {
		return getASISegmentAccess().getRule();
	}
	
	////TODO
	//ATTSegment:
	//    segment="ATT"
	//    PLUS
	//    todo=ID
	//    lineEnd=QUOTE_AND_NL
	//;
	public ATTSegmentElements getATTSegmentAccess() {
		return pATTSegment;
	}
	
	public ParserRule getATTSegmentRule() {
		return getATTSegmentAccess().getRule();
	}
	
	////TODO
	//AUTSegment:
	//    segment="AUT"
	//    PLUS
	//    todo=ID
	//    lineEnd=QUOTE_AND_NL
	//;
	public AUTSegmentElements getAUTSegmentAccess() {
		return pAUTSegment;
	}
	
	public ParserRule getAUTSegmentRule() {
		return getAUTSegmentAccess().getRule();
	}
	
	////TODO
	//BASSegment:
	//    segment="BAS"
	//    PLUS
	//    todo=ID
	//    lineEnd=QUOTE_AND_NL
	//;
	public BASSegmentElements getBASSegmentAccess() {
		return pBASSegment;
	}
	
	public ParserRule getBASSegmentRule() {
		return getBASSegmentAccess().getRule();
	}
	
	////TODO
	//BIISegment:
	//    segment="BII"
	//    PLUS
	//    todo=ID
	//    lineEnd=QUOTE_AND_NL
	//;
	public BIISegmentElements getBIISegmentAccess() {
		return pBIISegment;
	}
	
	public ParserRule getBIISegmentRule() {
		return getBIISegmentAccess().getRule();
	}
	
	////TODO
	//BUSSegment:
	//    segment="BUS"
	//    PLUS
	//    todo=ID
	//    lineEnd=QUOTE_AND_NL
	//;
	public BUSSegmentElements getBUSSegmentAccess() {
		return pBUSSegment;
	}
	
	public ParserRule getBUSSegmentRule() {
		return getBUSSegmentAccess().getRule();
	}
	
	////TODO
	//CAVSegment:
	//    segment="CAV"
	//    PLUS
	//    todo=ID
	//    lineEnd=QUOTE_AND_NL
	//;
	public CAVSegmentElements getCAVSegmentAccess() {
		return pCAVSegment;
	}
	
	public ParserRule getCAVSegmentRule() {
		return getCAVSegmentAccess().getRule();
	}
	
	////TODO
	//CCDSegment:
	//    segment="CCD"
	//    PLUS
	//    todo=ID
	//    lineEnd=QUOTE_AND_NL
	//;
	public CCDSegmentElements getCCDSegmentAccess() {
		return pCCDSegment;
	}
	
	public ParserRule getCCDSegmentRule() {
		return getCCDSegmentAccess().getRule();
	}
	
	////TODO
	//CCISegment:
	//    segment="CCI"
	//    PLUS
	//    todo=ID
	//    lineEnd=QUOTE_AND_NL
	//;
	public CCISegmentElements getCCISegmentAccess() {
		return pCCISegment;
	}
	
	public ParserRule getCCISegmentRule() {
		return getCCISegmentAccess().getRule();
	}
	
	////TODO
	//CDISegment:
	//    segment="CDI"
	//    PLUS
	//    todo=ID
	//    lineEnd=QUOTE_AND_NL
	//;
	public CDISegmentElements getCDISegmentAccess() {
		return pCDISegment;
	}
	
	public ParserRule getCDISegmentRule() {
		return getCDISegmentAccess().getRule();
	}
	
	////TODO
	//CDSSegment:
	//    segment="CDS"
	//    PLUS
	//    todo=ID
	//    lineEnd=QUOTE_AND_NL
	//;
	public CDSSegmentElements getCDSSegmentAccess() {
		return pCDSSegment;
	}
	
	public ParserRule getCDSSegmentRule() {
		return getCDSSegmentAccess().getRule();
	}
	
	////TODO
	//CDVSegment:
	//    segment="CDV"
	//    PLUS
	//    todo=ID
	//    lineEnd=QUOTE_AND_NL
	//;
	public CDVSegmentElements getCDVSegmentAccess() {
		return pCDVSegment;
	}
	
	public ParserRule getCDVSegmentRule() {
		return getCDVSegmentAccess().getRule();
	}
	
	////TODO
	//CEDSegment:
	//    segment="CED"
	//    PLUS
	//    todo=ID
	//    lineEnd=QUOTE_AND_NL
	//;
	public CEDSegmentElements getCEDSegmentAccess() {
		return pCEDSegment;
	}
	
	public ParserRule getCEDSegmentRule() {
		return getCEDSegmentAccess().getRule();
	}
	
	////TODO
	//CINSegment:
	//    segment="CIN"
	//    PLUS
	//    todo=ID
	//    lineEnd=QUOTE_AND_NL
	//;
	public CINSegmentElements getCINSegmentAccess() {
		return pCINSegment;
	}
	
	public ParserRule getCINSegmentRule() {
		return getCINSegmentAccess().getRule();
	}
	
	//CLASegment:
	//    segment="CLA"
	//    PLUS
	//    todo=ID
	//    lineEnd=QUOTE_AND_NL
	//;
	public CLASegmentElements getCLASegmentAccess() {
		return pCLASegment;
	}
	
	public ParserRule getCLASegmentRule() {
		return getCLASegmentAccess().getRule();
	}
	
	////TODO
	//CLISegment:
	//    segment="CLI"
	//    PLUS
	//    todo=ID
	//    lineEnd=QUOTE_AND_NL
	//;
	public CLISegmentElements getCLISegmentAccess() {
		return pCLISegment;
	}
	
	public ParserRule getCLISegmentRule() {
		return getCLISegmentAccess().getRule();
	}
	
	////TODO
	//CMPSegment:
	//    segment="CMP"
	//    PLUS
	//    todo=ID
	//    lineEnd=QUOTE_AND_NL
	//;
	public CMPSegmentElements getCMPSegmentAccess() {
		return pCMPSegment;
	}
	
	public ParserRule getCMPSegmentRule() {
		return getCMPSegmentAccess().getRule();
	}
	
	////TODO
	//CNISegment:
	//    segment="CNI"
	//    PLUS
	//    todo=ID
	//    lineEnd=QUOTE_AND_NL
	//;
	public CNISegmentElements getCNISegmentAccess() {
		return pCNISegment;
	}
	
	public ParserRule getCNISegmentRule() {
		return getCNISegmentAccess().getRule();
	}
	
	////TODO
	//CODSegment:
	//    segment="COD"
	//    PLUS
	//    todo=ID
	//    lineEnd=QUOTE_AND_NL
	//;
	public CODSegmentElements getCODSegmentAccess() {
		return pCODSegment;
	}
	
	public ParserRule getCODSegmentRule() {
		return getCODSegmentAccess().getRule();
	}
	
	////TODO
	//COMSegment:
	//    segment="COM"
	//    PLUS
	//    todo=ID
	//    lineEnd=QUOTE_AND_NL
	//;
	public COMSegmentElements getCOMSegmentAccess() {
		return pCOMSegment;
	}
	
	public ParserRule getCOMSegmentRule() {
		return getCOMSegmentAccess().getRule();
	}
	
	////TODO
	//COTSegment:
	//    segment="COT"
	//    PLUS
	//    todo=ID
	//    lineEnd=QUOTE_AND_NL
	//;
	public COTSegmentElements getCOTSegmentAccess() {
		return pCOTSegment;
	}
	
	public ParserRule getCOTSegmentRule() {
		return getCOTSegmentAccess().getRule();
	}
	
	////TODO
	//CPISegment:
	//    segment="CPI"
	//    PLUS
	//    todo=ID
	//    lineEnd=QUOTE_AND_NL
	//;
	public CPISegmentElements getCPISegmentAccess() {
		return pCPISegment;
	}
	
	public ParserRule getCPISegmentRule() {
		return getCPISegmentAccess().getRule();
	}
	
	////TODO
	//CPSSegment:
	//    segment="CPS"
	//    PLUS
	//    todo=ID
	//    lineEnd=QUOTE_AND_NL
	//;
	public CPSSegmentElements getCPSSegmentAccess() {
		return pCPSSegment;
	}
	
	public ParserRule getCPSSegmentRule() {
		return getCPSSegmentAccess().getRule();
	}
	
	////TODO
	//CPTSegment:
	//    segment="CPT"
	//    PLUS
	//    todo=ID
	//    lineEnd=QUOTE_AND_NL
	//;
	public CPTSegmentElements getCPTSegmentAccess() {
		return pCPTSegment;
	}
	
	public ParserRule getCPTSegmentRule() {
		return getCPTSegmentAccess().getRule();
	}
	
	////TODO
	//CSTSegment:
	//    segment="CST"
	//    PLUS
	//    todo=ID
	//    lineEnd=QUOTE_AND_NL
	//;
	public CSTSegmentElements getCSTSegmentAccess() {
		return pCSTSegment;
	}
	
	public ParserRule getCSTSegmentRule() {
		return getCSTSegmentAccess().getRule();
	}
	
	////TODO
	//DAMSegment:
	//    segment="DAM"
	//    PLUS
	//    todo=ID
	//    lineEnd=QUOTE_AND_NL
	//;
	public DAMSegmentElements getDAMSegmentAccess() {
		return pDAMSegment;
	}
	
	public ParserRule getDAMSegmentRule() {
		return getDAMSegmentAccess().getRule();
	}
	
	////TODO
	//DFNSegment:
	//    segment="DFN"
	//    PLUS
	//    todo=ID
	//    lineEnd=QUOTE_AND_NL
	//;
	public DFNSegmentElements getDFNSegmentAccess() {
		return pDFNSegment;
	}
	
	public ParserRule getDFNSegmentRule() {
		return getDFNSegmentAccess().getRule();
	}
	
	////TODO
	//DGSSegment:
	//    segment="DGS"
	//    PLUS
	//    todo=ID
	//    lineEnd=QUOTE_AND_NL
	//;
	public DGSSegmentElements getDGSSegmentAccess() {
		return pDGSSegment;
	}
	
	public ParserRule getDGSSegmentRule() {
		return getDGSSegmentAccess().getRule();
	}
	
	////TODO
	//DIISegment:
	//    segment="DII"
	//    PLUS
	//    todo=ID
	//    lineEnd=QUOTE_AND_NL
	//;
	public DIISegmentElements getDIISegmentAccess() {
		return pDIISegment;
	}
	
	public ParserRule getDIISegmentRule() {
		return getDIISegmentAccess().getRule();
	}
	
	////TODO
	//DIMSegment:
	//    segment="DIM"
	//    PLUS
	//    todo=ID
	//    lineEnd=QUOTE_AND_NL
	//;
	public DIMSegmentElements getDIMSegmentAccess() {
		return pDIMSegment;
	}
	
	public ParserRule getDIMSegmentRule() {
		return getDIMSegmentAccess().getRule();
	}
	
	////TODO
	//DLISegment:
	//    segment="DLI"
	//    PLUS
	//    todo=ID
	//    lineEnd=QUOTE_AND_NL
	//;
	public DLISegmentElements getDLISegmentAccess() {
		return pDLISegment;
	}
	
	public ParserRule getDLISegmentRule() {
		return getDLISegmentAccess().getRule();
	}
	
	////TODO
	//DLMSegment:
	//    segment="DLM"
	//    PLUS
	//    todo=ID
	//    lineEnd=QUOTE_AND_NL
	//;
	public DLMSegmentElements getDLMSegmentAccess() {
		return pDLMSegment;
	}
	
	public ParserRule getDLMSegmentRule() {
		return getDLMSegmentAccess().getRule();
	}
	
	////TODO
	//DMSSegment:
	//    segment="DMS"
	//    PLUS
	//    todo=ID
	//    lineEnd=QUOTE_AND_NL
	//;
	public DMSSegmentElements getDMSSegmentAccess() {
		return pDMSSegment;
	}
	
	public ParserRule getDMSSegmentRule() {
		return getDMSSegmentAccess().getRule();
	}
	
	////TODO
	//DOCSegment:
	//    segment="DOC"
	//    PLUS
	//    todo=ID
	//    lineEnd=QUOTE_AND_NL
	//;
	public DOCSegmentElements getDOCSegmentAccess() {
		return pDOCSegment;
	}
	
	public ParserRule getDOCSegmentRule() {
		return getDOCSegmentAccess().getRule();
	}
	
	////TODO
	//DRDSegment:
	//    segment="DRD"
	//    PLUS
	//    todo=ID
	//    lineEnd=QUOTE_AND_NL
	//;
	public DRDSegmentElements getDRDSegmentAccess() {
		return pDRDSegment;
	}
	
	public ParserRule getDRDSegmentRule() {
		return getDRDSegmentAccess().getRule();
	}
	
	////TODO
	//DSGSegment:
	//    segment="DSG"
	//    PLUS
	//    todo=ID
	//    lineEnd=QUOTE_AND_NL
	//;
	public DSGSegmentElements getDSGSegmentAccess() {
		return pDSGSegment;
	}
	
	public ParserRule getDSGSegmentRule() {
		return getDSGSegmentAccess().getRule();
	}
	
	////TODO
	//DSISegment:
	//    segment="DSI"
	//    PLUS
	//    todo=ID
	//    lineEnd=QUOTE_AND_NL
	//;
	public DSISegmentElements getDSISegmentAccess() {
		return pDSISegment;
	}
	
	public ParserRule getDSISegmentRule() {
		return getDSISegmentAccess().getRule();
	}
	
	////TODO
	//EDTSegment:
	//    segment="EDT"
	//    PLUS
	//    todo=ID
	//    lineEnd=QUOTE_AND_NL
	//;
	public EDTSegmentElements getEDTSegmentAccess() {
		return pEDTSegment;
	}
	
	public ParserRule getEDTSegmentRule() {
		return getEDTSegmentAccess().getRule();
	}
	
	////TODO
	//EFISegment:
	//    segment="EFI"
	//    PLUS
	//    todo=ID
	//    lineEnd=QUOTE_AND_NL
	//;
	public EFISegmentElements getEFISegmentAccess() {
		return pEFISegment;
	}
	
	public ParserRule getEFISegmentRule() {
		return getEFISegmentAccess().getRule();
	}
	
	////TODO
	//ELMSegment:
	//    segment="ELM"
	//    PLUS
	//    todo=ID
	//    lineEnd=QUOTE_AND_NL
	//;
	public ELMSegmentElements getELMSegmentAccess() {
		return pELMSegment;
	}
	
	public ParserRule getELMSegmentRule() {
		return getELMSegmentAccess().getRule();
	}
	
	////TODO
	//ELUSegment:
	//    segment="ELU"
	//    PLUS
	//    todo=ID
	//    lineEnd=QUOTE_AND_NL
	//;
	public ELUSegmentElements getELUSegmentAccess() {
		return pELUSegment;
	}
	
	public ParserRule getELUSegmentRule() {
		return getELUSegmentAccess().getRule();
	}
	
	////TODO
	//ELVSegment:
	//    segment="ELV"
	//    PLUS
	//    todo=ID
	//    lineEnd=QUOTE_AND_NL
	//;
	public ELVSegmentElements getELVSegmentAccess() {
		return pELVSegment;
	}
	
	public ParserRule getELVSegmentRule() {
		return getELVSegmentAccess().getRule();
	}
	
	////TODO
	//EMPSegment:
	//    segment="EMP"
	//    PLUS
	//    todo=ID
	//    lineEnd=QUOTE_AND_NL
	//;
	public EMPSegmentElements getEMPSegmentAccess() {
		return pEMPSegment;
	}
	
	public ParserRule getEMPSegmentRule() {
		return getEMPSegmentAccess().getRule();
	}
	
	////TODO
	//EQASegment:
	//    segment="EQA"
	//    PLUS
	//    todo=ID
	//    lineEnd=QUOTE_AND_NL
	//;
	public EQASegmentElements getEQASegmentAccess() {
		return pEQASegment;
	}
	
	public ParserRule getEQASegmentRule() {
		return getEQASegmentAccess().getRule();
	}
	
	////TODO
	//EQDSegment:
	//    segment="EQD"
	//    PLUS
	//    todo=ID
	//    lineEnd=QUOTE_AND_NL
	//;
	public EQDSegmentElements getEQDSegmentAccess() {
		return pEQDSegment;
	}
	
	public ParserRule getEQDSegmentRule() {
		return getEQDSegmentAccess().getRule();
	}
	
	//EQNSegment:
	//    segment="EQN"
	//    PLUS
	//    todo=ID
	//    lineEnd=QUOTE_AND_NL
	//;
	public EQNSegmentElements getEQNSegmentAccess() {
		return pEQNSegment;
	}
	
	public ParserRule getEQNSegmentRule() {
		return getEQNSegmentAccess().getRule();
	}
	
	////TODO
	//ERPSegment:
	//    segment="ERP"
	//    PLUS
	//    todo=ID
	//    lineEnd=QUOTE_AND_NL
	//;
	public ERPSegmentElements getERPSegmentAccess() {
		return pERPSegment;
	}
	
	public ParserRule getERPSegmentRule() {
		return getERPSegmentAccess().getRule();
	}
	
	////TODO
	//EVESegment:
	//    segment="EVE"
	//    PLUS
	//    todo=ID
	//    lineEnd=QUOTE_AND_NL
	//;
	public EVESegmentElements getEVESegmentAccess() {
		return pEVESegment;
	}
	
	public ParserRule getEVESegmentRule() {
		return getEVESegmentAccess().getRule();
	}
	
	////TODO
	//EVTSegment:
	//    segment="EVT"
	//    PLUS
	//    todo=ID
	//    lineEnd=QUOTE_AND_NL
	//;
	public EVTSegmentElements getEVTSegmentAccess() {
		return pEVTSegment;
	}
	
	public ParserRule getEVTSegmentRule() {
		return getEVTSegmentAccess().getRule();
	}
	
	////TODO
	//FCASegment:
	//    segment="FCA"
	//    PLUS
	//    todo=ID
	//    lineEnd=QUOTE_AND_NL
	//;
	public FCASegmentElements getFCASegmentAccess() {
		return pFCASegment;
	}
	
	public ParserRule getFCASegmentRule() {
		return getFCASegmentAccess().getRule();
	}
	
	////TODO
	//FIISegment:
	//    segment="FII"
	//    PLUS
	//    todo=ID
	//    lineEnd=QUOTE_AND_NL
	//;
	public FIISegmentElements getFIISegmentAccess() {
		return pFIISegment;
	}
	
	public ParserRule getFIISegmentRule() {
		return getFIISegmentAccess().getRule();
	}
	
	////TODO
	//FNSSegment:
	//    segment="FNS"
	//    PLUS
	//    todo=ID
	//    lineEnd=QUOTE_AND_NL
	//;
	public FNSSegmentElements getFNSSegmentAccess() {
		return pFNSSegment;
	}
	
	public ParserRule getFNSSegmentRule() {
		return getFNSSegmentAccess().getRule();
	}
	
	////TODO
	//FNTSegment:
	//    segment="FNT"
	//    PLUS
	//    todo=ID
	//    lineEnd=QUOTE_AND_NL
	//;
	public FNTSegmentElements getFNTSegmentAccess() {
		return pFNTSegment;
	}
	
	public ParserRule getFNTSegmentRule() {
		return getFNTSegmentAccess().getRule();
	}
	
	////TODO
	//FORSegment:
	//    segment="FOR"
	//    PLUS
	//    todo=ID
	//    lineEnd=QUOTE_AND_NL
	//;
	public FORSegmentElements getFORSegmentAccess() {
		return pFORSegment;
	}
	
	public ParserRule getFORSegmentRule() {
		return getFORSegmentAccess().getRule();
	}
	
	////TODO
	//FSQSegment:
	//    segment="FSQ"
	//    PLUS
	//    todo=ID
	//    lineEnd=QUOTE_AND_NL
	//;
	public FSQSegmentElements getFSQSegmentAccess() {
		return pFSQSegment;
	}
	
	public ParserRule getFSQSegmentRule() {
		return getFSQSegmentAccess().getRule();
	}
	
	////TODO
	//GDSSegment:
	//    segment="GDS"
	//    PLUS
	//    todo=ID
	//    lineEnd=QUOTE_AND_NL
	//;
	public GDSSegmentElements getGDSSegmentAccess() {
		return pGDSSegment;
	}
	
	public ParserRule getGDSSegmentRule() {
		return getGDSSegmentAccess().getRule();
	}
	
	////TODO
	//GEISegment:
	//    segment="GEI"
	//    PLUS
	//    todo=ID
	//    lineEnd=QUOTE_AND_NL
	//;
	public GEISegmentElements getGEISegmentAccess() {
		return pGEISegment;
	}
	
	public ParserRule getGEISegmentRule() {
		return getGEISegmentAccess().getRule();
	}
	
	////TODO
	//GIDSegment:
	//    segment="GID"
	//    PLUS
	//    todo=ID
	//    lineEnd=QUOTE_AND_NL
	//;
	public GIDSegmentElements getGIDSegmentAccess() {
		return pGIDSegment;
	}
	
	public ParserRule getGIDSegmentRule() {
		return getGIDSegmentAccess().getRule();
	}
	
	////TODO
	//GINSegment:
	//    segment="GIN"
	//    PLUS
	//    todo=ID
	//    lineEnd=QUOTE_AND_NL
	//;
	public GINSegmentElements getGINSegmentAccess() {
		return pGINSegment;
	}
	
	public ParserRule getGINSegmentRule() {
		return getGINSegmentAccess().getRule();
	}
	
	////TODO
	//GIRSegment:
	//    segment="GIR"
	//    PLUS
	//    todo=ID
	//    lineEnd=QUOTE_AND_NL
	//;
	public GIRSegmentElements getGIRSegmentAccess() {
		return pGIRSegment;
	}
	
	public ParserRule getGIRSegmentRule() {
		return getGIRSegmentAccess().getRule();
	}
	
	////TODO
	//GISSegment:
	//    segment="GIS"
	//    PLUS
	//    todo=ID
	//    lineEnd=QUOTE_AND_NL
	//;
	public GISSegmentElements getGISSegmentAccess() {
		return pGISSegment;
	}
	
	public ParserRule getGISSegmentRule() {
		return getGISSegmentAccess().getRule();
	}
	
	////TODO
	//GORSegment:
	//    segment="GOR"
	//    PLUS
	//    todo=ID
	//    lineEnd=QUOTE_AND_NL
	//;
	public GORSegmentElements getGORSegmentAccess() {
		return pGORSegment;
	}
	
	public ParserRule getGORSegmentRule() {
		return getGORSegmentAccess().getRule();
	}
	
	////TODO
	//GRUSegment:
	//    segment="GRU"
	//    PLUS
	//    todo=ID
	//    lineEnd=QUOTE_AND_NL
	//;
	public GRUSegmentElements getGRUSegmentAccess() {
		return pGRUSegment;
	}
	
	public ParserRule getGRUSegmentRule() {
		return getGRUSegmentAccess().getRule();
	}
	
	////TODO
	//HANSegment:
	//    segment="HAN"
	//    PLUS
	//    todo=ID
	//    lineEnd=QUOTE_AND_NL
	//;
	public HANSegmentElements getHANSegmentAccess() {
		return pHANSegment;
	}
	
	public ParserRule getHANSegmentRule() {
		return getHANSegmentAccess().getRule();
	}
	
	////TODO
	//HYNSegment:
	//    segment="HYN"
	//    PLUS
	//    todo=ID
	//    lineEnd=QUOTE_AND_NL
	//;
	public HYNSegmentElements getHYNSegmentAccess() {
		return pHYNSegment;
	}
	
	public ParserRule getHYNSegmentRule() {
		return getHYNSegmentAccess().getRule();
	}
	
	////TODO
	//ICDSegment:
	//    segment="ICD"
	//    PLUS
	//    todo=ID
	//    lineEnd=QUOTE_AND_NL
	//;
	public ICDSegmentElements getICDSegmentAccess() {
		return pICDSegment;
	}
	
	public ParserRule getICDSegmentRule() {
		return getICDSegmentAccess().getRule();
	}
	
	////TODO
	//IDESegment:
	//    segment="IDE"
	//    PLUS
	//    todo=ID
	//    lineEnd=QUOTE_AND_NL
	//;
	public IDESegmentElements getIDESegmentAccess() {
		return pIDESegment;
	}
	
	public ParserRule getIDESegmentRule() {
		return getIDESegmentAccess().getRule();
	}
	
	////TODO
	//IFDSegment:
	//    segment="IFD"
	//    PLUS
	//    todo=ID
	//    lineEnd=QUOTE_AND_NL
	//;
	public IFDSegmentElements getIFDSegmentAccess() {
		return pIFDSegment;
	}
	
	public ParserRule getIFDSegmentRule() {
		return getIFDSegmentAccess().getRule();
	}
	
	////TODO
	//IHCSegment:
	//    segment="IHC"
	//    PLUS
	//    todo=ID
	//    lineEnd=QUOTE_AND_NL
	//;
	public IHCSegmentElements getIHCSegmentAccess() {
		return pIHCSegment;
	}
	
	public ParserRule getIHCSegmentRule() {
		return getIHCSegmentAccess().getRule();
	}
	
	////TODO
	//IMDSegment:
	//    segment="IMD"
	//    PLUS
	//    todo=ID
	//    lineEnd=QUOTE_AND_NL
	//;
	public IMDSegmentElements getIMDSegmentAccess() {
		return pIMDSegment;
	}
	
	public ParserRule getIMDSegmentRule() {
		return getIMDSegmentAccess().getRule();
	}
	
	////TODO
	//INDSegment:
	//    segment="IND"
	//    PLUS
	//    todo=ID
	//    lineEnd=QUOTE_AND_NL
	//;
	public INDSegmentElements getINDSegmentAccess() {
		return pINDSegment;
	}
	
	public ParserRule getINDSegmentRule() {
		return getINDSegmentAccess().getRule();
	}
	
	////TODO
	//INPSegment:
	//    segment="INP"
	//    PLUS
	//    todo=ID
	//    lineEnd=QUOTE_AND_NL
	//;
	public INPSegmentElements getINPSegmentAccess() {
		return pINPSegment;
	}
	
	public ParserRule getINPSegmentRule() {
		return getINPSegmentAccess().getRule();
	}
	
	////TODO
	//INVSegment:
	//    segment="INV"
	//    PLUS
	//    todo=ID
	//    lineEnd=QUOTE_AND_NL
	//;
	public INVSegmentElements getINVSegmentAccess() {
		return pINVSegment;
	}
	
	public ParserRule getINVSegmentRule() {
		return getINVSegmentAccess().getRule();
	}
	
	////TODO
	//IRQSegment:
	//    segment="IRQ"
	//    PLUS
	//    todo=ID
	//    lineEnd=QUOTE_AND_NL
	//;
	public IRQSegmentElements getIRQSegmentAccess() {
		return pIRQSegment;
	}
	
	public ParserRule getIRQSegmentRule() {
		return getIRQSegmentAccess().getRule();
	}
	
	////TODO
	//LANSegment:
	//    segment="LAN"
	//    PLUS
	//    todo=ID
	//    lineEnd=QUOTE_AND_NL
	//;
	public LANSegmentElements getLANSegmentAccess() {
		return pLANSegment;
	}
	
	public ParserRule getLANSegmentRule() {
		return getLANSegmentAccess().getRule();
	}
	
	////TODO
	//LOCSegment:
	//    segment="LOC"
	//    PLUS
	//    todo=ID
	//    lineEnd=QUOTE_AND_NL
	//;
	public LOCSegmentElements getLOCSegmentAccess() {
		return pLOCSegment;
	}
	
	public ParserRule getLOCSegmentRule() {
		return getLOCSegmentAccess().getRule();
	}
	
	////TODO
	//MEASegment:
	//    segment="MEA"
	//    PLUS
	//    todo=ID
	//    lineEnd=QUOTE_AND_NL
	//;
	public MEASegmentElements getMEASegmentAccess() {
		return pMEASegment;
	}
	
	public ParserRule getMEASegmentRule() {
		return getMEASegmentAccess().getRule();
	}
	
	////TODO
	//MEMSegment:
	//    segment="MEM"
	//    PLUS
	//    todo=ID
	//    lineEnd=QUOTE_AND_NL
	//;
	public MEMSegmentElements getMEMSegmentAccess() {
		return pMEMSegment;
	}
	
	public ParserRule getMEMSegmentRule() {
		return getMEMSegmentAccess().getRule();
	}
	
	////TODO
	//MKSSegment:
	//    segment="MKS"
	//    PLUS
	//    todo=ID
	//    lineEnd=QUOTE_AND_NL
	//;
	public MKSSegmentElements getMKSSegmentAccess() {
		return pMKSSegment;
	}
	
	public ParserRule getMKSSegmentRule() {
		return getMKSSegmentAccess().getRule();
	}
	
	////TODO
	//NATSegment:
	//    segment="NAT"
	//    PLUS
	//    todo=ID
	//    lineEnd=QUOTE_AND_NL
	//;
	public NATSegmentElements getNATSegmentAccess() {
		return pNATSegment;
	}
	
	public ParserRule getNATSegmentRule() {
		return getNATSegmentAccess().getRule();
	}
	
	//PACSegment:
	//    segment="PAC"
	//    PLUS
	//    todo=ID
	//    lineEnd=QUOTE_AND_NL
	//;
	public PACSegmentElements getPACSegmentAccess() {
		return pPACSegment;
	}
	
	public ParserRule getPACSegmentRule() {
		return getPACSegmentAccess().getRule();
	}
	
	////TODO
	//PAISegment:
	//    segment="PAI"
	//    PLUS
	//    todo=ID
	//    lineEnd=QUOTE_AND_NL
	//;
	public PAISegmentElements getPAISegmentAccess() {
		return pPAISegment;
	}
	
	public ParserRule getPAISegmentRule() {
		return getPAISegmentAccess().getRule();
	}
	
	////TODO
	//PASSegment:
	//    segment="PAS"
	//    PLUS
	//    todo=ID
	//    lineEnd=QUOTE_AND_NL
	//;
	public PASSegmentElements getPASSegmentAccess() {
		return pPASSegment;
	}
	
	public ParserRule getPASSegmentRule() {
		return getPASSegmentAccess().getRule();
	}
	
	////TODO
	//PCCSegment:
	//    segment="PCC"
	//    PLUS
	//    todo=ID
	//    lineEnd=QUOTE_AND_NL
	//;
	public PCCSegmentElements getPCCSegmentAccess() {
		return pPCCSegment;
	}
	
	public ParserRule getPCCSegmentRule() {
		return getPCCSegmentAccess().getRule();
	}
	
	////TODO
	//PCDSegment:
	//    segment="PCD"
	//    PLUS
	//    todo=ID
	//    lineEnd=QUOTE_AND_NL
	//;
	public PCDSegmentElements getPCDSegmentAccess() {
		return pPCDSegment;
	}
	
	public ParserRule getPCDSegmentRule() {
		return getPCDSegmentAccess().getRule();
	}
	
	////TODO
	//PERSegment:
	//    segment="PER"
	//    PLUS
	//    todo=ID
	//    lineEnd=QUOTE_AND_NL
	//;
	public PERSegmentElements getPERSegmentAccess() {
		return pPERSegment;
	}
	
	public ParserRule getPERSegmentRule() {
		return getPERSegmentAccess().getRule();
	}
	
	////TODO
	//PGISegment:
	//    segment="PGI"
	//    PLUS
	//    todo=ID
	//    lineEnd=QUOTE_AND_NL
	//;
	public PGISegmentElements getPGISegmentAccess() {
		return pPGISegment;
	}
	
	public ParserRule getPGISegmentRule() {
		return getPGISegmentAccess().getRule();
	}
	
	////TODO
	//PIASegment:
	//    segment="PIA"
	//    PLUS
	//    todo=ID
	//    lineEnd=QUOTE_AND_NL
	//;
	public PIASegmentElements getPIASegmentAccess() {
		return pPIASegment;
	}
	
	public ParserRule getPIASegmentRule() {
		return getPIASegmentAccess().getRule();
	}
	
	////TODO
	//PNASegment:
	//    segment="PNA"
	//    PLUS
	//    todo=ID
	//    lineEnd=QUOTE_AND_NL
	//;
	public PNASegmentElements getPNASegmentAccess() {
		return pPNASegment;
	}
	
	public ParserRule getPNASegmentRule() {
		return getPNASegmentAccess().getRule();
	}
	
	////TODO
	//PRCSegment:
	//    segment="PRC"
	//    PLUS
	//    todo=ID
	//    lineEnd=QUOTE_AND_NL
	//;
	public PRCSegmentElements getPRCSegmentAccess() {
		return pPRCSegment;
	}
	
	public ParserRule getPRCSegmentRule() {
		return getPRCSegmentAccess().getRule();
	}
	
	////TODO
	//PRVSegment:
	//    segment="PRV"
	//    PLUS
	//    todo=ID
	//    lineEnd=QUOTE_AND_NL
	//;
	public PRVSegmentElements getPRVSegmentAccess() {
		return pPRVSegment;
	}
	
	public ParserRule getPRVSegmentRule() {
		return getPRVSegmentAccess().getRule();
	}
	
	////TODO
	//PSDSegment:
	//    segment="PSD"
	//    PLUS
	//    todo=ID
	//    lineEnd=QUOTE_AND_NL
	//;
	public PSDSegmentElements getPSDSegmentAccess() {
		return pPSDSegment;
	}
	
	public ParserRule getPSDSegmentRule() {
		return getPSDSegmentAccess().getRule();
	}
	
	////TODO
	//PTYSegment:
	//    segment="PTY"
	//    PLUS
	//    todo=ID
	//    lineEnd=QUOTE_AND_NL
	//;
	public PTYSegmentElements getPTYSegmentAccess() {
		return pPTYSegment;
	}
	
	public ParserRule getPTYSegmentRule() {
		return getPTYSegmentAccess().getRule();
	}
	
	////TODO
	//PYTSegment:
	//    segment="PYT"
	//    PLUS
	//    todo=ID
	//    lineEnd=QUOTE_AND_NL
	//;
	public PYTSegmentElements getPYTSegmentAccess() {
		return pPYTSegment;
	}
	
	public ParserRule getPYTSegmentRule() {
		return getPYTSegmentAccess().getRule();
	}
	
	////TODO
	//QRSSegment:
	//    segment="QRS"
	//    PLUS
	//    todo=ID
	//    lineEnd=QUOTE_AND_NL
	//;
	public QRSSegmentElements getQRSSegmentAccess() {
		return pQRSSegment;
	}
	
	public ParserRule getQRSSegmentRule() {
		return getQRSSegmentAccess().getRule();
	}
	
	////TODO
	//QUASegment:
	//    segment="QUA"
	//    PLUS
	//    todo=ID
	//    lineEnd=QUOTE_AND_NL
	//;
	public QUASegmentElements getQUASegmentAccess() {
		return pQUASegment;
	}
	
	public ParserRule getQUASegmentRule() {
		return getQUASegmentAccess().getRule();
	}
	
	////TODO
	//QVRSegment:
	//    segment="QVR"
	//    PLUS
	//    todo=ID
	//    lineEnd=QUOTE_AND_NL
	//;
	public QVRSegmentElements getQVRSegmentAccess() {
		return pQVRSegment;
	}
	
	public ParserRule getQVRSegmentRule() {
		return getQVRSegmentAccess().getRule();
	}
	
	////TODO
	//RCSSegment:
	//    segment="RCS"
	//    PLUS
	//    todo=ID
	//    lineEnd=QUOTE_AND_NL
	//;
	public RCSSegmentElements getRCSSegmentAccess() {
		return pRCSSegment;
	}
	
	public ParserRule getRCSSegmentRule() {
		return getRCSSegmentAccess().getRule();
	}
	
	////TODO
	//RELSegment:
	//    segment="REL"
	//    PLUS
	//    todo=ID
	//    lineEnd=QUOTE_AND_NL
	//;
	public RELSegmentElements getRELSegmentAccess() {
		return pRELSegment;
	}
	
	public ParserRule getRELSegmentRule() {
		return getRELSegmentAccess().getRule();
	}
	
	////TODO
	//RJLSegment:
	//    segment="RJL"
	//    PLUS
	//    todo=ID
	//    lineEnd=QUOTE_AND_NL
	//;
	public RJLSegmentElements getRJLSegmentAccess() {
		return pRJLSegment;
	}
	
	public ParserRule getRJLSegmentRule() {
		return getRJLSegmentAccess().getRule();
	}
	
	////TODO
	//RNGSegment:
	//    segment="RNG"
	//    PLUS
	//    todo=ID
	//    lineEnd=QUOTE_AND_NL
	//;
	public RNGSegmentElements getRNGSegmentAccess() {
		return pRNGSegment;
	}
	
	public ParserRule getRNGSegmentRule() {
		return getRNGSegmentAccess().getRule();
	}
	
	////TODO
	//RODSegment:
	//    segment="ROD"
	//    PLUS
	//    todo=ID
	//    lineEnd=QUOTE_AND_NL
	//;
	public RODSegmentElements getRODSegmentAccess() {
		return pRODSegment;
	}
	
	public ParserRule getRODSegmentRule() {
		return getRODSegmentAccess().getRule();
	}
	
	////TODO
	//RSLSegment:
	//    segment="RSL"
	//    PLUS
	//    todo=ID
	//    lineEnd=QUOTE_AND_NL
	//;
	public RSLSegmentElements getRSLSegmentAccess() {
		return pRSLSegment;
	}
	
	public ParserRule getRSLSegmentRule() {
		return getRSLSegmentAccess().getRule();
	}
	
	////TODO
	//RTESegment:
	//    segment="RTE"
	//    PLUS
	//    todo=ID
	//    lineEnd=QUOTE_AND_NL
	//;
	public RTESegmentElements getRTESegmentAccess() {
		return pRTESegment;
	}
	
	public ParserRule getRTESegmentRule() {
		return getRTESegmentAccess().getRule();
	}
	
	////TODO
	//SALSegment:
	//    segment="SAL"
	//    PLUS
	//    todo=ID
	//    lineEnd=QUOTE_AND_NL
	//;
	public SALSegmentElements getSALSegmentAccess() {
		return pSALSegment;
	}
	
	public ParserRule getSALSegmentRule() {
		return getSALSegmentAccess().getRule();
	}
	
	////TODO
	//SCCSegment:
	//    segment="SCC"
	//    PLUS
	//    todo=ID
	//    lineEnd=QUOTE_AND_NL
	//;
	public SCCSegmentElements getSCCSegmentAccess() {
		return pSCCSegment;
	}
	
	public ParserRule getSCCSegmentRule() {
		return getSCCSegmentAccess().getRule();
	}
	
	////TODO
	//SCDSegment:
	//    segment="SCD"
	//    PLUS
	//    todo=ID
	//    lineEnd=QUOTE_AND_NL
	//;
	public SCDSegmentElements getSCDSegmentAccess() {
		return pSCDSegment;
	}
	
	public ParserRule getSCDSegmentRule() {
		return getSCDSegmentAccess().getRule();
	}
	
	////TODO
	//SEGSegment:
	//    segment="SEG"
	//    PLUS
	//    todo=ID
	//    lineEnd=QUOTE_AND_NL
	//;
	public SEGSegmentElements getSEGSegmentAccess() {
		return pSEGSegment;
	}
	
	public ParserRule getSEGSegmentRule() {
		return getSEGSegmentAccess().getRule();
	}
	
	////TODO
	//SELSegment:
	//    segment="SEL"
	//    PLUS
	//    todo=ID
	//    lineEnd=QUOTE_AND_NL
	//;
	public SELSegmentElements getSELSegmentAccess() {
		return pSELSegment;
	}
	
	public ParserRule getSELSegmentRule() {
		return getSELSegmentAccess().getRule();
	}
	
	////TODO
	//SEQSegment:
	//    segment="SEQ"
	//    PLUS
	//    todo=ID
	//    lineEnd=QUOTE_AND_NL
	//;
	public SEQSegmentElements getSEQSegmentAccess() {
		return pSEQSegment;
	}
	
	public ParserRule getSEQSegmentRule() {
		return getSEQSegmentAccess().getRule();
	}
	
	////TODO
	//SFISegment:
	//    segment="SFI"
	//    PLUS
	//    todo=ID
	//    lineEnd=QUOTE_AND_NL
	//;
	public SFISegmentElements getSFISegmentAccess() {
		return pSFISegment;
	}
	
	public ParserRule getSFISegmentRule() {
		return getSFISegmentAccess().getRule();
	}
	
	////TODO
	//SGPSegment:
	//    segment="SGP"
	//    PLUS
	//    todo=ID
	//    lineEnd=QUOTE_AND_NL
	//;
	public SGPSegmentElements getSGPSegmentAccess() {
		return pSGPSegment;
	}
	
	public ParserRule getSGPSegmentRule() {
		return getSGPSegmentAccess().getRule();
	}
	
	////TODO
	//SGUSegment:
	//    segment="SGU"
	//    PLUS
	//    todo=ID
	//    lineEnd=QUOTE_AND_NL
	//;
	public SGUSegmentElements getSGUSegmentAccess() {
		return pSGUSegment;
	}
	
	public ParserRule getSGUSegmentRule() {
		return getSGUSegmentAccess().getRule();
	}
	
	////TODO
	//SPRSegment:
	//    segment="SPR"
	//    PLUS
	//    todo=ID
	//    lineEnd=QUOTE_AND_NL
	//;
	public SPRSegmentElements getSPRSegmentAccess() {
		return pSPRSegment;
	}
	
	public ParserRule getSPRSegmentRule() {
		return getSPRSegmentAccess().getRule();
	}
	
	////TODO
	//SPSSegment:
	//    segment="SPS"
	//    PLUS
	//    todo=ID
	//    lineEnd=QUOTE_AND_NL
	//;
	public SPSSegmentElements getSPSSegmentAccess() {
		return pSPSSegment;
	}
	
	public ParserRule getSPSSegmentRule() {
		return getSPSSegmentAccess().getRule();
	}
	
	////TODO
	//STASegment:
	//    segment="STA"
	//    PLUS
	//    todo=ID
	//    lineEnd=QUOTE_AND_NL
	//;
	public STASegmentElements getSTASegmentAccess() {
		return pSTASegment;
	}
	
	public ParserRule getSTASegmentRule() {
		return getSTASegmentAccess().getRule();
	}
	
	////TODO
	//STCSegment:
	//    segment="STC"
	//    PLUS
	//    todo=ID
	//    lineEnd=QUOTE_AND_NL
	//;
	public STCSegmentElements getSTCSegmentAccess() {
		return pSTCSegment;
	}
	
	public ParserRule getSTCSegmentRule() {
		return getSTCSegmentAccess().getRule();
	}
	
	////TODO
	//STGSegment:
	//    segment="STG"
	//    PLUS
	//    todo=ID
	//    lineEnd=QUOTE_AND_NL
	//;
	public STGSegmentElements getSTGSegmentAccess() {
		return pSTGSegment;
	}
	
	public ParserRule getSTGSegmentRule() {
		return getSTGSegmentAccess().getRule();
	}
	
	////TODO
	//STSSegment:
	//    segment="STS"
	//    PLUS
	//    todo=ID
	//    lineEnd=QUOTE_AND_NL
	//;
	public STSSegmentElements getSTSSegmentAccess() {
		return pSTSSegment;
	}
	
	public ParserRule getSTSSegmentRule() {
		return getSTSSegmentAccess().getRule();
	}
	
	////TODO
	//TCCSegment:
	//    segment="TCC"
	//    PLUS
	//    todo=ID
	//    lineEnd=QUOTE_AND_NL
	//;
	public TCCSegmentElements getTCCSegmentAccess() {
		return pTCCSegment;
	}
	
	public ParserRule getTCCSegmentRule() {
		return getTCCSegmentAccess().getRule();
	}
	
	////TODO
	//TDTSegment:
	//    segment="TDT"
	//    PLUS
	//    todo=ID
	//    lineEnd=QUOTE_AND_NL
	//;
	public TDTSegmentElements getTDTSegmentAccess() {
		return pTDTSegment;
	}
	
	public ParserRule getTDTSegmentRule() {
		return getTDTSegmentAccess().getRule();
	}
	
	////TODO
	//TEMSegment:
	//    segment="TEM"
	//    PLUS
	//    todo=ID
	//    lineEnd=QUOTE_AND_NL
	//;
	public TEMSegmentElements getTEMSegmentAccess() {
		return pTEMSegment;
	}
	
	public ParserRule getTEMSegmentRule() {
		return getTEMSegmentAccess().getRule();
	}
	
	////TODO
	//TMDSegment:
	//    segment="TMD"
	//    PLUS
	//    todo=ID
	//    lineEnd=QUOTE_AND_NL
	//;
	public TMDSegmentElements getTMDSegmentAccess() {
		return pTMDSegment;
	}
	
	public ParserRule getTMDSegmentRule() {
		return getTMDSegmentAccess().getRule();
	}
	
	////TODO
	//TMPSegment:
	//    segment="TMP"
	//    PLUS
	//    todo=ID
	//    lineEnd=QUOTE_AND_NL
	//;
	public TMPSegmentElements getTMPSegmentAccess() {
		return pTMPSegment;
	}
	
	public ParserRule getTMPSegmentRule() {
		return getTMPSegmentAccess().getRule();
	}
	
	////TODO
	//TODSegment:
	//    segment="TOD"
	//    PLUS
	//    todo=ID
	//    lineEnd=QUOTE_AND_NL
	//;
	public TODSegmentElements getTODSegmentAccess() {
		return pTODSegment;
	}
	
	public ParserRule getTODSegmentRule() {
		return getTODSegmentAccess().getRule();
	}
	
	////TODO
	//TPLSegment:
	//    segment="TPL"
	//    PLUS
	//    todo=ID
	//    lineEnd=QUOTE_AND_NL
	//;
	public TPLSegmentElements getTPLSegmentAccess() {
		return pTPLSegment;
	}
	
	public ParserRule getTPLSegmentRule() {
		return getTPLSegmentAccess().getRule();
	}
	
	////TODO
	//TRUSegment:
	//    segment="TRU"
	//    PLUS
	//    todo=ID
	//    lineEnd=QUOTE_AND_NL
	//;
	public TRUSegmentElements getTRUSegmentAccess() {
		return pTRUSegment;
	}
	
	public ParserRule getTRUSegmentRule() {
		return getTRUSegmentAccess().getRule();
	}
	
	////TODO
	//TSRSegment:
	//    segment="TSR"
	//    PLUS
	//    todo=ID
	//    lineEnd=QUOTE_AND_NL
	//;
	public TSRSegmentElements getTSRSegmentAccess() {
		return pTSRSegment;
	}
	
	public ParserRule getTSRSegmentRule() {
		return getTSRSegmentAccess().getRule();
	}
	
	////TODO
	//VLISegment:
	//    segment="VLI"
	//    PLUS
	//    todo=ID
	//    lineEnd=QUOTE_AND_NL
	//;
	public VLISegmentElements getVLISegmentAccess() {
		return pVLISegment;
	}
	
	public ParserRule getVLISegmentRule() {
		return getVLISegmentAccess().getRule();
	}
	
	////MSG+1:46'
	//MSGSegment:
	//    segment="MSG"
	//    PLUS
	//    ( messageIdentifier=MessageIndentifier )? // C709
	//    (
	//        PLUS
	//        designatedClassCode=ID // 1507
	//        (
	//            PLUS
	//            maintenanceOperationCode=ID // 4513
	//                (
	//                PLUS
	//                relationship=Relationship // C941
	//            )?
	//        )?
	//    )?
	//    lineEnd=QUOTE_AND_NL
	//;
	public MSGSegmentElements getMSGSegmentAccess() {
		return pMSGSegment;
	}
	
	public ParserRule getMSGSegmentRule() {
		return getMSGSegmentAccess().getRule();
	}
	
	////ORG+1A:MUC+27213082:ATHGR28CS+ATH++T+GR:EUR:EN+A9996WSSU+04261178+1A'
	////ORG+NZ:AKL:00++AKL+NZ+A+NZ:NZD+PR'
	//ORGSegment:
	//    segment="ORG"
	//    PLUS
	//    ( systemDetail1=SystemDetailFunction )?
	//    PLUS
	//    ( originatorIdentification=OriginatorIdentificationFunction )?
	//    PLUS
	//    ( location=LocationFunction )?
	//    PLUS
	//    ( systemDetail2=SystemDetailFunction )?
	//    PLUS
	//    ( originatorTypeCode=ID )?
	//    PLUS
	//    ( originator=OriginatorFunction )?
	//    PLUS
	//    ( originatorsAuthorityRequestCode=ID )?
	//    (
	//        PLUS
	//        communicationNumber=ID
	//        (
	//            PLUS
	//            partyIdIdentification=ID
	//        )?
	//    )?
	//    lineEnd=QUOTE_AND_NL
	//;
	public ORGSegmentElements getORGSegmentAccess() {
		return pORGSegment;
	}
	
	public ParserRule getORGSegmentRule() {
		return getORGSegmentAccess().getRule();
	}
	
	////POC+BNE+220120'
	//POCSegment:
	//    segment="POC"
	//    PLUS
	//    (location=ID)?
	//    PLUS
	//    (departureDate=ID)?
	//    (
	//        PLUS
	//        departureTime=ID
	//    )?
	//    lineEnd=QUOTE_AND_NL
	//;
	public POCSegmentElements getPOCSegmentAccess() {
		return pPOCSegment;
	}
	
	public ParserRule getPOCSegmentRule() {
		return getPOCSegmentAccess().getRule();
	}
	
	////ODI+BNE+ZQN'
	//ODISegment:
	//    segment="ODI"
	//    (
	//        PLUS
	//        (origin=ID)?
	//        PLUS
	//        (destination=ID)?
	//    )?
	//    lineEnd=QUOTE_AND_NL
	//;
	public ODISegmentElements getODISegmentAccess() {
		return pODISegment;
	}
	
	public ParserRule getODISegmentRule() {
		return getODISegmentAccess().getRule();
	}
	
	////
	//UCISegment:
	//    segment="UCI"
	//    PLUS
	//    ( interchangeControlReference=ID )?
	//    PLUS
	//    ( interchangeSender=ID )?
	//    PLUS
	//    ( interchangeRecipient=ID )?
	//    PLUS
	//    ( action=ID )?
	//    PLUS
	//    ( syntaxErrorCode=ID )?
	//    PLUS
	//    ( segmentTagCode=ID )?
	//    lineEnd=QUOTE_AND_NL
	//;
	public UCISegmentElements getUCISegmentAccess() {
		return pUCISegment;
	}
	
	public ParserRule getUCISegmentRule() {
		return getUCISegmentAccess().getRule();
	}
	
	////
	//PDISegment:
	//    segment="PDI"
	//    PLUS
	//    ( productDetailsQualifier=ID )?
	//    (
	//        PLUS
	//        products+=ProductFunction
	//    )*
	//    lineEnd=QUOTE_AND_NL
	//;
	public PDISegmentElements getPDISegmentAccess() {
		return pPDISegment;
	}
	
	public ParserRule getPDISegmentRule() {
		return getPDISegmentAccess().getRule();
	}
	
	////TVL+230120+CHC+ZQN+NZ+5641+3+2+P"
	//TVLSegment:
	//    segment="TVL"
	//    PLUS
	//    (
	//        (
	//            dateAndTime+=DateOnlyFunction
	////            (
	////                COLON
	////                dateAndTime+=DateOnly
	////            )*
	//        )
	//        |
	//        (
	//            dateAndTime+=DateAndTimeFunction
	//            (
	//                COLON
	//                dateAndTime+=DateAndTimeFunction
	//            )*
	//        )
	//    )
	//    PLUS
	//    (originCode=ID)?
	//    PLUS
	//    (destinationCode=ID)?
	//    PLUS
	//    (carrierId=ID)?
	//    PLUS
	//    (
	//        productId=ID
	//        (
	//            COLON
	//            characteristicId=ID
	//            (
	//                COLON
	//                productIdCharacteristic=ID
	//                (
	//                    COLON
	//                    descriptionIds+=ID
	//                )*
	//            )?
	//        )?
	//    )?
	//    (
	//        PLUS
	//        productType=ID
	//        (
	//            PLUS
	//            lineItemNumber=ID
	//            (
	//                PLUS
	//                processingIndicatorCode=ID
	//            )?
	//        )?
	//    )?
	//    lineEnd=QUOTE_AND_NL
	//;
	public TVLSegmentElements getTVLSegmentAccess() {
		return pTVLSegment;
	}
	
	public ParserRule getTVLSegmentRule() {
		return getTVLSegmentAccess().getRule();
	}
	
	////RPI+1+SS'
	//RPISegment:
	//    segment="RPI"
	//    PLUS
	//    (numberOfPax=ID)?
	//    PLUS
	//    (status=ID)?
	//    lineEnd=QUOTE_AND_NL
	//;
	public RPISegmentElements getRPISegmentAccess() {
		return pRPISegment;
	}
	
	public ParserRule getRPISegmentRule() {
		return getRPISegmentAccess().getRule();
	}
	
	////MOA+203:1960.29'
	//MOASegment:
	//    segment="MOA"
	//    PLUS
	//    monetaryAmountTypeCodeQualifier=ID // 5025
	//    (
	//        COLON
	//        monetaryAmount=ID // 5004
	//        (
	//            COLON
	//            currencyIdentificationCode=ID // 6345
	//            (
	//                COLON
	//                currencyTypeCodeQualifier=ID // 6343
	//                (
	//                    COLON
	//                    statusDescriptionCode=ID // 4405
	//                )?
	//            )?
	//        )?
	//    )?
	//    lineEnd=QUOTE_AND_NL
	//;
	public MOASegmentElements getMOASegmentAccess() {
		return pMOASegment;
	}
	
	public ParserRule getMOASegmentRule() {
		return getMOASegmentAccess().getRule();
	}
	
	////LIN+++090346642:IN'
	//LINSegment:
	//    segment="LIN"
	//    PLUS
	//    ( lineItemIdentifier=ID )? // 1082
	//    PLUS
	//    ( actionRequest=ID )? // 1229
	//    PLUS
	//    (
	//        itemNumberIdentification=ItemNumberIdentification // C212
	//        (
	//            PLUS
	//            sublineInformation=SublineInformation // C829
	//            (
	//                PLUS
	//                configurationLevelNumber=ID // 1222
	//                (
	//                    PLUS
	//                    configurationOperationCode=ID // 7083
	//                )?
	//            )?
	//        )?
	//    )?
	//    lineEnd=QUOTE_AND_NL
	//;
	public LINSegmentElements getLINSegmentAccess() {
		return pLINSegment;
	}
	
	public ParserRule getLINSegmentRule() {
		return getLINSegmentAccess().getRule();
	}
	
	////PRI+AAA:3630.1724::NTP:100:C62'
	//PRISegment:
	//    segment="PRI"
	//    PLUS
	//    sub=PriceInformation
	//    lineEnd=QUOTE_AND_NL
	//;
	public PRISegmentElements getPRISegmentAccess() {
		return pPRISegment;
	}
	
	public ParserRule getPRISegmentRule() {
		return getPRISegmentAccess().getRule();
	}
	
	////QTY+12:54:PCE'
	//QTYSegment:
	//    segment="QTY"
	//    (
	//        PLUS
	//        quantityDetails+=QuantityDetail // C186
	//    )*
	//    lineEnd=QUOTE_AND_NL
	//;
	public QTYSegmentElements getQTYSegmentAccess() {
		return pQTYSegment;
	}
	
	public ParserRule getQTYSegmentRule() {
		return getQTYSegmentAccess().getRule();
	}
	
	////CUX+2:EUR'
	//CUXSegment:
	//    segment="CUX"
	//    PLUS
	//    currencyDetails1=CurrencyDetail
	//    (
	//        PLUS
	//        currencyDetails2=CurrencyDetail
	//        (
	//            PLUS
	//            currencyExchangeRate=ID
	//            (
	//                PLUS
	//                exchangeRateCurrencyMarketIdentifier=ID
	//            )?
	//        )?
	//    )?
	//    lineEnd=QUOTE_AND_NL
	//;
	public CUXSegmentElements getCUXSegmentAccess() {
		return pCUXSegment;
	}
	
	public ParserRule getCUXSegmentRule() {
		return getCUXSegmentAccess().getRule();
	}
	
	////TAX+7+VAT'
	//TAXSegment:
	//    segment="TAX"
	//    PLUS
	//    taxFunctionCodeQualifier=ID // 5283
	//    PLUS
	//    taxType=TaxType // C241
	//    (
	//        PLUS
	//        ( taxAccountDetail=TaxAccountDetail )? // C533
	//        (
	//            PLUS
	//            ( taxAssessmentBasicValue=ID )? // 5286
	//            (
	//                PLUS
	//                ( taxDetail=TaxDetail )? // C243
	//                (
	//                    PLUS
	//                    ( taxCategoryCode=ID )? // 5305
	//                    (
	//                        PLUS
	//                        ( partyTaxIdentifier=ID )? // 3446
	//                        (
	//                            PLUS
	//                            ( calculationSequenceCode=ID )? // 1227
	//                        )?
	//                    )?
	//                )?
	//            )?
	//        )?
	//    )?
	//    lineEnd=QUOTE_AND_NL
	//;
	public TAXSegmentElements getTAXSegmentAccess() {
		return pTAXSegment;
	}
	
	public ParserRule getTAXSegmentRule() {
		return getTAXSegmentAccess().getRule();
	}
	
	////RFF+VA:382324067'
	//RFFSegment:
	//    segment="RFF"
	//    PLUS
	//    rff1=ID
	//    (
	//        COLON
	//        rff2=ID
	//    )?
	//    lineEnd=QUOTE_AND_NL
	//;
	public RFFSegmentElements getRFFSegmentAccess() {
		return pRFFSegment;
	}
	
	public ParserRule getRFFSegmentRule() {
		return getRFFSegmentAccess().getRule();
	}
	
	////NAD+BT+VAUXHALL MOTORS LTD::91'
	//NADSegment:
	//    segment="NAD"
	//    PLUS
	//    partyFunctionCodeQualifier=ID
	//    (
	//        PLUS
	//        partyIdentificationDetails=PartyIdentificationDetail // C082
	//        (
	//            PLUS
	//            nameAndAddress=NameAndAddress // C058
	//            (
	//                PLUS
	//                partyName=PartyName // C080
	//                (
	//                    PLUS
	//                    street=Street // C059
	//                    (
	//                        PLUS
	//                        cityName=ID // 3164
	//                        (
	//                            PLUS
	//                            countrySubEntityDetails=CountrySubEntityDetail // C819
	//                            (
	//                                PLUS
	//                                postalIdentificationCode=ID // 3251
	//                                (
	//                                    PLUS
	//                                    countryNameCode=ID // 3207
	//                                )?
	//                            )?
	//                        )?
	//                    )?
	//                )?
	//            )?
	//        )?
	//    )?
	//    lineEnd=QUOTE_AND_NL
	//;
	public NADSegmentElements getNADSegmentAccess() {
		return pNADSegment;
	}
	
	public ParserRule getNADSegmentRule() {
		return getNADSegmentAccess().getRule();
	}
	
	////DTM+137:199910060000:102'
	//DTMSegment:
	//    segment="DTM"
	//    (
	//        PLUS
	//        dateTimePeriods+=DateTimePeriod
	//    )*
	//    lineEnd=QUOTE_AND_NL
	//;
	public DTMSegmentElements getDTMSegmentAccess() {
		return pDTMSegment;
	}
	
	public ParserRule getDTMSegmentRule() {
		return getDTMSegmentAccess().getRule();
	}
	
	////BGM+381+1060113800026+9'
	//BGMSegment:
	//    segment="BGM"
	//    PLUS
	//    ( documentMessageName=DocumentMessage )?
	//    PLUS
	//    ( documentMessageIdentification=DocumentMessageIdentification )?
	//    PLUS
	//    ( messageFunctionCode=ID )?
	//    (
	//        PLUS
	//        responseTypeCode=ID
	//    )?
	//    lineEnd=QUOTE_AND_NL
	//;
	public BGMSegmentElements getBGMSegmentAccess() {
		return pBGMSegment;
	}
	
	public ParserRule getBGMSegmentRule() {
		return getBGMSegmentAccess().getRule();
	}
	
	////PAT+1'
	//PATSegment:
	//    segment="PAT"
	//    PLUS
	//    segmentCount=ID
	//    lineEnd=QUOTE_AND_NL
	//;
	public PATSegmentElements getPATSegmentAccess() {
		return pPATSegment;
	}
	
	public ParserRule getPATSegmentRule() {
		return getPATSegmentAccess().getRule();
	}
	
	////FTX+AFM+1++XPath 2.0 Programmer?'s Reference'
	//FTXSegment:
	//    segment="FTX"
	//    PLUS
	//    ( todo1=ID )?
	//    PLUS
	//    ( todo2=ID )?
	//    PLUS
	//    ( todo3=ID )?
	//    PLUS
	//    ( todo4=ID )?
	//    lineEnd=QUOTE_AND_NL
	//;
	public FTXSegmentElements getFTXSegmentAccess() {
		return pFTXSegment;
	}
	
	public ParserRule getFTXSegmentRule() {
		return getFTXSegmentAccess().getRule();
	}
	
	//ERCSegment:
	//    segment="ERC"
	//    (
	//        PLUS
	//        applicationErrorDetails+=ApplicationErrorDetail
	//    )*
	//    lineEnd=QUOTE_AND_NL
	//;
	public ERCSegmentElements getERCSegmentAccess() {
		return pERCSegment;
	}
	
	public ParserRule getERCSegmentRule() {
		return getERCSegmentAccess().getRule();
	}
	
	////CNT+2:4'
	//CNTSegment:
	//    segment="CNT"
	//    PLUS
	//    (
	//        ( todo1=ID )?
	//        COLON
	//        ( todo2=ID )?
	//    )?
	//    lineEnd=QUOTE_AND_NL
	//;
	public CNTSegmentElements getCNTSegmentAccess() {
		return pCNTSegment;
	}
	
	public ParserRule getCNTSegmentRule() {
		return getCNTSegmentAccess().getRule();
	}
	
	//CTASegment:
	//    segment="CTA"
	//    PLUS
	//    ( todo=ID )?
	//    lineEnd=QUOTE_AND_NL
	//;
	public CTASegmentElements getCTASegmentAccess() {
		return pCTASegment;
	}
	
	public ParserRule getCTASegmentRule() {
		return getCTASegmentAccess().getRule();
	}
	
	//PCISegment:
	//    segment="PCI"
	//    PLUS
	//    ( todo=ID )?
	//    lineEnd=QUOTE_AND_NL
	//;
	public PCISegmentElements getPCISegmentAccess() {
		return pPCISegment;
	}
	
	public ParserRule getPCISegmentRule() {
		return getPCISegmentAccess().getRule();
	}
	
	////UNS+S'
	//UNSSegment:
	//    segment="UNS"
	//    PLUS
	//    segmentCount=ID
	//    lineEnd=QUOTE_AND_NL
	//;
	public UNSSegmentElements getUNSSegmentAccess() {
		return pUNSSegment;
	}
	
	public ParserRule getUNSSegmentRule() {
		return getUNSSegmentAccess().getRule();
	}
	
	////UNT+9+1'
	//UNTSegment:
	//    segment="UNT"
	//    PLUS
	//    ( segmentCount=ID )?
	//    PLUS
	//    ( messageReferenceNumber=ID )?
	//    lineEnd=QUOTE_AND_NL
	//;
	public UNTSegmentElements getUNTSegmentAccess() {
		return pUNTSegment;
	}
	
	public ParserRule getUNTSegmentRule() {
		return getUNTSegmentAccess().getRule();
	}
	
	////UNZ+1+039I42XXTK0001'
	//UNZSegment:
	//    segment="UNZ"
	//    PLUS
	//    ( interchangeControlCount=ID )?
	//    PLUS
	//    ( interchangeControlRef=ID )?
	//    lineEnd=QUOTE_AND_NL
	//;
	public UNZSegmentElements getUNZSegmentAccess() {
		return pUNZSegment;
	}
	
	public ParserRule getUNZSegmentRule() {
		return getUNZSegmentAccess().getRule();
	}
	
	//// EDIFACT Functions
	//AbstractEdiFunction:
	//    UNBHeader |
	//    PriceInformation |
	//    MessageBodyFunction |
	//    MessageIndentifier |
	//    Relationship |
	//    ProductFunction |
	//    ItemNumberIdentification |
	//    SublineInformation |
	//    QuantityDetail |
	//    Street |
	//    CountrySubEntityDetail |
	//    PartyName |
	//    NameAndAddress |
	//    ApplicationErrorDetail |
	//    SystemDetailFunction |
	//    TaxDetail |
	//    TaxAccountDetail |
	//    TaxType |
	//    CurrencyDetail |
	//    DocumentMessageIdentification |
	//    DocumentMessage |
	//    OriginatorFunction |
	//    OriginatorIdentificationFunction |
	//    LocationFunction |
	//    InterchangerFunction |
	//    DateOnlyFunction |
	//    DateAndTimeFunction |
	//    DateTimePeriod
	//;
	public AbstractEdiFunctionElements getAbstractEdiFunctionAccess() {
		return pAbstractEdiFunction;
	}
	
	public ParserRule getAbstractEdiFunctionRule() {
		return getAbstractEdiFunctionAccess().getRule();
	}
	
	//UNBHeader:
	//    {UNBHeader}
	//    ( syntax=ID )?
	//    COLON
	//    ( num1=ID )?
	//;
	public UNBHeaderElements getUNBHeaderAccess() {
		return pUNBHeader;
	}
	
	public ParserRule getUNBHeaderRule() {
		return getUNBHeaderAccess().getRule();
	}
	
	//PriceInformation: // C509
	//    priceCodeQualifier=ID // 5125
	//    COLON
	//    ( priceAmount=ID )? // 5118
	//    COLON
	//    ( priceTypeCode=ID )? // 5375
	//    COLON
	//    ( priceSpecificationCode=ID )? // 5287
	//    COLON
	//    ( unitPriceBasisValue=ID )? // 5284
	//    COLON
	//    ( measurementUnitCode=ID )? // 6411
	//;
	public PriceInformationElements getPriceInformationAccess() {
		return pPriceInformation;
	}
	
	public ParserRule getPriceInformationRule() {
		return getPriceInformationAccess().getRule();
	}
	
	//MessageBodyFunction:
	//    type=ID
	//    COLON
	//    ( version=ID )?
	//    COLON
	//    ( release=ID )?
	//    COLON
	//    ( controllingAgency=ID )?
	//    (
	//        COLON
	//        more=ID
	//    )?
	//;
	public MessageBodyFunctionElements getMessageBodyFunctionAccess() {
		return pMessageBodyFunction;
	}
	
	public ParserRule getMessageBodyFunctionRule() {
		return getMessageBodyFunctionAccess().getRule();
	}
	
	//MessageIndentifier: // C709
	//    ( messageTypeCode=ID )? // 1475
	//    COLON
	//    versionIdentifier=ID // 1056
	//    (
	//        COLON
	//        releaseIdentifier=ID // 1058
	//        (
	//            COLON
	//            controllingAgencyIdentifier=ID // 1476
	//            (
	//                COLON
	//                messageImplementationIdentificationCode=ID // 1523
	//                (
	//                    COLON
	//                    revisionIdentifier=ID // 1060
	//                    (
	//                        COLON
	//                        documentStatusCode=ID // 1373
	//                    )?
	//                )?
	//            )?
	//        )?
	//    )?
	//;
	public MessageIndentifierElements getMessageIndentifierAccess() {
		return pMessageIndentifier;
	}
	
	public ParserRule getMessageIndentifierRule() {
		return getMessageIndentifierAccess().getRule();
	}
	
	//Relationship: // C941
	//    ( relationshipDescriptionCode=ID )? // 9143
	//    COLON
	//    codeListIdentificationCode=ID // 1131
	//    (
	//        COLON
	//        codeListResponsibleAgency=ID // 3055
	//        (
	//            COLON
	//            relationshipDescription=ID // 9142
	//        )?
	//    )?
	//;
	public RelationshipElements getRelationshipAccess() {
		return pRelationship;
	}
	
	public ParserRule getRelationshipRule() {
		return getRelationshipAccess().getRule();
	}
	
	//ProductFunction:
	//    bookingClass=ID
	//    (
	//        COLON
	//        avail=ID
	//    )?
	//;
	public ProductFunctionElements getProductFunctionAccess() {
		return pProductFunction;
	}
	
	public ParserRule getProductFunctionRule() {
		return getProductFunctionAccess().getRule();
	}
	
	//ItemNumberIdentification:
	//    itemIdentifier=ID // 7140
	//    COLON
	//    itemTypeIdentificationCode=ID // 7143
	//    (
	//        COLON
	//        codeListIdentificationCode=ID // 1131
	//        (
	//            COLON
	//            codeListResponsibleAgencyCode=ID // 3055
	//        )?
	//    )?
	//;
	public ItemNumberIdentificationElements getItemNumberIdentificationAccess() {
		return pItemNumberIdentification;
	}
	
	public ParserRule getItemNumberIdentificationRule() {
		return getItemNumberIdentificationAccess().getRule();
	}
	
	//SublineInformation:
	//    sublineIndicatorCode=ID // 5495
	//    (
	//        COLON
	//        lineItemIdentifier=ID // 1082
	//    )?
	//;
	public SublineInformationElements getSublineInformationAccess() {
		return pSublineInformation;
	}
	
	public ParserRule getSublineInformationRule() {
		return getSublineInformationAccess().getRule();
	}
	
	//QuantityDetail: // C186
	//    quantityTypeCodeQualifier=ID // 6063
	//    (
	//        COLON
	//        quantity=ID // 6060
	//        (
	//            COLON
	//            measurementUnitCode=ID // 6411
	//        )?
	//    )?
	//;
	public QuantityDetailElements getQuantityDetailAccess() {
		return pQuantityDetail;
	}
	
	public ParserRule getQuantityDetailRule() {
		return getQuantityDetailAccess().getRule();
	}
	
	//Street: // C059
	//    streetAndNumber+=ID // 3042
	//    (
	//        COLON
	//        streetAndNumber+=ID // 3042
	//        (
	//            COLON
	//            streetAndNumber+=ID // 3042
	//            (
	//                COLON
	//                streetAndNumber+=ID // 3042
	//                (
	//                    COLON
	//                    streetAndNumber+=ID // 3042
	//                )?
	//            )?
	//        )?
	//    )?
	//;
	public StreetElements getStreetAccess() {
		return pStreet;
	}
	
	public ParserRule getStreetRule() {
		return getStreetAccess().getRule();
	}
	
	//CountrySubEntityDetail: // C819
	//    countrySubEntityNameCode+=ID // 3229
	//    (
	//        COLON
	//        codeListIdentificationCode+=ID // 1131
	//        (
	//            COLON
	//            codeListResponsibleAgencyCode+=ID // 3055
	//            (
	//                COLON
	//                countrySubEntityName+=ID // 3228
	//            )?
	//        )?
	//    )?
	//;
	public CountrySubEntityDetailElements getCountrySubEntityDetailAccess() {
		return pCountrySubEntityDetail;
	}
	
	public ParserRule getCountrySubEntityDetailRule() {
		return getCountrySubEntityDetailAccess().getRule();
	}
	
	//PartyName: // C080
	//    partyName+=ID // 3036
	//    (
	//        COLON
	//        partyName+=ID // 3036
	//        (
	//            COLON
	//            partyName+=ID // 3036
	//            (
	//                COLON
	//                partyName+=ID // 3036
	//                (
	//                    COLON
	//                    partyName+=ID // 3036
	//                )?
	//            )?
	//        )?
	//    )?
	//;
	public PartyNameElements getPartyNameAccess() {
		return pPartyName;
	}
	
	public ParserRule getPartyNameRule() {
		return getPartyNameAccess().getRule();
	}
	
	//NameAndAddress: // C058
	//    nameAndAddress+=ID // 3124
	//    (
	//        COLON
	//        nameAndAddress+=ID // 3124
	//        (
	//            COLON
	//            nameAndAddress+=ID // 3124
	//            (
	//                COLON
	//                nameAndAddress+=ID // 3124
	//                (
	//                    COLON
	//                    nameAndAddress+=ID // 3124
	//                )?
	//            )?
	//        )?
	//    )?
	//;
	public NameAndAddressElements getNameAndAddressAccess() {
		return pNameAndAddress;
	}
	
	public ParserRule getNameAndAddressRule() {
		return getNameAndAddressAccess().getRule();
	}
	
	//PartyIdentificationDetail:
	//    partyIdentifier=ID // 3039
	//    (
	//        COLON
	//        ( codeListIdentificationCode=ID )? // 1331
	//        (
	//            COLON
	//            codeListResponsibleAgencyCode=ID // 3055
	//        )?
	//    )?
	//;
	public PartyIdentificationDetailElements getPartyIdentificationDetailAccess() {
		return pPartyIdentificationDetail;
	}
	
	public ParserRule getPartyIdentificationDetailRule() {
		return getPartyIdentificationDetailAccess().getRule();
	}
	
	//ApplicationErrorDetail: // C901
	//    applictionErrorCode=ID // 9321
	//    (
	//        COLON
	//        codeListIdentificationCode=ID // 1331
	//        (
	//            COLON
	//            codeListResponsibleAgencyCode=ID // 3055
	//        )?
	//    )?
	//;
	public ApplicationErrorDetailElements getApplicationErrorDetailAccess() {
		return pApplicationErrorDetail;
	}
	
	public ParserRule getApplicationErrorDetailRule() {
		return getApplicationErrorDetailAccess().getRule();
	}
	
	//SystemDetailFunction:
	//    companyIdentification=ID
	//    (
	//        COLON
	//        locationCode=ID
	//        (
	//            COLON
	//            locationName=ID
	//        )?
	//    )?
	//;
	public SystemDetailFunctionElements getSystemDetailFunctionAccess() {
		return pSystemDetailFunction;
	}
	
	public ParserRule getSystemDetailFunctionRule() {
		return getSystemDetailFunctionAccess().getRule();
	}
	
	//TaxDetail: // C243
	//    ( taxRateDescriptionCode=ID )? // 5279
	//    COLON
	//    ( codeListIdentificationCode1=ID )? // 1131
	//    COLON
	//    ( codeListResponsibleAgencyCode1=ID )? // 3055
	//    (
	//        COLON
	//        taxRateDescription=ID // 5278
	//        (
	//            COLON
	//            taxRateBasisCode=ID // 5273
	//            (
	//                COLON
	//                codeListIdentificationCode2=ID // 1131
	//                (
	//                    COLON
	//                    codeListResponsibleAgencyCode2=ID // 3055
	//                )?
	//            )?
	//        )?
	//    )?
	//;
	public TaxDetailElements getTaxDetailAccess() {
		return pTaxDetail;
	}
	
	public ParserRule getTaxDetailRule() {
		return getTaxDetailAccess().getRule();
	}
	
	//TaxAccountDetail: // C533
	//    taxAccountCode=ID // 5289
	//    (
	//        COLON
	//        codeListIdentificationCode=ID // 1131
	//        (
	//            COLON
	//            codeListResponsibleAgencyCode=ID // 3055
	//        )?
	//    )?
	//;
	public TaxAccountDetailElements getTaxAccountDetailAccess() {
		return pTaxAccountDetail;
	}
	
	public ParserRule getTaxAccountDetailRule() {
		return getTaxAccountDetailAccess().getRule();
	}
	
	//TaxType: // C241
	//    taxTypeNameCode=ID // 5153
	//    (
	//        COLON
	//        codeListIdentificationCode=ID // 1131
	//        (
	//            COLON
	//            codeListResponsibleAgencyCode=ID // 3055
	//            (
	//                COLON
	//                taxTypeName=ID // 5152
	//            )?
	//        )?
	//    )?
	//;
	public TaxTypeElements getTaxTypeAccess() {
		return pTaxType;
	}
	
	public ParserRule getTaxTypeRule() {
		return getTaxTypeAccess().getRule();
	}
	
	//CurrencyDetail: // C504
	//    currencyUsageCodeQualifier=ID // 6347
	//    (
	//        COLON
	//        currencyIdentificationCode=ID // 6345
	//        (
	//            COLON
	//            currencyTypeCodeQualifier=ID // 6343
	//            (
	//                COLON
	//                currencyRateValue=ID // 6348
	//            )?
	//        )?
	//    )?
	//;
	public CurrencyDetailElements getCurrencyDetailAccess() {
		return pCurrencyDetail;
	}
	
	public ParserRule getCurrencyDetailRule() {
		return getCurrencyDetailAccess().getRule();
	}
	
	//DocumentMessageIdentification: // C106
	//    documentIdentifier=ID // 1004
	//    (
	//        COLON
	//        versionIdentifier=ID // 1056
	//        (
	//            COLON
	//            revisionIdentifier=ID // 1060
	//        )?
	//    )?
	//;
	public DocumentMessageIdentificationElements getDocumentMessageIdentificationAccess() {
		return pDocumentMessageIdentification;
	}
	
	public ParserRule getDocumentMessageIdentificationRule() {
		return getDocumentMessageIdentificationAccess().getRule();
	}
	
	//DocumentMessage: // C002
	//    documentNameCode=ID // 1001
	//    (
	//        COLON
	//        codeListIdentificationCode=ID // 1131
	//        (
	//            COLON
	//            codeListResponsibleAgencyCode=ID // 3055
	//            (
	//                COLON
	//                documentName=ID // 1000
	//            )?
	//        )?
	//    )?
	//;
	public DocumentMessageElements getDocumentMessageAccess() {
		return pDocumentMessage;
	}
	
	public ParserRule getDocumentMessageRule() {
		return getDocumentMessageAccess().getRule();
	}
	
	//OriginatorFunction:
	//    countryCode=ID
	//    (
	//        COLON
	//        currencyCode=ID
	//        (
	//            COLON
	//            languageCode=ID
	//        )?
	//    )?
	//;
	public OriginatorFunctionElements getOriginatorFunctionAccess() {
		return pOriginatorFunction;
	}
	
	public ParserRule getOriginatorFunctionRule() {
		return getOriginatorFunctionAccess().getRule();
	}
	
	//OriginatorIdentificationFunction:
	//    travelAgentId=ID
	//    (
	//        COLON
	//        inHouseId1=ID?
	//        (
	//            COLON
	//            inHouseId2=ID
	//        )?
	//    )?
	//;
	public OriginatorIdentificationFunctionElements getOriginatorIdentificationFunctionAccess() {
		return pOriginatorIdentificationFunction;
	}
	
	public ParserRule getOriginatorIdentificationFunctionRule() {
		return getOriginatorIdentificationFunctionAccess().getRule();
	}
	
	//LocationFunction:
	//    locationId=ID
	//    (
	//        COLON
	//        locationName=ID
	//    )?
	//;
	public LocationFunctionElements getLocationFunctionAccess() {
		return pLocationFunction;
	}
	
	public ParserRule getLocationFunctionRule() {
		return getLocationFunctionAccess().getRule();
	}
	
	//InterchangerFunction:
	//    interchange=ID
	//    (
	//        COLON
	//        interchange2=ID
	//    )?
	//;
	public InterchangerFunctionElements getInterchangerFunctionAccess() {
		return pInterchangerFunction;
	}
	
	public ParserRule getInterchangerFunctionRule() {
		return getInterchangerFunctionAccess().getRule();
	}
	
	//DateOnlyFunction:
	//    date6=ID
	//;
	public DateOnlyFunctionElements getDateOnlyFunctionAccess() {
		return pDateOnlyFunction;
	}
	
	public ParserRule getDateOnlyFunctionRule() {
		return getDateOnlyFunctionAccess().getRule();
	}
	
	//DateAndTimeFunction:
	//    date6=ID
	//    COLON
	//    time4=ID
	//;
	public DateAndTimeFunctionElements getDateAndTimeFunctionAccess() {
		return pDateAndTimeFunction;
	}
	
	public ParserRule getDateAndTimeFunctionRule() {
		return getDateAndTimeFunctionAccess().getRule();
	}
	
	//DateTimePeriod:
	//    dateTimePeriodFunctionCodeQualifier=ID
	//    (
	//        COLON
	//        dateTimePeriodValue=ID
	//        (
	//            COLON
	//            dateTimePeriodFormatCode=ID
	//        )?
	//    )?
	//;
	public DateTimePeriodElements getDateTimePeriodAccess() {
		return pDateTimePeriod;
	}
	
	public ParserRule getDateTimePeriodRule() {
		return getDateTimePeriodAccess().getRule();
	}
	
	//terminal QUOTE_AND_NL: ( "'" | "~" ) ( "\n" )?;
	public TerminalRule getQUOTE_AND_NLRule() {
		return tQUOTE_AND_NL;
	}
	
	//terminal PLUS: ( "+" | "*" );
	public TerminalRule getPLUSRule() {
		return tPLUS;
	}
	
	//terminal COLON: ":";
	public TerminalRule getCOLONRule() {
		return tCOLON;
	}
	
	////terminal INT_DATE returns ecore::EString: ( "0".."9" )( "0".."9" )( "0".."9" )( "0".."9" )( "0".."9" )( "0".."9" );
	////terminal INT_TIME returns ecore::EString: ( "0".."9" )( "0".."9" )( "0".."9" )( "0".."9" );
	//@Override
	//terminal INT returns ecore::EInt: ( "0".."9" )( "0".."9" )( "0".."9" )( "0".."9" )( "0".."9" )( "0".."9" )( "0".."9" )( "0".."9" )( "0".."9" )( "0".."9" )( "0".."9" )( "0".."9" )( "0".."9" )( "0".."9" )( "0".."9" )( "0".."9" );
	public TerminalRule getINTRule() {
		return tINT;
	}
	
	//@Override
	//terminal ID returns ecore::EString: ( "a".."z" | "A".."Z" | "0".."9" ) ( ( "a".."z" | "A".."Z" | "0".."9" | "-" | "_" | "." | " " | "?" )* ( "a".."z" | "A".."Z" | "0".."9" ) )?;
	public TerminalRule getIDRule() {
		return tID;
	}
	
	//@Override
	//terminal STRING returns ecore::EString: '"' ( '\\' . /* 'b'|'t'|'n'|'f'|'r'|'u'|'"'|"'"|'\\' */ | !('\\'|'"') )* '"';
	public TerminalRule getSTRINGRule() {
		return tSTRING;
	}
	
	//@Override
	//terminal WS: ( "\t" | "\r" | "\n" )+;
	public TerminalRule getWSRule() {
		return tWS;
	}
	
	//terminal ML_COMMENT : '/*' -> '*/';
	public TerminalRule getML_COMMENTRule() {
		return gaTerminals.getML_COMMENTRule();
	}
	
	//terminal SL_COMMENT : '//' !('\n'|'\r')* ('\r'? '\n')?;
	public TerminalRule getSL_COMMENTRule() {
		return gaTerminals.getSL_COMMENTRule();
	}
	
	//terminal ANY_OTHER: .;
	public TerminalRule getANY_OTHERRule() {
		return gaTerminals.getANY_OTHERRule();
	}
}
