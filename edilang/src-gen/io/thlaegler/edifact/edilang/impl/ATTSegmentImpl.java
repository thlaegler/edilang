/**
 * generated by Xtext 2.26.0
 */
package io.thlaegler.edifact.edilang.impl;

import io.thlaegler.edifact.edilang.ATTSegment;
import io.thlaegler.edifact.edilang.AttributeDetail;
import io.thlaegler.edifact.edilang.AttributeType;
import io.thlaegler.edifact.edilang.EdilangPackage;

import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>ATT Segment</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link io.thlaegler.edifact.edilang.impl.ATTSegmentImpl#getAttributeFunctionCodeQualifier <em>Attribute Function Code Qualifier</em>}</li>
 *   <li>{@link io.thlaegler.edifact.edilang.impl.ATTSegmentImpl#getAttributeType <em>Attribute Type</em>}</li>
 *   <li>{@link io.thlaegler.edifact.edilang.impl.ATTSegmentImpl#getAttributeDetail <em>Attribute Detail</em>}</li>
 * </ul>
 *
 * @generated
 */
public class ATTSegmentImpl extends AbstractEdiSegmentImpl implements ATTSegment
{
  /**
   * The default value of the '{@link #getAttributeFunctionCodeQualifier() <em>Attribute Function Code Qualifier</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getAttributeFunctionCodeQualifier()
   * @generated
   * @ordered
   */
  protected static final String ATTRIBUTE_FUNCTION_CODE_QUALIFIER_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getAttributeFunctionCodeQualifier() <em>Attribute Function Code Qualifier</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getAttributeFunctionCodeQualifier()
   * @generated
   * @ordered
   */
  protected String attributeFunctionCodeQualifier = ATTRIBUTE_FUNCTION_CODE_QUALIFIER_EDEFAULT;

  /**
   * The cached value of the '{@link #getAttributeType() <em>Attribute Type</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getAttributeType()
   * @generated
   * @ordered
   */
  protected AttributeType attributeType;

  /**
   * The cached value of the '{@link #getAttributeDetail() <em>Attribute Detail</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getAttributeDetail()
   * @generated
   * @ordered
   */
  protected AttributeDetail attributeDetail;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected ATTSegmentImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return EdilangPackage.eINSTANCE.getATTSegment();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getAttributeFunctionCodeQualifier()
  {
    return attributeFunctionCodeQualifier;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setAttributeFunctionCodeQualifier(String newAttributeFunctionCodeQualifier)
  {
    String oldAttributeFunctionCodeQualifier = attributeFunctionCodeQualifier;
    attributeFunctionCodeQualifier = newAttributeFunctionCodeQualifier;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, EdilangPackage.ATT_SEGMENT__ATTRIBUTE_FUNCTION_CODE_QUALIFIER, oldAttributeFunctionCodeQualifier, attributeFunctionCodeQualifier));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public AttributeType getAttributeType()
  {
    return attributeType;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetAttributeType(AttributeType newAttributeType, NotificationChain msgs)
  {
    AttributeType oldAttributeType = attributeType;
    attributeType = newAttributeType;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, EdilangPackage.ATT_SEGMENT__ATTRIBUTE_TYPE, oldAttributeType, newAttributeType);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setAttributeType(AttributeType newAttributeType)
  {
    if (newAttributeType != attributeType)
    {
      NotificationChain msgs = null;
      if (attributeType != null)
        msgs = ((InternalEObject)attributeType).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - EdilangPackage.ATT_SEGMENT__ATTRIBUTE_TYPE, null, msgs);
      if (newAttributeType != null)
        msgs = ((InternalEObject)newAttributeType).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - EdilangPackage.ATT_SEGMENT__ATTRIBUTE_TYPE, null, msgs);
      msgs = basicSetAttributeType(newAttributeType, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, EdilangPackage.ATT_SEGMENT__ATTRIBUTE_TYPE, newAttributeType, newAttributeType));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public AttributeDetail getAttributeDetail()
  {
    return attributeDetail;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetAttributeDetail(AttributeDetail newAttributeDetail, NotificationChain msgs)
  {
    AttributeDetail oldAttributeDetail = attributeDetail;
    attributeDetail = newAttributeDetail;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, EdilangPackage.ATT_SEGMENT__ATTRIBUTE_DETAIL, oldAttributeDetail, newAttributeDetail);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setAttributeDetail(AttributeDetail newAttributeDetail)
  {
    if (newAttributeDetail != attributeDetail)
    {
      NotificationChain msgs = null;
      if (attributeDetail != null)
        msgs = ((InternalEObject)attributeDetail).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - EdilangPackage.ATT_SEGMENT__ATTRIBUTE_DETAIL, null, msgs);
      if (newAttributeDetail != null)
        msgs = ((InternalEObject)newAttributeDetail).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - EdilangPackage.ATT_SEGMENT__ATTRIBUTE_DETAIL, null, msgs);
      msgs = basicSetAttributeDetail(newAttributeDetail, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, EdilangPackage.ATT_SEGMENT__ATTRIBUTE_DETAIL, newAttributeDetail, newAttributeDetail));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case EdilangPackage.ATT_SEGMENT__ATTRIBUTE_TYPE:
        return basicSetAttributeType(null, msgs);
      case EdilangPackage.ATT_SEGMENT__ATTRIBUTE_DETAIL:
        return basicSetAttributeDetail(null, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case EdilangPackage.ATT_SEGMENT__ATTRIBUTE_FUNCTION_CODE_QUALIFIER:
        return getAttributeFunctionCodeQualifier();
      case EdilangPackage.ATT_SEGMENT__ATTRIBUTE_TYPE:
        return getAttributeType();
      case EdilangPackage.ATT_SEGMENT__ATTRIBUTE_DETAIL:
        return getAttributeDetail();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case EdilangPackage.ATT_SEGMENT__ATTRIBUTE_FUNCTION_CODE_QUALIFIER:
        setAttributeFunctionCodeQualifier((String)newValue);
        return;
      case EdilangPackage.ATT_SEGMENT__ATTRIBUTE_TYPE:
        setAttributeType((AttributeType)newValue);
        return;
      case EdilangPackage.ATT_SEGMENT__ATTRIBUTE_DETAIL:
        setAttributeDetail((AttributeDetail)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case EdilangPackage.ATT_SEGMENT__ATTRIBUTE_FUNCTION_CODE_QUALIFIER:
        setAttributeFunctionCodeQualifier(ATTRIBUTE_FUNCTION_CODE_QUALIFIER_EDEFAULT);
        return;
      case EdilangPackage.ATT_SEGMENT__ATTRIBUTE_TYPE:
        setAttributeType((AttributeType)null);
        return;
      case EdilangPackage.ATT_SEGMENT__ATTRIBUTE_DETAIL:
        setAttributeDetail((AttributeDetail)null);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case EdilangPackage.ATT_SEGMENT__ATTRIBUTE_FUNCTION_CODE_QUALIFIER:
        return ATTRIBUTE_FUNCTION_CODE_QUALIFIER_EDEFAULT == null ? attributeFunctionCodeQualifier != null : !ATTRIBUTE_FUNCTION_CODE_QUALIFIER_EDEFAULT.equals(attributeFunctionCodeQualifier);
      case EdilangPackage.ATT_SEGMENT__ATTRIBUTE_TYPE:
        return attributeType != null;
      case EdilangPackage.ATT_SEGMENT__ATTRIBUTE_DETAIL:
        return attributeDetail != null;
    }
    return super.eIsSet(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String toString()
  {
    if (eIsProxy()) return super.toString();

    StringBuilder result = new StringBuilder(super.toString());
    result.append(" (attributeFunctionCodeQualifier: ");
    result.append(attributeFunctionCodeQualifier);
    result.append(')');
    return result.toString();
  }

} //ATTSegmentImpl
