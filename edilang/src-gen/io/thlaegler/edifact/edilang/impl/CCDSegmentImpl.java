/**
 * generated by Xtext 2.26.0
 */
package io.thlaegler.edifact.edilang.impl;

import io.thlaegler.edifact.edilang.CCDSegment;
import io.thlaegler.edifact.edilang.EdilangPackage;

import org.eclipse.emf.common.notify.Notification;

import org.eclipse.emf.ecore.EClass;

import org.eclipse.emf.ecore.impl.ENotificationImpl;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>CCD Segment</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link io.thlaegler.edifact.edilang.impl.CCDSegmentImpl#getCreditCoverRequestTypeCode <em>Credit Cover Request Type Code</em>}</li>
 *   <li>{@link io.thlaegler.edifact.edilang.impl.CCDSegmentImpl#getCreditCoverResponseTypeCode <em>Credit Cover Response Type Code</em>}</li>
 *   <li>{@link io.thlaegler.edifact.edilang.impl.CCDSegmentImpl#getCreditCoverRequestReasonCode <em>Credit Cover Request Reason Code</em>}</li>
 * </ul>
 *
 * @generated
 */
public class CCDSegmentImpl extends AbstractEdiSegmentImpl implements CCDSegment
{
  /**
   * The default value of the '{@link #getCreditCoverRequestTypeCode() <em>Credit Cover Request Type Code</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getCreditCoverRequestTypeCode()
   * @generated
   * @ordered
   */
  protected static final String CREDIT_COVER_REQUEST_TYPE_CODE_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getCreditCoverRequestTypeCode() <em>Credit Cover Request Type Code</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getCreditCoverRequestTypeCode()
   * @generated
   * @ordered
   */
  protected String creditCoverRequestTypeCode = CREDIT_COVER_REQUEST_TYPE_CODE_EDEFAULT;

  /**
   * The default value of the '{@link #getCreditCoverResponseTypeCode() <em>Credit Cover Response Type Code</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getCreditCoverResponseTypeCode()
   * @generated
   * @ordered
   */
  protected static final String CREDIT_COVER_RESPONSE_TYPE_CODE_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getCreditCoverResponseTypeCode() <em>Credit Cover Response Type Code</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getCreditCoverResponseTypeCode()
   * @generated
   * @ordered
   */
  protected String creditCoverResponseTypeCode = CREDIT_COVER_RESPONSE_TYPE_CODE_EDEFAULT;

  /**
   * The default value of the '{@link #getCreditCoverRequestReasonCode() <em>Credit Cover Request Reason Code</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getCreditCoverRequestReasonCode()
   * @generated
   * @ordered
   */
  protected static final String CREDIT_COVER_REQUEST_REASON_CODE_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getCreditCoverRequestReasonCode() <em>Credit Cover Request Reason Code</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getCreditCoverRequestReasonCode()
   * @generated
   * @ordered
   */
  protected String creditCoverRequestReasonCode = CREDIT_COVER_REQUEST_REASON_CODE_EDEFAULT;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected CCDSegmentImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return EdilangPackage.eINSTANCE.getCCDSegment();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getCreditCoverRequestTypeCode()
  {
    return creditCoverRequestTypeCode;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setCreditCoverRequestTypeCode(String newCreditCoverRequestTypeCode)
  {
    String oldCreditCoverRequestTypeCode = creditCoverRequestTypeCode;
    creditCoverRequestTypeCode = newCreditCoverRequestTypeCode;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, EdilangPackage.CCD_SEGMENT__CREDIT_COVER_REQUEST_TYPE_CODE, oldCreditCoverRequestTypeCode, creditCoverRequestTypeCode));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getCreditCoverResponseTypeCode()
  {
    return creditCoverResponseTypeCode;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setCreditCoverResponseTypeCode(String newCreditCoverResponseTypeCode)
  {
    String oldCreditCoverResponseTypeCode = creditCoverResponseTypeCode;
    creditCoverResponseTypeCode = newCreditCoverResponseTypeCode;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, EdilangPackage.CCD_SEGMENT__CREDIT_COVER_RESPONSE_TYPE_CODE, oldCreditCoverResponseTypeCode, creditCoverResponseTypeCode));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getCreditCoverRequestReasonCode()
  {
    return creditCoverRequestReasonCode;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setCreditCoverRequestReasonCode(String newCreditCoverRequestReasonCode)
  {
    String oldCreditCoverRequestReasonCode = creditCoverRequestReasonCode;
    creditCoverRequestReasonCode = newCreditCoverRequestReasonCode;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, EdilangPackage.CCD_SEGMENT__CREDIT_COVER_REQUEST_REASON_CODE, oldCreditCoverRequestReasonCode, creditCoverRequestReasonCode));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case EdilangPackage.CCD_SEGMENT__CREDIT_COVER_REQUEST_TYPE_CODE:
        return getCreditCoverRequestTypeCode();
      case EdilangPackage.CCD_SEGMENT__CREDIT_COVER_RESPONSE_TYPE_CODE:
        return getCreditCoverResponseTypeCode();
      case EdilangPackage.CCD_SEGMENT__CREDIT_COVER_REQUEST_REASON_CODE:
        return getCreditCoverRequestReasonCode();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case EdilangPackage.CCD_SEGMENT__CREDIT_COVER_REQUEST_TYPE_CODE:
        setCreditCoverRequestTypeCode((String)newValue);
        return;
      case EdilangPackage.CCD_SEGMENT__CREDIT_COVER_RESPONSE_TYPE_CODE:
        setCreditCoverResponseTypeCode((String)newValue);
        return;
      case EdilangPackage.CCD_SEGMENT__CREDIT_COVER_REQUEST_REASON_CODE:
        setCreditCoverRequestReasonCode((String)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case EdilangPackage.CCD_SEGMENT__CREDIT_COVER_REQUEST_TYPE_CODE:
        setCreditCoverRequestTypeCode(CREDIT_COVER_REQUEST_TYPE_CODE_EDEFAULT);
        return;
      case EdilangPackage.CCD_SEGMENT__CREDIT_COVER_RESPONSE_TYPE_CODE:
        setCreditCoverResponseTypeCode(CREDIT_COVER_RESPONSE_TYPE_CODE_EDEFAULT);
        return;
      case EdilangPackage.CCD_SEGMENT__CREDIT_COVER_REQUEST_REASON_CODE:
        setCreditCoverRequestReasonCode(CREDIT_COVER_REQUEST_REASON_CODE_EDEFAULT);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case EdilangPackage.CCD_SEGMENT__CREDIT_COVER_REQUEST_TYPE_CODE:
        return CREDIT_COVER_REQUEST_TYPE_CODE_EDEFAULT == null ? creditCoverRequestTypeCode != null : !CREDIT_COVER_REQUEST_TYPE_CODE_EDEFAULT.equals(creditCoverRequestTypeCode);
      case EdilangPackage.CCD_SEGMENT__CREDIT_COVER_RESPONSE_TYPE_CODE:
        return CREDIT_COVER_RESPONSE_TYPE_CODE_EDEFAULT == null ? creditCoverResponseTypeCode != null : !CREDIT_COVER_RESPONSE_TYPE_CODE_EDEFAULT.equals(creditCoverResponseTypeCode);
      case EdilangPackage.CCD_SEGMENT__CREDIT_COVER_REQUEST_REASON_CODE:
        return CREDIT_COVER_REQUEST_REASON_CODE_EDEFAULT == null ? creditCoverRequestReasonCode != null : !CREDIT_COVER_REQUEST_REASON_CODE_EDEFAULT.equals(creditCoverRequestReasonCode);
    }
    return super.eIsSet(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String toString()
  {
    if (eIsProxy()) return super.toString();

    StringBuilder result = new StringBuilder(super.toString());
    result.append(" (creditCoverRequestTypeCode: ");
    result.append(creditCoverRequestTypeCode);
    result.append(", creditCoverResponseTypeCode: ");
    result.append(creditCoverResponseTypeCode);
    result.append(", creditCoverRequestReasonCode: ");
    result.append(creditCoverRequestReasonCode);
    result.append(')');
    return result.toString();
  }

} //CCDSegmentImpl
