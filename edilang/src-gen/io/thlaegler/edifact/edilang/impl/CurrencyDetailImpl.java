/**
 * generated by Xtext 2.26.0
 */
package io.thlaegler.edifact.edilang.impl;

import io.thlaegler.edifact.edilang.CurrencyDetail;
import io.thlaegler.edifact.edilang.EdilangPackage;

import org.eclipse.emf.common.notify.Notification;

import org.eclipse.emf.ecore.EClass;

import org.eclipse.emf.ecore.impl.ENotificationImpl;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Currency Detail</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link io.thlaegler.edifact.edilang.impl.CurrencyDetailImpl#getCurrencyUsageCodeQualifier <em>Currency Usage Code Qualifier</em>}</li>
 *   <li>{@link io.thlaegler.edifact.edilang.impl.CurrencyDetailImpl#getCurrencyIdentificationCode <em>Currency Identification Code</em>}</li>
 *   <li>{@link io.thlaegler.edifact.edilang.impl.CurrencyDetailImpl#getCurrencyTypeCodeQualifier <em>Currency Type Code Qualifier</em>}</li>
 *   <li>{@link io.thlaegler.edifact.edilang.impl.CurrencyDetailImpl#getCurrencyRateValue <em>Currency Rate Value</em>}</li>
 * </ul>
 *
 * @generated
 */
public class CurrencyDetailImpl extends AbstractEdiFunctionImpl implements CurrencyDetail
{
  /**
   * The default value of the '{@link #getCurrencyUsageCodeQualifier() <em>Currency Usage Code Qualifier</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getCurrencyUsageCodeQualifier()
   * @generated
   * @ordered
   */
  protected static final String CURRENCY_USAGE_CODE_QUALIFIER_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getCurrencyUsageCodeQualifier() <em>Currency Usage Code Qualifier</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getCurrencyUsageCodeQualifier()
   * @generated
   * @ordered
   */
  protected String currencyUsageCodeQualifier = CURRENCY_USAGE_CODE_QUALIFIER_EDEFAULT;

  /**
   * The default value of the '{@link #getCurrencyIdentificationCode() <em>Currency Identification Code</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getCurrencyIdentificationCode()
   * @generated
   * @ordered
   */
  protected static final String CURRENCY_IDENTIFICATION_CODE_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getCurrencyIdentificationCode() <em>Currency Identification Code</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getCurrencyIdentificationCode()
   * @generated
   * @ordered
   */
  protected String currencyIdentificationCode = CURRENCY_IDENTIFICATION_CODE_EDEFAULT;

  /**
   * The default value of the '{@link #getCurrencyTypeCodeQualifier() <em>Currency Type Code Qualifier</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getCurrencyTypeCodeQualifier()
   * @generated
   * @ordered
   */
  protected static final String CURRENCY_TYPE_CODE_QUALIFIER_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getCurrencyTypeCodeQualifier() <em>Currency Type Code Qualifier</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getCurrencyTypeCodeQualifier()
   * @generated
   * @ordered
   */
  protected String currencyTypeCodeQualifier = CURRENCY_TYPE_CODE_QUALIFIER_EDEFAULT;

  /**
   * The default value of the '{@link #getCurrencyRateValue() <em>Currency Rate Value</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getCurrencyRateValue()
   * @generated
   * @ordered
   */
  protected static final String CURRENCY_RATE_VALUE_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getCurrencyRateValue() <em>Currency Rate Value</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getCurrencyRateValue()
   * @generated
   * @ordered
   */
  protected String currencyRateValue = CURRENCY_RATE_VALUE_EDEFAULT;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected CurrencyDetailImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return EdilangPackage.Literals.CURRENCY_DETAIL;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getCurrencyUsageCodeQualifier()
  {
    return currencyUsageCodeQualifier;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setCurrencyUsageCodeQualifier(String newCurrencyUsageCodeQualifier)
  {
    String oldCurrencyUsageCodeQualifier = currencyUsageCodeQualifier;
    currencyUsageCodeQualifier = newCurrencyUsageCodeQualifier;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, EdilangPackage.CURRENCY_DETAIL__CURRENCY_USAGE_CODE_QUALIFIER, oldCurrencyUsageCodeQualifier, currencyUsageCodeQualifier));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getCurrencyIdentificationCode()
  {
    return currencyIdentificationCode;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setCurrencyIdentificationCode(String newCurrencyIdentificationCode)
  {
    String oldCurrencyIdentificationCode = currencyIdentificationCode;
    currencyIdentificationCode = newCurrencyIdentificationCode;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, EdilangPackage.CURRENCY_DETAIL__CURRENCY_IDENTIFICATION_CODE, oldCurrencyIdentificationCode, currencyIdentificationCode));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getCurrencyTypeCodeQualifier()
  {
    return currencyTypeCodeQualifier;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setCurrencyTypeCodeQualifier(String newCurrencyTypeCodeQualifier)
  {
    String oldCurrencyTypeCodeQualifier = currencyTypeCodeQualifier;
    currencyTypeCodeQualifier = newCurrencyTypeCodeQualifier;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, EdilangPackage.CURRENCY_DETAIL__CURRENCY_TYPE_CODE_QUALIFIER, oldCurrencyTypeCodeQualifier, currencyTypeCodeQualifier));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getCurrencyRateValue()
  {
    return currencyRateValue;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setCurrencyRateValue(String newCurrencyRateValue)
  {
    String oldCurrencyRateValue = currencyRateValue;
    currencyRateValue = newCurrencyRateValue;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, EdilangPackage.CURRENCY_DETAIL__CURRENCY_RATE_VALUE, oldCurrencyRateValue, currencyRateValue));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case EdilangPackage.CURRENCY_DETAIL__CURRENCY_USAGE_CODE_QUALIFIER:
        return getCurrencyUsageCodeQualifier();
      case EdilangPackage.CURRENCY_DETAIL__CURRENCY_IDENTIFICATION_CODE:
        return getCurrencyIdentificationCode();
      case EdilangPackage.CURRENCY_DETAIL__CURRENCY_TYPE_CODE_QUALIFIER:
        return getCurrencyTypeCodeQualifier();
      case EdilangPackage.CURRENCY_DETAIL__CURRENCY_RATE_VALUE:
        return getCurrencyRateValue();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case EdilangPackage.CURRENCY_DETAIL__CURRENCY_USAGE_CODE_QUALIFIER:
        setCurrencyUsageCodeQualifier((String)newValue);
        return;
      case EdilangPackage.CURRENCY_DETAIL__CURRENCY_IDENTIFICATION_CODE:
        setCurrencyIdentificationCode((String)newValue);
        return;
      case EdilangPackage.CURRENCY_DETAIL__CURRENCY_TYPE_CODE_QUALIFIER:
        setCurrencyTypeCodeQualifier((String)newValue);
        return;
      case EdilangPackage.CURRENCY_DETAIL__CURRENCY_RATE_VALUE:
        setCurrencyRateValue((String)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case EdilangPackage.CURRENCY_DETAIL__CURRENCY_USAGE_CODE_QUALIFIER:
        setCurrencyUsageCodeQualifier(CURRENCY_USAGE_CODE_QUALIFIER_EDEFAULT);
        return;
      case EdilangPackage.CURRENCY_DETAIL__CURRENCY_IDENTIFICATION_CODE:
        setCurrencyIdentificationCode(CURRENCY_IDENTIFICATION_CODE_EDEFAULT);
        return;
      case EdilangPackage.CURRENCY_DETAIL__CURRENCY_TYPE_CODE_QUALIFIER:
        setCurrencyTypeCodeQualifier(CURRENCY_TYPE_CODE_QUALIFIER_EDEFAULT);
        return;
      case EdilangPackage.CURRENCY_DETAIL__CURRENCY_RATE_VALUE:
        setCurrencyRateValue(CURRENCY_RATE_VALUE_EDEFAULT);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case EdilangPackage.CURRENCY_DETAIL__CURRENCY_USAGE_CODE_QUALIFIER:
        return CURRENCY_USAGE_CODE_QUALIFIER_EDEFAULT == null ? currencyUsageCodeQualifier != null : !CURRENCY_USAGE_CODE_QUALIFIER_EDEFAULT.equals(currencyUsageCodeQualifier);
      case EdilangPackage.CURRENCY_DETAIL__CURRENCY_IDENTIFICATION_CODE:
        return CURRENCY_IDENTIFICATION_CODE_EDEFAULT == null ? currencyIdentificationCode != null : !CURRENCY_IDENTIFICATION_CODE_EDEFAULT.equals(currencyIdentificationCode);
      case EdilangPackage.CURRENCY_DETAIL__CURRENCY_TYPE_CODE_QUALIFIER:
        return CURRENCY_TYPE_CODE_QUALIFIER_EDEFAULT == null ? currencyTypeCodeQualifier != null : !CURRENCY_TYPE_CODE_QUALIFIER_EDEFAULT.equals(currencyTypeCodeQualifier);
      case EdilangPackage.CURRENCY_DETAIL__CURRENCY_RATE_VALUE:
        return CURRENCY_RATE_VALUE_EDEFAULT == null ? currencyRateValue != null : !CURRENCY_RATE_VALUE_EDEFAULT.equals(currencyRateValue);
    }
    return super.eIsSet(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String toString()
  {
    if (eIsProxy()) return super.toString();

    StringBuilder result = new StringBuilder(super.toString());
    result.append(" (currencyUsageCodeQualifier: ");
    result.append(currencyUsageCodeQualifier);
    result.append(", currencyIdentificationCode: ");
    result.append(currencyIdentificationCode);
    result.append(", currencyTypeCodeQualifier: ");
    result.append(currencyTypeCodeQualifier);
    result.append(", currencyRateValue: ");
    result.append(currencyRateValue);
    result.append(')');
    return result.toString();
  }

} //CurrencyDetailImpl
