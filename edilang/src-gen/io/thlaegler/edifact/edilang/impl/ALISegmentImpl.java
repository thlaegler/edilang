/**
 * generated by Xtext 2.26.0
 */
package io.thlaegler.edifact.edilang.impl;

import io.thlaegler.edifact.edilang.ALISegment;
import io.thlaegler.edifact.edilang.AddressDetail;
import io.thlaegler.edifact.edilang.EdilangPackage;

import java.util.Collection;

import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.common.util.EList;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;

import org.eclipse.emf.ecore.util.EDataTypeEList;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>ALI Segment</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link io.thlaegler.edifact.edilang.impl.ALISegmentImpl#getCountryOfOriginNameCode <em>Country Of Origin Name Code</em>}</li>
 *   <li>{@link io.thlaegler.edifact.edilang.impl.ALISegmentImpl#getDutyRegimeTypeCode <em>Duty Regime Type Code</em>}</li>
 *   <li>{@link io.thlaegler.edifact.edilang.impl.ALISegmentImpl#getSpecialConditionCodes <em>Special Condition Codes</em>}</li>
 * </ul>
 *
 * @generated
 */
public class ALISegmentImpl extends AbstractEdiSegmentImpl implements ALISegment
{
  /**
   * The default value of the '{@link #getCountryOfOriginNameCode() <em>Country Of Origin Name Code</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getCountryOfOriginNameCode()
   * @generated
   * @ordered
   */
  protected static final String COUNTRY_OF_ORIGIN_NAME_CODE_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getCountryOfOriginNameCode() <em>Country Of Origin Name Code</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getCountryOfOriginNameCode()
   * @generated
   * @ordered
   */
  protected String countryOfOriginNameCode = COUNTRY_OF_ORIGIN_NAME_CODE_EDEFAULT;

  /**
   * The cached value of the '{@link #getDutyRegimeTypeCode() <em>Duty Regime Type Code</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getDutyRegimeTypeCode()
   * @generated
   * @ordered
   */
  protected AddressDetail dutyRegimeTypeCode;

  /**
   * The cached value of the '{@link #getSpecialConditionCodes() <em>Special Condition Codes</em>}' attribute list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getSpecialConditionCodes()
   * @generated
   * @ordered
   */
  protected EList<String> specialConditionCodes;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected ALISegmentImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return EdilangPackage.eINSTANCE.getALISegment();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getCountryOfOriginNameCode()
  {
    return countryOfOriginNameCode;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setCountryOfOriginNameCode(String newCountryOfOriginNameCode)
  {
    String oldCountryOfOriginNameCode = countryOfOriginNameCode;
    countryOfOriginNameCode = newCountryOfOriginNameCode;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, EdilangPackage.ALI_SEGMENT__COUNTRY_OF_ORIGIN_NAME_CODE, oldCountryOfOriginNameCode, countryOfOriginNameCode));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public AddressDetail getDutyRegimeTypeCode()
  {
    return dutyRegimeTypeCode;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetDutyRegimeTypeCode(AddressDetail newDutyRegimeTypeCode, NotificationChain msgs)
  {
    AddressDetail oldDutyRegimeTypeCode = dutyRegimeTypeCode;
    dutyRegimeTypeCode = newDutyRegimeTypeCode;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, EdilangPackage.ALI_SEGMENT__DUTY_REGIME_TYPE_CODE, oldDutyRegimeTypeCode, newDutyRegimeTypeCode);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setDutyRegimeTypeCode(AddressDetail newDutyRegimeTypeCode)
  {
    if (newDutyRegimeTypeCode != dutyRegimeTypeCode)
    {
      NotificationChain msgs = null;
      if (dutyRegimeTypeCode != null)
        msgs = ((InternalEObject)dutyRegimeTypeCode).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - EdilangPackage.ALI_SEGMENT__DUTY_REGIME_TYPE_CODE, null, msgs);
      if (newDutyRegimeTypeCode != null)
        msgs = ((InternalEObject)newDutyRegimeTypeCode).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - EdilangPackage.ALI_SEGMENT__DUTY_REGIME_TYPE_CODE, null, msgs);
      msgs = basicSetDutyRegimeTypeCode(newDutyRegimeTypeCode, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, EdilangPackage.ALI_SEGMENT__DUTY_REGIME_TYPE_CODE, newDutyRegimeTypeCode, newDutyRegimeTypeCode));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EList<String> getSpecialConditionCodes()
  {
    if (specialConditionCodes == null)
    {
      specialConditionCodes = new EDataTypeEList<String>(String.class, this, EdilangPackage.ALI_SEGMENT__SPECIAL_CONDITION_CODES);
    }
    return specialConditionCodes;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case EdilangPackage.ALI_SEGMENT__DUTY_REGIME_TYPE_CODE:
        return basicSetDutyRegimeTypeCode(null, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case EdilangPackage.ALI_SEGMENT__COUNTRY_OF_ORIGIN_NAME_CODE:
        return getCountryOfOriginNameCode();
      case EdilangPackage.ALI_SEGMENT__DUTY_REGIME_TYPE_CODE:
        return getDutyRegimeTypeCode();
      case EdilangPackage.ALI_SEGMENT__SPECIAL_CONDITION_CODES:
        return getSpecialConditionCodes();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @SuppressWarnings("unchecked")
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case EdilangPackage.ALI_SEGMENT__COUNTRY_OF_ORIGIN_NAME_CODE:
        setCountryOfOriginNameCode((String)newValue);
        return;
      case EdilangPackage.ALI_SEGMENT__DUTY_REGIME_TYPE_CODE:
        setDutyRegimeTypeCode((AddressDetail)newValue);
        return;
      case EdilangPackage.ALI_SEGMENT__SPECIAL_CONDITION_CODES:
        getSpecialConditionCodes().clear();
        getSpecialConditionCodes().addAll((Collection<? extends String>)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case EdilangPackage.ALI_SEGMENT__COUNTRY_OF_ORIGIN_NAME_CODE:
        setCountryOfOriginNameCode(COUNTRY_OF_ORIGIN_NAME_CODE_EDEFAULT);
        return;
      case EdilangPackage.ALI_SEGMENT__DUTY_REGIME_TYPE_CODE:
        setDutyRegimeTypeCode((AddressDetail)null);
        return;
      case EdilangPackage.ALI_SEGMENT__SPECIAL_CONDITION_CODES:
        getSpecialConditionCodes().clear();
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case EdilangPackage.ALI_SEGMENT__COUNTRY_OF_ORIGIN_NAME_CODE:
        return COUNTRY_OF_ORIGIN_NAME_CODE_EDEFAULT == null ? countryOfOriginNameCode != null : !COUNTRY_OF_ORIGIN_NAME_CODE_EDEFAULT.equals(countryOfOriginNameCode);
      case EdilangPackage.ALI_SEGMENT__DUTY_REGIME_TYPE_CODE:
        return dutyRegimeTypeCode != null;
      case EdilangPackage.ALI_SEGMENT__SPECIAL_CONDITION_CODES:
        return specialConditionCodes != null && !specialConditionCodes.isEmpty();
    }
    return super.eIsSet(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String toString()
  {
    if (eIsProxy()) return super.toString();

    StringBuilder result = new StringBuilder(super.toString());
    result.append(" (countryOfOriginNameCode: ");
    result.append(countryOfOriginNameCode);
    result.append(", specialConditionCodes: ");
    result.append(specialConditionCodes);
    result.append(')');
    return result.toString();
  }

} //ALISegmentImpl
