/**
 * generated by Xtext 2.26.0
 */
package io.thlaegler.edifact.edilang.impl;

import io.thlaegler.edifact.edilang.CINSegment;
import io.thlaegler.edifact.edilang.CertaintyDetail;
import io.thlaegler.edifact.edilang.ClinicalInformationDetail;
import io.thlaegler.edifact.edilang.EdilangPackage;

import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>CIN Segment</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link io.thlaegler.edifact.edilang.impl.CINSegmentImpl#getClinicalInformationTypeCodeQualifier <em>Clinical Information Type Code Qualifier</em>}</li>
 *   <li>{@link io.thlaegler.edifact.edilang.impl.CINSegmentImpl#getClinicalInformationDetails <em>Clinical Information Details</em>}</li>
 *   <li>{@link io.thlaegler.edifact.edilang.impl.CINSegmentImpl#getCertaintyDetails <em>Certainty Details</em>}</li>
 * </ul>
 *
 * @generated
 */
public class CINSegmentImpl extends AbstractEdiSegmentImpl implements CINSegment
{
  /**
   * The default value of the '{@link #getClinicalInformationTypeCodeQualifier() <em>Clinical Information Type Code Qualifier</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getClinicalInformationTypeCodeQualifier()
   * @generated
   * @ordered
   */
  protected static final String CLINICAL_INFORMATION_TYPE_CODE_QUALIFIER_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getClinicalInformationTypeCodeQualifier() <em>Clinical Information Type Code Qualifier</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getClinicalInformationTypeCodeQualifier()
   * @generated
   * @ordered
   */
  protected String clinicalInformationTypeCodeQualifier = CLINICAL_INFORMATION_TYPE_CODE_QUALIFIER_EDEFAULT;

  /**
   * The cached value of the '{@link #getClinicalInformationDetails() <em>Clinical Information Details</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getClinicalInformationDetails()
   * @generated
   * @ordered
   */
  protected ClinicalInformationDetail clinicalInformationDetails;

  /**
   * The cached value of the '{@link #getCertaintyDetails() <em>Certainty Details</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getCertaintyDetails()
   * @generated
   * @ordered
   */
  protected CertaintyDetail certaintyDetails;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected CINSegmentImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return EdilangPackage.eINSTANCE.getCINSegment();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getClinicalInformationTypeCodeQualifier()
  {
    return clinicalInformationTypeCodeQualifier;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setClinicalInformationTypeCodeQualifier(String newClinicalInformationTypeCodeQualifier)
  {
    String oldClinicalInformationTypeCodeQualifier = clinicalInformationTypeCodeQualifier;
    clinicalInformationTypeCodeQualifier = newClinicalInformationTypeCodeQualifier;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, EdilangPackage.CIN_SEGMENT__CLINICAL_INFORMATION_TYPE_CODE_QUALIFIER, oldClinicalInformationTypeCodeQualifier, clinicalInformationTypeCodeQualifier));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public ClinicalInformationDetail getClinicalInformationDetails()
  {
    return clinicalInformationDetails;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetClinicalInformationDetails(ClinicalInformationDetail newClinicalInformationDetails, NotificationChain msgs)
  {
    ClinicalInformationDetail oldClinicalInformationDetails = clinicalInformationDetails;
    clinicalInformationDetails = newClinicalInformationDetails;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, EdilangPackage.CIN_SEGMENT__CLINICAL_INFORMATION_DETAILS, oldClinicalInformationDetails, newClinicalInformationDetails);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setClinicalInformationDetails(ClinicalInformationDetail newClinicalInformationDetails)
  {
    if (newClinicalInformationDetails != clinicalInformationDetails)
    {
      NotificationChain msgs = null;
      if (clinicalInformationDetails != null)
        msgs = ((InternalEObject)clinicalInformationDetails).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - EdilangPackage.CIN_SEGMENT__CLINICAL_INFORMATION_DETAILS, null, msgs);
      if (newClinicalInformationDetails != null)
        msgs = ((InternalEObject)newClinicalInformationDetails).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - EdilangPackage.CIN_SEGMENT__CLINICAL_INFORMATION_DETAILS, null, msgs);
      msgs = basicSetClinicalInformationDetails(newClinicalInformationDetails, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, EdilangPackage.CIN_SEGMENT__CLINICAL_INFORMATION_DETAILS, newClinicalInformationDetails, newClinicalInformationDetails));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public CertaintyDetail getCertaintyDetails()
  {
    return certaintyDetails;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetCertaintyDetails(CertaintyDetail newCertaintyDetails, NotificationChain msgs)
  {
    CertaintyDetail oldCertaintyDetails = certaintyDetails;
    certaintyDetails = newCertaintyDetails;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, EdilangPackage.CIN_SEGMENT__CERTAINTY_DETAILS, oldCertaintyDetails, newCertaintyDetails);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setCertaintyDetails(CertaintyDetail newCertaintyDetails)
  {
    if (newCertaintyDetails != certaintyDetails)
    {
      NotificationChain msgs = null;
      if (certaintyDetails != null)
        msgs = ((InternalEObject)certaintyDetails).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - EdilangPackage.CIN_SEGMENT__CERTAINTY_DETAILS, null, msgs);
      if (newCertaintyDetails != null)
        msgs = ((InternalEObject)newCertaintyDetails).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - EdilangPackage.CIN_SEGMENT__CERTAINTY_DETAILS, null, msgs);
      msgs = basicSetCertaintyDetails(newCertaintyDetails, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, EdilangPackage.CIN_SEGMENT__CERTAINTY_DETAILS, newCertaintyDetails, newCertaintyDetails));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case EdilangPackage.CIN_SEGMENT__CLINICAL_INFORMATION_DETAILS:
        return basicSetClinicalInformationDetails(null, msgs);
      case EdilangPackage.CIN_SEGMENT__CERTAINTY_DETAILS:
        return basicSetCertaintyDetails(null, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case EdilangPackage.CIN_SEGMENT__CLINICAL_INFORMATION_TYPE_CODE_QUALIFIER:
        return getClinicalInformationTypeCodeQualifier();
      case EdilangPackage.CIN_SEGMENT__CLINICAL_INFORMATION_DETAILS:
        return getClinicalInformationDetails();
      case EdilangPackage.CIN_SEGMENT__CERTAINTY_DETAILS:
        return getCertaintyDetails();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case EdilangPackage.CIN_SEGMENT__CLINICAL_INFORMATION_TYPE_CODE_QUALIFIER:
        setClinicalInformationTypeCodeQualifier((String)newValue);
        return;
      case EdilangPackage.CIN_SEGMENT__CLINICAL_INFORMATION_DETAILS:
        setClinicalInformationDetails((ClinicalInformationDetail)newValue);
        return;
      case EdilangPackage.CIN_SEGMENT__CERTAINTY_DETAILS:
        setCertaintyDetails((CertaintyDetail)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case EdilangPackage.CIN_SEGMENT__CLINICAL_INFORMATION_TYPE_CODE_QUALIFIER:
        setClinicalInformationTypeCodeQualifier(CLINICAL_INFORMATION_TYPE_CODE_QUALIFIER_EDEFAULT);
        return;
      case EdilangPackage.CIN_SEGMENT__CLINICAL_INFORMATION_DETAILS:
        setClinicalInformationDetails((ClinicalInformationDetail)null);
        return;
      case EdilangPackage.CIN_SEGMENT__CERTAINTY_DETAILS:
        setCertaintyDetails((CertaintyDetail)null);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case EdilangPackage.CIN_SEGMENT__CLINICAL_INFORMATION_TYPE_CODE_QUALIFIER:
        return CLINICAL_INFORMATION_TYPE_CODE_QUALIFIER_EDEFAULT == null ? clinicalInformationTypeCodeQualifier != null : !CLINICAL_INFORMATION_TYPE_CODE_QUALIFIER_EDEFAULT.equals(clinicalInformationTypeCodeQualifier);
      case EdilangPackage.CIN_SEGMENT__CLINICAL_INFORMATION_DETAILS:
        return clinicalInformationDetails != null;
      case EdilangPackage.CIN_SEGMENT__CERTAINTY_DETAILS:
        return certaintyDetails != null;
    }
    return super.eIsSet(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String toString()
  {
    if (eIsProxy()) return super.toString();

    StringBuilder result = new StringBuilder(super.toString());
    result.append(" (clinicalInformationTypeCodeQualifier: ");
    result.append(clinicalInformationTypeCodeQualifier);
    result.append(')');
    return result.toString();
  }

} //CINSegmentImpl
