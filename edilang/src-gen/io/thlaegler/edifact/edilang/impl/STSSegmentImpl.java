/**
 * generated by Xtext 2.26.0
 */
package io.thlaegler.edifact.edilang.impl;

import io.thlaegler.edifact.edilang.EdilangPackage;
import io.thlaegler.edifact.edilang.STSSegment;
import io.thlaegler.edifact.edilang.Status;
import io.thlaegler.edifact.edilang.StatusCategory;
import io.thlaegler.edifact.edilang.StatusReason;

import java.util.Collection;

import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.common.util.EList;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;

import org.eclipse.emf.ecore.util.EObjectContainmentEList;
import org.eclipse.emf.ecore.util.InternalEList;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>STS Segment</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link io.thlaegler.edifact.edilang.impl.STSSegmentImpl#getStatusCategory <em>Status Category</em>}</li>
 *   <li>{@link io.thlaegler.edifact.edilang.impl.STSSegmentImpl#getStatus <em>Status</em>}</li>
 *   <li>{@link io.thlaegler.edifact.edilang.impl.STSSegmentImpl#getStatusReasons <em>Status Reasons</em>}</li>
 * </ul>
 *
 * @generated
 */
public class STSSegmentImpl extends AbstractEdiSegmentImpl implements STSSegment
{
  /**
   * The cached value of the '{@link #getStatusCategory() <em>Status Category</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getStatusCategory()
   * @generated
   * @ordered
   */
  protected StatusCategory statusCategory;

  /**
   * The cached value of the '{@link #getStatus() <em>Status</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getStatus()
   * @generated
   * @ordered
   */
  protected Status status;

  /**
   * The cached value of the '{@link #getStatusReasons() <em>Status Reasons</em>}' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getStatusReasons()
   * @generated
   * @ordered
   */
  protected EList<StatusReason> statusReasons;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected STSSegmentImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return EdilangPackage.eINSTANCE.getSTSSegment();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public StatusCategory getStatusCategory()
  {
    return statusCategory;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetStatusCategory(StatusCategory newStatusCategory, NotificationChain msgs)
  {
    StatusCategory oldStatusCategory = statusCategory;
    statusCategory = newStatusCategory;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, EdilangPackage.STS_SEGMENT__STATUS_CATEGORY, oldStatusCategory, newStatusCategory);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setStatusCategory(StatusCategory newStatusCategory)
  {
    if (newStatusCategory != statusCategory)
    {
      NotificationChain msgs = null;
      if (statusCategory != null)
        msgs = ((InternalEObject)statusCategory).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - EdilangPackage.STS_SEGMENT__STATUS_CATEGORY, null, msgs);
      if (newStatusCategory != null)
        msgs = ((InternalEObject)newStatusCategory).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - EdilangPackage.STS_SEGMENT__STATUS_CATEGORY, null, msgs);
      msgs = basicSetStatusCategory(newStatusCategory, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, EdilangPackage.STS_SEGMENT__STATUS_CATEGORY, newStatusCategory, newStatusCategory));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Status getStatus()
  {
    return status;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetStatus(Status newStatus, NotificationChain msgs)
  {
    Status oldStatus = status;
    status = newStatus;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, EdilangPackage.STS_SEGMENT__STATUS, oldStatus, newStatus);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setStatus(Status newStatus)
  {
    if (newStatus != status)
    {
      NotificationChain msgs = null;
      if (status != null)
        msgs = ((InternalEObject)status).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - EdilangPackage.STS_SEGMENT__STATUS, null, msgs);
      if (newStatus != null)
        msgs = ((InternalEObject)newStatus).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - EdilangPackage.STS_SEGMENT__STATUS, null, msgs);
      msgs = basicSetStatus(newStatus, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, EdilangPackage.STS_SEGMENT__STATUS, newStatus, newStatus));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EList<StatusReason> getStatusReasons()
  {
    if (statusReasons == null)
    {
      statusReasons = new EObjectContainmentEList<StatusReason>(StatusReason.class, this, EdilangPackage.STS_SEGMENT__STATUS_REASONS);
    }
    return statusReasons;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case EdilangPackage.STS_SEGMENT__STATUS_CATEGORY:
        return basicSetStatusCategory(null, msgs);
      case EdilangPackage.STS_SEGMENT__STATUS:
        return basicSetStatus(null, msgs);
      case EdilangPackage.STS_SEGMENT__STATUS_REASONS:
        return ((InternalEList<?>)getStatusReasons()).basicRemove(otherEnd, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case EdilangPackage.STS_SEGMENT__STATUS_CATEGORY:
        return getStatusCategory();
      case EdilangPackage.STS_SEGMENT__STATUS:
        return getStatus();
      case EdilangPackage.STS_SEGMENT__STATUS_REASONS:
        return getStatusReasons();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @SuppressWarnings("unchecked")
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case EdilangPackage.STS_SEGMENT__STATUS_CATEGORY:
        setStatusCategory((StatusCategory)newValue);
        return;
      case EdilangPackage.STS_SEGMENT__STATUS:
        setStatus((Status)newValue);
        return;
      case EdilangPackage.STS_SEGMENT__STATUS_REASONS:
        getStatusReasons().clear();
        getStatusReasons().addAll((Collection<? extends StatusReason>)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case EdilangPackage.STS_SEGMENT__STATUS_CATEGORY:
        setStatusCategory((StatusCategory)null);
        return;
      case EdilangPackage.STS_SEGMENT__STATUS:
        setStatus((Status)null);
        return;
      case EdilangPackage.STS_SEGMENT__STATUS_REASONS:
        getStatusReasons().clear();
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case EdilangPackage.STS_SEGMENT__STATUS_CATEGORY:
        return statusCategory != null;
      case EdilangPackage.STS_SEGMENT__STATUS:
        return status != null;
      case EdilangPackage.STS_SEGMENT__STATUS_REASONS:
        return statusReasons != null && !statusReasons.isEmpty();
    }
    return super.eIsSet(featureID);
  }

} //STSSegmentImpl
