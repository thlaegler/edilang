/**
 * generated by Xtext 2.26.0
 */
package io.thlaegler.edifact.edilang.impl;

import io.thlaegler.edifact.edilang.APPSegment;
import io.thlaegler.edifact.edilang.ApplicabilityType;
import io.thlaegler.edifact.edilang.EdilangPackage;

import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>APP Segment</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link io.thlaegler.edifact.edilang.impl.APPSegmentImpl#getApplicabilityCodeQualifier <em>Applicability Code Qualifier</em>}</li>
 *   <li>{@link io.thlaegler.edifact.edilang.impl.APPSegmentImpl#getApplicabilityType <em>Applicability Type</em>}</li>
 * </ul>
 *
 * @generated
 */
public class APPSegmentImpl extends AbstractEdiSegmentImpl implements APPSegment
{
  /**
   * The default value of the '{@link #getApplicabilityCodeQualifier() <em>Applicability Code Qualifier</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getApplicabilityCodeQualifier()
   * @generated
   * @ordered
   */
  protected static final String APPLICABILITY_CODE_QUALIFIER_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getApplicabilityCodeQualifier() <em>Applicability Code Qualifier</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getApplicabilityCodeQualifier()
   * @generated
   * @ordered
   */
  protected String applicabilityCodeQualifier = APPLICABILITY_CODE_QUALIFIER_EDEFAULT;

  /**
   * The cached value of the '{@link #getApplicabilityType() <em>Applicability Type</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getApplicabilityType()
   * @generated
   * @ordered
   */
  protected ApplicabilityType applicabilityType;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected APPSegmentImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return EdilangPackage.eINSTANCE.getAPPSegment();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getApplicabilityCodeQualifier()
  {
    return applicabilityCodeQualifier;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setApplicabilityCodeQualifier(String newApplicabilityCodeQualifier)
  {
    String oldApplicabilityCodeQualifier = applicabilityCodeQualifier;
    applicabilityCodeQualifier = newApplicabilityCodeQualifier;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, EdilangPackage.APP_SEGMENT__APPLICABILITY_CODE_QUALIFIER, oldApplicabilityCodeQualifier, applicabilityCodeQualifier));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public ApplicabilityType getApplicabilityType()
  {
    return applicabilityType;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetApplicabilityType(ApplicabilityType newApplicabilityType, NotificationChain msgs)
  {
    ApplicabilityType oldApplicabilityType = applicabilityType;
    applicabilityType = newApplicabilityType;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, EdilangPackage.APP_SEGMENT__APPLICABILITY_TYPE, oldApplicabilityType, newApplicabilityType);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setApplicabilityType(ApplicabilityType newApplicabilityType)
  {
    if (newApplicabilityType != applicabilityType)
    {
      NotificationChain msgs = null;
      if (applicabilityType != null)
        msgs = ((InternalEObject)applicabilityType).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - EdilangPackage.APP_SEGMENT__APPLICABILITY_TYPE, null, msgs);
      if (newApplicabilityType != null)
        msgs = ((InternalEObject)newApplicabilityType).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - EdilangPackage.APP_SEGMENT__APPLICABILITY_TYPE, null, msgs);
      msgs = basicSetApplicabilityType(newApplicabilityType, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, EdilangPackage.APP_SEGMENT__APPLICABILITY_TYPE, newApplicabilityType, newApplicabilityType));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case EdilangPackage.APP_SEGMENT__APPLICABILITY_TYPE:
        return basicSetApplicabilityType(null, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case EdilangPackage.APP_SEGMENT__APPLICABILITY_CODE_QUALIFIER:
        return getApplicabilityCodeQualifier();
      case EdilangPackage.APP_SEGMENT__APPLICABILITY_TYPE:
        return getApplicabilityType();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case EdilangPackage.APP_SEGMENT__APPLICABILITY_CODE_QUALIFIER:
        setApplicabilityCodeQualifier((String)newValue);
        return;
      case EdilangPackage.APP_SEGMENT__APPLICABILITY_TYPE:
        setApplicabilityType((ApplicabilityType)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case EdilangPackage.APP_SEGMENT__APPLICABILITY_CODE_QUALIFIER:
        setApplicabilityCodeQualifier(APPLICABILITY_CODE_QUALIFIER_EDEFAULT);
        return;
      case EdilangPackage.APP_SEGMENT__APPLICABILITY_TYPE:
        setApplicabilityType((ApplicabilityType)null);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case EdilangPackage.APP_SEGMENT__APPLICABILITY_CODE_QUALIFIER:
        return APPLICABILITY_CODE_QUALIFIER_EDEFAULT == null ? applicabilityCodeQualifier != null : !APPLICABILITY_CODE_QUALIFIER_EDEFAULT.equals(applicabilityCodeQualifier);
      case EdilangPackage.APP_SEGMENT__APPLICABILITY_TYPE:
        return applicabilityType != null;
    }
    return super.eIsSet(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String toString()
  {
    if (eIsProxy()) return super.toString();

    StringBuilder result = new StringBuilder(super.toString());
    result.append(" (applicabilityCodeQualifier: ");
    result.append(applicabilityCodeQualifier);
    result.append(')');
    return result.toString();
  }

} //APPSegmentImpl
