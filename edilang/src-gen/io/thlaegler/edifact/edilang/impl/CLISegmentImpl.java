/**
 * generated by Xtext 2.26.0
 */
package io.thlaegler.edifact.edilang.impl;

import io.thlaegler.edifact.edilang.CLISegment;
import io.thlaegler.edifact.edilang.ClinicalInterventionDetail;
import io.thlaegler.edifact.edilang.EdilangPackage;

import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>CLI Segment</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link io.thlaegler.edifact.edilang.impl.CLISegmentImpl#getClinicalInterventionTypeCodeQualifier <em>Clinical Intervention Type Code Qualifier</em>}</li>
 *   <li>{@link io.thlaegler.edifact.edilang.impl.CLISegmentImpl#getClinicalInterventionDetails <em>Clinical Intervention Details</em>}</li>
 * </ul>
 *
 * @generated
 */
public class CLISegmentImpl extends AbstractEdiSegmentImpl implements CLISegment
{
  /**
   * The default value of the '{@link #getClinicalInterventionTypeCodeQualifier() <em>Clinical Intervention Type Code Qualifier</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getClinicalInterventionTypeCodeQualifier()
   * @generated
   * @ordered
   */
  protected static final String CLINICAL_INTERVENTION_TYPE_CODE_QUALIFIER_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getClinicalInterventionTypeCodeQualifier() <em>Clinical Intervention Type Code Qualifier</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getClinicalInterventionTypeCodeQualifier()
   * @generated
   * @ordered
   */
  protected String clinicalInterventionTypeCodeQualifier = CLINICAL_INTERVENTION_TYPE_CODE_QUALIFIER_EDEFAULT;

  /**
   * The cached value of the '{@link #getClinicalInterventionDetails() <em>Clinical Intervention Details</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getClinicalInterventionDetails()
   * @generated
   * @ordered
   */
  protected ClinicalInterventionDetail clinicalInterventionDetails;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected CLISegmentImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return EdilangPackage.eINSTANCE.getCLISegment();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getClinicalInterventionTypeCodeQualifier()
  {
    return clinicalInterventionTypeCodeQualifier;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setClinicalInterventionTypeCodeQualifier(String newClinicalInterventionTypeCodeQualifier)
  {
    String oldClinicalInterventionTypeCodeQualifier = clinicalInterventionTypeCodeQualifier;
    clinicalInterventionTypeCodeQualifier = newClinicalInterventionTypeCodeQualifier;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, EdilangPackage.CLI_SEGMENT__CLINICAL_INTERVENTION_TYPE_CODE_QUALIFIER, oldClinicalInterventionTypeCodeQualifier, clinicalInterventionTypeCodeQualifier));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public ClinicalInterventionDetail getClinicalInterventionDetails()
  {
    return clinicalInterventionDetails;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetClinicalInterventionDetails(ClinicalInterventionDetail newClinicalInterventionDetails, NotificationChain msgs)
  {
    ClinicalInterventionDetail oldClinicalInterventionDetails = clinicalInterventionDetails;
    clinicalInterventionDetails = newClinicalInterventionDetails;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, EdilangPackage.CLI_SEGMENT__CLINICAL_INTERVENTION_DETAILS, oldClinicalInterventionDetails, newClinicalInterventionDetails);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setClinicalInterventionDetails(ClinicalInterventionDetail newClinicalInterventionDetails)
  {
    if (newClinicalInterventionDetails != clinicalInterventionDetails)
    {
      NotificationChain msgs = null;
      if (clinicalInterventionDetails != null)
        msgs = ((InternalEObject)clinicalInterventionDetails).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - EdilangPackage.CLI_SEGMENT__CLINICAL_INTERVENTION_DETAILS, null, msgs);
      if (newClinicalInterventionDetails != null)
        msgs = ((InternalEObject)newClinicalInterventionDetails).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - EdilangPackage.CLI_SEGMENT__CLINICAL_INTERVENTION_DETAILS, null, msgs);
      msgs = basicSetClinicalInterventionDetails(newClinicalInterventionDetails, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, EdilangPackage.CLI_SEGMENT__CLINICAL_INTERVENTION_DETAILS, newClinicalInterventionDetails, newClinicalInterventionDetails));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case EdilangPackage.CLI_SEGMENT__CLINICAL_INTERVENTION_DETAILS:
        return basicSetClinicalInterventionDetails(null, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case EdilangPackage.CLI_SEGMENT__CLINICAL_INTERVENTION_TYPE_CODE_QUALIFIER:
        return getClinicalInterventionTypeCodeQualifier();
      case EdilangPackage.CLI_SEGMENT__CLINICAL_INTERVENTION_DETAILS:
        return getClinicalInterventionDetails();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case EdilangPackage.CLI_SEGMENT__CLINICAL_INTERVENTION_TYPE_CODE_QUALIFIER:
        setClinicalInterventionTypeCodeQualifier((String)newValue);
        return;
      case EdilangPackage.CLI_SEGMENT__CLINICAL_INTERVENTION_DETAILS:
        setClinicalInterventionDetails((ClinicalInterventionDetail)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case EdilangPackage.CLI_SEGMENT__CLINICAL_INTERVENTION_TYPE_CODE_QUALIFIER:
        setClinicalInterventionTypeCodeQualifier(CLINICAL_INTERVENTION_TYPE_CODE_QUALIFIER_EDEFAULT);
        return;
      case EdilangPackage.CLI_SEGMENT__CLINICAL_INTERVENTION_DETAILS:
        setClinicalInterventionDetails((ClinicalInterventionDetail)null);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case EdilangPackage.CLI_SEGMENT__CLINICAL_INTERVENTION_TYPE_CODE_QUALIFIER:
        return CLINICAL_INTERVENTION_TYPE_CODE_QUALIFIER_EDEFAULT == null ? clinicalInterventionTypeCodeQualifier != null : !CLINICAL_INTERVENTION_TYPE_CODE_QUALIFIER_EDEFAULT.equals(clinicalInterventionTypeCodeQualifier);
      case EdilangPackage.CLI_SEGMENT__CLINICAL_INTERVENTION_DETAILS:
        return clinicalInterventionDetails != null;
    }
    return super.eIsSet(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String toString()
  {
    if (eIsProxy()) return super.toString();

    StringBuilder result = new StringBuilder(super.toString());
    result.append(" (clinicalInterventionTypeCodeQualifier: ");
    result.append(clinicalInterventionTypeCodeQualifier);
    result.append(')');
    return result.toString();
  }

} //CLISegmentImpl
