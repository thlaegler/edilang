/**
 * generated by Xtext 2.26.0
 */
package io.thlaegler.edifact.edilang.impl;

import io.thlaegler.edifact.edilang.EdilangPackage;
import io.thlaegler.edifact.edilang.SublineInformation;

import org.eclipse.emf.common.notify.Notification;

import org.eclipse.emf.ecore.EClass;

import org.eclipse.emf.ecore.impl.ENotificationImpl;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Subline Information</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link io.thlaegler.edifact.edilang.impl.SublineInformationImpl#getSublineIndicatorCode <em>Subline Indicator Code</em>}</li>
 *   <li>{@link io.thlaegler.edifact.edilang.impl.SublineInformationImpl#getLineItemIdentifier <em>Line Item Identifier</em>}</li>
 * </ul>
 *
 * @generated
 */
public class SublineInformationImpl extends AbstractEdiFunctionImpl implements SublineInformation
{
  /**
   * The default value of the '{@link #getSublineIndicatorCode() <em>Subline Indicator Code</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getSublineIndicatorCode()
   * @generated
   * @ordered
   */
  protected static final String SUBLINE_INDICATOR_CODE_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getSublineIndicatorCode() <em>Subline Indicator Code</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getSublineIndicatorCode()
   * @generated
   * @ordered
   */
  protected String sublineIndicatorCode = SUBLINE_INDICATOR_CODE_EDEFAULT;

  /**
   * The default value of the '{@link #getLineItemIdentifier() <em>Line Item Identifier</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getLineItemIdentifier()
   * @generated
   * @ordered
   */
  protected static final String LINE_ITEM_IDENTIFIER_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getLineItemIdentifier() <em>Line Item Identifier</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getLineItemIdentifier()
   * @generated
   * @ordered
   */
  protected String lineItemIdentifier = LINE_ITEM_IDENTIFIER_EDEFAULT;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected SublineInformationImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return EdilangPackage.Literals.SUBLINE_INFORMATION;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getSublineIndicatorCode()
  {
    return sublineIndicatorCode;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setSublineIndicatorCode(String newSublineIndicatorCode)
  {
    String oldSublineIndicatorCode = sublineIndicatorCode;
    sublineIndicatorCode = newSublineIndicatorCode;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, EdilangPackage.SUBLINE_INFORMATION__SUBLINE_INDICATOR_CODE, oldSublineIndicatorCode, sublineIndicatorCode));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getLineItemIdentifier()
  {
    return lineItemIdentifier;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setLineItemIdentifier(String newLineItemIdentifier)
  {
    String oldLineItemIdentifier = lineItemIdentifier;
    lineItemIdentifier = newLineItemIdentifier;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, EdilangPackage.SUBLINE_INFORMATION__LINE_ITEM_IDENTIFIER, oldLineItemIdentifier, lineItemIdentifier));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case EdilangPackage.SUBLINE_INFORMATION__SUBLINE_INDICATOR_CODE:
        return getSublineIndicatorCode();
      case EdilangPackage.SUBLINE_INFORMATION__LINE_ITEM_IDENTIFIER:
        return getLineItemIdentifier();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case EdilangPackage.SUBLINE_INFORMATION__SUBLINE_INDICATOR_CODE:
        setSublineIndicatorCode((String)newValue);
        return;
      case EdilangPackage.SUBLINE_INFORMATION__LINE_ITEM_IDENTIFIER:
        setLineItemIdentifier((String)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case EdilangPackage.SUBLINE_INFORMATION__SUBLINE_INDICATOR_CODE:
        setSublineIndicatorCode(SUBLINE_INDICATOR_CODE_EDEFAULT);
        return;
      case EdilangPackage.SUBLINE_INFORMATION__LINE_ITEM_IDENTIFIER:
        setLineItemIdentifier(LINE_ITEM_IDENTIFIER_EDEFAULT);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case EdilangPackage.SUBLINE_INFORMATION__SUBLINE_INDICATOR_CODE:
        return SUBLINE_INDICATOR_CODE_EDEFAULT == null ? sublineIndicatorCode != null : !SUBLINE_INDICATOR_CODE_EDEFAULT.equals(sublineIndicatorCode);
      case EdilangPackage.SUBLINE_INFORMATION__LINE_ITEM_IDENTIFIER:
        return LINE_ITEM_IDENTIFIER_EDEFAULT == null ? lineItemIdentifier != null : !LINE_ITEM_IDENTIFIER_EDEFAULT.equals(lineItemIdentifier);
    }
    return super.eIsSet(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String toString()
  {
    if (eIsProxy()) return super.toString();

    StringBuilder result = new StringBuilder(super.toString());
    result.append(" (sublineIndicatorCode: ");
    result.append(sublineIndicatorCode);
    result.append(", lineItemIdentifier: ");
    result.append(lineItemIdentifier);
    result.append(')');
    return result.toString();
  }

} //SublineInformationImpl
