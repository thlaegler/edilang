/**
 * generated by Xtext 2.26.0
 */
package io.thlaegler.edifact.edilang.impl;

import io.thlaegler.edifact.edilang.CUXSegment;
import io.thlaegler.edifact.edilang.CurrencyDetail;
import io.thlaegler.edifact.edilang.EdilangPackage;

import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>CUX Segment</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link io.thlaegler.edifact.edilang.impl.CUXSegmentImpl#getCurrencyDetails1 <em>Currency Details1</em>}</li>
 *   <li>{@link io.thlaegler.edifact.edilang.impl.CUXSegmentImpl#getCurrencyDetails2 <em>Currency Details2</em>}</li>
 *   <li>{@link io.thlaegler.edifact.edilang.impl.CUXSegmentImpl#getCurrencyExchangeRate <em>Currency Exchange Rate</em>}</li>
 *   <li>{@link io.thlaegler.edifact.edilang.impl.CUXSegmentImpl#getExchangeRateCurrencyMarketIdentifier <em>Exchange Rate Currency Market Identifier</em>}</li>
 * </ul>
 *
 * @generated
 */
public class CUXSegmentImpl extends AbstractEdiSegmentImpl implements CUXSegment
{
  /**
   * The cached value of the '{@link #getCurrencyDetails1() <em>Currency Details1</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getCurrencyDetails1()
   * @generated
   * @ordered
   */
  protected CurrencyDetail currencyDetails1;

  /**
   * The cached value of the '{@link #getCurrencyDetails2() <em>Currency Details2</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getCurrencyDetails2()
   * @generated
   * @ordered
   */
  protected CurrencyDetail currencyDetails2;

  /**
   * The default value of the '{@link #getCurrencyExchangeRate() <em>Currency Exchange Rate</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getCurrencyExchangeRate()
   * @generated
   * @ordered
   */
  protected static final String CURRENCY_EXCHANGE_RATE_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getCurrencyExchangeRate() <em>Currency Exchange Rate</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getCurrencyExchangeRate()
   * @generated
   * @ordered
   */
  protected String currencyExchangeRate = CURRENCY_EXCHANGE_RATE_EDEFAULT;

  /**
   * The default value of the '{@link #getExchangeRateCurrencyMarketIdentifier() <em>Exchange Rate Currency Market Identifier</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getExchangeRateCurrencyMarketIdentifier()
   * @generated
   * @ordered
   */
  protected static final String EXCHANGE_RATE_CURRENCY_MARKET_IDENTIFIER_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getExchangeRateCurrencyMarketIdentifier() <em>Exchange Rate Currency Market Identifier</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getExchangeRateCurrencyMarketIdentifier()
   * @generated
   * @ordered
   */
  protected String exchangeRateCurrencyMarketIdentifier = EXCHANGE_RATE_CURRENCY_MARKET_IDENTIFIER_EDEFAULT;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected CUXSegmentImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return EdilangPackage.eINSTANCE.getCUXSegment();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public CurrencyDetail getCurrencyDetails1()
  {
    return currencyDetails1;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetCurrencyDetails1(CurrencyDetail newCurrencyDetails1, NotificationChain msgs)
  {
    CurrencyDetail oldCurrencyDetails1 = currencyDetails1;
    currencyDetails1 = newCurrencyDetails1;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, EdilangPackage.CUX_SEGMENT__CURRENCY_DETAILS1, oldCurrencyDetails1, newCurrencyDetails1);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setCurrencyDetails1(CurrencyDetail newCurrencyDetails1)
  {
    if (newCurrencyDetails1 != currencyDetails1)
    {
      NotificationChain msgs = null;
      if (currencyDetails1 != null)
        msgs = ((InternalEObject)currencyDetails1).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - EdilangPackage.CUX_SEGMENT__CURRENCY_DETAILS1, null, msgs);
      if (newCurrencyDetails1 != null)
        msgs = ((InternalEObject)newCurrencyDetails1).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - EdilangPackage.CUX_SEGMENT__CURRENCY_DETAILS1, null, msgs);
      msgs = basicSetCurrencyDetails1(newCurrencyDetails1, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, EdilangPackage.CUX_SEGMENT__CURRENCY_DETAILS1, newCurrencyDetails1, newCurrencyDetails1));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public CurrencyDetail getCurrencyDetails2()
  {
    return currencyDetails2;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetCurrencyDetails2(CurrencyDetail newCurrencyDetails2, NotificationChain msgs)
  {
    CurrencyDetail oldCurrencyDetails2 = currencyDetails2;
    currencyDetails2 = newCurrencyDetails2;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, EdilangPackage.CUX_SEGMENT__CURRENCY_DETAILS2, oldCurrencyDetails2, newCurrencyDetails2);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setCurrencyDetails2(CurrencyDetail newCurrencyDetails2)
  {
    if (newCurrencyDetails2 != currencyDetails2)
    {
      NotificationChain msgs = null;
      if (currencyDetails2 != null)
        msgs = ((InternalEObject)currencyDetails2).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - EdilangPackage.CUX_SEGMENT__CURRENCY_DETAILS2, null, msgs);
      if (newCurrencyDetails2 != null)
        msgs = ((InternalEObject)newCurrencyDetails2).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - EdilangPackage.CUX_SEGMENT__CURRENCY_DETAILS2, null, msgs);
      msgs = basicSetCurrencyDetails2(newCurrencyDetails2, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, EdilangPackage.CUX_SEGMENT__CURRENCY_DETAILS2, newCurrencyDetails2, newCurrencyDetails2));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getCurrencyExchangeRate()
  {
    return currencyExchangeRate;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setCurrencyExchangeRate(String newCurrencyExchangeRate)
  {
    String oldCurrencyExchangeRate = currencyExchangeRate;
    currencyExchangeRate = newCurrencyExchangeRate;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, EdilangPackage.CUX_SEGMENT__CURRENCY_EXCHANGE_RATE, oldCurrencyExchangeRate, currencyExchangeRate));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getExchangeRateCurrencyMarketIdentifier()
  {
    return exchangeRateCurrencyMarketIdentifier;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setExchangeRateCurrencyMarketIdentifier(String newExchangeRateCurrencyMarketIdentifier)
  {
    String oldExchangeRateCurrencyMarketIdentifier = exchangeRateCurrencyMarketIdentifier;
    exchangeRateCurrencyMarketIdentifier = newExchangeRateCurrencyMarketIdentifier;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, EdilangPackage.CUX_SEGMENT__EXCHANGE_RATE_CURRENCY_MARKET_IDENTIFIER, oldExchangeRateCurrencyMarketIdentifier, exchangeRateCurrencyMarketIdentifier));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case EdilangPackage.CUX_SEGMENT__CURRENCY_DETAILS1:
        return basicSetCurrencyDetails1(null, msgs);
      case EdilangPackage.CUX_SEGMENT__CURRENCY_DETAILS2:
        return basicSetCurrencyDetails2(null, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case EdilangPackage.CUX_SEGMENT__CURRENCY_DETAILS1:
        return getCurrencyDetails1();
      case EdilangPackage.CUX_SEGMENT__CURRENCY_DETAILS2:
        return getCurrencyDetails2();
      case EdilangPackage.CUX_SEGMENT__CURRENCY_EXCHANGE_RATE:
        return getCurrencyExchangeRate();
      case EdilangPackage.CUX_SEGMENT__EXCHANGE_RATE_CURRENCY_MARKET_IDENTIFIER:
        return getExchangeRateCurrencyMarketIdentifier();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case EdilangPackage.CUX_SEGMENT__CURRENCY_DETAILS1:
        setCurrencyDetails1((CurrencyDetail)newValue);
        return;
      case EdilangPackage.CUX_SEGMENT__CURRENCY_DETAILS2:
        setCurrencyDetails2((CurrencyDetail)newValue);
        return;
      case EdilangPackage.CUX_SEGMENT__CURRENCY_EXCHANGE_RATE:
        setCurrencyExchangeRate((String)newValue);
        return;
      case EdilangPackage.CUX_SEGMENT__EXCHANGE_RATE_CURRENCY_MARKET_IDENTIFIER:
        setExchangeRateCurrencyMarketIdentifier((String)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case EdilangPackage.CUX_SEGMENT__CURRENCY_DETAILS1:
        setCurrencyDetails1((CurrencyDetail)null);
        return;
      case EdilangPackage.CUX_SEGMENT__CURRENCY_DETAILS2:
        setCurrencyDetails2((CurrencyDetail)null);
        return;
      case EdilangPackage.CUX_SEGMENT__CURRENCY_EXCHANGE_RATE:
        setCurrencyExchangeRate(CURRENCY_EXCHANGE_RATE_EDEFAULT);
        return;
      case EdilangPackage.CUX_SEGMENT__EXCHANGE_RATE_CURRENCY_MARKET_IDENTIFIER:
        setExchangeRateCurrencyMarketIdentifier(EXCHANGE_RATE_CURRENCY_MARKET_IDENTIFIER_EDEFAULT);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case EdilangPackage.CUX_SEGMENT__CURRENCY_DETAILS1:
        return currencyDetails1 != null;
      case EdilangPackage.CUX_SEGMENT__CURRENCY_DETAILS2:
        return currencyDetails2 != null;
      case EdilangPackage.CUX_SEGMENT__CURRENCY_EXCHANGE_RATE:
        return CURRENCY_EXCHANGE_RATE_EDEFAULT == null ? currencyExchangeRate != null : !CURRENCY_EXCHANGE_RATE_EDEFAULT.equals(currencyExchangeRate);
      case EdilangPackage.CUX_SEGMENT__EXCHANGE_RATE_CURRENCY_MARKET_IDENTIFIER:
        return EXCHANGE_RATE_CURRENCY_MARKET_IDENTIFIER_EDEFAULT == null ? exchangeRateCurrencyMarketIdentifier != null : !EXCHANGE_RATE_CURRENCY_MARKET_IDENTIFIER_EDEFAULT.equals(exchangeRateCurrencyMarketIdentifier);
    }
    return super.eIsSet(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String toString()
  {
    if (eIsProxy()) return super.toString();

    StringBuilder result = new StringBuilder(super.toString());
    result.append(" (currencyExchangeRate: ");
    result.append(currencyExchangeRate);
    result.append(", exchangeRateCurrencyMarketIdentifier: ");
    result.append(exchangeRateCurrencyMarketIdentifier);
    result.append(')');
    return result.toString();
  }

} //CUXSegmentImpl
