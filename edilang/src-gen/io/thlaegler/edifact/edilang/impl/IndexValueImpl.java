/**
 * generated by Xtext 2.26.0
 */
package io.thlaegler.edifact.edilang.impl;

import io.thlaegler.edifact.edilang.EdilangPackage;
import io.thlaegler.edifact.edilang.IndexValue;

import org.eclipse.emf.common.notify.Notification;

import org.eclipse.emf.ecore.EClass;

import org.eclipse.emf.ecore.impl.ENotificationImpl;
import org.eclipse.emf.ecore.impl.MinimalEObjectImpl;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Index Value</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link io.thlaegler.edifact.edilang.impl.IndexValueImpl#getIndexValue <em>Index Value</em>}</li>
 *   <li>{@link io.thlaegler.edifact.edilang.impl.IndexValueImpl#getIndexValueRepresentationCode <em>Index Value Representation Code</em>}</li>
 * </ul>
 *
 * @generated
 */
public class IndexValueImpl extends MinimalEObjectImpl.Container implements IndexValue
{
  /**
   * The default value of the '{@link #getIndexValue() <em>Index Value</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getIndexValue()
   * @generated
   * @ordered
   */
  protected static final String INDEX_VALUE_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getIndexValue() <em>Index Value</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getIndexValue()
   * @generated
   * @ordered
   */
  protected String indexValue = INDEX_VALUE_EDEFAULT;

  /**
   * The default value of the '{@link #getIndexValueRepresentationCode() <em>Index Value Representation Code</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getIndexValueRepresentationCode()
   * @generated
   * @ordered
   */
  protected static final String INDEX_VALUE_REPRESENTATION_CODE_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getIndexValueRepresentationCode() <em>Index Value Representation Code</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getIndexValueRepresentationCode()
   * @generated
   * @ordered
   */
  protected String indexValueRepresentationCode = INDEX_VALUE_REPRESENTATION_CODE_EDEFAULT;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected IndexValueImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return EdilangPackage.eINSTANCE.getIndexValue();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getIndexValue()
  {
    return indexValue;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setIndexValue(String newIndexValue)
  {
    String oldIndexValue = indexValue;
    indexValue = newIndexValue;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, EdilangPackage.INDEX_VALUE__INDEX_VALUE, oldIndexValue, indexValue));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getIndexValueRepresentationCode()
  {
    return indexValueRepresentationCode;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setIndexValueRepresentationCode(String newIndexValueRepresentationCode)
  {
    String oldIndexValueRepresentationCode = indexValueRepresentationCode;
    indexValueRepresentationCode = newIndexValueRepresentationCode;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, EdilangPackage.INDEX_VALUE__INDEX_VALUE_REPRESENTATION_CODE, oldIndexValueRepresentationCode, indexValueRepresentationCode));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case EdilangPackage.INDEX_VALUE__INDEX_VALUE:
        return getIndexValue();
      case EdilangPackage.INDEX_VALUE__INDEX_VALUE_REPRESENTATION_CODE:
        return getIndexValueRepresentationCode();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case EdilangPackage.INDEX_VALUE__INDEX_VALUE:
        setIndexValue((String)newValue);
        return;
      case EdilangPackage.INDEX_VALUE__INDEX_VALUE_REPRESENTATION_CODE:
        setIndexValueRepresentationCode((String)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case EdilangPackage.INDEX_VALUE__INDEX_VALUE:
        setIndexValue(INDEX_VALUE_EDEFAULT);
        return;
      case EdilangPackage.INDEX_VALUE__INDEX_VALUE_REPRESENTATION_CODE:
        setIndexValueRepresentationCode(INDEX_VALUE_REPRESENTATION_CODE_EDEFAULT);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case EdilangPackage.INDEX_VALUE__INDEX_VALUE:
        return INDEX_VALUE_EDEFAULT == null ? indexValue != null : !INDEX_VALUE_EDEFAULT.equals(indexValue);
      case EdilangPackage.INDEX_VALUE__INDEX_VALUE_REPRESENTATION_CODE:
        return INDEX_VALUE_REPRESENTATION_CODE_EDEFAULT == null ? indexValueRepresentationCode != null : !INDEX_VALUE_REPRESENTATION_CODE_EDEFAULT.equals(indexValueRepresentationCode);
    }
    return super.eIsSet(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String toString()
  {
    if (eIsProxy()) return super.toString();

    StringBuilder result = new StringBuilder(super.toString());
    result.append(" (indexValue: ");
    result.append(indexValue);
    result.append(", indexValueRepresentationCode: ");
    result.append(indexValueRepresentationCode);
    result.append(')');
    return result.toString();
  }

} //IndexValueImpl
