/**
 * generated by Xtext 2.26.0
 */
package io.thlaegler.edifact.edilang.impl;

import io.thlaegler.edifact.edilang.EdilangPackage;
import io.thlaegler.edifact.edilang.MSGFunction;
import io.thlaegler.edifact.edilang.MSGSegment;

import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>MSG Segment</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link io.thlaegler.edifact.edilang.impl.MSGSegmentImpl#getMessageFunction <em>Message Function</em>}</li>
 *   <li>{@link io.thlaegler.edifact.edilang.impl.MSGSegmentImpl#getResponseType <em>Response Type</em>}</li>
 * </ul>
 *
 * @generated
 */
public class MSGSegmentImpl extends AbstractEdiSegmentImpl implements MSGSegment
{
  /**
   * The cached value of the '{@link #getMessageFunction() <em>Message Function</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getMessageFunction()
   * @generated
   * @ordered
   */
  protected MSGFunction messageFunction;

  /**
   * The default value of the '{@link #getResponseType() <em>Response Type</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getResponseType()
   * @generated
   * @ordered
   */
  protected static final String RESPONSE_TYPE_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getResponseType() <em>Response Type</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getResponseType()
   * @generated
   * @ordered
   */
  protected String responseType = RESPONSE_TYPE_EDEFAULT;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected MSGSegmentImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return EdilangPackage.Literals.MSG_SEGMENT;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public MSGFunction getMessageFunction()
  {
    return messageFunction;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetMessageFunction(MSGFunction newMessageFunction, NotificationChain msgs)
  {
    MSGFunction oldMessageFunction = messageFunction;
    messageFunction = newMessageFunction;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, EdilangPackage.MSG_SEGMENT__MESSAGE_FUNCTION, oldMessageFunction, newMessageFunction);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setMessageFunction(MSGFunction newMessageFunction)
  {
    if (newMessageFunction != messageFunction)
    {
      NotificationChain msgs = null;
      if (messageFunction != null)
        msgs = ((InternalEObject)messageFunction).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - EdilangPackage.MSG_SEGMENT__MESSAGE_FUNCTION, null, msgs);
      if (newMessageFunction != null)
        msgs = ((InternalEObject)newMessageFunction).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - EdilangPackage.MSG_SEGMENT__MESSAGE_FUNCTION, null, msgs);
      msgs = basicSetMessageFunction(newMessageFunction, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, EdilangPackage.MSG_SEGMENT__MESSAGE_FUNCTION, newMessageFunction, newMessageFunction));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getResponseType()
  {
    return responseType;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setResponseType(String newResponseType)
  {
    String oldResponseType = responseType;
    responseType = newResponseType;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, EdilangPackage.MSG_SEGMENT__RESPONSE_TYPE, oldResponseType, responseType));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case EdilangPackage.MSG_SEGMENT__MESSAGE_FUNCTION:
        return basicSetMessageFunction(null, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case EdilangPackage.MSG_SEGMENT__MESSAGE_FUNCTION:
        return getMessageFunction();
      case EdilangPackage.MSG_SEGMENT__RESPONSE_TYPE:
        return getResponseType();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case EdilangPackage.MSG_SEGMENT__MESSAGE_FUNCTION:
        setMessageFunction((MSGFunction)newValue);
        return;
      case EdilangPackage.MSG_SEGMENT__RESPONSE_TYPE:
        setResponseType((String)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case EdilangPackage.MSG_SEGMENT__MESSAGE_FUNCTION:
        setMessageFunction((MSGFunction)null);
        return;
      case EdilangPackage.MSG_SEGMENT__RESPONSE_TYPE:
        setResponseType(RESPONSE_TYPE_EDEFAULT);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case EdilangPackage.MSG_SEGMENT__MESSAGE_FUNCTION:
        return messageFunction != null;
      case EdilangPackage.MSG_SEGMENT__RESPONSE_TYPE:
        return RESPONSE_TYPE_EDEFAULT == null ? responseType != null : !RESPONSE_TYPE_EDEFAULT.equals(responseType);
    }
    return super.eIsSet(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String toString()
  {
    if (eIsProxy()) return super.toString();

    StringBuilder result = new StringBuilder(super.toString());
    result.append(" (responseType: ");
    result.append(responseType);
    result.append(')');
    return result.toString();
  }

} //MSGSegmentImpl
