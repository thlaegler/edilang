/**
 * generated by Xtext 2.26.0
 */
package io.thlaegler.edifact.edilang.util;

import io.thlaegler.edifact.edilang.*;

import org.eclipse.emf.common.notify.Adapter;
import org.eclipse.emf.common.notify.Notifier;

import org.eclipse.emf.common.notify.impl.AdapterFactoryImpl;

import org.eclipse.emf.ecore.EObject;

/**
 * <!-- begin-user-doc -->
 * The <b>Adapter Factory</b> for the model.
 * It provides an adapter <code>createXXX</code> method for each class of the model.
 * <!-- end-user-doc -->
 * @see io.thlaegler.edifact.edilang.EdilangPackage
 * @generated
 */
public class EdilangAdapterFactory extends AdapterFactoryImpl
{
  /**
   * The cached model package.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected static EdilangPackage modelPackage;

  /**
   * Creates an instance of the adapter factory.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EdilangAdapterFactory()
  {
    if (modelPackage == null)
    {
      modelPackage = EdilangPackage.eINSTANCE;
    }
  }

  /**
   * Returns whether this factory is applicable for the type of the object.
   * <!-- begin-user-doc -->
   * This implementation returns <code>true</code> if the object is either the model's package or is an instance object of the model.
   * <!-- end-user-doc -->
   * @return whether this factory is applicable for the type of the object.
   * @generated
   */
  @Override
  public boolean isFactoryForType(Object object)
  {
    if (object == modelPackage)
    {
      return true;
    }
    if (object instanceof EObject)
    {
      return ((EObject)object).eClass().getEPackage() == modelPackage;
    }
    return false;
  }

  /**
   * The switch that delegates to the <code>createXXX</code> methods.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected EdilangSwitch<Adapter> modelSwitch =
    new EdilangSwitch<Adapter>()
    {
      @Override
      public Adapter caseEdiModel(EdiModel object)
      {
        return createEdiModelAdapter();
      }
      @Override
      public Adapter caseAbstractEdiSegment(AbstractEdiSegment object)
      {
        return createAbstractEdiSegmentAdapter();
      }
      @Override
      public Adapter caseUNASegment(UNASegment object)
      {
        return createUNASegmentAdapter();
      }
      @Override
      public Adapter caseUNBSegment(UNBSegment object)
      {
        return createUNBSegmentAdapter();
      }
      @Override
      public Adapter caseUNHSegment(UNHSegment object)
      {
        return createUNHSegmentAdapter();
      }
      @Override
      public Adapter caseMSGSegment(MSGSegment object)
      {
        return createMSGSegmentAdapter();
      }
      @Override
      public Adapter caseORGSegment(ORGSegment object)
      {
        return createORGSegmentAdapter();
      }
      @Override
      public Adapter casePOCSegment(POCSegment object)
      {
        return createPOCSegmentAdapter();
      }
      @Override
      public Adapter caseODISegment(ODISegment object)
      {
        return createODISegmentAdapter();
      }
      @Override
      public Adapter caseUCISegment(UCISegment object)
      {
        return createUCISegmentAdapter();
      }
      @Override
      public Adapter casePDISegment(PDISegment object)
      {
        return createPDISegmentAdapter();
      }
      @Override
      public Adapter caseTVLSegment(TVLSegment object)
      {
        return createTVLSegmentAdapter();
      }
      @Override
      public Adapter caseRPISegment(RPISegment object)
      {
        return createRPISegmentAdapter();
      }
      @Override
      public Adapter caseMOASegment(MOASegment object)
      {
        return createMOASegmentAdapter();
      }
      @Override
      public Adapter caseLINSegment(LINSegment object)
      {
        return createLINSegmentAdapter();
      }
      @Override
      public Adapter casePRISegment(PRISegment object)
      {
        return createPRISegmentAdapter();
      }
      @Override
      public Adapter caseQTYSegment(QTYSegment object)
      {
        return createQTYSegmentAdapter();
      }
      @Override
      public Adapter caseCUXSegment(CUXSegment object)
      {
        return createCUXSegmentAdapter();
      }
      @Override
      public Adapter caseTAXSegment(TAXSegment object)
      {
        return createTAXSegmentAdapter();
      }
      @Override
      public Adapter caseRFFSegment(RFFSegment object)
      {
        return createRFFSegmentAdapter();
      }
      @Override
      public Adapter caseNADSegment(NADSegment object)
      {
        return createNADSegmentAdapter();
      }
      @Override
      public Adapter caseDTMSegment(DTMSegment object)
      {
        return createDTMSegmentAdapter();
      }
      @Override
      public Adapter caseBGMSegment(BGMSegment object)
      {
        return createBGMSegmentAdapter();
      }
      @Override
      public Adapter casePATSegment(PATSegment object)
      {
        return createPATSegmentAdapter();
      }
      @Override
      public Adapter caseFTXSegment(FTXSegment object)
      {
        return createFTXSegmentAdapter();
      }
      @Override
      public Adapter caseERCSegment(ERCSegment object)
      {
        return createERCSegmentAdapter();
      }
      @Override
      public Adapter caseCNTSegment(CNTSegment object)
      {
        return createCNTSegmentAdapter();
      }
      @Override
      public Adapter caseCTASegment(CTASegment object)
      {
        return createCTASegmentAdapter();
      }
      @Override
      public Adapter casePCISegment(PCISegment object)
      {
        return createPCISegmentAdapter();
      }
      @Override
      public Adapter caseUNSSegment(UNSSegment object)
      {
        return createUNSSegmentAdapter();
      }
      @Override
      public Adapter caseUNTSegment(UNTSegment object)
      {
        return createUNTSegmentAdapter();
      }
      @Override
      public Adapter caseUNZSegment(UNZSegment object)
      {
        return createUNZSegmentAdapter();
      }
      @Override
      public Adapter caseAbstractEdiFunction(AbstractEdiFunction object)
      {
        return createAbstractEdiFunctionAdapter();
      }
      @Override
      public Adapter casePRIFunction(PRIFunction object)
      {
        return createPRIFunctionAdapter();
      }
      @Override
      public Adapter caseMessageBodyFunction(MessageBodyFunction object)
      {
        return createMessageBodyFunctionAdapter();
      }
      @Override
      public Adapter caseMSGFunction(MSGFunction object)
      {
        return createMSGFunctionAdapter();
      }
      @Override
      public Adapter caseProductFunction(ProductFunction object)
      {
        return createProductFunctionAdapter();
      }
      @Override
      public Adapter caseSystemDetailFunction(SystemDetailFunction object)
      {
        return createSystemDetailFunctionAdapter();
      }
      @Override
      public Adapter caseOriginatorFunction(OriginatorFunction object)
      {
        return createOriginatorFunctionAdapter();
      }
      @Override
      public Adapter caseOriginatorIdentificationFunction(OriginatorIdentificationFunction object)
      {
        return createOriginatorIdentificationFunctionAdapter();
      }
      @Override
      public Adapter caseLocationFunction(LocationFunction object)
      {
        return createLocationFunctionAdapter();
      }
      @Override
      public Adapter caseInterchangerFunction(InterchangerFunction object)
      {
        return createInterchangerFunctionAdapter();
      }
      @Override
      public Adapter caseDateOnlyFunction(DateOnlyFunction object)
      {
        return createDateOnlyFunctionAdapter();
      }
      @Override
      public Adapter caseDateAndTimeFunction(DateAndTimeFunction object)
      {
        return createDateAndTimeFunctionAdapter();
      }
      @Override
      public Adapter defaultCase(EObject object)
      {
        return createEObjectAdapter();
      }
    };

  /**
   * Creates an adapter for the <code>target</code>.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @param target the object to adapt.
   * @return the adapter for the <code>target</code>.
   * @generated
   */
  @Override
  public Adapter createAdapter(Notifier target)
  {
    return modelSwitch.doSwitch((EObject)target);
  }


  /**
   * Creates a new adapter for an object of class '{@link io.thlaegler.edifact.edilang.EdiModel <em>Edi Model</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see io.thlaegler.edifact.edilang.EdiModel
   * @generated
   */
  public Adapter createEdiModelAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link io.thlaegler.edifact.edilang.AbstractEdiSegment <em>Abstract Edi Segment</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see io.thlaegler.edifact.edilang.AbstractEdiSegment
   * @generated
   */
  public Adapter createAbstractEdiSegmentAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link io.thlaegler.edifact.edilang.UNASegment <em>UNA Segment</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see io.thlaegler.edifact.edilang.UNASegment
   * @generated
   */
  public Adapter createUNASegmentAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link io.thlaegler.edifact.edilang.UNBSegment <em>UNB Segment</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see io.thlaegler.edifact.edilang.UNBSegment
   * @generated
   */
  public Adapter createUNBSegmentAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link io.thlaegler.edifact.edilang.UNHSegment <em>UNH Segment</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see io.thlaegler.edifact.edilang.UNHSegment
   * @generated
   */
  public Adapter createUNHSegmentAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link io.thlaegler.edifact.edilang.MSGSegment <em>MSG Segment</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see io.thlaegler.edifact.edilang.MSGSegment
   * @generated
   */
  public Adapter createMSGSegmentAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link io.thlaegler.edifact.edilang.ORGSegment <em>ORG Segment</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see io.thlaegler.edifact.edilang.ORGSegment
   * @generated
   */
  public Adapter createORGSegmentAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link io.thlaegler.edifact.edilang.POCSegment <em>POC Segment</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see io.thlaegler.edifact.edilang.POCSegment
   * @generated
   */
  public Adapter createPOCSegmentAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link io.thlaegler.edifact.edilang.ODISegment <em>ODI Segment</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see io.thlaegler.edifact.edilang.ODISegment
   * @generated
   */
  public Adapter createODISegmentAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link io.thlaegler.edifact.edilang.UCISegment <em>UCI Segment</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see io.thlaegler.edifact.edilang.UCISegment
   * @generated
   */
  public Adapter createUCISegmentAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link io.thlaegler.edifact.edilang.PDISegment <em>PDI Segment</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see io.thlaegler.edifact.edilang.PDISegment
   * @generated
   */
  public Adapter createPDISegmentAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link io.thlaegler.edifact.edilang.TVLSegment <em>TVL Segment</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see io.thlaegler.edifact.edilang.TVLSegment
   * @generated
   */
  public Adapter createTVLSegmentAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link io.thlaegler.edifact.edilang.RPISegment <em>RPI Segment</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see io.thlaegler.edifact.edilang.RPISegment
   * @generated
   */
  public Adapter createRPISegmentAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link io.thlaegler.edifact.edilang.MOASegment <em>MOA Segment</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see io.thlaegler.edifact.edilang.MOASegment
   * @generated
   */
  public Adapter createMOASegmentAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link io.thlaegler.edifact.edilang.LINSegment <em>LIN Segment</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see io.thlaegler.edifact.edilang.LINSegment
   * @generated
   */
  public Adapter createLINSegmentAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link io.thlaegler.edifact.edilang.PRISegment <em>PRI Segment</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see io.thlaegler.edifact.edilang.PRISegment
   * @generated
   */
  public Adapter createPRISegmentAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link io.thlaegler.edifact.edilang.QTYSegment <em>QTY Segment</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see io.thlaegler.edifact.edilang.QTYSegment
   * @generated
   */
  public Adapter createQTYSegmentAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link io.thlaegler.edifact.edilang.CUXSegment <em>CUX Segment</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see io.thlaegler.edifact.edilang.CUXSegment
   * @generated
   */
  public Adapter createCUXSegmentAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link io.thlaegler.edifact.edilang.TAXSegment <em>TAX Segment</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see io.thlaegler.edifact.edilang.TAXSegment
   * @generated
   */
  public Adapter createTAXSegmentAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link io.thlaegler.edifact.edilang.RFFSegment <em>RFF Segment</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see io.thlaegler.edifact.edilang.RFFSegment
   * @generated
   */
  public Adapter createRFFSegmentAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link io.thlaegler.edifact.edilang.NADSegment <em>NAD Segment</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see io.thlaegler.edifact.edilang.NADSegment
   * @generated
   */
  public Adapter createNADSegmentAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link io.thlaegler.edifact.edilang.DTMSegment <em>DTM Segment</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see io.thlaegler.edifact.edilang.DTMSegment
   * @generated
   */
  public Adapter createDTMSegmentAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link io.thlaegler.edifact.edilang.BGMSegment <em>BGM Segment</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see io.thlaegler.edifact.edilang.BGMSegment
   * @generated
   */
  public Adapter createBGMSegmentAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link io.thlaegler.edifact.edilang.PATSegment <em>PAT Segment</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see io.thlaegler.edifact.edilang.PATSegment
   * @generated
   */
  public Adapter createPATSegmentAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link io.thlaegler.edifact.edilang.FTXSegment <em>FTX Segment</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see io.thlaegler.edifact.edilang.FTXSegment
   * @generated
   */
  public Adapter createFTXSegmentAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link io.thlaegler.edifact.edilang.ERCSegment <em>ERC Segment</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see io.thlaegler.edifact.edilang.ERCSegment
   * @generated
   */
  public Adapter createERCSegmentAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link io.thlaegler.edifact.edilang.CNTSegment <em>CNT Segment</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see io.thlaegler.edifact.edilang.CNTSegment
   * @generated
   */
  public Adapter createCNTSegmentAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link io.thlaegler.edifact.edilang.CTASegment <em>CTA Segment</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see io.thlaegler.edifact.edilang.CTASegment
   * @generated
   */
  public Adapter createCTASegmentAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link io.thlaegler.edifact.edilang.PCISegment <em>PCI Segment</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see io.thlaegler.edifact.edilang.PCISegment
   * @generated
   */
  public Adapter createPCISegmentAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link io.thlaegler.edifact.edilang.UNSSegment <em>UNS Segment</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see io.thlaegler.edifact.edilang.UNSSegment
   * @generated
   */
  public Adapter createUNSSegmentAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link io.thlaegler.edifact.edilang.UNTSegment <em>UNT Segment</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see io.thlaegler.edifact.edilang.UNTSegment
   * @generated
   */
  public Adapter createUNTSegmentAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link io.thlaegler.edifact.edilang.UNZSegment <em>UNZ Segment</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see io.thlaegler.edifact.edilang.UNZSegment
   * @generated
   */
  public Adapter createUNZSegmentAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link io.thlaegler.edifact.edilang.AbstractEdiFunction <em>Abstract Edi Function</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see io.thlaegler.edifact.edilang.AbstractEdiFunction
   * @generated
   */
  public Adapter createAbstractEdiFunctionAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link io.thlaegler.edifact.edilang.PRIFunction <em>PRI Function</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see io.thlaegler.edifact.edilang.PRIFunction
   * @generated
   */
  public Adapter createPRIFunctionAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link io.thlaegler.edifact.edilang.MessageBodyFunction <em>Message Body Function</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see io.thlaegler.edifact.edilang.MessageBodyFunction
   * @generated
   */
  public Adapter createMessageBodyFunctionAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link io.thlaegler.edifact.edilang.MSGFunction <em>MSG Function</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see io.thlaegler.edifact.edilang.MSGFunction
   * @generated
   */
  public Adapter createMSGFunctionAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link io.thlaegler.edifact.edilang.ProductFunction <em>Product Function</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see io.thlaegler.edifact.edilang.ProductFunction
   * @generated
   */
  public Adapter createProductFunctionAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link io.thlaegler.edifact.edilang.SystemDetailFunction <em>System Detail Function</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see io.thlaegler.edifact.edilang.SystemDetailFunction
   * @generated
   */
  public Adapter createSystemDetailFunctionAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link io.thlaegler.edifact.edilang.OriginatorFunction <em>Originator Function</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see io.thlaegler.edifact.edilang.OriginatorFunction
   * @generated
   */
  public Adapter createOriginatorFunctionAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link io.thlaegler.edifact.edilang.OriginatorIdentificationFunction <em>Originator Identification Function</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see io.thlaegler.edifact.edilang.OriginatorIdentificationFunction
   * @generated
   */
  public Adapter createOriginatorIdentificationFunctionAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link io.thlaegler.edifact.edilang.LocationFunction <em>Location Function</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see io.thlaegler.edifact.edilang.LocationFunction
   * @generated
   */
  public Adapter createLocationFunctionAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link io.thlaegler.edifact.edilang.InterchangerFunction <em>Interchanger Function</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see io.thlaegler.edifact.edilang.InterchangerFunction
   * @generated
   */
  public Adapter createInterchangerFunctionAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link io.thlaegler.edifact.edilang.DateOnlyFunction <em>Date Only Function</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see io.thlaegler.edifact.edilang.DateOnlyFunction
   * @generated
   */
  public Adapter createDateOnlyFunctionAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link io.thlaegler.edifact.edilang.DateAndTimeFunction <em>Date And Time Function</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see io.thlaegler.edifact.edilang.DateAndTimeFunction
   * @generated
   */
  public Adapter createDateAndTimeFunctionAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for the default case.
   * <!-- begin-user-doc -->
   * This default implementation returns null.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @generated
   */
  public Adapter createEObjectAdapter()
  {
    return null;
  }

} //EdilangAdapterFactory
