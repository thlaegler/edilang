/**
 * generated by Xtext 2.26.0
 */
package io.thlaegler.edifact.edilang.util;

import io.thlaegler.edifact.edilang.*;

import org.eclipse.emf.common.notify.Adapter;
import org.eclipse.emf.common.notify.Notifier;

import org.eclipse.emf.common.notify.impl.AdapterFactoryImpl;

import org.eclipse.emf.ecore.EObject;

/**
 * <!-- begin-user-doc -->
 * The <b>Adapter Factory</b> for the model.
 * It provides an adapter <code>createXXX</code> method for each class of the model.
 * <!-- end-user-doc -->
 * @see io.thlaegler.edifact.edilang.EdilangPackage
 * @generated
 */
public class EdilangAdapterFactory extends AdapterFactoryImpl
{
  /**
   * The cached model package.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected static EdilangPackage modelPackage;

  /**
   * Creates an instance of the adapter factory.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EdilangAdapterFactory()
  {
    if (modelPackage == null)
    {
      modelPackage = EdilangPackage.eINSTANCE;
    }
  }

  /**
   * Returns whether this factory is applicable for the type of the object.
   * <!-- begin-user-doc -->
   * This implementation returns <code>true</code> if the object is either the model's package or is an instance object of the model.
   * <!-- end-user-doc -->
   * @return whether this factory is applicable for the type of the object.
   * @generated
   */
  @Override
  public boolean isFactoryForType(Object object)
  {
    if (object == modelPackage)
    {
      return true;
    }
    if (object instanceof EObject)
    {
      return ((EObject)object).eClass().getEPackage() == modelPackage;
    }
    return false;
  }

  /**
   * The switch that delegates to the <code>createXXX</code> methods.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected EdilangSwitch<Adapter> modelSwitch =
    new EdilangSwitch<Adapter>()
    {
      @Override
      public Adapter caseEdiModel(EdiModel object)
      {
        return createEdiModelAdapter();
      }
      @Override
      public Adapter caseAbstractEdiSegment(AbstractEdiSegment object)
      {
        return createAbstractEdiSegmentAdapter();
      }
      @Override
      public Adapter caseUNASegment(UNASegment object)
      {
        return createUNASegmentAdapter();
      }
      @Override
      public Adapter caseUNBSegment(UNBSegment object)
      {
        return createUNBSegmentAdapter();
      }
      @Override
      public Adapter caseUNHSegment(UNHSegment object)
      {
        return createUNHSegmentAdapter();
      }
      @Override
      public Adapter caseUNGSegment(UNGSegment object)
      {
        return createUNGSegmentAdapter();
      }
      @Override
      public Adapter caseADRSegment(ADRSegment object)
      {
        return createADRSegmentAdapter();
      }
      @Override
      public Adapter caseAGRSegment(AGRSegment object)
      {
        return createAGRSegmentAdapter();
      }
      @Override
      public Adapter caseAJTSegment(AJTSegment object)
      {
        return createAJTSegmentAdapter();
      }
      @Override
      public Adapter caseALCSegment(ALCSegment object)
      {
        return createALCSegmentAdapter();
      }
      @Override
      public Adapter caseALISegment(ALISegment object)
      {
        return createALISegmentAdapter();
      }
      @Override
      public Adapter caseAPPSegment(APPSegment object)
      {
        return createAPPSegmentAdapter();
      }
      @Override
      public Adapter caseAPRSegment(APRSegment object)
      {
        return createAPRSegmentAdapter();
      }
      @Override
      public Adapter caseARDSegment(ARDSegment object)
      {
        return createARDSegmentAdapter();
      }
      @Override
      public Adapter caseARRSegment(ARRSegment object)
      {
        return createARRSegmentAdapter();
      }
      @Override
      public Adapter caseASISegment(ASISegment object)
      {
        return createASISegmentAdapter();
      }
      @Override
      public Adapter caseATTSegment(ATTSegment object)
      {
        return createATTSegmentAdapter();
      }
      @Override
      public Adapter caseAUTSegment(AUTSegment object)
      {
        return createAUTSegmentAdapter();
      }
      @Override
      public Adapter caseBASSegment(BASSegment object)
      {
        return createBASSegmentAdapter();
      }
      @Override
      public Adapter caseBIISegment(BIISegment object)
      {
        return createBIISegmentAdapter();
      }
      @Override
      public Adapter caseBUSSegment(BUSSegment object)
      {
        return createBUSSegmentAdapter();
      }
      @Override
      public Adapter caseCAVSegment(CAVSegment object)
      {
        return createCAVSegmentAdapter();
      }
      @Override
      public Adapter caseCCDSegment(CCDSegment object)
      {
        return createCCDSegmentAdapter();
      }
      @Override
      public Adapter caseCCISegment(CCISegment object)
      {
        return createCCISegmentAdapter();
      }
      @Override
      public Adapter caseCDISegment(CDISegment object)
      {
        return createCDISegmentAdapter();
      }
      @Override
      public Adapter caseCDSSegment(CDSSegment object)
      {
        return createCDSSegmentAdapter();
      }
      @Override
      public Adapter caseCDVSegment(CDVSegment object)
      {
        return createCDVSegmentAdapter();
      }
      @Override
      public Adapter caseCEDSegment(CEDSegment object)
      {
        return createCEDSegmentAdapter();
      }
      @Override
      public Adapter caseCINSegment(CINSegment object)
      {
        return createCINSegmentAdapter();
      }
      @Override
      public Adapter caseCLASegment(CLASegment object)
      {
        return createCLASegmentAdapter();
      }
      @Override
      public Adapter caseCLISegment(CLISegment object)
      {
        return createCLISegmentAdapter();
      }
      @Override
      public Adapter caseCMPSegment(CMPSegment object)
      {
        return createCMPSegmentAdapter();
      }
      @Override
      public Adapter caseCNISegment(CNISegment object)
      {
        return createCNISegmentAdapter();
      }
      @Override
      public Adapter caseCODSegment(CODSegment object)
      {
        return createCODSegmentAdapter();
      }
      @Override
      public Adapter caseCOMSegment(COMSegment object)
      {
        return createCOMSegmentAdapter();
      }
      @Override
      public Adapter caseCOTSegment(COTSegment object)
      {
        return createCOTSegmentAdapter();
      }
      @Override
      public Adapter caseCPISegment(CPISegment object)
      {
        return createCPISegmentAdapter();
      }
      @Override
      public Adapter caseCPSSegment(CPSSegment object)
      {
        return createCPSSegmentAdapter();
      }
      @Override
      public Adapter caseCPTSegment(CPTSegment object)
      {
        return createCPTSegmentAdapter();
      }
      @Override
      public Adapter caseCSTSegment(CSTSegment object)
      {
        return createCSTSegmentAdapter();
      }
      @Override
      public Adapter caseDAMSegment(DAMSegment object)
      {
        return createDAMSegmentAdapter();
      }
      @Override
      public Adapter caseDFNSegment(DFNSegment object)
      {
        return createDFNSegmentAdapter();
      }
      @Override
      public Adapter caseDGSSegment(DGSSegment object)
      {
        return createDGSSegmentAdapter();
      }
      @Override
      public Adapter caseDIISegment(DIISegment object)
      {
        return createDIISegmentAdapter();
      }
      @Override
      public Adapter caseDIMSegment(DIMSegment object)
      {
        return createDIMSegmentAdapter();
      }
      @Override
      public Adapter caseDLISegment(DLISegment object)
      {
        return createDLISegmentAdapter();
      }
      @Override
      public Adapter caseDLMSegment(DLMSegment object)
      {
        return createDLMSegmentAdapter();
      }
      @Override
      public Adapter caseDMSSegment(DMSSegment object)
      {
        return createDMSSegmentAdapter();
      }
      @Override
      public Adapter caseDOCSegment(DOCSegment object)
      {
        return createDOCSegmentAdapter();
      }
      @Override
      public Adapter caseDRDSegment(DRDSegment object)
      {
        return createDRDSegmentAdapter();
      }
      @Override
      public Adapter caseDSGSegment(DSGSegment object)
      {
        return createDSGSegmentAdapter();
      }
      @Override
      public Adapter caseDSISegment(DSISegment object)
      {
        return createDSISegmentAdapter();
      }
      @Override
      public Adapter caseEDTSegment(EDTSegment object)
      {
        return createEDTSegmentAdapter();
      }
      @Override
      public Adapter caseEFISegment(EFISegment object)
      {
        return createEFISegmentAdapter();
      }
      @Override
      public Adapter caseELMSegment(ELMSegment object)
      {
        return createELMSegmentAdapter();
      }
      @Override
      public Adapter caseELUSegment(ELUSegment object)
      {
        return createELUSegmentAdapter();
      }
      @Override
      public Adapter caseELVSegment(ELVSegment object)
      {
        return createELVSegmentAdapter();
      }
      @Override
      public Adapter caseEMPSegment(EMPSegment object)
      {
        return createEMPSegmentAdapter();
      }
      @Override
      public Adapter caseEQASegment(EQASegment object)
      {
        return createEQASegmentAdapter();
      }
      @Override
      public Adapter caseEQDSegment(EQDSegment object)
      {
        return createEQDSegmentAdapter();
      }
      @Override
      public Adapter caseEQNSegment(EQNSegment object)
      {
        return createEQNSegmentAdapter();
      }
      @Override
      public Adapter caseERPSegment(ERPSegment object)
      {
        return createERPSegmentAdapter();
      }
      @Override
      public Adapter caseEVESegment(EVESegment object)
      {
        return createEVESegmentAdapter();
      }
      @Override
      public Adapter caseEVTSegment(EVTSegment object)
      {
        return createEVTSegmentAdapter();
      }
      @Override
      public Adapter caseFCASegment(FCASegment object)
      {
        return createFCASegmentAdapter();
      }
      @Override
      public Adapter caseFIISegment(FIISegment object)
      {
        return createFIISegmentAdapter();
      }
      @Override
      public Adapter caseFNSSegment(FNSSegment object)
      {
        return createFNSSegmentAdapter();
      }
      @Override
      public Adapter caseFNTSegment(FNTSegment object)
      {
        return createFNTSegmentAdapter();
      }
      @Override
      public Adapter caseFORSegment(FORSegment object)
      {
        return createFORSegmentAdapter();
      }
      @Override
      public Adapter caseFSQSegment(FSQSegment object)
      {
        return createFSQSegmentAdapter();
      }
      @Override
      public Adapter caseGDSSegment(GDSSegment object)
      {
        return createGDSSegmentAdapter();
      }
      @Override
      public Adapter caseGEISegment(GEISegment object)
      {
        return createGEISegmentAdapter();
      }
      @Override
      public Adapter caseGIDSegment(GIDSegment object)
      {
        return createGIDSegmentAdapter();
      }
      @Override
      public Adapter caseGINSegment(GINSegment object)
      {
        return createGINSegmentAdapter();
      }
      @Override
      public Adapter caseGIRSegment(GIRSegment object)
      {
        return createGIRSegmentAdapter();
      }
      @Override
      public Adapter caseGISSegment(GISSegment object)
      {
        return createGISSegmentAdapter();
      }
      @Override
      public Adapter caseGORSegment(GORSegment object)
      {
        return createGORSegmentAdapter();
      }
      @Override
      public Adapter caseGRUSegment(GRUSegment object)
      {
        return createGRUSegmentAdapter();
      }
      @Override
      public Adapter caseHANSegment(HANSegment object)
      {
        return createHANSegmentAdapter();
      }
      @Override
      public Adapter caseHYNSegment(HYNSegment object)
      {
        return createHYNSegmentAdapter();
      }
      @Override
      public Adapter caseICDSegment(ICDSegment object)
      {
        return createICDSegmentAdapter();
      }
      @Override
      public Adapter caseIDESegment(IDESegment object)
      {
        return createIDESegmentAdapter();
      }
      @Override
      public Adapter caseIFDSegment(IFDSegment object)
      {
        return createIFDSegmentAdapter();
      }
      @Override
      public Adapter caseIHCSegment(IHCSegment object)
      {
        return createIHCSegmentAdapter();
      }
      @Override
      public Adapter caseIMDSegment(IMDSegment object)
      {
        return createIMDSegmentAdapter();
      }
      @Override
      public Adapter caseINDSegment(INDSegment object)
      {
        return createINDSegmentAdapter();
      }
      @Override
      public Adapter caseINPSegment(INPSegment object)
      {
        return createINPSegmentAdapter();
      }
      @Override
      public Adapter caseINVSegment(INVSegment object)
      {
        return createINVSegmentAdapter();
      }
      @Override
      public Adapter caseIRQSegment(IRQSegment object)
      {
        return createIRQSegmentAdapter();
      }
      @Override
      public Adapter caseLANSegment(LANSegment object)
      {
        return createLANSegmentAdapter();
      }
      @Override
      public Adapter caseLOCSegment(LOCSegment object)
      {
        return createLOCSegmentAdapter();
      }
      @Override
      public Adapter caseMEASegment(MEASegment object)
      {
        return createMEASegmentAdapter();
      }
      @Override
      public Adapter caseMEMSegment(MEMSegment object)
      {
        return createMEMSegmentAdapter();
      }
      @Override
      public Adapter caseMKSSegment(MKSSegment object)
      {
        return createMKSSegmentAdapter();
      }
      @Override
      public Adapter caseNATSegment(NATSegment object)
      {
        return createNATSegmentAdapter();
      }
      @Override
      public Adapter casePACSegment(PACSegment object)
      {
        return createPACSegmentAdapter();
      }
      @Override
      public Adapter casePAISegment(PAISegment object)
      {
        return createPAISegmentAdapter();
      }
      @Override
      public Adapter casePASSegment(PASSegment object)
      {
        return createPASSegmentAdapter();
      }
      @Override
      public Adapter casePCCSegment(PCCSegment object)
      {
        return createPCCSegmentAdapter();
      }
      @Override
      public Adapter casePCDSegment(PCDSegment object)
      {
        return createPCDSegmentAdapter();
      }
      @Override
      public Adapter casePERSegment(PERSegment object)
      {
        return createPERSegmentAdapter();
      }
      @Override
      public Adapter casePGISegment(PGISegment object)
      {
        return createPGISegmentAdapter();
      }
      @Override
      public Adapter casePIASegment(PIASegment object)
      {
        return createPIASegmentAdapter();
      }
      @Override
      public Adapter casePNASegment(PNASegment object)
      {
        return createPNASegmentAdapter();
      }
      @Override
      public Adapter casePRCSegment(PRCSegment object)
      {
        return createPRCSegmentAdapter();
      }
      @Override
      public Adapter casePRVSegment(PRVSegment object)
      {
        return createPRVSegmentAdapter();
      }
      @Override
      public Adapter casePSDSegment(PSDSegment object)
      {
        return createPSDSegmentAdapter();
      }
      @Override
      public Adapter casePTYSegment(PTYSegment object)
      {
        return createPTYSegmentAdapter();
      }
      @Override
      public Adapter casePYTSegment(PYTSegment object)
      {
        return createPYTSegmentAdapter();
      }
      @Override
      public Adapter caseQRSSegment(QRSSegment object)
      {
        return createQRSSegmentAdapter();
      }
      @Override
      public Adapter caseQUASegment(QUASegment object)
      {
        return createQUASegmentAdapter();
      }
      @Override
      public Adapter caseQVRSegment(QVRSegment object)
      {
        return createQVRSegmentAdapter();
      }
      @Override
      public Adapter caseRCSSegment(RCSSegment object)
      {
        return createRCSSegmentAdapter();
      }
      @Override
      public Adapter caseRELSegment(RELSegment object)
      {
        return createRELSegmentAdapter();
      }
      @Override
      public Adapter caseRJLSegment(RJLSegment object)
      {
        return createRJLSegmentAdapter();
      }
      @Override
      public Adapter caseRNGSegment(RNGSegment object)
      {
        return createRNGSegmentAdapter();
      }
      @Override
      public Adapter caseRODSegment(RODSegment object)
      {
        return createRODSegmentAdapter();
      }
      @Override
      public Adapter caseRSLSegment(RSLSegment object)
      {
        return createRSLSegmentAdapter();
      }
      @Override
      public Adapter caseRTESegment(RTESegment object)
      {
        return createRTESegmentAdapter();
      }
      @Override
      public Adapter caseSALSegment(SALSegment object)
      {
        return createSALSegmentAdapter();
      }
      @Override
      public Adapter caseSCCSegment(SCCSegment object)
      {
        return createSCCSegmentAdapter();
      }
      @Override
      public Adapter caseSCDSegment(SCDSegment object)
      {
        return createSCDSegmentAdapter();
      }
      @Override
      public Adapter caseSEGSegment(SEGSegment object)
      {
        return createSEGSegmentAdapter();
      }
      @Override
      public Adapter caseSELSegment(SELSegment object)
      {
        return createSELSegmentAdapter();
      }
      @Override
      public Adapter caseSEQSegment(SEQSegment object)
      {
        return createSEQSegmentAdapter();
      }
      @Override
      public Adapter caseSFISegment(SFISegment object)
      {
        return createSFISegmentAdapter();
      }
      @Override
      public Adapter caseSGPSegment(SGPSegment object)
      {
        return createSGPSegmentAdapter();
      }
      @Override
      public Adapter caseSGUSegment(SGUSegment object)
      {
        return createSGUSegmentAdapter();
      }
      @Override
      public Adapter caseSPRSegment(SPRSegment object)
      {
        return createSPRSegmentAdapter();
      }
      @Override
      public Adapter caseSPSSegment(SPSSegment object)
      {
        return createSPSSegmentAdapter();
      }
      @Override
      public Adapter caseSTASegment(STASegment object)
      {
        return createSTASegmentAdapter();
      }
      @Override
      public Adapter caseSTCSegment(STCSegment object)
      {
        return createSTCSegmentAdapter();
      }
      @Override
      public Adapter caseSTGSegment(STGSegment object)
      {
        return createSTGSegmentAdapter();
      }
      @Override
      public Adapter caseSTSSegment(STSSegment object)
      {
        return createSTSSegmentAdapter();
      }
      @Override
      public Adapter caseSTXSegment(STXSegment object)
      {
        return createSTXSegmentAdapter();
      }
      @Override
      public Adapter caseTCCSegment(TCCSegment object)
      {
        return createTCCSegmentAdapter();
      }
      @Override
      public Adapter caseTDTSegment(TDTSegment object)
      {
        return createTDTSegmentAdapter();
      }
      @Override
      public Adapter caseTEMSegment(TEMSegment object)
      {
        return createTEMSegmentAdapter();
      }
      @Override
      public Adapter caseTMDSegment(TMDSegment object)
      {
        return createTMDSegmentAdapter();
      }
      @Override
      public Adapter caseTMPSegment(TMPSegment object)
      {
        return createTMPSegmentAdapter();
      }
      @Override
      public Adapter caseTODSegment(TODSegment object)
      {
        return createTODSegmentAdapter();
      }
      @Override
      public Adapter caseTPLSegment(TPLSegment object)
      {
        return createTPLSegmentAdapter();
      }
      @Override
      public Adapter caseTRUSegment(TRUSegment object)
      {
        return createTRUSegmentAdapter();
      }
      @Override
      public Adapter caseTSRSegment(TSRSegment object)
      {
        return createTSRSegmentAdapter();
      }
      @Override
      public Adapter caseVLISegment(VLISegment object)
      {
        return createVLISegmentAdapter();
      }
      @Override
      public Adapter caseMSGSegment(MSGSegment object)
      {
        return createMSGSegmentAdapter();
      }
      @Override
      public Adapter casePOCSegment(POCSegment object)
      {
        return createPOCSegmentAdapter();
      }
      @Override
      public Adapter caseUCISegment(UCISegment object)
      {
        return createUCISegmentAdapter();
      }
      @Override
      public Adapter casePDISegment(PDISegment object)
      {
        return createPDISegmentAdapter();
      }
      @Override
      public Adapter caseRPISegment(RPISegment object)
      {
        return createRPISegmentAdapter();
      }
      @Override
      public Adapter caseMOASegment(MOASegment object)
      {
        return createMOASegmentAdapter();
      }
      @Override
      public Adapter caseLINSegment(LINSegment object)
      {
        return createLINSegmentAdapter();
      }
      @Override
      public Adapter casePRISegment(PRISegment object)
      {
        return createPRISegmentAdapter();
      }
      @Override
      public Adapter caseQTYSegment(QTYSegment object)
      {
        return createQTYSegmentAdapter();
      }
      @Override
      public Adapter caseCUXSegment(CUXSegment object)
      {
        return createCUXSegmentAdapter();
      }
      @Override
      public Adapter caseTAXSegment(TAXSegment object)
      {
        return createTAXSegmentAdapter();
      }
      @Override
      public Adapter caseRFFSegment(RFFSegment object)
      {
        return createRFFSegmentAdapter();
      }
      @Override
      public Adapter caseNADSegment(NADSegment object)
      {
        return createNADSegmentAdapter();
      }
      @Override
      public Adapter caseDTMSegment(DTMSegment object)
      {
        return createDTMSegmentAdapter();
      }
      @Override
      public Adapter caseBGMSegment(BGMSegment object)
      {
        return createBGMSegmentAdapter();
      }
      @Override
      public Adapter casePATSegment(PATSegment object)
      {
        return createPATSegmentAdapter();
      }
      @Override
      public Adapter caseFTXSegment(FTXSegment object)
      {
        return createFTXSegmentAdapter();
      }
      @Override
      public Adapter caseERCSegment(ERCSegment object)
      {
        return createERCSegmentAdapter();
      }
      @Override
      public Adapter caseCNTSegment(CNTSegment object)
      {
        return createCNTSegmentAdapter();
      }
      @Override
      public Adapter caseCTASegment(CTASegment object)
      {
        return createCTASegmentAdapter();
      }
      @Override
      public Adapter casePCISegment(PCISegment object)
      {
        return createPCISegmentAdapter();
      }
      @Override
      public Adapter caseAAISegment(AAISegment object)
      {
        return createAAISegmentAdapter();
      }
      @Override
      public Adapter caseALSSegment(ALSSegment object)
      {
        return createALSSegmentAdapter();
      }
      @Override
      public Adapter caseODSSegment(ODSSegment object)
      {
        return createODSSegmentAdapter();
      }
      @Override
      public Adapter caseAPDSegment(APDSegment object)
      {
        return createAPDSegmentAdapter();
      }
      @Override
      public Adapter caseADSSegment(ADSSegment object)
      {
        return createADSSegmentAdapter();
      }
      @Override
      public Adapter caseERISegment(ERISegment object)
      {
        return createERISegmentAdapter();
      }
      @Override
      public Adapter caseATRSegment(ATRSegment object)
      {
        return createATRSegmentAdapter();
      }
      @Override
      public Adapter caseBCDSegment(BCDSegment object)
      {
        return createBCDSegmentAdapter();
      }
      @Override
      public Adapter caseBLISegment(BLISegment object)
      {
        return createBLISegmentAdapter();
      }
      @Override
      public Adapter caseMOVSegment(MOVSegment object)
      {
        return createMOVSegmentAdapter();
      }
      @Override
      public Adapter caseCLTSegment(CLTSegment object)
      {
        return createCLTSegmentAdapter();
      }
      @Override
      public Adapter caseCMNSegment(CMNSegment object)
      {
        return createCMNSegmentAdapter();
      }
      @Override
      public Adapter caseCNXSegment(CNXSegment object)
      {
        return createCNXSegmentAdapter();
      }
      @Override
      public Adapter caseCRISegment(CRISegment object)
      {
        return createCRISegmentAdapter();
      }
      @Override
      public Adapter caseCONSegment(CONSegment object)
      {
        return createCONSegmentAdapter();
      }
      @Override
      public Adapter caseCNYSegment(CNYSegment object)
      {
        return createCNYSegmentAdapter();
      }
      @Override
      public Adapter caseCURSegment(CURSegment object)
      {
        return createCURSegmentAdapter();
      }
      @Override
      public Adapter caseDAVSegment(DAVSegment object)
      {
        return createDAVSegmentAdapter();
      }
      @Override
      public Adapter caseDTISegment(DTISegment object)
      {
        return createDTISegmentAdapter();
      }
      @Override
      public Adapter caseDNTSegment(DNTSegment object)
      {
        return createDNTSegmentAdapter();
      }
      @Override
      public Adapter caseDISSegment(DISSegment object)
      {
        return createDISSegmentAdapter();
      }
      @Override
      public Adapter caseSERSegment(SERSegment object)
      {
        return createSERSegmentAdapter();
      }
      @Override
      public Adapter caseFRMSegment(FRMSegment object)
      {
        return createFRMSegmentAdapter();
      }
      @Override
      public Adapter caseFRQSegment(FRQSegment object)
      {
        return createFRQSegmentAdapter();
      }
      @Override
      public Adapter caseFTISegment(FTISegment object)
      {
        return createFTISegmentAdapter();
      }
      @Override
      public Adapter caseHDISegment(HDISegment object)
      {
        return createHDISegmentAdapter();
      }
      @Override
      public Adapter caseHDRSegment(HDRSegment object)
      {
        return createHDRSegmentAdapter();
      }
      @Override
      public Adapter caseADISegment(ADISegment object)
      {
        return createADISegmentAdapter();
      }
      @Override
      public Adapter caseHDSSegment(HDSSegment object)
      {
        return createHDSSegmentAdapter();
      }
      @Override
      public Adapter caseITDSegment(ITDSegment object)
      {
        return createITDSegmentAdapter();
      }
      @Override
      public Adapter caseITCSegment(ITCSegment object)
      {
        return createITCSegmentAdapter();
      }
      @Override
      public Adapter caseICISegment(ICISegment object)
      {
        return createICISegmentAdapter();
      }
      @Override
      public Adapter caseIFTSegment(IFTSegment object)
      {
        return createIFTSegmentAdapter();
      }
      @Override
      public Adapter caseITMSegment(ITMSegment object)
      {
        return createITMSegmentAdapter();
      }
      @Override
      public Adapter caseLNGSegment(LNGSegment object)
      {
        return createLNGSegmentAdapter();
      }
      @Override
      public Adapter caseLKPSegment(LKPSegment object)
      {
        return createLKPSegmentAdapter();
      }
      @Override
      public Adapter casePORSegment(PORSegment object)
      {
        return createPORSegmentAdapter();
      }
      @Override
      public Adapter caseMESSegment(MESSegment object)
      {
        return createMESSegmentAdapter();
      }
      @Override
      public Adapter caseMSDSegment(MSDSegment object)
      {
        return createMSDSegmentAdapter();
      }
      @Override
      public Adapter caseMAPSegment(MAPSegment object)
      {
        return createMAPSegmentAdapter();
      }
      @Override
      public Adapter caseNMESegment(NMESegment object)
      {
        return createNMESegmentAdapter();
      }
      @Override
      public Adapter caseNAASegment(NAASegment object)
      {
        return createNAASegmentAdapter();
      }
      @Override
      public Adapter caseNUNSegment(NUNSegment object)
      {
        return createNUNSegmentAdapter();
      }
      @Override
      public Adapter caseODISegment(ODISegment object)
      {
        return createODISegmentAdapter();
      }
      @Override
      public Adapter caseORGSegment(ORGSegment object)
      {
        return createORGSegmentAdapter();
      }
      @Override
      public Adapter caseOTISegment(OTISegment object)
      {
        return createOTISegmentAdapter();
      }
      @Override
      public Adapter casePRTSegment(PRTSegment object)
      {
        return createPRTSegmentAdapter();
      }
      @Override
      public Adapter casePMTSegment(PMTSegment object)
      {
        return createPMTSegmentAdapter();
      }
      @Override
      public Adapter casePOPSegment(POPSegment object)
      {
        return createPOPSegmentAdapter();
      }
      @Override
      public Adapter casePOSSegment(POSSegment object)
      {
        return createPOSSegmentAdapter();
      }
      @Override
      public Adapter casePRESegment(PRESegment object)
      {
        return createPRESegmentAdapter();
      }
      @Override
      public Adapter casePRDSegment(PRDSegment object)
      {
        return createPRDSegmentAdapter();
      }
      @Override
      public Adapter casePDTSegment(PDTSegment object)
      {
        return createPDTSegmentAdapter();
      }
      @Override
      public Adapter casePLISegment(PLISegment object)
      {
        return createPLISegmentAdapter();
      }
      @Override
      public Adapter casePROSegment(PROSegment object)
      {
        return createPROSegmentAdapter();
      }
      @Override
      public Adapter caseQTISegment(QTISegment object)
      {
        return createQTISegmentAdapter();
      }
      @Override
      public Adapter caseRTISegment(RTISegment object)
      {
        return createRTISegmentAdapter();
      }
      @Override
      public Adapter caseRTCSegment(RTCSegment object)
      {
        return createRTCSegmentAdapter();
      }
      @Override
      public Adapter caseRFRSegment(RFRSegment object)
      {
        return createRFRSegmentAdapter();
      }
      @Override
      public Adapter caseRLSSegment(RLSSegment object)
      {
        return createRLSSegmentAdapter();
      }
      @Override
      public Adapter caseRCISegment(RCISegment object)
      {
        return createRCISegmentAdapter();
      }
      @Override
      public Adapter caseRULSegment(RULSegment object)
      {
        return createRULSegmentAdapter();
      }
      @Override
      public Adapter caseSDTSegment(SDTSegment object)
      {
        return createSDTSegmentAdapter();
      }
      @Override
      public Adapter caseASDSegment(ASDSegment object)
      {
        return createASDSegmentAdapter();
      }
      @Override
      public Adapter casePSISegment(PSISegment object)
      {
        return createPSISegmentAdapter();
      }
      @Override
      public Adapter caseSSRSegment(SSRSegment object)
      {
        return createSSRSegmentAdapter();
      }
      @Override
      public Adapter caseTFFSegment(TFFSegment object)
      {
        return createTFFSegmentAdapter();
      }
      @Override
      public Adapter caseTXSSegment(TXSSegment object)
      {
        return createTXSSegmentAdapter();
      }
      @Override
      public Adapter caseTCESegment(TCESegment object)
      {
        return createTCESegmentAdapter();
      }
      @Override
      public Adapter caseTIZSegment(TIZSegment object)
      {
        return createTIZSegmentAdapter();
      }
      @Override
      public Adapter caseATISegment(ATISegment object)
      {
        return createATISegmentAdapter();
      }
      @Override
      public Adapter caseTRFSegment(TRFSegment object)
      {
        return createTRFSegmentAdapter();
      }
      @Override
      public Adapter caseTVLSegment(TVLSegment object)
      {
        return createTVLSegmentAdapter();
      }
      @Override
      public Adapter caseTDISegment(TDISegment object)
      {
        return createTDISegmentAdapter();
      }
      @Override
      public Adapter caseTIFSegment(TIFSegment object)
      {
        return createTIFSegmentAdapter();
      }
      @Override
      public Adapter caseVEHSegment(VEHSegment object)
      {
        return createVEHSegmentAdapter();
      }
      @Override
      public Adapter caseUNSSegment(UNSSegment object)
      {
        return createUNSSegmentAdapter();
      }
      @Override
      public Adapter caseUNTSegment(UNTSegment object)
      {
        return createUNTSegmentAdapter();
      }
      @Override
      public Adapter caseUNZSegment(UNZSegment object)
      {
        return createUNZSegmentAdapter();
      }
      @Override
      public Adapter caseUNESegment(UNESegment object)
      {
        return createUNESegmentAdapter();
      }
      @Override
      public Adapter caseAbstractEdiFunction(AbstractEdiFunction object)
      {
        return createAbstractEdiFunctionAdapter();
      }
      @Override
      public Adapter caseUNBHeader(UNBHeader object)
      {
        return createUNBHeaderAdapter();
      }
      @Override
      public Adapter casePriceInformation(PriceInformation object)
      {
        return createPriceInformationAdapter();
      }
      @Override
      public Adapter caseMessageBodyFunction(MessageBodyFunction object)
      {
        return createMessageBodyFunctionAdapter();
      }
      @Override
      public Adapter caseMessageIndentifier(MessageIndentifier object)
      {
        return createMessageIndentifierAdapter();
      }
      @Override
      public Adapter caseRelationship(Relationship object)
      {
        return createRelationshipAdapter();
      }
      @Override
      public Adapter caseProductFunction(ProductFunction object)
      {
        return createProductFunctionAdapter();
      }
      @Override
      public Adapter caseItemNumberIdentification(ItemNumberIdentification object)
      {
        return createItemNumberIdentificationAdapter();
      }
      @Override
      public Adapter caseSublineInformation(SublineInformation object)
      {
        return createSublineInformationAdapter();
      }
      @Override
      public Adapter caseQuantityDetail(QuantityDetail object)
      {
        return createQuantityDetailAdapter();
      }
      @Override
      public Adapter caseStreet(Street object)
      {
        return createStreetAdapter();
      }
      @Override
      public Adapter caseCountrySubEntityDetail(CountrySubEntityDetail object)
      {
        return createCountrySubEntityDetailAdapter();
      }
      @Override
      public Adapter casePartyName(PartyName object)
      {
        return createPartyNameAdapter();
      }
      @Override
      public Adapter caseNameAndAddress(NameAndAddress object)
      {
        return createNameAndAddressAdapter();
      }
      @Override
      public Adapter casePartyIdentificationDetail(PartyIdentificationDetail object)
      {
        return createPartyIdentificationDetailAdapter();
      }
      @Override
      public Adapter caseApplicationErrorDetail(ApplicationErrorDetail object)
      {
        return createApplicationErrorDetailAdapter();
      }
      @Override
      public Adapter caseSystemDetailFunction(SystemDetailFunction object)
      {
        return createSystemDetailFunctionAdapter();
      }
      @Override
      public Adapter caseTaxDetail(TaxDetail object)
      {
        return createTaxDetailAdapter();
      }
      @Override
      public Adapter caseTaxAccountDetail(TaxAccountDetail object)
      {
        return createTaxAccountDetailAdapter();
      }
      @Override
      public Adapter caseTaxType(TaxType object)
      {
        return createTaxTypeAdapter();
      }
      @Override
      public Adapter caseCurrencyDetail(CurrencyDetail object)
      {
        return createCurrencyDetailAdapter();
      }
      @Override
      public Adapter caseDocumentMessageIdentification(DocumentMessageIdentification object)
      {
        return createDocumentMessageIdentificationAdapter();
      }
      @Override
      public Adapter caseDocumentMessage(DocumentMessage object)
      {
        return createDocumentMessageAdapter();
      }
      @Override
      public Adapter caseOriginatorFunction(OriginatorFunction object)
      {
        return createOriginatorFunctionAdapter();
      }
      @Override
      public Adapter caseOriginatorIdentificationFunction(OriginatorIdentificationFunction object)
      {
        return createOriginatorIdentificationFunctionAdapter();
      }
      @Override
      public Adapter caseLocation(Location object)
      {
        return createLocationAdapter();
      }
      @Override
      public Adapter caseInterchangerFunction(InterchangerFunction object)
      {
        return createInterchangerFunctionAdapter();
      }
      @Override
      public Adapter caseLocationIdentification(LocationIdentification object)
      {
        return createLocationIdentificationAdapter();
      }
      @Override
      public Adapter caseAddressDetail(AddressDetail object)
      {
        return createAddressDetailAdapter();
      }
      @Override
      public Adapter caseAddressUsage(AddressUsage object)
      {
        return createAddressUsageAdapter();
      }
      @Override
      public Adapter caseAttributeDetail(AttributeDetail object)
      {
        return createAttributeDetailAdapter();
      }
      @Override
      public Adapter caseAttributeType(AttributeType object)
      {
        return createAttributeTypeAdapter();
      }
      @Override
      public Adapter caseBankOperation(BankOperation object)
      {
        return createBankOperationAdapter();
      }
      @Override
      public Adapter caseBusinessFunction(BusinessFunction object)
      {
        return createBusinessFunctionAdapter();
      }
      @Override
      public Adapter caseDepartmentEmployeeDetail(DepartmentEmployeeDetail object)
      {
        return createDepartmentEmployeeDetailAdapter();
      }
      @Override
      public Adapter caseIdentificationNumber(IdentificationNumber object)
      {
        return createIdentificationNumberAdapter();
      }
      @Override
      public Adapter casePositionIdentification(PositionIdentification object)
      {
        return createPositionIdentificationAdapter();
      }
      @Override
      public Adapter caseProductCharacteristic(ProductCharacteristic object)
      {
        return createProductCharacteristicAdapter();
      }
      @Override
      public Adapter caseNationalityDetail(NationalityDetail object)
      {
        return createNationalityDetailAdapter();
      }
      @Override
      public Adapter casePercentageDetail(PercentageDetail object)
      {
        return createPercentageDetailAdapter();
      }
      @Override
      public Adapter caseRateDetail(RateDetail object)
      {
        return createRateDetailAdapter();
      }
      @Override
      public Adapter caseStatusCategory(StatusCategory object)
      {
        return createStatusCategoryAdapter();
      }
      @Override
      public Adapter caseStatus(Status object)
      {
        return createStatusAdapter();
      }
      @Override
      public Adapter caseStatusReason(StatusReason object)
      {
        return createStatusReasonAdapter();
      }
      @Override
      public Adapter caseValueListIdentification(ValueListIdentification object)
      {
        return createValueListIdentificationAdapter();
      }
      @Override
      public Adapter caseTermsOfDeliveryTransport(TermsOfDeliveryTransport object)
      {
        return createTermsOfDeliveryTransportAdapter();
      }
      @Override
      public Adapter caseQuantityDifferenceInformation(QuantityDifferenceInformation object)
      {
        return createQuantityDifferenceInformationAdapter();
      }
      @Override
      public Adapter caseReasonForChange(ReasonForChange object)
      {
        return createReasonForChangeAdapter();
      }
      @Override
      public Adapter caseLanguageDetail(LanguageDetail object)
      {
        return createLanguageDetailAdapter();
      }
      @Override
      public Adapter caseInformationRequest(InformationRequest object)
      {
        return createInformationRequestAdapter();
      }
      @Override
      public Adapter caseIndexIdentification(IndexIdentification object)
      {
        return createIndexIdentificationAdapter();
      }
      @Override
      public Adapter caseIndexValue(IndexValue object)
      {
        return createIndexValueAdapter();
      }
      @Override
      public Adapter caseControl(Control object)
      {
        return createControlAdapter();
      }
      @Override
      public Adapter caseBasisType(BasisType object)
      {
        return createBasisTypeAdapter();
      }
      @Override
      public Adapter caseCommunicationContact(CommunicationContact object)
      {
        return createCommunicationContactAdapter();
      }
      @Override
      public Adapter caseAgreementTypeIdentification(AgreementTypeIdentification object)
      {
        return createAgreementTypeIdentificationAdapter();
      }
      @Override
      public Adapter caseAllowanceChargeInformation(AllowanceChargeInformation object)
      {
        return createAllowanceChargeInformationAdapter();
      }
      @Override
      public Adapter caseSpecialServicesIdentification(SpecialServicesIdentification object)
      {
        return createSpecialServicesIdentificationAdapter();
      }
      @Override
      public Adapter caseApplicabilityType(ApplicabilityType object)
      {
        return createApplicabilityTypeAdapter();
      }
      @Override
      public Adapter casePriceMultiplierInformation(PriceMultiplierInformation object)
      {
        return createPriceMultiplierInformationAdapter();
      }
      @Override
      public Adapter caseMonetaryAmountFunction(MonetaryAmountFunction object)
      {
        return createMonetaryAmountFunctionAdapter();
      }
      @Override
      public Adapter caseMonetaryAmountFunctionDetail(MonetaryAmountFunctionDetail object)
      {
        return createMonetaryAmountFunctionDetailAdapter();
      }
      @Override
      public Adapter caseArrayCellDetail(ArrayCellDetail object)
      {
        return createArrayCellDetailAdapter();
      }
      @Override
      public Adapter caseArrayStructureIdentification(ArrayStructureIdentification object)
      {
        return createArrayStructureIdentificationAdapter();
      }
      @Override
      public Adapter caseBillLevelIdentification(BillLevelIdentification object)
      {
        return createBillLevelIdentificationAdapter();
      }
      @Override
      public Adapter caseCharacteristicValue(CharacteristicValue object)
      {
        return createCharacteristicValueAdapter();
      }
      @Override
      public Adapter caseMeasurementDetail(MeasurementDetail object)
      {
        return createMeasurementDetailAdapter();
      }
      @Override
      public Adapter casePhysicalLogicalStateInformation(PhysicalLogicalStateInformation object)
      {
        return createPhysicalLogicalStateInformationAdapter();
      }
      @Override
      public Adapter caseCodeSetIdentification(CodeSetIdentification object)
      {
        return createCodeSetIdentificationAdapter();
      }
      @Override
      public Adapter caseComputerEnvironmentIdentification(ComputerEnvironmentIdentification object)
      {
        return createComputerEnvironmentIdentificationAdapter();
      }
      @Override
      public Adapter caseClinicalInformationDetail(ClinicalInformationDetail object)
      {
        return createClinicalInformationDetailAdapter();
      }
      @Override
      public Adapter caseCertaintyDetail(CertaintyDetail object)
      {
        return createCertaintyDetailAdapter();
      }
      @Override
      public Adapter caseClauseName(ClauseName object)
      {
        return createClauseNameAdapter();
      }
      @Override
      public Adapter caseClinicalInterventionDetail(ClinicalInterventionDetail object)
      {
        return createClinicalInterventionDetailAdapter();
      }
      @Override
      public Adapter caseProcessingIndicator(ProcessingIndicator object)
      {
        return createProcessingIndicatorAdapter();
      }
      @Override
      public Adapter caseMarksLabels(MarksLabels object)
      {
        return createMarksLabelsAdapter();
      }
      @Override
      public Adapter caseTypeOfMarking(TypeOfMarking object)
      {
        return createTypeOfMarkingAdapter();
      }
      @Override
      public Adapter caseGovernmentAction(GovernmentAction object)
      {
        return createGovernmentActionAdapter();
      }
      @Override
      public Adapter caseProductDateTime(ProductDateTime object)
      {
        return createProductDateTimeAdapter();
      }
      @Override
      public Adapter caseCompanyIdentification(CompanyIdentification object)
      {
        return createCompanyIdentificationAdapter();
      }
      @Override
      public Adapter caseProductIdentificationDetail(ProductIdentificationDetail object)
      {
        return createProductIdentificationDetailAdapter();
      }
      @Override
      public Adapter caseSequenceNumberDetail(SequenceNumberDetail object)
      {
        return createSequenceNumberDetailAdapter();
      }
      @Override
      public Adapter caseDateAndTime(DateAndTime object)
      {
        return createDateAndTimeAdapter();
      }
      @Override
      public Adapter caseDateOnly(DateOnly object)
      {
        return createDateOnlyAdapter();
      }
      @Override
      public Adapter caseDateWithTime(DateWithTime object)
      {
        return createDateWithTimeAdapter();
      }
      @Override
      public Adapter caseDateTimePeriod(DateTimePeriod object)
      {
        return createDateTimePeriodAdapter();
      }
      @Override
      public Adapter defaultCase(EObject object)
      {
        return createEObjectAdapter();
      }
    };

  /**
   * Creates an adapter for the <code>target</code>.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @param target the object to adapt.
   * @return the adapter for the <code>target</code>.
   * @generated
   */
  @Override
  public Adapter createAdapter(Notifier target)
  {
    return modelSwitch.doSwitch((EObject)target);
  }


  /**
   * Creates a new adapter for an object of class '{@link io.thlaegler.edifact.edilang.EdiModel <em>Edi Model</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see io.thlaegler.edifact.edilang.EdiModel
   * @generated
   */
  public Adapter createEdiModelAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link io.thlaegler.edifact.edilang.AbstractEdiSegment <em>Abstract Edi Segment</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see io.thlaegler.edifact.edilang.AbstractEdiSegment
   * @generated
   */
  public Adapter createAbstractEdiSegmentAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link io.thlaegler.edifact.edilang.UNASegment <em>UNA Segment</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see io.thlaegler.edifact.edilang.UNASegment
   * @generated
   */
  public Adapter createUNASegmentAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link io.thlaegler.edifact.edilang.UNBSegment <em>UNB Segment</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see io.thlaegler.edifact.edilang.UNBSegment
   * @generated
   */
  public Adapter createUNBSegmentAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link io.thlaegler.edifact.edilang.UNHSegment <em>UNH Segment</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see io.thlaegler.edifact.edilang.UNHSegment
   * @generated
   */
  public Adapter createUNHSegmentAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link io.thlaegler.edifact.edilang.UNGSegment <em>UNG Segment</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see io.thlaegler.edifact.edilang.UNGSegment
   * @generated
   */
  public Adapter createUNGSegmentAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link io.thlaegler.edifact.edilang.ADRSegment <em>ADR Segment</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see io.thlaegler.edifact.edilang.ADRSegment
   * @generated
   */
  public Adapter createADRSegmentAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link io.thlaegler.edifact.edilang.AGRSegment <em>AGR Segment</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see io.thlaegler.edifact.edilang.AGRSegment
   * @generated
   */
  public Adapter createAGRSegmentAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link io.thlaegler.edifact.edilang.AJTSegment <em>AJT Segment</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see io.thlaegler.edifact.edilang.AJTSegment
   * @generated
   */
  public Adapter createAJTSegmentAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link io.thlaegler.edifact.edilang.ALCSegment <em>ALC Segment</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see io.thlaegler.edifact.edilang.ALCSegment
   * @generated
   */
  public Adapter createALCSegmentAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link io.thlaegler.edifact.edilang.ALISegment <em>ALI Segment</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see io.thlaegler.edifact.edilang.ALISegment
   * @generated
   */
  public Adapter createALISegmentAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link io.thlaegler.edifact.edilang.APPSegment <em>APP Segment</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see io.thlaegler.edifact.edilang.APPSegment
   * @generated
   */
  public Adapter createAPPSegmentAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link io.thlaegler.edifact.edilang.APRSegment <em>APR Segment</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see io.thlaegler.edifact.edilang.APRSegment
   * @generated
   */
  public Adapter createAPRSegmentAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link io.thlaegler.edifact.edilang.ARDSegment <em>ARD Segment</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see io.thlaegler.edifact.edilang.ARDSegment
   * @generated
   */
  public Adapter createARDSegmentAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link io.thlaegler.edifact.edilang.ARRSegment <em>ARR Segment</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see io.thlaegler.edifact.edilang.ARRSegment
   * @generated
   */
  public Adapter createARRSegmentAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link io.thlaegler.edifact.edilang.ASISegment <em>ASI Segment</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see io.thlaegler.edifact.edilang.ASISegment
   * @generated
   */
  public Adapter createASISegmentAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link io.thlaegler.edifact.edilang.ATTSegment <em>ATT Segment</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see io.thlaegler.edifact.edilang.ATTSegment
   * @generated
   */
  public Adapter createATTSegmentAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link io.thlaegler.edifact.edilang.AUTSegment <em>AUT Segment</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see io.thlaegler.edifact.edilang.AUTSegment
   * @generated
   */
  public Adapter createAUTSegmentAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link io.thlaegler.edifact.edilang.BASSegment <em>BAS Segment</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see io.thlaegler.edifact.edilang.BASSegment
   * @generated
   */
  public Adapter createBASSegmentAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link io.thlaegler.edifact.edilang.BIISegment <em>BII Segment</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see io.thlaegler.edifact.edilang.BIISegment
   * @generated
   */
  public Adapter createBIISegmentAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link io.thlaegler.edifact.edilang.BUSSegment <em>BUS Segment</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see io.thlaegler.edifact.edilang.BUSSegment
   * @generated
   */
  public Adapter createBUSSegmentAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link io.thlaegler.edifact.edilang.CAVSegment <em>CAV Segment</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see io.thlaegler.edifact.edilang.CAVSegment
   * @generated
   */
  public Adapter createCAVSegmentAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link io.thlaegler.edifact.edilang.CCDSegment <em>CCD Segment</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see io.thlaegler.edifact.edilang.CCDSegment
   * @generated
   */
  public Adapter createCCDSegmentAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link io.thlaegler.edifact.edilang.CCISegment <em>CCI Segment</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see io.thlaegler.edifact.edilang.CCISegment
   * @generated
   */
  public Adapter createCCISegmentAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link io.thlaegler.edifact.edilang.CDISegment <em>CDI Segment</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see io.thlaegler.edifact.edilang.CDISegment
   * @generated
   */
  public Adapter createCDISegmentAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link io.thlaegler.edifact.edilang.CDSSegment <em>CDS Segment</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see io.thlaegler.edifact.edilang.CDSSegment
   * @generated
   */
  public Adapter createCDSSegmentAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link io.thlaegler.edifact.edilang.CDVSegment <em>CDV Segment</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see io.thlaegler.edifact.edilang.CDVSegment
   * @generated
   */
  public Adapter createCDVSegmentAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link io.thlaegler.edifact.edilang.CEDSegment <em>CED Segment</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see io.thlaegler.edifact.edilang.CEDSegment
   * @generated
   */
  public Adapter createCEDSegmentAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link io.thlaegler.edifact.edilang.CINSegment <em>CIN Segment</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see io.thlaegler.edifact.edilang.CINSegment
   * @generated
   */
  public Adapter createCINSegmentAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link io.thlaegler.edifact.edilang.CLASegment <em>CLA Segment</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see io.thlaegler.edifact.edilang.CLASegment
   * @generated
   */
  public Adapter createCLASegmentAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link io.thlaegler.edifact.edilang.CLISegment <em>CLI Segment</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see io.thlaegler.edifact.edilang.CLISegment
   * @generated
   */
  public Adapter createCLISegmentAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link io.thlaegler.edifact.edilang.CMPSegment <em>CMP Segment</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see io.thlaegler.edifact.edilang.CMPSegment
   * @generated
   */
  public Adapter createCMPSegmentAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link io.thlaegler.edifact.edilang.CNISegment <em>CNI Segment</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see io.thlaegler.edifact.edilang.CNISegment
   * @generated
   */
  public Adapter createCNISegmentAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link io.thlaegler.edifact.edilang.CODSegment <em>COD Segment</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see io.thlaegler.edifact.edilang.CODSegment
   * @generated
   */
  public Adapter createCODSegmentAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link io.thlaegler.edifact.edilang.COMSegment <em>COM Segment</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see io.thlaegler.edifact.edilang.COMSegment
   * @generated
   */
  public Adapter createCOMSegmentAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link io.thlaegler.edifact.edilang.COTSegment <em>COT Segment</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see io.thlaegler.edifact.edilang.COTSegment
   * @generated
   */
  public Adapter createCOTSegmentAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link io.thlaegler.edifact.edilang.CPISegment <em>CPI Segment</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see io.thlaegler.edifact.edilang.CPISegment
   * @generated
   */
  public Adapter createCPISegmentAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link io.thlaegler.edifact.edilang.CPSSegment <em>CPS Segment</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see io.thlaegler.edifact.edilang.CPSSegment
   * @generated
   */
  public Adapter createCPSSegmentAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link io.thlaegler.edifact.edilang.CPTSegment <em>CPT Segment</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see io.thlaegler.edifact.edilang.CPTSegment
   * @generated
   */
  public Adapter createCPTSegmentAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link io.thlaegler.edifact.edilang.CSTSegment <em>CST Segment</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see io.thlaegler.edifact.edilang.CSTSegment
   * @generated
   */
  public Adapter createCSTSegmentAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link io.thlaegler.edifact.edilang.DAMSegment <em>DAM Segment</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see io.thlaegler.edifact.edilang.DAMSegment
   * @generated
   */
  public Adapter createDAMSegmentAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link io.thlaegler.edifact.edilang.DFNSegment <em>DFN Segment</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see io.thlaegler.edifact.edilang.DFNSegment
   * @generated
   */
  public Adapter createDFNSegmentAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link io.thlaegler.edifact.edilang.DGSSegment <em>DGS Segment</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see io.thlaegler.edifact.edilang.DGSSegment
   * @generated
   */
  public Adapter createDGSSegmentAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link io.thlaegler.edifact.edilang.DIISegment <em>DII Segment</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see io.thlaegler.edifact.edilang.DIISegment
   * @generated
   */
  public Adapter createDIISegmentAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link io.thlaegler.edifact.edilang.DIMSegment <em>DIM Segment</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see io.thlaegler.edifact.edilang.DIMSegment
   * @generated
   */
  public Adapter createDIMSegmentAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link io.thlaegler.edifact.edilang.DLISegment <em>DLI Segment</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see io.thlaegler.edifact.edilang.DLISegment
   * @generated
   */
  public Adapter createDLISegmentAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link io.thlaegler.edifact.edilang.DLMSegment <em>DLM Segment</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see io.thlaegler.edifact.edilang.DLMSegment
   * @generated
   */
  public Adapter createDLMSegmentAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link io.thlaegler.edifact.edilang.DMSSegment <em>DMS Segment</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see io.thlaegler.edifact.edilang.DMSSegment
   * @generated
   */
  public Adapter createDMSSegmentAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link io.thlaegler.edifact.edilang.DOCSegment <em>DOC Segment</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see io.thlaegler.edifact.edilang.DOCSegment
   * @generated
   */
  public Adapter createDOCSegmentAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link io.thlaegler.edifact.edilang.DRDSegment <em>DRD Segment</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see io.thlaegler.edifact.edilang.DRDSegment
   * @generated
   */
  public Adapter createDRDSegmentAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link io.thlaegler.edifact.edilang.DSGSegment <em>DSG Segment</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see io.thlaegler.edifact.edilang.DSGSegment
   * @generated
   */
  public Adapter createDSGSegmentAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link io.thlaegler.edifact.edilang.DSISegment <em>DSI Segment</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see io.thlaegler.edifact.edilang.DSISegment
   * @generated
   */
  public Adapter createDSISegmentAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link io.thlaegler.edifact.edilang.EDTSegment <em>EDT Segment</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see io.thlaegler.edifact.edilang.EDTSegment
   * @generated
   */
  public Adapter createEDTSegmentAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link io.thlaegler.edifact.edilang.EFISegment <em>EFI Segment</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see io.thlaegler.edifact.edilang.EFISegment
   * @generated
   */
  public Adapter createEFISegmentAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link io.thlaegler.edifact.edilang.ELMSegment <em>ELM Segment</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see io.thlaegler.edifact.edilang.ELMSegment
   * @generated
   */
  public Adapter createELMSegmentAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link io.thlaegler.edifact.edilang.ELUSegment <em>ELU Segment</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see io.thlaegler.edifact.edilang.ELUSegment
   * @generated
   */
  public Adapter createELUSegmentAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link io.thlaegler.edifact.edilang.ELVSegment <em>ELV Segment</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see io.thlaegler.edifact.edilang.ELVSegment
   * @generated
   */
  public Adapter createELVSegmentAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link io.thlaegler.edifact.edilang.EMPSegment <em>EMP Segment</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see io.thlaegler.edifact.edilang.EMPSegment
   * @generated
   */
  public Adapter createEMPSegmentAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link io.thlaegler.edifact.edilang.EQASegment <em>EQA Segment</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see io.thlaegler.edifact.edilang.EQASegment
   * @generated
   */
  public Adapter createEQASegmentAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link io.thlaegler.edifact.edilang.EQDSegment <em>EQD Segment</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see io.thlaegler.edifact.edilang.EQDSegment
   * @generated
   */
  public Adapter createEQDSegmentAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link io.thlaegler.edifact.edilang.EQNSegment <em>EQN Segment</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see io.thlaegler.edifact.edilang.EQNSegment
   * @generated
   */
  public Adapter createEQNSegmentAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link io.thlaegler.edifact.edilang.ERPSegment <em>ERP Segment</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see io.thlaegler.edifact.edilang.ERPSegment
   * @generated
   */
  public Adapter createERPSegmentAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link io.thlaegler.edifact.edilang.EVESegment <em>EVE Segment</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see io.thlaegler.edifact.edilang.EVESegment
   * @generated
   */
  public Adapter createEVESegmentAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link io.thlaegler.edifact.edilang.EVTSegment <em>EVT Segment</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see io.thlaegler.edifact.edilang.EVTSegment
   * @generated
   */
  public Adapter createEVTSegmentAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link io.thlaegler.edifact.edilang.FCASegment <em>FCA Segment</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see io.thlaegler.edifact.edilang.FCASegment
   * @generated
   */
  public Adapter createFCASegmentAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link io.thlaegler.edifact.edilang.FIISegment <em>FII Segment</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see io.thlaegler.edifact.edilang.FIISegment
   * @generated
   */
  public Adapter createFIISegmentAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link io.thlaegler.edifact.edilang.FNSSegment <em>FNS Segment</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see io.thlaegler.edifact.edilang.FNSSegment
   * @generated
   */
  public Adapter createFNSSegmentAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link io.thlaegler.edifact.edilang.FNTSegment <em>FNT Segment</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see io.thlaegler.edifact.edilang.FNTSegment
   * @generated
   */
  public Adapter createFNTSegmentAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link io.thlaegler.edifact.edilang.FORSegment <em>FOR Segment</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see io.thlaegler.edifact.edilang.FORSegment
   * @generated
   */
  public Adapter createFORSegmentAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link io.thlaegler.edifact.edilang.FSQSegment <em>FSQ Segment</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see io.thlaegler.edifact.edilang.FSQSegment
   * @generated
   */
  public Adapter createFSQSegmentAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link io.thlaegler.edifact.edilang.GDSSegment <em>GDS Segment</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see io.thlaegler.edifact.edilang.GDSSegment
   * @generated
   */
  public Adapter createGDSSegmentAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link io.thlaegler.edifact.edilang.GEISegment <em>GEI Segment</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see io.thlaegler.edifact.edilang.GEISegment
   * @generated
   */
  public Adapter createGEISegmentAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link io.thlaegler.edifact.edilang.GIDSegment <em>GID Segment</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see io.thlaegler.edifact.edilang.GIDSegment
   * @generated
   */
  public Adapter createGIDSegmentAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link io.thlaegler.edifact.edilang.GINSegment <em>GIN Segment</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see io.thlaegler.edifact.edilang.GINSegment
   * @generated
   */
  public Adapter createGINSegmentAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link io.thlaegler.edifact.edilang.GIRSegment <em>GIR Segment</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see io.thlaegler.edifact.edilang.GIRSegment
   * @generated
   */
  public Adapter createGIRSegmentAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link io.thlaegler.edifact.edilang.GISSegment <em>GIS Segment</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see io.thlaegler.edifact.edilang.GISSegment
   * @generated
   */
  public Adapter createGISSegmentAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link io.thlaegler.edifact.edilang.GORSegment <em>GOR Segment</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see io.thlaegler.edifact.edilang.GORSegment
   * @generated
   */
  public Adapter createGORSegmentAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link io.thlaegler.edifact.edilang.GRUSegment <em>GRU Segment</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see io.thlaegler.edifact.edilang.GRUSegment
   * @generated
   */
  public Adapter createGRUSegmentAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link io.thlaegler.edifact.edilang.HANSegment <em>HAN Segment</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see io.thlaegler.edifact.edilang.HANSegment
   * @generated
   */
  public Adapter createHANSegmentAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link io.thlaegler.edifact.edilang.HYNSegment <em>HYN Segment</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see io.thlaegler.edifact.edilang.HYNSegment
   * @generated
   */
  public Adapter createHYNSegmentAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link io.thlaegler.edifact.edilang.ICDSegment <em>ICD Segment</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see io.thlaegler.edifact.edilang.ICDSegment
   * @generated
   */
  public Adapter createICDSegmentAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link io.thlaegler.edifact.edilang.IDESegment <em>IDE Segment</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see io.thlaegler.edifact.edilang.IDESegment
   * @generated
   */
  public Adapter createIDESegmentAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link io.thlaegler.edifact.edilang.IFDSegment <em>IFD Segment</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see io.thlaegler.edifact.edilang.IFDSegment
   * @generated
   */
  public Adapter createIFDSegmentAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link io.thlaegler.edifact.edilang.IHCSegment <em>IHC Segment</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see io.thlaegler.edifact.edilang.IHCSegment
   * @generated
   */
  public Adapter createIHCSegmentAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link io.thlaegler.edifact.edilang.IMDSegment <em>IMD Segment</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see io.thlaegler.edifact.edilang.IMDSegment
   * @generated
   */
  public Adapter createIMDSegmentAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link io.thlaegler.edifact.edilang.INDSegment <em>IND Segment</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see io.thlaegler.edifact.edilang.INDSegment
   * @generated
   */
  public Adapter createINDSegmentAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link io.thlaegler.edifact.edilang.INPSegment <em>INP Segment</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see io.thlaegler.edifact.edilang.INPSegment
   * @generated
   */
  public Adapter createINPSegmentAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link io.thlaegler.edifact.edilang.INVSegment <em>INV Segment</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see io.thlaegler.edifact.edilang.INVSegment
   * @generated
   */
  public Adapter createINVSegmentAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link io.thlaegler.edifact.edilang.IRQSegment <em>IRQ Segment</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see io.thlaegler.edifact.edilang.IRQSegment
   * @generated
   */
  public Adapter createIRQSegmentAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link io.thlaegler.edifact.edilang.LANSegment <em>LAN Segment</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see io.thlaegler.edifact.edilang.LANSegment
   * @generated
   */
  public Adapter createLANSegmentAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link io.thlaegler.edifact.edilang.LOCSegment <em>LOC Segment</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see io.thlaegler.edifact.edilang.LOCSegment
   * @generated
   */
  public Adapter createLOCSegmentAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link io.thlaegler.edifact.edilang.MEASegment <em>MEA Segment</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see io.thlaegler.edifact.edilang.MEASegment
   * @generated
   */
  public Adapter createMEASegmentAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link io.thlaegler.edifact.edilang.MEMSegment <em>MEM Segment</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see io.thlaegler.edifact.edilang.MEMSegment
   * @generated
   */
  public Adapter createMEMSegmentAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link io.thlaegler.edifact.edilang.MKSSegment <em>MKS Segment</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see io.thlaegler.edifact.edilang.MKSSegment
   * @generated
   */
  public Adapter createMKSSegmentAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link io.thlaegler.edifact.edilang.NATSegment <em>NAT Segment</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see io.thlaegler.edifact.edilang.NATSegment
   * @generated
   */
  public Adapter createNATSegmentAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link io.thlaegler.edifact.edilang.PACSegment <em>PAC Segment</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see io.thlaegler.edifact.edilang.PACSegment
   * @generated
   */
  public Adapter createPACSegmentAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link io.thlaegler.edifact.edilang.PAISegment <em>PAI Segment</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see io.thlaegler.edifact.edilang.PAISegment
   * @generated
   */
  public Adapter createPAISegmentAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link io.thlaegler.edifact.edilang.PASSegment <em>PAS Segment</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see io.thlaegler.edifact.edilang.PASSegment
   * @generated
   */
  public Adapter createPASSegmentAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link io.thlaegler.edifact.edilang.PCCSegment <em>PCC Segment</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see io.thlaegler.edifact.edilang.PCCSegment
   * @generated
   */
  public Adapter createPCCSegmentAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link io.thlaegler.edifact.edilang.PCDSegment <em>PCD Segment</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see io.thlaegler.edifact.edilang.PCDSegment
   * @generated
   */
  public Adapter createPCDSegmentAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link io.thlaegler.edifact.edilang.PERSegment <em>PER Segment</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see io.thlaegler.edifact.edilang.PERSegment
   * @generated
   */
  public Adapter createPERSegmentAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link io.thlaegler.edifact.edilang.PGISegment <em>PGI Segment</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see io.thlaegler.edifact.edilang.PGISegment
   * @generated
   */
  public Adapter createPGISegmentAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link io.thlaegler.edifact.edilang.PIASegment <em>PIA Segment</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see io.thlaegler.edifact.edilang.PIASegment
   * @generated
   */
  public Adapter createPIASegmentAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link io.thlaegler.edifact.edilang.PNASegment <em>PNA Segment</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see io.thlaegler.edifact.edilang.PNASegment
   * @generated
   */
  public Adapter createPNASegmentAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link io.thlaegler.edifact.edilang.PRCSegment <em>PRC Segment</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see io.thlaegler.edifact.edilang.PRCSegment
   * @generated
   */
  public Adapter createPRCSegmentAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link io.thlaegler.edifact.edilang.PRVSegment <em>PRV Segment</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see io.thlaegler.edifact.edilang.PRVSegment
   * @generated
   */
  public Adapter createPRVSegmentAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link io.thlaegler.edifact.edilang.PSDSegment <em>PSD Segment</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see io.thlaegler.edifact.edilang.PSDSegment
   * @generated
   */
  public Adapter createPSDSegmentAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link io.thlaegler.edifact.edilang.PTYSegment <em>PTY Segment</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see io.thlaegler.edifact.edilang.PTYSegment
   * @generated
   */
  public Adapter createPTYSegmentAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link io.thlaegler.edifact.edilang.PYTSegment <em>PYT Segment</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see io.thlaegler.edifact.edilang.PYTSegment
   * @generated
   */
  public Adapter createPYTSegmentAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link io.thlaegler.edifact.edilang.QRSSegment <em>QRS Segment</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see io.thlaegler.edifact.edilang.QRSSegment
   * @generated
   */
  public Adapter createQRSSegmentAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link io.thlaegler.edifact.edilang.QUASegment <em>QUA Segment</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see io.thlaegler.edifact.edilang.QUASegment
   * @generated
   */
  public Adapter createQUASegmentAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link io.thlaegler.edifact.edilang.QVRSegment <em>QVR Segment</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see io.thlaegler.edifact.edilang.QVRSegment
   * @generated
   */
  public Adapter createQVRSegmentAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link io.thlaegler.edifact.edilang.RCSSegment <em>RCS Segment</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see io.thlaegler.edifact.edilang.RCSSegment
   * @generated
   */
  public Adapter createRCSSegmentAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link io.thlaegler.edifact.edilang.RELSegment <em>REL Segment</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see io.thlaegler.edifact.edilang.RELSegment
   * @generated
   */
  public Adapter createRELSegmentAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link io.thlaegler.edifact.edilang.RJLSegment <em>RJL Segment</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see io.thlaegler.edifact.edilang.RJLSegment
   * @generated
   */
  public Adapter createRJLSegmentAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link io.thlaegler.edifact.edilang.RNGSegment <em>RNG Segment</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see io.thlaegler.edifact.edilang.RNGSegment
   * @generated
   */
  public Adapter createRNGSegmentAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link io.thlaegler.edifact.edilang.RODSegment <em>ROD Segment</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see io.thlaegler.edifact.edilang.RODSegment
   * @generated
   */
  public Adapter createRODSegmentAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link io.thlaegler.edifact.edilang.RSLSegment <em>RSL Segment</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see io.thlaegler.edifact.edilang.RSLSegment
   * @generated
   */
  public Adapter createRSLSegmentAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link io.thlaegler.edifact.edilang.RTESegment <em>RTE Segment</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see io.thlaegler.edifact.edilang.RTESegment
   * @generated
   */
  public Adapter createRTESegmentAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link io.thlaegler.edifact.edilang.SALSegment <em>SAL Segment</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see io.thlaegler.edifact.edilang.SALSegment
   * @generated
   */
  public Adapter createSALSegmentAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link io.thlaegler.edifact.edilang.SCCSegment <em>SCC Segment</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see io.thlaegler.edifact.edilang.SCCSegment
   * @generated
   */
  public Adapter createSCCSegmentAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link io.thlaegler.edifact.edilang.SCDSegment <em>SCD Segment</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see io.thlaegler.edifact.edilang.SCDSegment
   * @generated
   */
  public Adapter createSCDSegmentAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link io.thlaegler.edifact.edilang.SEGSegment <em>SEG Segment</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see io.thlaegler.edifact.edilang.SEGSegment
   * @generated
   */
  public Adapter createSEGSegmentAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link io.thlaegler.edifact.edilang.SELSegment <em>SEL Segment</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see io.thlaegler.edifact.edilang.SELSegment
   * @generated
   */
  public Adapter createSELSegmentAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link io.thlaegler.edifact.edilang.SEQSegment <em>SEQ Segment</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see io.thlaegler.edifact.edilang.SEQSegment
   * @generated
   */
  public Adapter createSEQSegmentAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link io.thlaegler.edifact.edilang.SFISegment <em>SFI Segment</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see io.thlaegler.edifact.edilang.SFISegment
   * @generated
   */
  public Adapter createSFISegmentAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link io.thlaegler.edifact.edilang.SGPSegment <em>SGP Segment</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see io.thlaegler.edifact.edilang.SGPSegment
   * @generated
   */
  public Adapter createSGPSegmentAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link io.thlaegler.edifact.edilang.SGUSegment <em>SGU Segment</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see io.thlaegler.edifact.edilang.SGUSegment
   * @generated
   */
  public Adapter createSGUSegmentAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link io.thlaegler.edifact.edilang.SPRSegment <em>SPR Segment</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see io.thlaegler.edifact.edilang.SPRSegment
   * @generated
   */
  public Adapter createSPRSegmentAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link io.thlaegler.edifact.edilang.SPSSegment <em>SPS Segment</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see io.thlaegler.edifact.edilang.SPSSegment
   * @generated
   */
  public Adapter createSPSSegmentAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link io.thlaegler.edifact.edilang.STASegment <em>STA Segment</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see io.thlaegler.edifact.edilang.STASegment
   * @generated
   */
  public Adapter createSTASegmentAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link io.thlaegler.edifact.edilang.STCSegment <em>STC Segment</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see io.thlaegler.edifact.edilang.STCSegment
   * @generated
   */
  public Adapter createSTCSegmentAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link io.thlaegler.edifact.edilang.STGSegment <em>STG Segment</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see io.thlaegler.edifact.edilang.STGSegment
   * @generated
   */
  public Adapter createSTGSegmentAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link io.thlaegler.edifact.edilang.STSSegment <em>STS Segment</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see io.thlaegler.edifact.edilang.STSSegment
   * @generated
   */
  public Adapter createSTSSegmentAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link io.thlaegler.edifact.edilang.STXSegment <em>STX Segment</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see io.thlaegler.edifact.edilang.STXSegment
   * @generated
   */
  public Adapter createSTXSegmentAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link io.thlaegler.edifact.edilang.TCCSegment <em>TCC Segment</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see io.thlaegler.edifact.edilang.TCCSegment
   * @generated
   */
  public Adapter createTCCSegmentAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link io.thlaegler.edifact.edilang.TDTSegment <em>TDT Segment</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see io.thlaegler.edifact.edilang.TDTSegment
   * @generated
   */
  public Adapter createTDTSegmentAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link io.thlaegler.edifact.edilang.TEMSegment <em>TEM Segment</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see io.thlaegler.edifact.edilang.TEMSegment
   * @generated
   */
  public Adapter createTEMSegmentAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link io.thlaegler.edifact.edilang.TMDSegment <em>TMD Segment</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see io.thlaegler.edifact.edilang.TMDSegment
   * @generated
   */
  public Adapter createTMDSegmentAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link io.thlaegler.edifact.edilang.TMPSegment <em>TMP Segment</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see io.thlaegler.edifact.edilang.TMPSegment
   * @generated
   */
  public Adapter createTMPSegmentAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link io.thlaegler.edifact.edilang.TODSegment <em>TOD Segment</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see io.thlaegler.edifact.edilang.TODSegment
   * @generated
   */
  public Adapter createTODSegmentAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link io.thlaegler.edifact.edilang.TPLSegment <em>TPL Segment</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see io.thlaegler.edifact.edilang.TPLSegment
   * @generated
   */
  public Adapter createTPLSegmentAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link io.thlaegler.edifact.edilang.TRUSegment <em>TRU Segment</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see io.thlaegler.edifact.edilang.TRUSegment
   * @generated
   */
  public Adapter createTRUSegmentAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link io.thlaegler.edifact.edilang.TSRSegment <em>TSR Segment</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see io.thlaegler.edifact.edilang.TSRSegment
   * @generated
   */
  public Adapter createTSRSegmentAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link io.thlaegler.edifact.edilang.VLISegment <em>VLI Segment</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see io.thlaegler.edifact.edilang.VLISegment
   * @generated
   */
  public Adapter createVLISegmentAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link io.thlaegler.edifact.edilang.MSGSegment <em>MSG Segment</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see io.thlaegler.edifact.edilang.MSGSegment
   * @generated
   */
  public Adapter createMSGSegmentAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link io.thlaegler.edifact.edilang.POCSegment <em>POC Segment</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see io.thlaegler.edifact.edilang.POCSegment
   * @generated
   */
  public Adapter createPOCSegmentAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link io.thlaegler.edifact.edilang.UCISegment <em>UCI Segment</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see io.thlaegler.edifact.edilang.UCISegment
   * @generated
   */
  public Adapter createUCISegmentAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link io.thlaegler.edifact.edilang.PDISegment <em>PDI Segment</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see io.thlaegler.edifact.edilang.PDISegment
   * @generated
   */
  public Adapter createPDISegmentAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link io.thlaegler.edifact.edilang.RPISegment <em>RPI Segment</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see io.thlaegler.edifact.edilang.RPISegment
   * @generated
   */
  public Adapter createRPISegmentAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link io.thlaegler.edifact.edilang.MOASegment <em>MOA Segment</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see io.thlaegler.edifact.edilang.MOASegment
   * @generated
   */
  public Adapter createMOASegmentAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link io.thlaegler.edifact.edilang.LINSegment <em>LIN Segment</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see io.thlaegler.edifact.edilang.LINSegment
   * @generated
   */
  public Adapter createLINSegmentAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link io.thlaegler.edifact.edilang.PRISegment <em>PRI Segment</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see io.thlaegler.edifact.edilang.PRISegment
   * @generated
   */
  public Adapter createPRISegmentAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link io.thlaegler.edifact.edilang.QTYSegment <em>QTY Segment</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see io.thlaegler.edifact.edilang.QTYSegment
   * @generated
   */
  public Adapter createQTYSegmentAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link io.thlaegler.edifact.edilang.CUXSegment <em>CUX Segment</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see io.thlaegler.edifact.edilang.CUXSegment
   * @generated
   */
  public Adapter createCUXSegmentAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link io.thlaegler.edifact.edilang.TAXSegment <em>TAX Segment</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see io.thlaegler.edifact.edilang.TAXSegment
   * @generated
   */
  public Adapter createTAXSegmentAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link io.thlaegler.edifact.edilang.RFFSegment <em>RFF Segment</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see io.thlaegler.edifact.edilang.RFFSegment
   * @generated
   */
  public Adapter createRFFSegmentAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link io.thlaegler.edifact.edilang.NADSegment <em>NAD Segment</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see io.thlaegler.edifact.edilang.NADSegment
   * @generated
   */
  public Adapter createNADSegmentAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link io.thlaegler.edifact.edilang.DTMSegment <em>DTM Segment</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see io.thlaegler.edifact.edilang.DTMSegment
   * @generated
   */
  public Adapter createDTMSegmentAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link io.thlaegler.edifact.edilang.BGMSegment <em>BGM Segment</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see io.thlaegler.edifact.edilang.BGMSegment
   * @generated
   */
  public Adapter createBGMSegmentAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link io.thlaegler.edifact.edilang.PATSegment <em>PAT Segment</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see io.thlaegler.edifact.edilang.PATSegment
   * @generated
   */
  public Adapter createPATSegmentAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link io.thlaegler.edifact.edilang.FTXSegment <em>FTX Segment</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see io.thlaegler.edifact.edilang.FTXSegment
   * @generated
   */
  public Adapter createFTXSegmentAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link io.thlaegler.edifact.edilang.ERCSegment <em>ERC Segment</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see io.thlaegler.edifact.edilang.ERCSegment
   * @generated
   */
  public Adapter createERCSegmentAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link io.thlaegler.edifact.edilang.CNTSegment <em>CNT Segment</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see io.thlaegler.edifact.edilang.CNTSegment
   * @generated
   */
  public Adapter createCNTSegmentAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link io.thlaegler.edifact.edilang.CTASegment <em>CTA Segment</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see io.thlaegler.edifact.edilang.CTASegment
   * @generated
   */
  public Adapter createCTASegmentAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link io.thlaegler.edifact.edilang.PCISegment <em>PCI Segment</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see io.thlaegler.edifact.edilang.PCISegment
   * @generated
   */
  public Adapter createPCISegmentAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link io.thlaegler.edifact.edilang.AAISegment <em>AAI Segment</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see io.thlaegler.edifact.edilang.AAISegment
   * @generated
   */
  public Adapter createAAISegmentAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link io.thlaegler.edifact.edilang.ALSSegment <em>ALS Segment</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see io.thlaegler.edifact.edilang.ALSSegment
   * @generated
   */
  public Adapter createALSSegmentAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link io.thlaegler.edifact.edilang.ODSSegment <em>ODS Segment</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see io.thlaegler.edifact.edilang.ODSSegment
   * @generated
   */
  public Adapter createODSSegmentAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link io.thlaegler.edifact.edilang.APDSegment <em>APD Segment</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see io.thlaegler.edifact.edilang.APDSegment
   * @generated
   */
  public Adapter createAPDSegmentAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link io.thlaegler.edifact.edilang.ADSSegment <em>ADS Segment</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see io.thlaegler.edifact.edilang.ADSSegment
   * @generated
   */
  public Adapter createADSSegmentAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link io.thlaegler.edifact.edilang.ERISegment <em>ERI Segment</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see io.thlaegler.edifact.edilang.ERISegment
   * @generated
   */
  public Adapter createERISegmentAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link io.thlaegler.edifact.edilang.ATRSegment <em>ATR Segment</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see io.thlaegler.edifact.edilang.ATRSegment
   * @generated
   */
  public Adapter createATRSegmentAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link io.thlaegler.edifact.edilang.BCDSegment <em>BCD Segment</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see io.thlaegler.edifact.edilang.BCDSegment
   * @generated
   */
  public Adapter createBCDSegmentAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link io.thlaegler.edifact.edilang.BLISegment <em>BLI Segment</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see io.thlaegler.edifact.edilang.BLISegment
   * @generated
   */
  public Adapter createBLISegmentAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link io.thlaegler.edifact.edilang.MOVSegment <em>MOV Segment</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see io.thlaegler.edifact.edilang.MOVSegment
   * @generated
   */
  public Adapter createMOVSegmentAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link io.thlaegler.edifact.edilang.CLTSegment <em>CLT Segment</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see io.thlaegler.edifact.edilang.CLTSegment
   * @generated
   */
  public Adapter createCLTSegmentAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link io.thlaegler.edifact.edilang.CMNSegment <em>CMN Segment</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see io.thlaegler.edifact.edilang.CMNSegment
   * @generated
   */
  public Adapter createCMNSegmentAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link io.thlaegler.edifact.edilang.CNXSegment <em>CNX Segment</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see io.thlaegler.edifact.edilang.CNXSegment
   * @generated
   */
  public Adapter createCNXSegmentAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link io.thlaegler.edifact.edilang.CRISegment <em>CRI Segment</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see io.thlaegler.edifact.edilang.CRISegment
   * @generated
   */
  public Adapter createCRISegmentAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link io.thlaegler.edifact.edilang.CONSegment <em>CON Segment</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see io.thlaegler.edifact.edilang.CONSegment
   * @generated
   */
  public Adapter createCONSegmentAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link io.thlaegler.edifact.edilang.CNYSegment <em>CNY Segment</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see io.thlaegler.edifact.edilang.CNYSegment
   * @generated
   */
  public Adapter createCNYSegmentAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link io.thlaegler.edifact.edilang.CURSegment <em>CUR Segment</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see io.thlaegler.edifact.edilang.CURSegment
   * @generated
   */
  public Adapter createCURSegmentAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link io.thlaegler.edifact.edilang.DAVSegment <em>DAV Segment</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see io.thlaegler.edifact.edilang.DAVSegment
   * @generated
   */
  public Adapter createDAVSegmentAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link io.thlaegler.edifact.edilang.DTISegment <em>DTI Segment</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see io.thlaegler.edifact.edilang.DTISegment
   * @generated
   */
  public Adapter createDTISegmentAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link io.thlaegler.edifact.edilang.DNTSegment <em>DNT Segment</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see io.thlaegler.edifact.edilang.DNTSegment
   * @generated
   */
  public Adapter createDNTSegmentAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link io.thlaegler.edifact.edilang.DISSegment <em>DIS Segment</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see io.thlaegler.edifact.edilang.DISSegment
   * @generated
   */
  public Adapter createDISSegmentAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link io.thlaegler.edifact.edilang.SERSegment <em>SER Segment</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see io.thlaegler.edifact.edilang.SERSegment
   * @generated
   */
  public Adapter createSERSegmentAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link io.thlaegler.edifact.edilang.FRMSegment <em>FRM Segment</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see io.thlaegler.edifact.edilang.FRMSegment
   * @generated
   */
  public Adapter createFRMSegmentAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link io.thlaegler.edifact.edilang.FRQSegment <em>FRQ Segment</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see io.thlaegler.edifact.edilang.FRQSegment
   * @generated
   */
  public Adapter createFRQSegmentAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link io.thlaegler.edifact.edilang.FTISegment <em>FTI Segment</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see io.thlaegler.edifact.edilang.FTISegment
   * @generated
   */
  public Adapter createFTISegmentAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link io.thlaegler.edifact.edilang.HDISegment <em>HDI Segment</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see io.thlaegler.edifact.edilang.HDISegment
   * @generated
   */
  public Adapter createHDISegmentAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link io.thlaegler.edifact.edilang.HDRSegment <em>HDR Segment</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see io.thlaegler.edifact.edilang.HDRSegment
   * @generated
   */
  public Adapter createHDRSegmentAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link io.thlaegler.edifact.edilang.ADISegment <em>ADI Segment</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see io.thlaegler.edifact.edilang.ADISegment
   * @generated
   */
  public Adapter createADISegmentAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link io.thlaegler.edifact.edilang.HDSSegment <em>HDS Segment</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see io.thlaegler.edifact.edilang.HDSSegment
   * @generated
   */
  public Adapter createHDSSegmentAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link io.thlaegler.edifact.edilang.ITDSegment <em>ITD Segment</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see io.thlaegler.edifact.edilang.ITDSegment
   * @generated
   */
  public Adapter createITDSegmentAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link io.thlaegler.edifact.edilang.ITCSegment <em>ITC Segment</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see io.thlaegler.edifact.edilang.ITCSegment
   * @generated
   */
  public Adapter createITCSegmentAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link io.thlaegler.edifact.edilang.ICISegment <em>ICI Segment</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see io.thlaegler.edifact.edilang.ICISegment
   * @generated
   */
  public Adapter createICISegmentAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link io.thlaegler.edifact.edilang.IFTSegment <em>IFT Segment</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see io.thlaegler.edifact.edilang.IFTSegment
   * @generated
   */
  public Adapter createIFTSegmentAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link io.thlaegler.edifact.edilang.ITMSegment <em>ITM Segment</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see io.thlaegler.edifact.edilang.ITMSegment
   * @generated
   */
  public Adapter createITMSegmentAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link io.thlaegler.edifact.edilang.LNGSegment <em>LNG Segment</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see io.thlaegler.edifact.edilang.LNGSegment
   * @generated
   */
  public Adapter createLNGSegmentAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link io.thlaegler.edifact.edilang.LKPSegment <em>LKP Segment</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see io.thlaegler.edifact.edilang.LKPSegment
   * @generated
   */
  public Adapter createLKPSegmentAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link io.thlaegler.edifact.edilang.PORSegment <em>POR Segment</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see io.thlaegler.edifact.edilang.PORSegment
   * @generated
   */
  public Adapter createPORSegmentAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link io.thlaegler.edifact.edilang.MESSegment <em>MES Segment</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see io.thlaegler.edifact.edilang.MESSegment
   * @generated
   */
  public Adapter createMESSegmentAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link io.thlaegler.edifact.edilang.MSDSegment <em>MSD Segment</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see io.thlaegler.edifact.edilang.MSDSegment
   * @generated
   */
  public Adapter createMSDSegmentAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link io.thlaegler.edifact.edilang.MAPSegment <em>MAP Segment</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see io.thlaegler.edifact.edilang.MAPSegment
   * @generated
   */
  public Adapter createMAPSegmentAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link io.thlaegler.edifact.edilang.NMESegment <em>NME Segment</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see io.thlaegler.edifact.edilang.NMESegment
   * @generated
   */
  public Adapter createNMESegmentAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link io.thlaegler.edifact.edilang.NAASegment <em>NAA Segment</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see io.thlaegler.edifact.edilang.NAASegment
   * @generated
   */
  public Adapter createNAASegmentAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link io.thlaegler.edifact.edilang.NUNSegment <em>NUN Segment</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see io.thlaegler.edifact.edilang.NUNSegment
   * @generated
   */
  public Adapter createNUNSegmentAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link io.thlaegler.edifact.edilang.ODISegment <em>ODI Segment</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see io.thlaegler.edifact.edilang.ODISegment
   * @generated
   */
  public Adapter createODISegmentAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link io.thlaegler.edifact.edilang.ORGSegment <em>ORG Segment</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see io.thlaegler.edifact.edilang.ORGSegment
   * @generated
   */
  public Adapter createORGSegmentAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link io.thlaegler.edifact.edilang.OTISegment <em>OTI Segment</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see io.thlaegler.edifact.edilang.OTISegment
   * @generated
   */
  public Adapter createOTISegmentAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link io.thlaegler.edifact.edilang.PRTSegment <em>PRT Segment</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see io.thlaegler.edifact.edilang.PRTSegment
   * @generated
   */
  public Adapter createPRTSegmentAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link io.thlaegler.edifact.edilang.PMTSegment <em>PMT Segment</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see io.thlaegler.edifact.edilang.PMTSegment
   * @generated
   */
  public Adapter createPMTSegmentAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link io.thlaegler.edifact.edilang.POPSegment <em>POP Segment</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see io.thlaegler.edifact.edilang.POPSegment
   * @generated
   */
  public Adapter createPOPSegmentAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link io.thlaegler.edifact.edilang.POSSegment <em>POS Segment</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see io.thlaegler.edifact.edilang.POSSegment
   * @generated
   */
  public Adapter createPOSSegmentAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link io.thlaegler.edifact.edilang.PRESegment <em>PRE Segment</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see io.thlaegler.edifact.edilang.PRESegment
   * @generated
   */
  public Adapter createPRESegmentAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link io.thlaegler.edifact.edilang.PRDSegment <em>PRD Segment</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see io.thlaegler.edifact.edilang.PRDSegment
   * @generated
   */
  public Adapter createPRDSegmentAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link io.thlaegler.edifact.edilang.PDTSegment <em>PDT Segment</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see io.thlaegler.edifact.edilang.PDTSegment
   * @generated
   */
  public Adapter createPDTSegmentAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link io.thlaegler.edifact.edilang.PLISegment <em>PLI Segment</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see io.thlaegler.edifact.edilang.PLISegment
   * @generated
   */
  public Adapter createPLISegmentAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link io.thlaegler.edifact.edilang.PROSegment <em>PRO Segment</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see io.thlaegler.edifact.edilang.PROSegment
   * @generated
   */
  public Adapter createPROSegmentAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link io.thlaegler.edifact.edilang.QTISegment <em>QTI Segment</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see io.thlaegler.edifact.edilang.QTISegment
   * @generated
   */
  public Adapter createQTISegmentAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link io.thlaegler.edifact.edilang.RTISegment <em>RTI Segment</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see io.thlaegler.edifact.edilang.RTISegment
   * @generated
   */
  public Adapter createRTISegmentAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link io.thlaegler.edifact.edilang.RTCSegment <em>RTC Segment</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see io.thlaegler.edifact.edilang.RTCSegment
   * @generated
   */
  public Adapter createRTCSegmentAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link io.thlaegler.edifact.edilang.RFRSegment <em>RFR Segment</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see io.thlaegler.edifact.edilang.RFRSegment
   * @generated
   */
  public Adapter createRFRSegmentAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link io.thlaegler.edifact.edilang.RLSSegment <em>RLS Segment</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see io.thlaegler.edifact.edilang.RLSSegment
   * @generated
   */
  public Adapter createRLSSegmentAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link io.thlaegler.edifact.edilang.RCISegment <em>RCI Segment</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see io.thlaegler.edifact.edilang.RCISegment
   * @generated
   */
  public Adapter createRCISegmentAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link io.thlaegler.edifact.edilang.RULSegment <em>RUL Segment</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see io.thlaegler.edifact.edilang.RULSegment
   * @generated
   */
  public Adapter createRULSegmentAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link io.thlaegler.edifact.edilang.SDTSegment <em>SDT Segment</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see io.thlaegler.edifact.edilang.SDTSegment
   * @generated
   */
  public Adapter createSDTSegmentAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link io.thlaegler.edifact.edilang.ASDSegment <em>ASD Segment</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see io.thlaegler.edifact.edilang.ASDSegment
   * @generated
   */
  public Adapter createASDSegmentAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link io.thlaegler.edifact.edilang.PSISegment <em>PSI Segment</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see io.thlaegler.edifact.edilang.PSISegment
   * @generated
   */
  public Adapter createPSISegmentAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link io.thlaegler.edifact.edilang.SSRSegment <em>SSR Segment</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see io.thlaegler.edifact.edilang.SSRSegment
   * @generated
   */
  public Adapter createSSRSegmentAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link io.thlaegler.edifact.edilang.TFFSegment <em>TFF Segment</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see io.thlaegler.edifact.edilang.TFFSegment
   * @generated
   */
  public Adapter createTFFSegmentAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link io.thlaegler.edifact.edilang.TXSSegment <em>TXS Segment</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see io.thlaegler.edifact.edilang.TXSSegment
   * @generated
   */
  public Adapter createTXSSegmentAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link io.thlaegler.edifact.edilang.TCESegment <em>TCE Segment</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see io.thlaegler.edifact.edilang.TCESegment
   * @generated
   */
  public Adapter createTCESegmentAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link io.thlaegler.edifact.edilang.TIZSegment <em>TIZ Segment</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see io.thlaegler.edifact.edilang.TIZSegment
   * @generated
   */
  public Adapter createTIZSegmentAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link io.thlaegler.edifact.edilang.ATISegment <em>ATI Segment</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see io.thlaegler.edifact.edilang.ATISegment
   * @generated
   */
  public Adapter createATISegmentAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link io.thlaegler.edifact.edilang.TRFSegment <em>TRF Segment</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see io.thlaegler.edifact.edilang.TRFSegment
   * @generated
   */
  public Adapter createTRFSegmentAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link io.thlaegler.edifact.edilang.TVLSegment <em>TVL Segment</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see io.thlaegler.edifact.edilang.TVLSegment
   * @generated
   */
  public Adapter createTVLSegmentAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link io.thlaegler.edifact.edilang.TDISegment <em>TDI Segment</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see io.thlaegler.edifact.edilang.TDISegment
   * @generated
   */
  public Adapter createTDISegmentAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link io.thlaegler.edifact.edilang.TIFSegment <em>TIF Segment</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see io.thlaegler.edifact.edilang.TIFSegment
   * @generated
   */
  public Adapter createTIFSegmentAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link io.thlaegler.edifact.edilang.VEHSegment <em>VEH Segment</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see io.thlaegler.edifact.edilang.VEHSegment
   * @generated
   */
  public Adapter createVEHSegmentAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link io.thlaegler.edifact.edilang.UNSSegment <em>UNS Segment</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see io.thlaegler.edifact.edilang.UNSSegment
   * @generated
   */
  public Adapter createUNSSegmentAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link io.thlaegler.edifact.edilang.UNTSegment <em>UNT Segment</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see io.thlaegler.edifact.edilang.UNTSegment
   * @generated
   */
  public Adapter createUNTSegmentAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link io.thlaegler.edifact.edilang.UNZSegment <em>UNZ Segment</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see io.thlaegler.edifact.edilang.UNZSegment
   * @generated
   */
  public Adapter createUNZSegmentAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link io.thlaegler.edifact.edilang.UNESegment <em>UNE Segment</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see io.thlaegler.edifact.edilang.UNESegment
   * @generated
   */
  public Adapter createUNESegmentAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link io.thlaegler.edifact.edilang.AbstractEdiFunction <em>Abstract Edi Function</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see io.thlaegler.edifact.edilang.AbstractEdiFunction
   * @generated
   */
  public Adapter createAbstractEdiFunctionAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link io.thlaegler.edifact.edilang.UNBHeader <em>UNB Header</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see io.thlaegler.edifact.edilang.UNBHeader
   * @generated
   */
  public Adapter createUNBHeaderAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link io.thlaegler.edifact.edilang.PriceInformation <em>Price Information</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see io.thlaegler.edifact.edilang.PriceInformation
   * @generated
   */
  public Adapter createPriceInformationAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link io.thlaegler.edifact.edilang.MessageBodyFunction <em>Message Body Function</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see io.thlaegler.edifact.edilang.MessageBodyFunction
   * @generated
   */
  public Adapter createMessageBodyFunctionAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link io.thlaegler.edifact.edilang.MessageIndentifier <em>Message Indentifier</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see io.thlaegler.edifact.edilang.MessageIndentifier
   * @generated
   */
  public Adapter createMessageIndentifierAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link io.thlaegler.edifact.edilang.Relationship <em>Relationship</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see io.thlaegler.edifact.edilang.Relationship
   * @generated
   */
  public Adapter createRelationshipAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link io.thlaegler.edifact.edilang.ProductFunction <em>Product Function</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see io.thlaegler.edifact.edilang.ProductFunction
   * @generated
   */
  public Adapter createProductFunctionAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link io.thlaegler.edifact.edilang.ItemNumberIdentification <em>Item Number Identification</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see io.thlaegler.edifact.edilang.ItemNumberIdentification
   * @generated
   */
  public Adapter createItemNumberIdentificationAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link io.thlaegler.edifact.edilang.SublineInformation <em>Subline Information</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see io.thlaegler.edifact.edilang.SublineInformation
   * @generated
   */
  public Adapter createSublineInformationAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link io.thlaegler.edifact.edilang.QuantityDetail <em>Quantity Detail</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see io.thlaegler.edifact.edilang.QuantityDetail
   * @generated
   */
  public Adapter createQuantityDetailAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link io.thlaegler.edifact.edilang.Street <em>Street</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see io.thlaegler.edifact.edilang.Street
   * @generated
   */
  public Adapter createStreetAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link io.thlaegler.edifact.edilang.CountrySubEntityDetail <em>Country Sub Entity Detail</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see io.thlaegler.edifact.edilang.CountrySubEntityDetail
   * @generated
   */
  public Adapter createCountrySubEntityDetailAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link io.thlaegler.edifact.edilang.PartyName <em>Party Name</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see io.thlaegler.edifact.edilang.PartyName
   * @generated
   */
  public Adapter createPartyNameAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link io.thlaegler.edifact.edilang.NameAndAddress <em>Name And Address</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see io.thlaegler.edifact.edilang.NameAndAddress
   * @generated
   */
  public Adapter createNameAndAddressAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link io.thlaegler.edifact.edilang.PartyIdentificationDetail <em>Party Identification Detail</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see io.thlaegler.edifact.edilang.PartyIdentificationDetail
   * @generated
   */
  public Adapter createPartyIdentificationDetailAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link io.thlaegler.edifact.edilang.ApplicationErrorDetail <em>Application Error Detail</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see io.thlaegler.edifact.edilang.ApplicationErrorDetail
   * @generated
   */
  public Adapter createApplicationErrorDetailAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link io.thlaegler.edifact.edilang.SystemDetailFunction <em>System Detail Function</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see io.thlaegler.edifact.edilang.SystemDetailFunction
   * @generated
   */
  public Adapter createSystemDetailFunctionAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link io.thlaegler.edifact.edilang.TaxDetail <em>Tax Detail</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see io.thlaegler.edifact.edilang.TaxDetail
   * @generated
   */
  public Adapter createTaxDetailAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link io.thlaegler.edifact.edilang.TaxAccountDetail <em>Tax Account Detail</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see io.thlaegler.edifact.edilang.TaxAccountDetail
   * @generated
   */
  public Adapter createTaxAccountDetailAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link io.thlaegler.edifact.edilang.TaxType <em>Tax Type</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see io.thlaegler.edifact.edilang.TaxType
   * @generated
   */
  public Adapter createTaxTypeAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link io.thlaegler.edifact.edilang.CurrencyDetail <em>Currency Detail</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see io.thlaegler.edifact.edilang.CurrencyDetail
   * @generated
   */
  public Adapter createCurrencyDetailAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link io.thlaegler.edifact.edilang.DocumentMessageIdentification <em>Document Message Identification</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see io.thlaegler.edifact.edilang.DocumentMessageIdentification
   * @generated
   */
  public Adapter createDocumentMessageIdentificationAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link io.thlaegler.edifact.edilang.DocumentMessage <em>Document Message</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see io.thlaegler.edifact.edilang.DocumentMessage
   * @generated
   */
  public Adapter createDocumentMessageAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link io.thlaegler.edifact.edilang.OriginatorFunction <em>Originator Function</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see io.thlaegler.edifact.edilang.OriginatorFunction
   * @generated
   */
  public Adapter createOriginatorFunctionAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link io.thlaegler.edifact.edilang.OriginatorIdentificationFunction <em>Originator Identification Function</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see io.thlaegler.edifact.edilang.OriginatorIdentificationFunction
   * @generated
   */
  public Adapter createOriginatorIdentificationFunctionAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link io.thlaegler.edifact.edilang.Location <em>Location</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see io.thlaegler.edifact.edilang.Location
   * @generated
   */
  public Adapter createLocationAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link io.thlaegler.edifact.edilang.InterchangerFunction <em>Interchanger Function</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see io.thlaegler.edifact.edilang.InterchangerFunction
   * @generated
   */
  public Adapter createInterchangerFunctionAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link io.thlaegler.edifact.edilang.LocationIdentification <em>Location Identification</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see io.thlaegler.edifact.edilang.LocationIdentification
   * @generated
   */
  public Adapter createLocationIdentificationAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link io.thlaegler.edifact.edilang.AddressDetail <em>Address Detail</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see io.thlaegler.edifact.edilang.AddressDetail
   * @generated
   */
  public Adapter createAddressDetailAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link io.thlaegler.edifact.edilang.AddressUsage <em>Address Usage</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see io.thlaegler.edifact.edilang.AddressUsage
   * @generated
   */
  public Adapter createAddressUsageAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link io.thlaegler.edifact.edilang.AttributeDetail <em>Attribute Detail</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see io.thlaegler.edifact.edilang.AttributeDetail
   * @generated
   */
  public Adapter createAttributeDetailAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link io.thlaegler.edifact.edilang.AttributeType <em>Attribute Type</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see io.thlaegler.edifact.edilang.AttributeType
   * @generated
   */
  public Adapter createAttributeTypeAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link io.thlaegler.edifact.edilang.BankOperation <em>Bank Operation</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see io.thlaegler.edifact.edilang.BankOperation
   * @generated
   */
  public Adapter createBankOperationAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link io.thlaegler.edifact.edilang.BusinessFunction <em>Business Function</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see io.thlaegler.edifact.edilang.BusinessFunction
   * @generated
   */
  public Adapter createBusinessFunctionAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link io.thlaegler.edifact.edilang.DepartmentEmployeeDetail <em>Department Employee Detail</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see io.thlaegler.edifact.edilang.DepartmentEmployeeDetail
   * @generated
   */
  public Adapter createDepartmentEmployeeDetailAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link io.thlaegler.edifact.edilang.IdentificationNumber <em>Identification Number</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see io.thlaegler.edifact.edilang.IdentificationNumber
   * @generated
   */
  public Adapter createIdentificationNumberAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link io.thlaegler.edifact.edilang.PositionIdentification <em>Position Identification</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see io.thlaegler.edifact.edilang.PositionIdentification
   * @generated
   */
  public Adapter createPositionIdentificationAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link io.thlaegler.edifact.edilang.ProductCharacteristic <em>Product Characteristic</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see io.thlaegler.edifact.edilang.ProductCharacteristic
   * @generated
   */
  public Adapter createProductCharacteristicAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link io.thlaegler.edifact.edilang.NationalityDetail <em>Nationality Detail</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see io.thlaegler.edifact.edilang.NationalityDetail
   * @generated
   */
  public Adapter createNationalityDetailAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link io.thlaegler.edifact.edilang.PercentageDetail <em>Percentage Detail</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see io.thlaegler.edifact.edilang.PercentageDetail
   * @generated
   */
  public Adapter createPercentageDetailAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link io.thlaegler.edifact.edilang.RateDetail <em>Rate Detail</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see io.thlaegler.edifact.edilang.RateDetail
   * @generated
   */
  public Adapter createRateDetailAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link io.thlaegler.edifact.edilang.StatusCategory <em>Status Category</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see io.thlaegler.edifact.edilang.StatusCategory
   * @generated
   */
  public Adapter createStatusCategoryAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link io.thlaegler.edifact.edilang.Status <em>Status</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see io.thlaegler.edifact.edilang.Status
   * @generated
   */
  public Adapter createStatusAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link io.thlaegler.edifact.edilang.StatusReason <em>Status Reason</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see io.thlaegler.edifact.edilang.StatusReason
   * @generated
   */
  public Adapter createStatusReasonAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link io.thlaegler.edifact.edilang.ValueListIdentification <em>Value List Identification</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see io.thlaegler.edifact.edilang.ValueListIdentification
   * @generated
   */
  public Adapter createValueListIdentificationAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link io.thlaegler.edifact.edilang.TermsOfDeliveryTransport <em>Terms Of Delivery Transport</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see io.thlaegler.edifact.edilang.TermsOfDeliveryTransport
   * @generated
   */
  public Adapter createTermsOfDeliveryTransportAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link io.thlaegler.edifact.edilang.QuantityDifferenceInformation <em>Quantity Difference Information</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see io.thlaegler.edifact.edilang.QuantityDifferenceInformation
   * @generated
   */
  public Adapter createQuantityDifferenceInformationAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link io.thlaegler.edifact.edilang.ReasonForChange <em>Reason For Change</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see io.thlaegler.edifact.edilang.ReasonForChange
   * @generated
   */
  public Adapter createReasonForChangeAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link io.thlaegler.edifact.edilang.LanguageDetail <em>Language Detail</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see io.thlaegler.edifact.edilang.LanguageDetail
   * @generated
   */
  public Adapter createLanguageDetailAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link io.thlaegler.edifact.edilang.InformationRequest <em>Information Request</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see io.thlaegler.edifact.edilang.InformationRequest
   * @generated
   */
  public Adapter createInformationRequestAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link io.thlaegler.edifact.edilang.IndexIdentification <em>Index Identification</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see io.thlaegler.edifact.edilang.IndexIdentification
   * @generated
   */
  public Adapter createIndexIdentificationAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link io.thlaegler.edifact.edilang.IndexValue <em>Index Value</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see io.thlaegler.edifact.edilang.IndexValue
   * @generated
   */
  public Adapter createIndexValueAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link io.thlaegler.edifact.edilang.Control <em>Control</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see io.thlaegler.edifact.edilang.Control
   * @generated
   */
  public Adapter createControlAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link io.thlaegler.edifact.edilang.BasisType <em>Basis Type</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see io.thlaegler.edifact.edilang.BasisType
   * @generated
   */
  public Adapter createBasisTypeAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link io.thlaegler.edifact.edilang.CommunicationContact <em>Communication Contact</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see io.thlaegler.edifact.edilang.CommunicationContact
   * @generated
   */
  public Adapter createCommunicationContactAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link io.thlaegler.edifact.edilang.AgreementTypeIdentification <em>Agreement Type Identification</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see io.thlaegler.edifact.edilang.AgreementTypeIdentification
   * @generated
   */
  public Adapter createAgreementTypeIdentificationAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link io.thlaegler.edifact.edilang.AllowanceChargeInformation <em>Allowance Charge Information</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see io.thlaegler.edifact.edilang.AllowanceChargeInformation
   * @generated
   */
  public Adapter createAllowanceChargeInformationAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link io.thlaegler.edifact.edilang.SpecialServicesIdentification <em>Special Services Identification</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see io.thlaegler.edifact.edilang.SpecialServicesIdentification
   * @generated
   */
  public Adapter createSpecialServicesIdentificationAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link io.thlaegler.edifact.edilang.ApplicabilityType <em>Applicability Type</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see io.thlaegler.edifact.edilang.ApplicabilityType
   * @generated
   */
  public Adapter createApplicabilityTypeAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link io.thlaegler.edifact.edilang.PriceMultiplierInformation <em>Price Multiplier Information</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see io.thlaegler.edifact.edilang.PriceMultiplierInformation
   * @generated
   */
  public Adapter createPriceMultiplierInformationAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link io.thlaegler.edifact.edilang.MonetaryAmountFunction <em>Monetary Amount Function</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see io.thlaegler.edifact.edilang.MonetaryAmountFunction
   * @generated
   */
  public Adapter createMonetaryAmountFunctionAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link io.thlaegler.edifact.edilang.MonetaryAmountFunctionDetail <em>Monetary Amount Function Detail</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see io.thlaegler.edifact.edilang.MonetaryAmountFunctionDetail
   * @generated
   */
  public Adapter createMonetaryAmountFunctionDetailAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link io.thlaegler.edifact.edilang.ArrayCellDetail <em>Array Cell Detail</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see io.thlaegler.edifact.edilang.ArrayCellDetail
   * @generated
   */
  public Adapter createArrayCellDetailAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link io.thlaegler.edifact.edilang.ArrayStructureIdentification <em>Array Structure Identification</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see io.thlaegler.edifact.edilang.ArrayStructureIdentification
   * @generated
   */
  public Adapter createArrayStructureIdentificationAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link io.thlaegler.edifact.edilang.BillLevelIdentification <em>Bill Level Identification</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see io.thlaegler.edifact.edilang.BillLevelIdentification
   * @generated
   */
  public Adapter createBillLevelIdentificationAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link io.thlaegler.edifact.edilang.CharacteristicValue <em>Characteristic Value</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see io.thlaegler.edifact.edilang.CharacteristicValue
   * @generated
   */
  public Adapter createCharacteristicValueAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link io.thlaegler.edifact.edilang.MeasurementDetail <em>Measurement Detail</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see io.thlaegler.edifact.edilang.MeasurementDetail
   * @generated
   */
  public Adapter createMeasurementDetailAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link io.thlaegler.edifact.edilang.PhysicalLogicalStateInformation <em>Physical Logical State Information</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see io.thlaegler.edifact.edilang.PhysicalLogicalStateInformation
   * @generated
   */
  public Adapter createPhysicalLogicalStateInformationAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link io.thlaegler.edifact.edilang.CodeSetIdentification <em>Code Set Identification</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see io.thlaegler.edifact.edilang.CodeSetIdentification
   * @generated
   */
  public Adapter createCodeSetIdentificationAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link io.thlaegler.edifact.edilang.ComputerEnvironmentIdentification <em>Computer Environment Identification</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see io.thlaegler.edifact.edilang.ComputerEnvironmentIdentification
   * @generated
   */
  public Adapter createComputerEnvironmentIdentificationAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link io.thlaegler.edifact.edilang.ClinicalInformationDetail <em>Clinical Information Detail</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see io.thlaegler.edifact.edilang.ClinicalInformationDetail
   * @generated
   */
  public Adapter createClinicalInformationDetailAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link io.thlaegler.edifact.edilang.CertaintyDetail <em>Certainty Detail</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see io.thlaegler.edifact.edilang.CertaintyDetail
   * @generated
   */
  public Adapter createCertaintyDetailAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link io.thlaegler.edifact.edilang.ClauseName <em>Clause Name</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see io.thlaegler.edifact.edilang.ClauseName
   * @generated
   */
  public Adapter createClauseNameAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link io.thlaegler.edifact.edilang.ClinicalInterventionDetail <em>Clinical Intervention Detail</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see io.thlaegler.edifact.edilang.ClinicalInterventionDetail
   * @generated
   */
  public Adapter createClinicalInterventionDetailAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link io.thlaegler.edifact.edilang.ProcessingIndicator <em>Processing Indicator</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see io.thlaegler.edifact.edilang.ProcessingIndicator
   * @generated
   */
  public Adapter createProcessingIndicatorAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link io.thlaegler.edifact.edilang.MarksLabels <em>Marks Labels</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see io.thlaegler.edifact.edilang.MarksLabels
   * @generated
   */
  public Adapter createMarksLabelsAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link io.thlaegler.edifact.edilang.TypeOfMarking <em>Type Of Marking</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see io.thlaegler.edifact.edilang.TypeOfMarking
   * @generated
   */
  public Adapter createTypeOfMarkingAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link io.thlaegler.edifact.edilang.GovernmentAction <em>Government Action</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see io.thlaegler.edifact.edilang.GovernmentAction
   * @generated
   */
  public Adapter createGovernmentActionAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link io.thlaegler.edifact.edilang.ProductDateTime <em>Product Date Time</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see io.thlaegler.edifact.edilang.ProductDateTime
   * @generated
   */
  public Adapter createProductDateTimeAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link io.thlaegler.edifact.edilang.CompanyIdentification <em>Company Identification</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see io.thlaegler.edifact.edilang.CompanyIdentification
   * @generated
   */
  public Adapter createCompanyIdentificationAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link io.thlaegler.edifact.edilang.ProductIdentificationDetail <em>Product Identification Detail</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see io.thlaegler.edifact.edilang.ProductIdentificationDetail
   * @generated
   */
  public Adapter createProductIdentificationDetailAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link io.thlaegler.edifact.edilang.SequenceNumberDetail <em>Sequence Number Detail</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see io.thlaegler.edifact.edilang.SequenceNumberDetail
   * @generated
   */
  public Adapter createSequenceNumberDetailAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link io.thlaegler.edifact.edilang.DateAndTime <em>Date And Time</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see io.thlaegler.edifact.edilang.DateAndTime
   * @generated
   */
  public Adapter createDateAndTimeAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link io.thlaegler.edifact.edilang.DateOnly <em>Date Only</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see io.thlaegler.edifact.edilang.DateOnly
   * @generated
   */
  public Adapter createDateOnlyAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link io.thlaegler.edifact.edilang.DateWithTime <em>Date With Time</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see io.thlaegler.edifact.edilang.DateWithTime
   * @generated
   */
  public Adapter createDateWithTimeAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link io.thlaegler.edifact.edilang.DateTimePeriod <em>Date Time Period</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see io.thlaegler.edifact.edilang.DateTimePeriod
   * @generated
   */
  public Adapter createDateTimePeriodAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for the default case.
   * <!-- begin-user-doc -->
   * This default implementation returns null.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @generated
   */
  public Adapter createEObjectAdapter()
  {
    return null;
  }

} //EdilangAdapterFactory
