/**
 * generated by Xtext 2.26.0
 */
package io.thlaegler.edifact.edilang.util;

import io.thlaegler.edifact.edilang.*;

import org.eclipse.emf.ecore.EObject;
import org.eclipse.emf.ecore.EPackage;

import org.eclipse.emf.ecore.util.Switch;

/**
 * <!-- begin-user-doc -->
 * The <b>Switch</b> for the model's inheritance hierarchy.
 * It supports the call {@link #doSwitch(EObject) doSwitch(object)}
 * to invoke the <code>caseXXX</code> method for each class of the model,
 * starting with the actual class of the object
 * and proceeding up the inheritance hierarchy
 * until a non-null result is returned,
 * which is the result of the switch.
 * <!-- end-user-doc -->
 * @see io.thlaegler.edifact.edilang.EdilangPackage
 * @generated
 */
public class EdilangSwitch<T> extends Switch<T>
{
  /**
   * The cached model package
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected static EdilangPackage modelPackage;

  /**
   * Creates an instance of the switch.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EdilangSwitch()
  {
    if (modelPackage == null)
    {
      modelPackage = EdilangPackage.eINSTANCE;
    }
  }

  /**
   * Checks whether this is a switch for the given package.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @param ePackage the package in question.
   * @return whether this is a switch for the given package.
   * @generated
   */
  @Override
  protected boolean isSwitchFor(EPackage ePackage)
  {
    return ePackage == modelPackage;
  }

  /**
   * Calls <code>caseXXX</code> for each class of the model until one returns a non null result; it yields that result.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the first non-null result returned by a <code>caseXXX</code> call.
   * @generated
   */
  @Override
  protected T doSwitch(int classifierID, EObject theEObject)
  {
    switch (classifierID)
    {
      case EdilangPackage.EDI_MODEL:
      {
        EdiModel ediModel = (EdiModel)theEObject;
        T result = caseEdiModel(ediModel);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case EdilangPackage.ABSTRACT_EDI_SEGMENT:
      {
        AbstractEdiSegment abstractEdiSegment = (AbstractEdiSegment)theEObject;
        T result = caseAbstractEdiSegment(abstractEdiSegment);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case EdilangPackage.UNA_SEGMENT:
      {
        UNASegment unaSegment = (UNASegment)theEObject;
        T result = caseUNASegment(unaSegment);
        if (result == null) result = caseAbstractEdiSegment(unaSegment);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case EdilangPackage.UNB_SEGMENT:
      {
        UNBSegment unbSegment = (UNBSegment)theEObject;
        T result = caseUNBSegment(unbSegment);
        if (result == null) result = caseAbstractEdiSegment(unbSegment);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case EdilangPackage.UNH_SEGMENT:
      {
        UNHSegment unhSegment = (UNHSegment)theEObject;
        T result = caseUNHSegment(unhSegment);
        if (result == null) result = caseAbstractEdiSegment(unhSegment);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case EdilangPackage.MSG_SEGMENT:
      {
        MSGSegment msgSegment = (MSGSegment)theEObject;
        T result = caseMSGSegment(msgSegment);
        if (result == null) result = caseAbstractEdiSegment(msgSegment);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case EdilangPackage.ORG_SEGMENT:
      {
        ORGSegment orgSegment = (ORGSegment)theEObject;
        T result = caseORGSegment(orgSegment);
        if (result == null) result = caseAbstractEdiSegment(orgSegment);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case EdilangPackage.POC_SEGMENT:
      {
        POCSegment pocSegment = (POCSegment)theEObject;
        T result = casePOCSegment(pocSegment);
        if (result == null) result = caseAbstractEdiSegment(pocSegment);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case EdilangPackage.ODI_SEGMENT:
      {
        ODISegment odiSegment = (ODISegment)theEObject;
        T result = caseODISegment(odiSegment);
        if (result == null) result = caseAbstractEdiSegment(odiSegment);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case EdilangPackage.UCI_SEGMENT:
      {
        UCISegment uciSegment = (UCISegment)theEObject;
        T result = caseUCISegment(uciSegment);
        if (result == null) result = caseAbstractEdiSegment(uciSegment);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case EdilangPackage.PDI_SEGMENT:
      {
        PDISegment pdiSegment = (PDISegment)theEObject;
        T result = casePDISegment(pdiSegment);
        if (result == null) result = caseAbstractEdiSegment(pdiSegment);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case EdilangPackage.TVL_SEGMENT:
      {
        TVLSegment tvlSegment = (TVLSegment)theEObject;
        T result = caseTVLSegment(tvlSegment);
        if (result == null) result = caseAbstractEdiSegment(tvlSegment);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case EdilangPackage.RPI_SEGMENT:
      {
        RPISegment rpiSegment = (RPISegment)theEObject;
        T result = caseRPISegment(rpiSegment);
        if (result == null) result = caseAbstractEdiSegment(rpiSegment);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case EdilangPackage.MOA_SEGMENT:
      {
        MOASegment moaSegment = (MOASegment)theEObject;
        T result = caseMOASegment(moaSegment);
        if (result == null) result = caseAbstractEdiSegment(moaSegment);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case EdilangPackage.LIN_SEGMENT:
      {
        LINSegment linSegment = (LINSegment)theEObject;
        T result = caseLINSegment(linSegment);
        if (result == null) result = caseAbstractEdiSegment(linSegment);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case EdilangPackage.PRI_SEGMENT:
      {
        PRISegment priSegment = (PRISegment)theEObject;
        T result = casePRISegment(priSegment);
        if (result == null) result = caseAbstractEdiSegment(priSegment);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case EdilangPackage.QTY_SEGMENT:
      {
        QTYSegment qtySegment = (QTYSegment)theEObject;
        T result = caseQTYSegment(qtySegment);
        if (result == null) result = caseAbstractEdiSegment(qtySegment);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case EdilangPackage.CUX_SEGMENT:
      {
        CUXSegment cuxSegment = (CUXSegment)theEObject;
        T result = caseCUXSegment(cuxSegment);
        if (result == null) result = caseAbstractEdiSegment(cuxSegment);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case EdilangPackage.TAX_SEGMENT:
      {
        TAXSegment taxSegment = (TAXSegment)theEObject;
        T result = caseTAXSegment(taxSegment);
        if (result == null) result = caseAbstractEdiSegment(taxSegment);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case EdilangPackage.RFF_SEGMENT:
      {
        RFFSegment rffSegment = (RFFSegment)theEObject;
        T result = caseRFFSegment(rffSegment);
        if (result == null) result = caseAbstractEdiSegment(rffSegment);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case EdilangPackage.NAD_SEGMENT:
      {
        NADSegment nadSegment = (NADSegment)theEObject;
        T result = caseNADSegment(nadSegment);
        if (result == null) result = caseAbstractEdiSegment(nadSegment);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case EdilangPackage.DTM_SEGMENT:
      {
        DTMSegment dtmSegment = (DTMSegment)theEObject;
        T result = caseDTMSegment(dtmSegment);
        if (result == null) result = caseAbstractEdiSegment(dtmSegment);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case EdilangPackage.BGM_SEGMENT:
      {
        BGMSegment bgmSegment = (BGMSegment)theEObject;
        T result = caseBGMSegment(bgmSegment);
        if (result == null) result = caseAbstractEdiSegment(bgmSegment);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case EdilangPackage.PAT_SEGMENT:
      {
        PATSegment patSegment = (PATSegment)theEObject;
        T result = casePATSegment(patSegment);
        if (result == null) result = caseAbstractEdiSegment(patSegment);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case EdilangPackage.FTX_SEGMENT:
      {
        FTXSegment ftxSegment = (FTXSegment)theEObject;
        T result = caseFTXSegment(ftxSegment);
        if (result == null) result = caseAbstractEdiSegment(ftxSegment);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case EdilangPackage.ERC_SEGMENT:
      {
        ERCSegment ercSegment = (ERCSegment)theEObject;
        T result = caseERCSegment(ercSegment);
        if (result == null) result = caseAbstractEdiSegment(ercSegment);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case EdilangPackage.CNT_SEGMENT:
      {
        CNTSegment cntSegment = (CNTSegment)theEObject;
        T result = caseCNTSegment(cntSegment);
        if (result == null) result = caseAbstractEdiSegment(cntSegment);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case EdilangPackage.CTA_SEGMENT:
      {
        CTASegment ctaSegment = (CTASegment)theEObject;
        T result = caseCTASegment(ctaSegment);
        if (result == null) result = caseAbstractEdiSegment(ctaSegment);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case EdilangPackage.PCI_SEGMENT:
      {
        PCISegment pciSegment = (PCISegment)theEObject;
        T result = casePCISegment(pciSegment);
        if (result == null) result = caseAbstractEdiSegment(pciSegment);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case EdilangPackage.UNS_SEGMENT:
      {
        UNSSegment unsSegment = (UNSSegment)theEObject;
        T result = caseUNSSegment(unsSegment);
        if (result == null) result = caseAbstractEdiSegment(unsSegment);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case EdilangPackage.UNT_SEGMENT:
      {
        UNTSegment untSegment = (UNTSegment)theEObject;
        T result = caseUNTSegment(untSegment);
        if (result == null) result = caseAbstractEdiSegment(untSegment);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case EdilangPackage.UNZ_SEGMENT:
      {
        UNZSegment unzSegment = (UNZSegment)theEObject;
        T result = caseUNZSegment(unzSegment);
        if (result == null) result = caseAbstractEdiSegment(unzSegment);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case EdilangPackage.ABSTRACT_EDI_FUNCTION:
      {
        AbstractEdiFunction abstractEdiFunction = (AbstractEdiFunction)theEObject;
        T result = caseAbstractEdiFunction(abstractEdiFunction);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case EdilangPackage.PRI_FUNCTION:
      {
        PRIFunction priFunction = (PRIFunction)theEObject;
        T result = casePRIFunction(priFunction);
        if (result == null) result = caseAbstractEdiFunction(priFunction);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case EdilangPackage.MESSAGE_BODY_FUNCTION:
      {
        MessageBodyFunction messageBodyFunction = (MessageBodyFunction)theEObject;
        T result = caseMessageBodyFunction(messageBodyFunction);
        if (result == null) result = caseAbstractEdiFunction(messageBodyFunction);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case EdilangPackage.MSG_FUNCTION:
      {
        MSGFunction msgFunction = (MSGFunction)theEObject;
        T result = caseMSGFunction(msgFunction);
        if (result == null) result = caseAbstractEdiFunction(msgFunction);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case EdilangPackage.PRODUCT_FUNCTION:
      {
        ProductFunction productFunction = (ProductFunction)theEObject;
        T result = caseProductFunction(productFunction);
        if (result == null) result = caseAbstractEdiFunction(productFunction);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case EdilangPackage.SYSTEM_DETAIL_FUNCTION:
      {
        SystemDetailFunction systemDetailFunction = (SystemDetailFunction)theEObject;
        T result = caseSystemDetailFunction(systemDetailFunction);
        if (result == null) result = caseAbstractEdiFunction(systemDetailFunction);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case EdilangPackage.ORIGINATOR_FUNCTION:
      {
        OriginatorFunction originatorFunction = (OriginatorFunction)theEObject;
        T result = caseOriginatorFunction(originatorFunction);
        if (result == null) result = caseAbstractEdiFunction(originatorFunction);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case EdilangPackage.ORIGINATOR_IDENTIFICATION_FUNCTION:
      {
        OriginatorIdentificationFunction originatorIdentificationFunction = (OriginatorIdentificationFunction)theEObject;
        T result = caseOriginatorIdentificationFunction(originatorIdentificationFunction);
        if (result == null) result = caseAbstractEdiFunction(originatorIdentificationFunction);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case EdilangPackage.LOCATION_FUNCTION:
      {
        LocationFunction locationFunction = (LocationFunction)theEObject;
        T result = caseLocationFunction(locationFunction);
        if (result == null) result = caseAbstractEdiFunction(locationFunction);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case EdilangPackage.INTERCHANGER_FUNCTION:
      {
        InterchangerFunction interchangerFunction = (InterchangerFunction)theEObject;
        T result = caseInterchangerFunction(interchangerFunction);
        if (result == null) result = caseAbstractEdiFunction(interchangerFunction);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case EdilangPackage.DATE_ONLY_FUNCTION:
      {
        DateOnlyFunction dateOnlyFunction = (DateOnlyFunction)theEObject;
        T result = caseDateOnlyFunction(dateOnlyFunction);
        if (result == null) result = caseAbstractEdiFunction(dateOnlyFunction);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case EdilangPackage.DATE_AND_TIME_FUNCTION:
      {
        DateAndTimeFunction dateAndTimeFunction = (DateAndTimeFunction)theEObject;
        T result = caseDateAndTimeFunction(dateAndTimeFunction);
        if (result == null) result = caseAbstractEdiFunction(dateAndTimeFunction);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      default: return defaultCase(theEObject);
    }
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Edi Model</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Edi Model</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseEdiModel(EdiModel object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Abstract Edi Segment</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Abstract Edi Segment</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseAbstractEdiSegment(AbstractEdiSegment object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>UNA Segment</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>UNA Segment</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseUNASegment(UNASegment object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>UNB Segment</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>UNB Segment</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseUNBSegment(UNBSegment object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>UNH Segment</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>UNH Segment</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseUNHSegment(UNHSegment object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>MSG Segment</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>MSG Segment</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseMSGSegment(MSGSegment object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>ORG Segment</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>ORG Segment</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseORGSegment(ORGSegment object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>POC Segment</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>POC Segment</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T casePOCSegment(POCSegment object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>ODI Segment</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>ODI Segment</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseODISegment(ODISegment object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>UCI Segment</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>UCI Segment</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseUCISegment(UCISegment object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>PDI Segment</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>PDI Segment</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T casePDISegment(PDISegment object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>TVL Segment</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>TVL Segment</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseTVLSegment(TVLSegment object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>RPI Segment</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>RPI Segment</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseRPISegment(RPISegment object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>MOA Segment</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>MOA Segment</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseMOASegment(MOASegment object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>LIN Segment</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>LIN Segment</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseLINSegment(LINSegment object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>PRI Segment</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>PRI Segment</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T casePRISegment(PRISegment object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>QTY Segment</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>QTY Segment</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseQTYSegment(QTYSegment object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>CUX Segment</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>CUX Segment</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseCUXSegment(CUXSegment object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>TAX Segment</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>TAX Segment</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseTAXSegment(TAXSegment object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>RFF Segment</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>RFF Segment</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseRFFSegment(RFFSegment object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>NAD Segment</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>NAD Segment</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseNADSegment(NADSegment object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>DTM Segment</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>DTM Segment</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseDTMSegment(DTMSegment object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>BGM Segment</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>BGM Segment</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseBGMSegment(BGMSegment object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>PAT Segment</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>PAT Segment</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T casePATSegment(PATSegment object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>FTX Segment</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>FTX Segment</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseFTXSegment(FTXSegment object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>ERC Segment</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>ERC Segment</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseERCSegment(ERCSegment object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>CNT Segment</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>CNT Segment</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseCNTSegment(CNTSegment object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>CTA Segment</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>CTA Segment</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseCTASegment(CTASegment object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>PCI Segment</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>PCI Segment</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T casePCISegment(PCISegment object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>UNS Segment</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>UNS Segment</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseUNSSegment(UNSSegment object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>UNT Segment</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>UNT Segment</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseUNTSegment(UNTSegment object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>UNZ Segment</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>UNZ Segment</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseUNZSegment(UNZSegment object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Abstract Edi Function</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Abstract Edi Function</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseAbstractEdiFunction(AbstractEdiFunction object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>PRI Function</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>PRI Function</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T casePRIFunction(PRIFunction object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Message Body Function</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Message Body Function</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseMessageBodyFunction(MessageBodyFunction object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>MSG Function</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>MSG Function</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseMSGFunction(MSGFunction object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Product Function</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Product Function</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseProductFunction(ProductFunction object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>System Detail Function</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>System Detail Function</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseSystemDetailFunction(SystemDetailFunction object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Originator Function</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Originator Function</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseOriginatorFunction(OriginatorFunction object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Originator Identification Function</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Originator Identification Function</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseOriginatorIdentificationFunction(OriginatorIdentificationFunction object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Location Function</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Location Function</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseLocationFunction(LocationFunction object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Interchanger Function</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Interchanger Function</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseInterchangerFunction(InterchangerFunction object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Date Only Function</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Date Only Function</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseDateOnlyFunction(DateOnlyFunction object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Date And Time Function</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Date And Time Function</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseDateAndTimeFunction(DateAndTimeFunction object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>EObject</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch, but this is the last case anyway.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>EObject</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject)
   * @generated
   */
  @Override
  public T defaultCase(EObject object)
  {
    return null;
  }

} //EdilangSwitch
